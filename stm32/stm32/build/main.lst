ARM GAS  /tmp/ccK8WG6y.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB438:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * Copyright (c) 2024 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Src/main.c    ****   * in the root directory of this software component.
  14:Src/main.c    ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   ******************************************************************************
  17:Src/main.c    ****   */
  18:Src/main.c    **** /* USER CODE END Header */
  19:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  20:Src/main.c    **** #include "main.h"
  21:Src/main.c    **** 
  22:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  23:Src/main.c    **** /* USER CODE BEGIN Includes */
  24:Src/main.c    **** 
  25:Src/main.c    **** #include "spi.h"
  26:Src/main.c    **** 
  27:Src/main.c    **** #include "rtc.h"
  28:Src/main.c    **** 
  29:Src/main.c    **** #include <stdlib.h>  // used for malloc function
  30:Src/main.c    **** #include <string.h>  // used for strlen function
  31:Src/main.c    **** #include <stdarg.h> // used for va_list, va_start, va_end functions
ARM GAS  /tmp/ccK8WG6y.s 			page 2


  32:Src/main.c    **** #include <stdio.h>  // used for vsprintf function
  33:Src/main.c    **** 
  34:Src/main.c    **** /* USER CODE END Includes */
  35:Src/main.c    **** 
  36:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  37:Src/main.c    **** /* USER CODE BEGIN PTD */
  38:Src/main.c    **** 
  39:Src/main.c    **** /* USER CODE END PTD */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  42:Src/main.c    **** /* USER CODE BEGIN PD */
  43:Src/main.c    **** 
  44:Src/main.c    **** /* USER CODE END PD */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  47:Src/main.c    **** /* USER CODE BEGIN PM */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE END PM */
  50:Src/main.c    **** 
  51:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  52:Src/main.c    **** RTC_HandleTypeDef hrtc;
  53:Src/main.c    **** 
  54:Src/main.c    **** SPI_HandleTypeDef hspi1;
  55:Src/main.c    **** 
  56:Src/main.c    **** UART_HandleTypeDef huart2;
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE BEGIN PV */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE END PV */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  63:Src/main.c    **** void SystemClock_Config(void);
  64:Src/main.c    **** static void MX_GPIO_Init(void);
  65:Src/main.c    **** static void MX_USART2_UART_Init(void);
  66:Src/main.c    **** static void MX_RTC_Init(void);
  67:Src/main.c    **** static void MX_SPI1_Init(void);
  68:Src/main.c    **** /* USER CODE BEGIN PFP */
  69:Src/main.c    **** 
  70:Src/main.c    **** /*!
  71:Src/main.c    ****  * @brief Get LR1110 version
  72:Src/main.c    ****  *
  73:Src/main.c    ****  * @param [in] context Radio abstraction
  74:Src/main.c    ****  */
  75:Src/main.c    **** static void getLR1110_Bootloader_Version();
  76:Src/main.c    **** 
  77:Src/main.c    **** /*!
  78:Src/main.c    ****  * @brief Get LR1110 temperature
  79:Src/main.c    ****  *
  80:Src/main.c    ****  * @param [in] context Radio abstraction
  81:Src/main.c    ****  */
  82:Src/main.c    **** static void getLR1110_Temperature( const void* context);
  83:Src/main.c    **** 
  84:Src/main.c    **** /*!
  85:Src/main.c    ****  * @brief Get LR1110 GNSS version
  86:Src/main.c    ****  *
  87:Src/main.c    ****  * @param [in] context Radio abstraction
  88:Src/main.c    ****  */
ARM GAS  /tmp/ccK8WG6y.s 			page 3


  89:Src/main.c    **** static void getLR1110_GNSS_Version( const void* context);
  90:Src/main.c    **** 
  91:Src/main.c    **** /*!
  92:Src/main.c    ****  * @brief Get LR1110 Wi-Fi version
  93:Src/main.c    ****  *
  94:Src/main.c    ****  * @param [in] context Radio abstraction
  95:Src/main.c    ****  */
  96:Src/main.c    **** static void getLR1110_WiFi_Version( const void* context);
  97:Src/main.c    **** 
  98:Src/main.c    **** /*!
  99:Src/main.c    ****  * @brief Get LR1110 Chip EUI
 100:Src/main.c    ****  *
 101:Src/main.c    ****  * @param [in] context Radio abstraction
 102:Src/main.c    ****  */
 103:Src/main.c    **** static void getLR1110_Chip_EUI( const void* context);
 104:Src/main.c    **** 
 105:Src/main.c    **** /*!
 106:Src/main.c    ****  * @brief Reset LR1110
 107:Src/main.c    ****  */
 108:Src/main.c    **** static void resetLR1110();
 109:Src/main.c    **** 
 110:Src/main.c    **** /*!
 111:Src/main.c    ****  * @brief Setup TCXO
 112:Src/main.c    ****  *
 113:Src/main.c    ****  * @param [in] context Radio abstraction
 114:Src/main.c    ****  */
 115:Src/main.c    **** static void setupTCXO( const void* context );
 116:Src/main.c    **** 
 117:Src/main.c    **** /*!
 118:Src/main.c    ****  * @brief Turn on LED
 119:Src/main.c    ****  *
 120:Src/main.c    ****  * @param [in] LED_GPIO_Port
 121:Src/main.c    ****  * @param [in] LED_Pin
 122:Src/main.c    ****  */
 123:Src/main.c    **** void turnOnLED(GPIO_TypeDef* LED_GPIO_Port, uint16_t LED_Pin);
 124:Src/main.c    **** 
 125:Src/main.c    **** /*!
 126:Src/main.c    ****  * @brief Turn off LED
 127:Src/main.c    ****  *
 128:Src/main.c    ****  * @param [in] LED_GPIO_Port
 129:Src/main.c    ****  * @param [in] LED_Pin
 130:Src/main.c    ****  */
 131:Src/main.c    **** void turnOffLED(GPIO_TypeDef* LED_GPIO_Port, uint16_t LED_Pin);
 132:Src/main.c    **** 
 133:Src/main.c    **** /*!
 134:Src/main.c    ****  * @brief Toggle LED
 135:Src/main.c    ****  *
 136:Src/main.c    ****  * @param [in] LED_GPIO_Port
 137:Src/main.c    ****  * @param [in] LED_Pin
 138:Src/main.c    ****  */
 139:Src/main.c    **** void toggleLED(GPIO_TypeDef* LED_GPIO_Port, uint16_t LED_Pin);
 140:Src/main.c    **** 
 141:Src/main.c    **** /*!
 142:Src/main.c    ****  * @brief Blink LED
 143:Src/main.c    ****  *
 144:Src/main.c    ****  * @param [in] LED_GPIO_Port
 145:Src/main.c    ****  * @param [in] LED_Pin
ARM GAS  /tmp/ccK8WG6y.s 			page 4


 146:Src/main.c    ****  * @param [in] period
 147:Src/main.c    ****  * @param [in] count
 148:Src/main.c    ****  * @param [in] start
 149:Src/main.c    ****  */
 150:Src/main.c    **** void blinkLED(GPIO_TypeDef* LED_GPIO_Port, uint16_t LED_Pin, uint32_t period, uint8_t count, bool s
 151:Src/main.c    **** 
 152:Src/main.c    **** /* USER CODE END PFP */
 153:Src/main.c    **** 
 154:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
 155:Src/main.c    **** /* USER CODE BEGIN 0 */
 156:Src/main.c    **** 
 157:Src/main.c    **** /* USER CODE END 0 */
 158:Src/main.c    **** 
 159:Src/main.c    **** /**
 160:Src/main.c    ****   * @brief  The application entry point.
 161:Src/main.c    ****   * @retval int
 162:Src/main.c    ****   */
 163:Src/main.c    **** int main(void)
 164:Src/main.c    **** {
 165:Src/main.c    ****   /* USER CODE BEGIN 1 */
 166:Src/main.c    **** 
 167:Src/main.c    ****   /* USER CODE END 1 */
 168:Src/main.c    **** 
 169:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 170:Src/main.c    **** 
 171:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 172:Src/main.c    ****   HAL_Init();
 173:Src/main.c    **** 
 174:Src/main.c    ****   /* USER CODE BEGIN Init */
 175:Src/main.c    **** 
 176:Src/main.c    ****   int a = 0;
 177:Src/main.c    **** 
 178:Src/main.c    ****   void* lr1110_context = (void*) malloc(sizeof(radio_t));
 179:Src/main.c    ****   ((radio_t*)lr1110_context)->spi             = SPI1;
 180:Src/main.c    ****   ((radio_t*)lr1110_context)->nss.port        = GPIOA;
 181:Src/main.c    ****   ((radio_t*)lr1110_context)->nss.pin         = NSS_Pin;
 182:Src/main.c    ****   ((radio_t*)lr1110_context)->reset.port      = GPIOA;
 183:Src/main.c    ****   ((radio_t*)lr1110_context)->reset.pin       = RESET_Pin;
 184:Src/main.c    ****   // ((radio_t*)lr1110_context)->event.irq1.port = GPIOB;
 185:Src/main.c    ****   // ((radio_t*)lr1110_context)->event.irq1.pin = EVENT_Pin;
 186:Src/main.c    ****   //((radio_t*)lr1110_context)->event.pin       = EVENT_Pin;
 187:Src/main.c    ****   //((radio_t*)lr1110_context)->event.callback  = radio_event_callback;
 188:Src/main.c    ****   ((radio_t*)lr1110_context)->event.context   = ( ( radio_t* ) lr1110_context );
 189:Src/main.c    ****   ((radio_t*)lr1110_context)->busy.port       = GPIOB;
 190:Src/main.c    ****   ((radio_t*)lr1110_context)->busy.pin        = BUSY_Pin;
 191:Src/main.c    **** 
 192:Src/main.c    ****   /* USER CODE END Init */
 193:Src/main.c    **** 
 194:Src/main.c    ****   /* Configure the system clock */
 195:Src/main.c    ****   SystemClock_Config();
 196:Src/main.c    **** 
 197:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 198:Src/main.c    **** 
 199:Src/main.c    ****   /* USER CODE END SysInit */
 200:Src/main.c    **** 
 201:Src/main.c    ****   /* Initialize all configured peripherals */
 202:Src/main.c    ****   MX_GPIO_Init();
ARM GAS  /tmp/ccK8WG6y.s 			page 5


 203:Src/main.c    ****   MX_USART2_UART_Init();
 204:Src/main.c    ****   MX_RTC_Init();
 205:Src/main.c    ****   MX_SPI1_Init();
 206:Src/main.c    ****   /* USER CODE BEGIN 2 */
 207:Src/main.c    **** 
 208:Src/main.c    **** 
 209:Src/main.c    ****   HAL_DBG_TRACE_MSG("-----------------------------\r\n\r\n");
 210:Src/main.c    ****   resetLR1110();
 211:Src/main.c    **** 
 212:Src/main.c    ****   blinkLED(GPIOC, RX_LED_Pin|TX_LED_Pin, 100, 5, true);
 213:Src/main.c    **** 
 214:Src/main.c    ****   setupTCXO(lr1110_context);
 215:Src/main.c    **** 
 216:Src/main.c    ****   getLR1110_Bootloader_Version(lr1110_context);   // First call to this function is always returnin
 217:Src/main.c    ****   getLR1110_Bootloader_Version(lr1110_context);
 218:Src/main.c    ****   getLR1110_WiFi_Version(lr1110_context);
 219:Src/main.c    ****   getLR1110_Chip_EUI(lr1110_context);
 220:Src/main.c    **** 
 221:Src/main.c    ****   /* USER CODE END 2 */
 222:Src/main.c    **** 
 223:Src/main.c    ****   /* Infinite loop */
 224:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 225:Src/main.c    ****   while (1) {
 226:Src/main.c    ****     
 227:Src/main.c    ****     //turnOnLED(GPIOC, RX_LED_Pin);
 228:Src/main.c    ****     //turnOffLED(GPIOC, RX_LED_Pin);
 229:Src/main.c    ****     //toggleLED(GPIOC, RX_LED_Pin|TX_LED_Pin);
 230:Src/main.c    **** 
 231:Src/main.c    ****     HAL_DBG_TRACE_PRINTF("2a = %d\r\n", a++);
 232:Src/main.c    **** 
 233:Src/main.c    ****     getLR1110_Temperature(lr1110_context);
 234:Src/main.c    **** 
 235:Src/main.c    ****     /* USER CODE END WHILE */
 236:Src/main.c    **** 
 237:Src/main.c    ****     /* USER CODE BEGIN 3 */
 238:Src/main.c    ****     HAL_Delay(1000);
 239:Src/main.c    ****   }
 240:Src/main.c    ****   /* USER CODE END 3 */
 241:Src/main.c    **** }
 242:Src/main.c    **** 
 243:Src/main.c    **** /**
 244:Src/main.c    ****   * @brief System Clock Configuration
 245:Src/main.c    ****   * @retval None
 246:Src/main.c    ****   */
 247:Src/main.c    **** void SystemClock_Config(void)
 248:Src/main.c    **** {
 249:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 250:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 251:Src/main.c    **** 
 252:Src/main.c    ****   /** Configure the main internal regulator output voltage
 253:Src/main.c    ****   */
 254:Src/main.c    ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 255:Src/main.c    ****   {
 256:Src/main.c    ****     Error_Handler();
 257:Src/main.c    ****   }
 258:Src/main.c    **** 
 259:Src/main.c    ****   /** Initializes the RCC Oscillators according to the specified parameters
ARM GAS  /tmp/ccK8WG6y.s 			page 6


 260:Src/main.c    ****   * in the RCC_OscInitTypeDef structure.
 261:Src/main.c    ****   */
 262:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_LSI;
 263:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 264:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 265:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 266:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 267:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 268:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
 269:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 10;
 270:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 271:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 272:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 273:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 274:Src/main.c    ****   {
 275:Src/main.c    ****     Error_Handler();
 276:Src/main.c    ****   }
 277:Src/main.c    **** 
 278:Src/main.c    ****   /** Initializes the CPU, AHB and APB buses clocks
 279:Src/main.c    ****   */
 280:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 281:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 282:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 283:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 284:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 285:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 286:Src/main.c    **** 
 287:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 288:Src/main.c    ****   {
 289:Src/main.c    ****     Error_Handler();
 290:Src/main.c    ****   }
 291:Src/main.c    **** }
 292:Src/main.c    **** 
 293:Src/main.c    **** /**
 294:Src/main.c    ****   * @brief RTC Initialization Function
 295:Src/main.c    ****   * @param None
 296:Src/main.c    ****   * @retval None
 297:Src/main.c    ****   */
 298:Src/main.c    **** static void MX_RTC_Init(void)
 299:Src/main.c    **** {
 300:Src/main.c    **** 
 301:Src/main.c    ****   /* USER CODE BEGIN RTC_Init 0 */
 302:Src/main.c    **** 
 303:Src/main.c    ****   /* USER CODE END RTC_Init 0 */
 304:Src/main.c    **** 
 305:Src/main.c    ****   RTC_TimeTypeDef sTime = {0};
 306:Src/main.c    ****   RTC_DateTypeDef sDate = {0};
 307:Src/main.c    **** 
 308:Src/main.c    ****   /* USER CODE BEGIN RTC_Init 1 */
 309:Src/main.c    **** 
 310:Src/main.c    ****   /* USER CODE END RTC_Init 1 */
 311:Src/main.c    **** 
 312:Src/main.c    ****   /** Initialize RTC Only
 313:Src/main.c    ****   */
 314:Src/main.c    ****   hrtc.Instance = RTC;
 315:Src/main.c    ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 316:Src/main.c    ****   hrtc.Init.AsynchPrediv = 127;
ARM GAS  /tmp/ccK8WG6y.s 			page 7


 317:Src/main.c    ****   hrtc.Init.SynchPrediv = 255;
 318:Src/main.c    ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 319:Src/main.c    ****   hrtc.Init.OutPutRemap = RTC_OUTPUT_REMAP_NONE;
 320:Src/main.c    ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 321:Src/main.c    ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 322:Src/main.c    ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 323:Src/main.c    ****   {
 324:Src/main.c    ****     Error_Handler();
 325:Src/main.c    ****   }
 326:Src/main.c    **** 
 327:Src/main.c    ****   /* USER CODE BEGIN Check_RTC_BKUP */
 328:Src/main.c    **** 
 329:Src/main.c    ****   /* USER CODE END Check_RTC_BKUP */
 330:Src/main.c    **** 
 331:Src/main.c    ****   /** Initialize RTC and set the Time and Date
 332:Src/main.c    ****   */
 333:Src/main.c    ****   sTime.Hours = 0x0;
 334:Src/main.c    ****   sTime.Minutes = 0x0;
 335:Src/main.c    ****   sTime.Seconds = 0x0;
 336:Src/main.c    ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 337:Src/main.c    ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 338:Src/main.c    ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 339:Src/main.c    ****   {
 340:Src/main.c    ****     Error_Handler();
 341:Src/main.c    ****   }
 342:Src/main.c    ****   sDate.WeekDay = RTC_WEEKDAY_MONDAY;
 343:Src/main.c    ****   sDate.Month = RTC_MONTH_JANUARY;
 344:Src/main.c    ****   sDate.Date = 0x1;
 345:Src/main.c    ****   sDate.Year = 0x0;
 346:Src/main.c    **** 
 347:Src/main.c    ****   if (HAL_RTC_SetDate(&hrtc, &sDate, RTC_FORMAT_BCD) != HAL_OK)
 348:Src/main.c    ****   {
 349:Src/main.c    ****     Error_Handler();
 350:Src/main.c    ****   }
 351:Src/main.c    ****   /* USER CODE BEGIN RTC_Init 2 */
 352:Src/main.c    **** 
 353:Src/main.c    ****   /* USER CODE END RTC_Init 2 */
 354:Src/main.c    **** 
 355:Src/main.c    **** }
 356:Src/main.c    **** 
 357:Src/main.c    **** /**
 358:Src/main.c    ****   * @brief SPI1 Initialization Function
 359:Src/main.c    ****   * @param None
 360:Src/main.c    ****   * @retval None
 361:Src/main.c    ****   */
 362:Src/main.c    **** static void MX_SPI1_Init(void)
 363:Src/main.c    **** {
 364:Src/main.c    **** 
 365:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 0 */
 366:Src/main.c    **** 
 367:Src/main.c    ****   /* USER CODE END SPI1_Init 0 */
 368:Src/main.c    **** 
 369:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 1 */
 370:Src/main.c    **** 
 371:Src/main.c    ****   /* USER CODE END SPI1_Init 1 */
 372:Src/main.c    ****   /* SPI1 parameter configuration*/
 373:Src/main.c    ****   hspi1.Instance = SPI1;
ARM GAS  /tmp/ccK8WG6y.s 			page 8


 374:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 375:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 376:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 377:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 378:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 379:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 380:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 381:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 382:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 383:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 384:Src/main.c    ****   hspi1.Init.CRCPolynomial = 7;
 385:Src/main.c    ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 386:Src/main.c    ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 387:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 388:Src/main.c    ****   {
 389:Src/main.c    ****     Error_Handler();
 390:Src/main.c    ****   }
 391:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 2 */
 392:Src/main.c    **** 
 393:Src/main.c    ****   __HAL_SPI_ENABLE( &hspi1 );
 394:Src/main.c    **** 
 395:Src/main.c    ****   /* USER CODE END SPI1_Init 2 */
 396:Src/main.c    **** 
 397:Src/main.c    **** }
 398:Src/main.c    **** 
 399:Src/main.c    **** /**
 400:Src/main.c    ****   * @brief USART2 Initialization Function
 401:Src/main.c    ****   * @param None
 402:Src/main.c    ****   * @retval None
 403:Src/main.c    ****   */
 404:Src/main.c    **** static void MX_USART2_UART_Init(void)
 405:Src/main.c    **** {
 406:Src/main.c    **** 
 407:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 408:Src/main.c    **** 
 409:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 410:Src/main.c    **** 
 411:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 412:Src/main.c    **** 
 413:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 414:Src/main.c    ****   huart2.Instance = USART2;
 415:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 416:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 417:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 418:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 419:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 420:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 421:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 422:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 423:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 424:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 425:Src/main.c    ****   {
 426:Src/main.c    ****     Error_Handler();
 427:Src/main.c    ****   }
 428:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 429:Src/main.c    **** 
 430:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
ARM GAS  /tmp/ccK8WG6y.s 			page 9


 431:Src/main.c    **** 
 432:Src/main.c    **** }
 433:Src/main.c    **** 
 434:Src/main.c    **** /**
 435:Src/main.c    ****   * @brief GPIO Initialization Function
 436:Src/main.c    ****   * @param None
 437:Src/main.c    ****   * @retval None
 438:Src/main.c    ****   */
 439:Src/main.c    **** static void MX_GPIO_Init(void)
 440:Src/main.c    **** {
  28              		.loc 1 440 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 8AB0     		sub	sp, sp, #40
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 56
 441:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 441 3 view .LVU1
  43              		.loc 1 441 20 is_stmt 0 view .LVU2
  44 0004 0024     		movs	r4, #0
  45 0006 0594     		str	r4, [sp, #20]
  46 0008 0694     		str	r4, [sp, #24]
  47 000a 0794     		str	r4, [sp, #28]
  48 000c 0894     		str	r4, [sp, #32]
  49 000e 0994     		str	r4, [sp, #36]
 442:Src/main.c    **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 443:Src/main.c    **** /* USER CODE END MX_GPIO_Init_1 */
 444:Src/main.c    **** 
 445:Src/main.c    ****   /* GPIO Ports Clock Enable */
 446:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  50              		.loc 1 446 3 is_stmt 1 view .LVU3
  51              	.LBB8:
  52              		.loc 1 446 3 view .LVU4
  53              		.loc 1 446 3 view .LVU5
  54 0010 334B     		ldr	r3, .L3
  55 0012 DA6C     		ldr	r2, [r3, #76]
  56 0014 42F00402 		orr	r2, r2, #4
  57 0018 DA64     		str	r2, [r3, #76]
  58              		.loc 1 446 3 view .LVU6
  59 001a DA6C     		ldr	r2, [r3, #76]
  60 001c 02F00402 		and	r2, r2, #4
  61 0020 0192     		str	r2, [sp, #4]
  62              		.loc 1 446 3 view .LVU7
  63 0022 019A     		ldr	r2, [sp, #4]
  64              	.LBE8:
  65              		.loc 1 446 3 view .LVU8
 447:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  66              		.loc 1 447 3 view .LVU9
  67              	.LBB9:
ARM GAS  /tmp/ccK8WG6y.s 			page 10


  68              		.loc 1 447 3 view .LVU10
  69              		.loc 1 447 3 view .LVU11
  70 0024 DA6C     		ldr	r2, [r3, #76]
  71 0026 42F08002 		orr	r2, r2, #128
  72 002a DA64     		str	r2, [r3, #76]
  73              		.loc 1 447 3 view .LVU12
  74 002c DA6C     		ldr	r2, [r3, #76]
  75 002e 02F08002 		and	r2, r2, #128
  76 0032 0292     		str	r2, [sp, #8]
  77              		.loc 1 447 3 view .LVU13
  78 0034 029A     		ldr	r2, [sp, #8]
  79              	.LBE9:
  80              		.loc 1 447 3 view .LVU14
 448:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  81              		.loc 1 448 3 view .LVU15
  82              	.LBB10:
  83              		.loc 1 448 3 view .LVU16
  84              		.loc 1 448 3 view .LVU17
  85 0036 DA6C     		ldr	r2, [r3, #76]
  86 0038 42F00102 		orr	r2, r2, #1
  87 003c DA64     		str	r2, [r3, #76]
  88              		.loc 1 448 3 view .LVU18
  89 003e DA6C     		ldr	r2, [r3, #76]
  90 0040 02F00102 		and	r2, r2, #1
  91 0044 0392     		str	r2, [sp, #12]
  92              		.loc 1 448 3 view .LVU19
  93 0046 039A     		ldr	r2, [sp, #12]
  94              	.LBE10:
  95              		.loc 1 448 3 view .LVU20
 449:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  96              		.loc 1 449 3 view .LVU21
  97              	.LBB11:
  98              		.loc 1 449 3 view .LVU22
  99              		.loc 1 449 3 view .LVU23
 100 0048 DA6C     		ldr	r2, [r3, #76]
 101 004a 42F00202 		orr	r2, r2, #2
 102 004e DA64     		str	r2, [r3, #76]
 103              		.loc 1 449 3 view .LVU24
 104 0050 DB6C     		ldr	r3, [r3, #76]
 105 0052 03F00203 		and	r3, r3, #2
 106 0056 0493     		str	r3, [sp, #16]
 107              		.loc 1 449 3 view .LVU25
 108 0058 049B     		ldr	r3, [sp, #16]
 109              	.LBE11:
 110              		.loc 1 449 3 view .LVU26
 450:Src/main.c    **** 
 451:Src/main.c    ****   /*Configure GPIO pin Output Level */
 452:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, RX_LED_Pin|TX_LED_Pin, GPIO_PIN_RESET);
 111              		.loc 1 452 3 view .LVU27
 112 005a 224D     		ldr	r5, .L3+4
 113 005c 2246     		mov	r2, r4
 114 005e 0321     		movs	r1, #3
 115 0060 2846     		mov	r0, r5
 116 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 117              	.LVL0:
 453:Src/main.c    **** 
 454:Src/main.c    ****   /*Configure GPIO pin Output Level */
ARM GAS  /tmp/ccK8WG6y.s 			page 11


 455:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, RESET_Pin|NSS_Pin, GPIO_PIN_RESET);
 118              		.loc 1 455 3 view .LVU28
 119 0066 2246     		mov	r2, r4
 120 0068 40F20111 		movw	r1, #257
 121 006c 4FF09040 		mov	r0, #1207959552
 122 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 123              	.LVL1:
 456:Src/main.c    **** 
 457:Src/main.c    ****   /*Configure GPIO pin : B1_Pin */
 458:Src/main.c    ****   GPIO_InitStruct.Pin = B1_Pin;
 124              		.loc 1 458 3 view .LVU29
 125              		.loc 1 458 23 is_stmt 0 view .LVU30
 126 0074 4FF40053 		mov	r3, #8192
 127 0078 0593     		str	r3, [sp, #20]
 459:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 128              		.loc 1 459 3 is_stmt 1 view .LVU31
 129              		.loc 1 459 24 is_stmt 0 view .LVU32
 130 007a 4FF40413 		mov	r3, #2162688
 131 007e 0693     		str	r3, [sp, #24]
 460:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 132              		.loc 1 460 3 is_stmt 1 view .LVU33
 133              		.loc 1 460 24 is_stmt 0 view .LVU34
 134 0080 0794     		str	r4, [sp, #28]
 461:Src/main.c    ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 135              		.loc 1 461 3 is_stmt 1 view .LVU35
 136 0082 05A9     		add	r1, sp, #20
 137 0084 2846     		mov	r0, r5
 138 0086 FFF7FEFF 		bl	HAL_GPIO_Init
 139              	.LVL2:
 462:Src/main.c    **** 
 463:Src/main.c    ****   /*Configure GPIO pins : RX_LED_Pin TX_LED_Pin */
 464:Src/main.c    ****   GPIO_InitStruct.Pin = RX_LED_Pin|TX_LED_Pin;
 140              		.loc 1 464 3 view .LVU36
 141              		.loc 1 464 23 is_stmt 0 view .LVU37
 142 008a 0323     		movs	r3, #3
 143 008c 0593     		str	r3, [sp, #20]
 465:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 144              		.loc 1 465 3 is_stmt 1 view .LVU38
 145              		.loc 1 465 24 is_stmt 0 view .LVU39
 146 008e 0126     		movs	r6, #1
 147 0090 0696     		str	r6, [sp, #24]
 466:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 148              		.loc 1 466 3 is_stmt 1 view .LVU40
 149              		.loc 1 466 24 is_stmt 0 view .LVU41
 150 0092 0794     		str	r4, [sp, #28]
 467:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 151              		.loc 1 467 3 is_stmt 1 view .LVU42
 152              		.loc 1 467 25 is_stmt 0 view .LVU43
 153 0094 0894     		str	r4, [sp, #32]
 468:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 154              		.loc 1 468 3 is_stmt 1 view .LVU44
 155 0096 05A9     		add	r1, sp, #20
 156 0098 2846     		mov	r0, r5
 157 009a FFF7FEFF 		bl	HAL_GPIO_Init
 158              	.LVL3:
 469:Src/main.c    **** 
 470:Src/main.c    ****   /*Configure GPIO pins : RESET_Pin NSS_Pin */
ARM GAS  /tmp/ccK8WG6y.s 			page 12


 471:Src/main.c    ****   GPIO_InitStruct.Pin = RESET_Pin|NSS_Pin;
 159              		.loc 1 471 3 view .LVU45
 160              		.loc 1 471 23 is_stmt 0 view .LVU46
 161 009e 40F20113 		movw	r3, #257
 162 00a2 0593     		str	r3, [sp, #20]
 472:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 163              		.loc 1 472 3 is_stmt 1 view .LVU47
 164              		.loc 1 472 24 is_stmt 0 view .LVU48
 165 00a4 0696     		str	r6, [sp, #24]
 473:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 166              		.loc 1 473 3 is_stmt 1 view .LVU49
 167              		.loc 1 473 24 is_stmt 0 view .LVU50
 168 00a6 0794     		str	r4, [sp, #28]
 474:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 169              		.loc 1 474 3 is_stmt 1 view .LVU51
 170              		.loc 1 474 25 is_stmt 0 view .LVU52
 171 00a8 0894     		str	r4, [sp, #32]
 475:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 172              		.loc 1 475 3 is_stmt 1 view .LVU53
 173 00aa 05A9     		add	r1, sp, #20
 174 00ac 4FF09040 		mov	r0, #1207959552
 175 00b0 FFF7FEFF 		bl	HAL_GPIO_Init
 176              	.LVL4:
 476:Src/main.c    **** 
 477:Src/main.c    ****   /*Configure GPIO pin : BUSY_Pin */
 478:Src/main.c    ****   GPIO_InitStruct.Pin = BUSY_Pin;
 177              		.loc 1 478 3 view .LVU54
 178              		.loc 1 478 23 is_stmt 0 view .LVU55
 179 00b4 0823     		movs	r3, #8
 180 00b6 0593     		str	r3, [sp, #20]
 479:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 181              		.loc 1 479 3 is_stmt 1 view .LVU56
 182              		.loc 1 479 24 is_stmt 0 view .LVU57
 183 00b8 0694     		str	r4, [sp, #24]
 480:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 184              		.loc 1 480 3 is_stmt 1 view .LVU58
 185              		.loc 1 480 24 is_stmt 0 view .LVU59
 186 00ba 0794     		str	r4, [sp, #28]
 481:Src/main.c    ****   HAL_GPIO_Init(BUSY_GPIO_Port, &GPIO_InitStruct);
 187              		.loc 1 481 3 is_stmt 1 view .LVU60
 188 00bc A5F58065 		sub	r5, r5, #1024
 189 00c0 05A9     		add	r1, sp, #20
 190 00c2 2846     		mov	r0, r5
 191 00c4 FFF7FEFF 		bl	HAL_GPIO_Init
 192              	.LVL5:
 482:Src/main.c    **** 
 483:Src/main.c    ****   /*Configure GPIO pin : EVENT_Pin */
 484:Src/main.c    ****   GPIO_InitStruct.Pin = EVENT_Pin;
 193              		.loc 1 484 3 view .LVU61
 194              		.loc 1 484 23 is_stmt 0 view .LVU62
 195 00c8 1023     		movs	r3, #16
 196 00ca 0593     		str	r3, [sp, #20]
 485:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 197              		.loc 1 485 3 is_stmt 1 view .LVU63
 198              		.loc 1 485 24 is_stmt 0 view .LVU64
 199 00cc 4FF48813 		mov	r3, #1114112
 200 00d0 0693     		str	r3, [sp, #24]
ARM GAS  /tmp/ccK8WG6y.s 			page 13


 486:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 201              		.loc 1 486 3 is_stmt 1 view .LVU65
 202              		.loc 1 486 24 is_stmt 0 view .LVU66
 203 00d2 0794     		str	r4, [sp, #28]
 487:Src/main.c    ****   HAL_GPIO_Init(EVENT_GPIO_Port, &GPIO_InitStruct);
 204              		.loc 1 487 3 is_stmt 1 view .LVU67
 205 00d4 05A9     		add	r1, sp, #20
 206 00d6 2846     		mov	r0, r5
 207 00d8 FFF7FEFF 		bl	HAL_GPIO_Init
 208              	.LVL6:
 488:Src/main.c    **** 
 489:Src/main.c    **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 490:Src/main.c    **** /* USER CODE END MX_GPIO_Init_2 */
 491:Src/main.c    **** }
 209              		.loc 1 491 1 is_stmt 0 view .LVU68
 210 00dc 0AB0     		add	sp, sp, #40
 211              	.LCFI2:
 212              		.cfi_def_cfa_offset 16
 213              		@ sp needed
 214 00de 70BD     		pop	{r4, r5, r6, pc}
 215              	.L4:
 216              		.align	2
 217              	.L3:
 218 00e0 00100240 		.word	1073876992
 219 00e4 00080048 		.word	1207961600
 220              		.cfi_endproc
 221              	.LFE438:
 223              		.section	.text.turnOnLED,"ax",%progbits
 224              		.align	1
 225              		.global	turnOnLED
 226              		.syntax unified
 227              		.thumb
 228              		.thumb_func
 229              		.fpu fpv4-sp-d16
 231              	turnOnLED:
 232              	.LVL7:
 233              	.LFB439:
 492:Src/main.c    **** 
 493:Src/main.c    **** /* USER CODE BEGIN 4 */
 494:Src/main.c    **** 
 495:Src/main.c    **** /*
 496:Src/main.c    ****  * -----------------------------------------------------------------------------
 497:Src/main.c    ****  * --- PRIVATE FUNCTIONS DEFINITION --------------------------------------------
 498:Src/main.c    ****  */
 499:Src/main.c    **** 
 500:Src/main.c    **** void turnOnLED(GPIO_TypeDef* LED_GPIO_Port, uint16_t LED_Pin) {
 234              		.loc 1 500 63 is_stmt 1 view -0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		.loc 1 500 63 is_stmt 0 view .LVU70
 239 0000 08B5     		push	{r3, lr}
 240              	.LCFI3:
 241              		.cfi_def_cfa_offset 8
 242              		.cfi_offset 3, -8
 243              		.cfi_offset 14, -4
 501:Src/main.c    ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_SET);
ARM GAS  /tmp/ccK8WG6y.s 			page 14


 244              		.loc 1 501 3 is_stmt 1 view .LVU71
 245 0002 0122     		movs	r2, #1
 246 0004 FFF7FEFF 		bl	HAL_GPIO_WritePin
 247              	.LVL8:
 502:Src/main.c    **** }
 248              		.loc 1 502 1 is_stmt 0 view .LVU72
 249 0008 08BD     		pop	{r3, pc}
 250              		.cfi_endproc
 251              	.LFE439:
 253              		.section	.text.turnOffLED,"ax",%progbits
 254              		.align	1
 255              		.global	turnOffLED
 256              		.syntax unified
 257              		.thumb
 258              		.thumb_func
 259              		.fpu fpv4-sp-d16
 261              	turnOffLED:
 262              	.LVL9:
 263              	.LFB440:
 503:Src/main.c    **** 
 504:Src/main.c    **** void turnOffLED(GPIO_TypeDef* LED_GPIO_Port, uint16_t LED_Pin) {
 264              		.loc 1 504 64 is_stmt 1 view -0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              		.loc 1 504 64 is_stmt 0 view .LVU74
 269 0000 08B5     		push	{r3, lr}
 270              	.LCFI4:
 271              		.cfi_def_cfa_offset 8
 272              		.cfi_offset 3, -8
 273              		.cfi_offset 14, -4
 505:Src/main.c    ****   HAL_GPIO_WritePin(LED_GPIO_Port, LED_Pin, GPIO_PIN_RESET);
 274              		.loc 1 505 3 is_stmt 1 view .LVU75
 275 0002 0022     		movs	r2, #0
 276 0004 FFF7FEFF 		bl	HAL_GPIO_WritePin
 277              	.LVL10:
 506:Src/main.c    **** }
 278              		.loc 1 506 1 is_stmt 0 view .LVU76
 279 0008 08BD     		pop	{r3, pc}
 280              		.cfi_endproc
 281              	.LFE440:
 283              		.section	.text.toggleLED,"ax",%progbits
 284              		.align	1
 285              		.global	toggleLED
 286              		.syntax unified
 287              		.thumb
 288              		.thumb_func
 289              		.fpu fpv4-sp-d16
 291              	toggleLED:
 292              	.LVL11:
 293              	.LFB441:
 507:Src/main.c    **** 
 508:Src/main.c    **** void toggleLED(GPIO_TypeDef* LED_GPIO_Port, uint16_t LED_Pin) {
 294              		.loc 1 508 63 is_stmt 1 view -0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccK8WG6y.s 			page 15


 298              		.loc 1 508 63 is_stmt 0 view .LVU78
 299 0000 08B5     		push	{r3, lr}
 300              	.LCFI5:
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 3, -8
 303              		.cfi_offset 14, -4
 509:Src/main.c    ****   HAL_GPIO_TogglePin(LED_GPIO_Port, LED_Pin);
 304              		.loc 1 509 3 is_stmt 1 view .LVU79
 305 0002 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 306              	.LVL12:
 510:Src/main.c    **** }
 307              		.loc 1 510 1 is_stmt 0 view .LVU80
 308 0006 08BD     		pop	{r3, pc}
 309              		.cfi_endproc
 310              	.LFE441:
 312              		.section	.text.blinkLED,"ax",%progbits
 313              		.align	1
 314              		.global	blinkLED
 315              		.syntax unified
 316              		.thumb
 317              		.thumb_func
 318              		.fpu fpv4-sp-d16
 320              	blinkLED:
 321              	.LVL13:
 322              	.LFB442:
 511:Src/main.c    **** 
 512:Src/main.c    **** void blinkLED(GPIO_TypeDef* LED_GPIO_Port, uint16_t LED_Pin, uint32_t period, uint8_t count, bool s
 323              		.loc 1 512 106 is_stmt 1 view -0
 324              		.cfi_startproc
 325              		@ args = 4, pretend = 0, frame = 0
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327              		.loc 1 512 106 is_stmt 0 view .LVU82
 328 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 329              	.LCFI6:
 330              		.cfi_def_cfa_offset 24
 331              		.cfi_offset 4, -24
 332              		.cfi_offset 5, -20
 333              		.cfi_offset 6, -16
 334              		.cfi_offset 7, -12
 335              		.cfi_offset 8, -8
 336              		.cfi_offset 14, -4
 337 0004 9846     		mov	r8, r3
 338 0006 9DF81830 		ldrb	r3, [sp, #24]	@ zero_extendqisi2
 339              	.LVL14:
 513:Src/main.c    ****   if (start) {
 340              		.loc 1 513 3 is_stmt 1 view .LVU83
 341              		.loc 1 513 6 is_stmt 0 view .LVU84
 342 000a A3B9     		cbnz	r3, .L15
 343              	.LVL15:
 344              	.L11:
 514:Src/main.c    ****     for (uint8_t i = 0; i < count; i++) {
 515:Src/main.c    ****       turnOnLED(LED_GPIO_Port, LED_Pin);
 516:Src/main.c    ****       HAL_Delay(period);
 517:Src/main.c    ****       turnOffLED(LED_GPIO_Port, LED_Pin);
 518:Src/main.c    ****       HAL_Delay(period);
 519:Src/main.c    ****     }
 520:Src/main.c    ****   }
ARM GAS  /tmp/ccK8WG6y.s 			page 16


 521:Src/main.c    **** }
 345              		.loc 1 521 1 view .LVU85
 346 000c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 347              	.LVL16:
 348              	.L14:
 349              	.LBB12:
 515:Src/main.c    ****       HAL_Delay(period);
 350              		.loc 1 515 7 is_stmt 1 discriminator 3 view .LVU86
 351 0010 3146     		mov	r1, r6
 352 0012 2846     		mov	r0, r5
 353 0014 FFF7FEFF 		bl	turnOnLED
 354              	.LVL17:
 516:Src/main.c    ****       turnOffLED(LED_GPIO_Port, LED_Pin);
 355              		.loc 1 516 7 discriminator 3 view .LVU87
 356 0018 3846     		mov	r0, r7
 357 001a FFF7FEFF 		bl	HAL_Delay
 358              	.LVL18:
 517:Src/main.c    ****       HAL_Delay(period);
 359              		.loc 1 517 7 discriminator 3 view .LVU88
 360 001e 3146     		mov	r1, r6
 361 0020 2846     		mov	r0, r5
 362 0022 FFF7FEFF 		bl	turnOffLED
 363              	.LVL19:
 518:Src/main.c    ****     }
 364              		.loc 1 518 7 discriminator 3 view .LVU89
 365 0026 3846     		mov	r0, r7
 366 0028 FFF7FEFF 		bl	HAL_Delay
 367              	.LVL20:
 514:Src/main.c    ****       turnOnLED(LED_GPIO_Port, LED_Pin);
 368              		.loc 1 514 36 discriminator 3 view .LVU90
 514:Src/main.c    ****       turnOnLED(LED_GPIO_Port, LED_Pin);
 369              		.loc 1 514 37 is_stmt 0 discriminator 3 view .LVU91
 370 002c 0134     		adds	r4, r4, #1
 371              	.LVL21:
 514:Src/main.c    ****       turnOnLED(LED_GPIO_Port, LED_Pin);
 372              		.loc 1 514 37 discriminator 3 view .LVU92
 373 002e E4B2     		uxtb	r4, r4
 374              	.LVL22:
 375              	.L12:
 514:Src/main.c    ****       turnOnLED(LED_GPIO_Port, LED_Pin);
 376              		.loc 1 514 25 is_stmt 1 discriminator 1 view .LVU93
 514:Src/main.c    ****       turnOnLED(LED_GPIO_Port, LED_Pin);
 377              		.loc 1 514 5 is_stmt 0 discriminator 1 view .LVU94
 378 0030 4445     		cmp	r4, r8
 379 0032 EDD3     		bcc	.L14
 380 0034 EAE7     		b	.L11
 381              	.LVL23:
 382              	.L15:
 514:Src/main.c    ****       turnOnLED(LED_GPIO_Port, LED_Pin);
 383              		.loc 1 514 5 discriminator 1 view .LVU95
 384 0036 0546     		mov	r5, r0
 385 0038 0E46     		mov	r6, r1
 386 003a 1746     		mov	r7, r2
 514:Src/main.c    ****       turnOnLED(LED_GPIO_Port, LED_Pin);
 387              		.loc 1 514 18 view .LVU96
 388 003c 0024     		movs	r4, #0
 389 003e F7E7     		b	.L12
ARM GAS  /tmp/ccK8WG6y.s 			page 17


 390              	.LBE12:
 391              		.cfi_endproc
 392              	.LFE442:
 394              		.section	.text.hal_mcu_trace_print,"ax",%progbits
 395              		.align	1
 396              		.global	hal_mcu_trace_print
 397              		.syntax unified
 398              		.thumb
 399              		.thumb_func
 400              		.fpu fpv4-sp-d16
 402              	hal_mcu_trace_print:
 403              	.LVL24:
 404              	.LFB443:
 522:Src/main.c    **** 
 523:Src/main.c    **** void hal_mcu_trace_print( const char* fmt, ... ) {
 405              		.loc 1 523 50 is_stmt 1 view -0
 406              		.cfi_startproc
 407              		@ args = 4, pretend = 16, frame = 264
 408              		@ frame_needed = 0, uses_anonymous_args = 1
 409              		.loc 1 523 50 is_stmt 0 view .LVU98
 410 0000 0FB4     		push	{r0, r1, r2, r3}
 411              	.LCFI7:
 412              		.cfi_def_cfa_offset 16
 413              		.cfi_offset 0, -16
 414              		.cfi_offset 1, -12
 415              		.cfi_offset 2, -8
 416              		.cfi_offset 3, -4
 417 0002 00B5     		push	{lr}
 418              	.LCFI8:
 419              		.cfi_def_cfa_offset 20
 420              		.cfi_offset 14, -20
 421 0004 C3B0     		sub	sp, sp, #268
 422              	.LCFI9:
 423              		.cfi_def_cfa_offset 288
 424 0006 44AA     		add	r2, sp, #272
 425 0008 52F8041B 		ldr	r1, [r2], #4
 524:Src/main.c    ****   va_list argp;
 426              		.loc 1 524 3 is_stmt 1 view .LVU99
 525:Src/main.c    ****   va_start( argp, fmt );
 427              		.loc 1 525 3 view .LVU100
 428 000c 4192     		str	r2, [sp, #260]
 526:Src/main.c    **** 
 527:Src/main.c    ****   char string[255];
 429              		.loc 1 527 3 view .LVU101
 528:Src/main.c    ****   if( 0 < vsprintf( string, fmt, argp ) ) {
 430              		.loc 1 528 3 view .LVU102
 431              		.loc 1 528 11 is_stmt 0 view .LVU103
 432 000e 01A8     		add	r0, sp, #4
 433 0010 FFF7FEFF 		bl	vsprintf
 434              	.LVL25:
 435              		.loc 1 528 5 view .LVU104
 436 0014 0028     		cmp	r0, #0
 437 0016 04DC     		bgt	.L20
 438              	.L17:
 529:Src/main.c    ****       HAL_UART_Transmit(&huart2, (uint8_t*) string, (uint16_t) strlen((const char*) string), 0xffff
 530:Src/main.c    ****   }
 531:Src/main.c    **** 
ARM GAS  /tmp/ccK8WG6y.s 			page 18


 532:Src/main.c    ****   va_end( argp );
 533:Src/main.c    **** }
 439              		.loc 1 533 1 view .LVU105
 440 0018 43B0     		add	sp, sp, #268
 441              	.LCFI10:
 442              		.cfi_remember_state
 443              		.cfi_def_cfa_offset 20
 444              		@ sp needed
 445 001a 5DF804EB 		ldr	lr, [sp], #4
 446              	.LCFI11:
 447              		.cfi_restore 14
 448              		.cfi_def_cfa_offset 16
 449 001e 04B0     		add	sp, sp, #16
 450              	.LCFI12:
 451              		.cfi_restore 3
 452              		.cfi_restore 2
 453              		.cfi_restore 1
 454              		.cfi_restore 0
 455              		.cfi_def_cfa_offset 0
 456 0020 7047     		bx	lr
 457              	.L20:
 458              	.LCFI13:
 459              		.cfi_restore_state
 529:Src/main.c    ****       HAL_UART_Transmit(&huart2, (uint8_t*) string, (uint16_t) strlen((const char*) string), 0xffff
 460              		.loc 1 529 7 is_stmt 1 view .LVU106
 529:Src/main.c    ****       HAL_UART_Transmit(&huart2, (uint8_t*) string, (uint16_t) strlen((const char*) string), 0xffff
 461              		.loc 1 529 64 is_stmt 0 view .LVU107
 462 0022 01A8     		add	r0, sp, #4
 463 0024 FFF7FEFF 		bl	strlen
 464              	.LVL26:
 529:Src/main.c    ****       HAL_UART_Transmit(&huart2, (uint8_t*) string, (uint16_t) strlen((const char*) string), 0xffff
 465              		.loc 1 529 7 view .LVU108
 466 0028 6FF07F43 		mvn	r3, #-16777216
 467 002c 82B2     		uxth	r2, r0
 468 002e 01A9     		add	r1, sp, #4
 469 0030 0148     		ldr	r0, .L21
 470 0032 FFF7FEFF 		bl	HAL_UART_Transmit
 471              	.LVL27:
 532:Src/main.c    **** }
 472              		.loc 1 532 3 is_stmt 1 view .LVU109
 473              		.loc 1 533 1 is_stmt 0 view .LVU110
 474 0036 EFE7     		b	.L17
 475              	.L22:
 476              		.align	2
 477              	.L21:
 478 0038 00000000 		.word	.LANCHOR0
 479              		.cfi_endproc
 480              	.LFE443:
 482              		.section	.rodata.resetLR1110.str1.4,"aMS",%progbits,1
 483              		.align	2
 484              	.LC0:
 485 0000 1B5B303B 		.ascii	"\033[0;32m\000"
 485      33326D00 
 486              		.align	2
 487              	.LC1:
 488 0008 494E464F 		.ascii	"INFO : \000"
 488      203A2000 
ARM GAS  /tmp/ccK8WG6y.s 			page 19


 489              		.align	2
 490              	.LC2:
 491 0010 52657365 		.ascii	"Resetting LR1110... \000"
 491      7474696E 
 491      67204C52 
 491      31313130 
 491      2E2E2E20 
 492 0025 000000   		.align	2
 493              	.LC3:
 494 0028 1B5B306D 		.ascii	"\033[0m\000"
 494      00
 495 002d 000000   		.align	2
 496              	.LC4:
 497 0030 444F4E45 		.ascii	"DONE\015\012\000"
 497      0D0A00
 498              		.section	.text.resetLR1110,"ax",%progbits
 499              		.align	1
 500              		.syntax unified
 501              		.thumb
 502              		.thumb_func
 503              		.fpu fpv4-sp-d16
 505              	resetLR1110:
 506              	.LFB449:
 534:Src/main.c    **** 
 535:Src/main.c    **** void getLR1110_Bootloader_Version( const void* context ) {
 536:Src/main.c    ****   HAL_DBG_TRACE_INFO("Getting LR1110 version... ");
 537:Src/main.c    **** 
 538:Src/main.c    ****   uint8_t cbuffer[LR1110_VERSION_CMD_LENGTH];
 539:Src/main.c    ****   uint8_t rbuffer[LR1110_VERSION_LENGTH] = { 0 };
 540:Src/main.c    **** 
 541:Src/main.c    ****   cbuffer[0] = ( uint8_t )( LR1110_GET_VERSION_OC >> 8 );
 542:Src/main.c    ****   cbuffer[1] = ( uint8_t )( LR1110_GET_VERSION_OC >> 0 );
 543:Src/main.c    ****   
 544:Src/main.c    ****   if (lr1110_spi_read(context, cbuffer, LR1110_VERSION_CMD_LENGTH, rbuffer, LR1110_VERSION_LENGTH )
 545:Src/main.c    ****     HAL_DBG_TRACE_MSG_COLOR("DONE\r\n", HAL_DBG_TRACE_COLOR_GREEN);
 546:Src/main.c    **** 
 547:Src/main.c    ****     HAL_DBG_TRACE_INFO("LR1110 bootloader hardware version: %d\r\n", rbuffer[0]);
 548:Src/main.c    ****     switch (rbuffer[1]) {
 549:Src/main.c    ****         case 1:
 550:Src/main.c    ****             HAL_DBG_TRACE_INFO("LR1110 bootloader type: LR1110\r\n");
 551:Src/main.c    ****             break;
 552:Src/main.c    ****         case 2:
 553:Src/main.c    ****             HAL_DBG_TRACE_INFO("LR1110 bootloader type: LR1120\r\n");
 554:Src/main.c    ****             break;
 555:Src/main.c    ****         case 3:
 556:Src/main.c    ****             HAL_DBG_TRACE_INFO("LR1110 bootloader type: LR1121\r\n");
 557:Src/main.c    ****             break;
 558:Src/main.c    ****         default:
 559:Src/main.c    ****             break;
 560:Src/main.c    ****     }
 561:Src/main.c    ****     HAL_DBG_TRACE_INFO("LR1110 bootloader firmware version: %d.%d\r\n", rbuffer[2], rbuffer[3]);
 562:Src/main.c    ****   } else {
 563:Src/main.c    ****     HAL_DBG_TRACE_ERROR("\r\nFailed to get LR1110 bootloader version\r\n");
 564:Src/main.c    ****   }
 565:Src/main.c    **** }
 566:Src/main.c    **** 
 567:Src/main.c    **** void getLR1110_Temperature( const void* context ) {
ARM GAS  /tmp/ccK8WG6y.s 			page 20


 568:Src/main.c    ****   HAL_DBG_TRACE_INFO("Getting LR1110 temperature... ");
 569:Src/main.c    **** 
 570:Src/main.c    ****   uint8_t cbuffer[LR1110_TEMPERATURE_CMD_LENGTH];
 571:Src/main.c    ****   uint8_t rbuffer[LR1110_TEMPERATURE_LENGTH] = { 0 };
 572:Src/main.c    **** 
 573:Src/main.c    ****   cbuffer[0] = ( uint8_t )( LR1110_GET_TEMPERATURE >> 8 );
 574:Src/main.c    ****   cbuffer[1] = ( uint8_t )( LR1110_GET_TEMPERATURE >> 0 );
 575:Src/main.c    **** 
 576:Src/main.c    ****   if (lr1110_spi_read( context, cbuffer, LR1110_TEMPERATURE_CMD_LENGTH, rbuffer, LR1110_TEMPERATURE
 577:Src/main.c    ****     HAL_DBG_TRACE_MSG_COLOR("DONE\r\n", HAL_DBG_TRACE_COLOR_GREEN);
 578:Src/main.c    **** 
 579:Src/main.c    ****     uint16_t temp_10_0 = ((rbuffer[0] << 8) | rbuffer[1]) & 0x7FF;
 580:Src/main.c    ****     float temperature = 25 + (1000/(-1.7)) * ((temp_10_0/2047.0) * 1.35 - 0.7295);
 581:Src/main.c    **** 
 582:Src/main.c    ****     if ((int)temperature > 50) {
 583:Src/main.c    ****       HAL_DBG_TRACE_ERROR("LR1110 temperature is too high\r\n");
 584:Src/main.c    ****       HAL_DBG_TRACE_ERROR("TCXO mode is maybe not set up correctly\r\n");
 585:Src/main.c    ****     }
 586:Src/main.c    **** 
 587:Src/main.c    ****     HAL_DBG_TRACE_INFO("LR1110 temperature: %d.%d °C\r\n", (int)temperature, (int)((temperature - 
 588:Src/main.c    ****   } else {
 589:Src/main.c    ****     HAL_DBG_TRACE_ERROR("\r\nFailed to get LR1110 temperature\r\n");
 590:Src/main.c    ****   }
 591:Src/main.c    **** }
 592:Src/main.c    **** 
 593:Src/main.c    **** void getLR1110_GNSS_Version( const void* context ) {
 594:Src/main.c    ****   HAL_DBG_TRACE_INFO("Getting GNSS version... ");
 595:Src/main.c    **** 
 596:Src/main.c    ****   uint8_t cbuffer[LR1110_GNSS_VERSION_CMD_LENGTH];
 597:Src/main.c    ****   uint8_t rbuffer[LR1110_GNSS_VERSION_LENGTH] = { 0 };
 598:Src/main.c    **** 
 599:Src/main.c    ****   cbuffer[0] = LR1110_GROUP_ID_GNSS;
 600:Src/main.c    ****   cbuffer[1] = LR1110_GNSS_READ_FW_VERSION_CMD;
 601:Src/main.c    **** 
 602:Src/main.c    ****   if (lr1110_spi_read( context, cbuffer, LR1110_GNSS_VERSION_CMD_LENGTH, rbuffer, LR1110_GNSS_VERSI
 603:Src/main.c    ****     HAL_DBG_TRACE_MSG_COLOR("DONE\r\n", HAL_DBG_TRACE_COLOR_GREEN);
 604:Src/main.c    **** 
 605:Src/main.c    ****     HAL_DBG_TRACE_INFO("GNSS firmware version = %d\n\r", rbuffer[0]);
 606:Src/main.c    ****     HAL_DBG_TRACE_INFO("GNSS almanac version = %d\n\r", rbuffer[1]);
 607:Src/main.c    ****   } else {
 608:Src/main.c    ****     HAL_DBG_TRACE_ERROR("Failed to get GNSS version\r\n");
 609:Src/main.c    ****   }
 610:Src/main.c    **** }
 611:Src/main.c    **** 
 612:Src/main.c    **** void getLR1110_WiFi_Version( const void* context ) {
 613:Src/main.c    ****   HAL_DBG_TRACE_INFO("Getting Wi-Fi version... ");
 614:Src/main.c    **** 
 615:Src/main.c    ****   uint8_t cbuffer[LR1110_WIFI_VERSION_CMD_LENGTH];
 616:Src/main.c    ****   uint8_t rbuffer[LR1110_WIFI_VERSION_LENGTH] = { 0 };
 617:Src/main.c    **** 
 618:Src/main.c    ****   cbuffer[0] = LR1110_GROUP_ID_WIFI;
 619:Src/main.c    ****   cbuffer[1] = LR1110_WIFI_GET_FIRMWARE_WIFI_VERSION_CMD;
 620:Src/main.c    **** 
 621:Src/main.c    ****   if (lr1110_spi_read( context, cbuffer, LR1110_WIFI_VERSION_CMD_LENGTH, rbuffer, LR1110_WIFI_VERSI
 622:Src/main.c    ****     HAL_DBG_TRACE_MSG_COLOR("DONE\r\n", HAL_DBG_TRACE_COLOR_GREEN);
 623:Src/main.c    **** 
 624:Src/main.c    ****     HAL_DBG_TRACE_INFO("Wi-Fi firmware version: %d.%d\r\n", rbuffer[0], rbuffer[1]);
ARM GAS  /tmp/ccK8WG6y.s 			page 21


 625:Src/main.c    ****   } else {
 626:Src/main.c    ****     HAL_DBG_TRACE_ERROR("Failed to get Wi-Fi version\r\n");
 627:Src/main.c    ****   }
 628:Src/main.c    **** }
 629:Src/main.c    **** 
 630:Src/main.c    **** void getLR1110_Chip_EUI( const void* context ) {
 631:Src/main.c    ****   HAL_DBG_TRACE_INFO("Getting LR1110 Chip EUI... ");
 632:Src/main.c    **** 
 633:Src/main.c    ****   uint8_t cbuffer[LR1110_CHIP_EUI_CMD_LENGTH];
 634:Src/main.c    ****   uint8_t rbuffer[LR1110_CHIP_EUI_LENGTH] = { 0 };
 635:Src/main.c    **** 
 636:Src/main.c    ****   cbuffer[0] = ( uint8_t )( LR1110_GET_CHIP_EUI_OC >> 8 );
 637:Src/main.c    ****   cbuffer[1] = ( uint8_t )( LR1110_GET_CHIP_EUI_OC >> 0 );
 638:Src/main.c    **** 
 639:Src/main.c    ****   if (lr1110_spi_read( context, cbuffer, LR1110_CHIP_EUI_CMD_LENGTH, rbuffer, LR1110_CHIP_EUI_LENGT
 640:Src/main.c    ****     HAL_DBG_TRACE_MSG_COLOR("DONE\r\n", HAL_DBG_TRACE_COLOR_GREEN);
 641:Src/main.c    **** 
 642:Src/main.c    ****     HAL_DBG_TRACE_INFO("Chip EUI: %02X:%02X:%02X:%02X:%02X:%02X:%02X:%02X\r\n", rbuffer[0], rbuffer
 643:Src/main.c    ****   } else {
 644:Src/main.c    ****     HAL_DBG_TRACE_ERROR("Failed to get LR1110 Chip EUI\r\n");
 645:Src/main.c    ****   }
 646:Src/main.c    **** }
 647:Src/main.c    **** 
 648:Src/main.c    **** void resetLR1110() {
 507              		.loc 1 648 20 is_stmt 1 view -0
 508              		.cfi_startproc
 509              		@ args = 0, pretend = 0, frame = 0
 510              		@ frame_needed = 0, uses_anonymous_args = 0
 511 0000 38B5     		push	{r3, r4, r5, lr}
 512              	.LCFI14:
 513              		.cfi_def_cfa_offset 16
 514              		.cfi_offset 3, -16
 515              		.cfi_offset 4, -12
 516              		.cfi_offset 5, -8
 517              		.cfi_offset 14, -4
 649:Src/main.c    ****   HAL_DBG_TRACE_INFO("Resetting LR1110... ");
 518              		.loc 1 649 3 view .LVU112
 519              		.loc 1 649 3 view .LVU113
 520 0002 134D     		ldr	r5, .L25
 521 0004 2846     		mov	r0, r5
 522 0006 FFF7FEFF 		bl	hal_mcu_trace_print
 523              	.LVL28:
 524              		.loc 1 649 3 view .LVU114
 525 000a 1248     		ldr	r0, .L25+4
 526 000c FFF7FEFF 		bl	hal_mcu_trace_print
 527              	.LVL29:
 528              		.loc 1 649 3 view .LVU115
 529 0010 1148     		ldr	r0, .L25+8
 530 0012 FFF7FEFF 		bl	hal_mcu_trace_print
 531              	.LVL30:
 532              		.loc 1 649 3 view .LVU116
 533 0016 114C     		ldr	r4, .L25+12
 534 0018 2046     		mov	r0, r4
 535 001a FFF7FEFF 		bl	hal_mcu_trace_print
 536              	.LVL31:
 537              		.loc 1 649 3 view .LVU117
 538              		.loc 1 649 45 view .LVU118
ARM GAS  /tmp/ccK8WG6y.s 			page 22


 650:Src/main.c    ****   HAL_GPIO_WritePin(RESET_GPIO_Port, RESET_Pin, GPIO_PIN_RESET);
 539              		.loc 1 650 3 view .LVU119
 540 001e 0022     		movs	r2, #0
 541 0020 0121     		movs	r1, #1
 542 0022 4FF09040 		mov	r0, #1207959552
 543 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 544              	.LVL32:
 651:Src/main.c    ****   HAL_Delay(100);
 545              		.loc 1 651 3 view .LVU120
 546 002a 6420     		movs	r0, #100
 547 002c FFF7FEFF 		bl	HAL_Delay
 548              	.LVL33:
 652:Src/main.c    ****   HAL_GPIO_WritePin(RESET_GPIO_Port, RESET_Pin, GPIO_PIN_SET);
 549              		.loc 1 652 3 view .LVU121
 550 0030 0122     		movs	r2, #1
 551 0032 1146     		mov	r1, r2
 552 0034 4FF09040 		mov	r0, #1207959552
 553 0038 FFF7FEFF 		bl	HAL_GPIO_WritePin
 554              	.LVL34:
 653:Src/main.c    ****   HAL_DBG_TRACE_MSG_COLOR("DONE\r\n", HAL_DBG_TRACE_COLOR_GREEN);
 555              		.loc 1 653 3 view .LVU122
 556              		.loc 1 653 3 view .LVU123
 557 003c 2846     		mov	r0, r5
 558 003e FFF7FEFF 		bl	hal_mcu_trace_print
 559              	.LVL35:
 560              		.loc 1 653 3 view .LVU124
 561 0042 0748     		ldr	r0, .L25+16
 562 0044 FFF7FEFF 		bl	hal_mcu_trace_print
 563              	.LVL36:
 564              		.loc 1 653 3 view .LVU125
 565 0048 2046     		mov	r0, r4
 566 004a FFF7FEFF 		bl	hal_mcu_trace_print
 567              	.LVL37:
 568              		.loc 1 653 3 view .LVU126
 569              		.loc 1 653 65 view .LVU127
 654:Src/main.c    **** }
 570              		.loc 1 654 1 is_stmt 0 view .LVU128
 571 004e 38BD     		pop	{r3, r4, r5, pc}
 572              	.L26:
 573              		.align	2
 574              	.L25:
 575 0050 00000000 		.word	.LC0
 576 0054 08000000 		.word	.LC1
 577 0058 10000000 		.word	.LC2
 578 005c 28000000 		.word	.LC3
 579 0060 30000000 		.word	.LC4
 580              		.cfi_endproc
 581              	.LFE449:
 583              		.section	.rodata.setupTCXO.str1.4,"aMS",%progbits,1
 584              		.align	2
 585              	.LC5:
 586 0000 53657474 		.ascii	"Setting up TCXO mode... \000"
 586      696E6720 
 586      75702054 
 586      43584F20 
 586      6D6F6465 
 587 0019 000000   		.align	2
ARM GAS  /tmp/ccK8WG6y.s 			page 23


 588              	.LC6:
 589 001c 1B5B303B 		.ascii	"\033[0;31m\000"
 589      33316D00 
 590              		.align	2
 591              	.LC7:
 592 0024 4552524F 		.ascii	"ERROR: \000"
 592      523A2000 
 593              		.align	2
 594              	.LC8:
 595 002c 4661696C 		.ascii	"Failed to set TCXO mode\015\012\000"
 595      65642074 
 595      6F207365 
 595      74205443 
 595      584F206D 
 596              		.section	.text.setupTCXO,"ax",%progbits
 597              		.align	1
 598              		.syntax unified
 599              		.thumb
 600              		.thumb_func
 601              		.fpu fpv4-sp-d16
 603              	setupTCXO:
 604              	.LVL38:
 605              	.LFB450:
 655:Src/main.c    **** 
 656:Src/main.c    **** void setupTCXO( const void* context ) {
 606              		.loc 1 656 39 is_stmt 1 view -0
 607              		.cfi_startproc
 608              		@ args = 0, pretend = 0, frame = 8
 609              		@ frame_needed = 0, uses_anonymous_args = 0
 610              		.loc 1 656 39 is_stmt 0 view .LVU130
 611 0000 10B5     		push	{r4, lr}
 612              	.LCFI15:
 613              		.cfi_def_cfa_offset 8
 614              		.cfi_offset 4, -8
 615              		.cfi_offset 14, -4
 616 0002 82B0     		sub	sp, sp, #8
 617              	.LCFI16:
 618              		.cfi_def_cfa_offset 16
 619 0004 0446     		mov	r4, r0
 657:Src/main.c    ****   HAL_DBG_TRACE_INFO( "Setting up TCXO mode... " );
 620              		.loc 1 657 3 is_stmt 1 view .LVU131
 621              		.loc 1 657 3 view .LVU132
 622 0006 1E48     		ldr	r0, .L31
 623              	.LVL39:
 624              		.loc 1 657 3 is_stmt 0 view .LVU133
 625 0008 FFF7FEFF 		bl	hal_mcu_trace_print
 626              	.LVL40:
 627              		.loc 1 657 3 is_stmt 1 view .LVU134
 628 000c 1D48     		ldr	r0, .L31+4
 629 000e FFF7FEFF 		bl	hal_mcu_trace_print
 630              	.LVL41:
 631              		.loc 1 657 3 view .LVU135
 632 0012 1D48     		ldr	r0, .L31+8
 633 0014 FFF7FEFF 		bl	hal_mcu_trace_print
 634              	.LVL42:
 635              		.loc 1 657 3 view .LVU136
 636 0018 1C48     		ldr	r0, .L31+12
ARM GAS  /tmp/ccK8WG6y.s 			page 24


 637 001a FFF7FEFF 		bl	hal_mcu_trace_print
 638              	.LVL43:
 639              		.loc 1 657 3 view .LVU137
 640              		.loc 1 657 51 view .LVU138
 658:Src/main.c    **** 
 659:Src/main.c    ****   uint8_t cbuffer[LR1110_SET_TCXO_MODE_CMD_LENGTH];
 641              		.loc 1 659 3 view .LVU139
 660:Src/main.c    **** 
 661:Src/main.c    ****   cbuffer[0] = LR1110_GROUP_ID_SYSTEM;
 642              		.loc 1 661 3 view .LVU140
 643              		.loc 1 661 14 is_stmt 0 view .LVU141
 644 001e 0123     		movs	r3, #1
 645 0020 8DF80030 		strb	r3, [sp]
 662:Src/main.c    ****   cbuffer[1] = LR1110_SET_TCXO_MODE_CMD;
 646              		.loc 1 662 3 is_stmt 1 view .LVU142
 647              		.loc 1 662 14 is_stmt 0 view .LVU143
 648 0024 1723     		movs	r3, #23
 649 0026 8DF80130 		strb	r3, [sp, #1]
 663:Src/main.c    **** 
 664:Src/main.c    ****   cbuffer[2] = ( uint8_t ) LR1110_TCXO_CTRL_1_8V;
 650              		.loc 1 664 3 is_stmt 1 view .LVU144
 651              		.loc 1 664 14 is_stmt 0 view .LVU145
 652 002a 0223     		movs	r3, #2
 653 002c 8DF80230 		strb	r3, [sp, #2]
 665:Src/main.c    **** 
 666:Src/main.c    ****   const uint32_t timeout = ( 5 * 1000 ) / 30.52;  // BOARD_TCXO_WAKEUP_TIME = 5
 654              		.loc 1 666 3 is_stmt 1 view .LVU146
 655              	.LVL44:
 667:Src/main.c    **** 
 668:Src/main.c    ****   cbuffer[3] = ( uint8_t )( timeout >> 16 );
 656              		.loc 1 668 3 view .LVU147
 657              		.loc 1 668 14 is_stmt 0 view .LVU148
 658 0030 0023     		movs	r3, #0
 659 0032 8DF80330 		strb	r3, [sp, #3]
 669:Src/main.c    ****   cbuffer[4] = ( uint8_t )( timeout >> 8 );
 660              		.loc 1 669 3 is_stmt 1 view .LVU149
 661              		.loc 1 669 14 is_stmt 0 view .LVU150
 662 0036 8DF80430 		strb	r3, [sp, #4]
 670:Src/main.c    ****   cbuffer[5] = ( uint8_t )( timeout >> 0 );
 663              		.loc 1 670 3 is_stmt 1 view .LVU151
 664              		.loc 1 670 14 is_stmt 0 view .LVU152
 665 003a A323     		movs	r3, #163
 666 003c 8DF80530 		strb	r3, [sp, #5]
 671:Src/main.c    **** 
 672:Src/main.c    ****   if (lr1110_spi_write( ((radio_t*)context)->spi, cbuffer, LR1110_SET_TCXO_MODE_CMD_LENGTH, 1000 ) 
 667              		.loc 1 672 3 is_stmt 1 view .LVU153
 668              		.loc 1 672 7 is_stmt 0 view .LVU154
 669 0040 4FF47A73 		mov	r3, #1000
 670 0044 0622     		movs	r2, #6
 671 0046 6946     		mov	r1, sp
 672 0048 2068     		ldr	r0, [r4]
 673 004a FFF7FEFF 		bl	lr1110_spi_write
 674              	.LVL45:
 675              		.loc 1 672 6 view .LVU155
 676 004e 50B9     		cbnz	r0, .L28
 673:Src/main.c    ****     HAL_DBG_TRACE_MSG_COLOR("DONE\r\n", HAL_DBG_TRACE_COLOR_GREEN);
 677              		.loc 1 673 5 is_stmt 1 view .LVU156
ARM GAS  /tmp/ccK8WG6y.s 			page 25


 678              		.loc 1 673 5 view .LVU157
 679 0050 0B48     		ldr	r0, .L31
 680 0052 FFF7FEFF 		bl	hal_mcu_trace_print
 681              	.LVL46:
 682              		.loc 1 673 5 view .LVU158
 683 0056 0E48     		ldr	r0, .L31+16
 684 0058 FFF7FEFF 		bl	hal_mcu_trace_print
 685              	.LVL47:
 686              		.loc 1 673 5 view .LVU159
 687 005c 0B48     		ldr	r0, .L31+12
 688 005e FFF7FEFF 		bl	hal_mcu_trace_print
 689              	.LVL48:
 690              		.loc 1 673 5 view .LVU160
 691              		.loc 1 673 67 view .LVU161
 692              	.L27:
 674:Src/main.c    ****   } else {
 675:Src/main.c    ****     HAL_DBG_TRACE_ERROR("Failed to set TCXO mode\r\n");
 676:Src/main.c    ****   }
 677:Src/main.c    **** }
 693              		.loc 1 677 1 is_stmt 0 view .LVU162
 694 0062 02B0     		add	sp, sp, #8
 695              	.LCFI17:
 696              		.cfi_remember_state
 697              		.cfi_def_cfa_offset 8
 698              		@ sp needed
 699 0064 10BD     		pop	{r4, pc}
 700              	.LVL49:
 701              	.L28:
 702              	.LCFI18:
 703              		.cfi_restore_state
 675:Src/main.c    ****   }
 704              		.loc 1 675 5 is_stmt 1 view .LVU163
 675:Src/main.c    ****   }
 705              		.loc 1 675 5 view .LVU164
 706 0066 0B48     		ldr	r0, .L31+20
 707 0068 FFF7FEFF 		bl	hal_mcu_trace_print
 708              	.LVL50:
 675:Src/main.c    ****   }
 709              		.loc 1 675 5 view .LVU165
 710 006c 0A48     		ldr	r0, .L31+24
 711 006e FFF7FEFF 		bl	hal_mcu_trace_print
 712              	.LVL51:
 675:Src/main.c    ****   }
 713              		.loc 1 675 5 view .LVU166
 714 0072 0A48     		ldr	r0, .L31+28
 715 0074 FFF7FEFF 		bl	hal_mcu_trace_print
 716              	.LVL52:
 675:Src/main.c    ****   }
 717              		.loc 1 675 5 view .LVU167
 718 0078 0448     		ldr	r0, .L31+12
 719 007a FFF7FEFF 		bl	hal_mcu_trace_print
 720              	.LVL53:
 675:Src/main.c    ****   }
 721              		.loc 1 675 5 view .LVU168
 675:Src/main.c    ****   }
 722              		.loc 1 675 55 view .LVU169
 723              		.loc 1 677 1 is_stmt 0 view .LVU170
ARM GAS  /tmp/ccK8WG6y.s 			page 26


 724 007e F0E7     		b	.L27
 725              	.L32:
 726              		.align	2
 727              	.L31:
 728 0080 00000000 		.word	.LC0
 729 0084 08000000 		.word	.LC1
 730 0088 00000000 		.word	.LC5
 731 008c 28000000 		.word	.LC3
 732 0090 30000000 		.word	.LC4
 733 0094 1C000000 		.word	.LC6
 734 0098 24000000 		.word	.LC7
 735 009c 2C000000 		.word	.LC8
 736              		.cfi_endproc
 737              	.LFE450:
 739              		.section	.rodata.getLR1110_Bootloader_Version.str1.4,"aMS",%progbits,1
 740              		.align	2
 741              	.LC9:
 742 0000 47657474 		.ascii	"Getting LR1110 version... \000"
 742      696E6720 
 742      4C523131 
 742      31302076 
 742      65727369 
 743 001b 00       		.align	2
 744              	.LC10:
 745 001c 4C523131 		.ascii	"LR1110 bootloader hardware version: %d\015\012\000"
 745      31302062 
 745      6F6F746C 
 745      6F616465 
 745      72206861 
 746 0045 000000   		.align	2
 747              	.LC11:
 748 0048 4C523131 		.ascii	"LR1110 bootloader type: LR1110\015\012\000"
 748      31302062 
 748      6F6F746C 
 748      6F616465 
 748      72207479 
 749 0069 000000   		.align	2
 750              	.LC12:
 751 006c 4C523131 		.ascii	"LR1110 bootloader type: LR1120\015\012\000"
 751      31302062 
 751      6F6F746C 
 751      6F616465 
 751      72207479 
 752 008d 000000   		.align	2
 753              	.LC13:
 754 0090 4C523131 		.ascii	"LR1110 bootloader type: LR1121\015\012\000"
 754      31302062 
 754      6F6F746C 
 754      6F616465 
 754      72207479 
 755 00b1 000000   		.align	2
 756              	.LC14:
 757 00b4 4C523131 		.ascii	"LR1110 bootloader firmware version: %d.%d\015\012\000"
 757      31302062 
 757      6F6F746C 
 757      6F616465 
 757      72206669 
ARM GAS  /tmp/ccK8WG6y.s 			page 27


 758              		.align	2
 759              	.LC15:
 760 00e0 0D0A4661 		.ascii	"\015\012Failed to get LR1110 bootloader version\015"
 760      696C6564 
 760      20746F20 
 760      67657420 
 760      4C523131 
 761 010a 0A00     		.ascii	"\012\000"
 762              		.section	.text.getLR1110_Bootloader_Version,"ax",%progbits
 763              		.align	1
 764              		.syntax unified
 765              		.thumb
 766              		.thumb_func
 767              		.fpu fpv4-sp-d16
 769              	getLR1110_Bootloader_Version:
 770              	.LVL54:
 771              	.LFB444:
 535:Src/main.c    ****   HAL_DBG_TRACE_INFO("Getting LR1110 version... ");
 772              		.loc 1 535 58 is_stmt 1 view -0
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 8
 775              		@ frame_needed = 0, uses_anonymous_args = 0
 535:Src/main.c    ****   HAL_DBG_TRACE_INFO("Getting LR1110 version... ");
 776              		.loc 1 535 58 is_stmt 0 view .LVU172
 777 0000 30B5     		push	{r4, r5, lr}
 778              	.LCFI19:
 779              		.cfi_def_cfa_offset 12
 780              		.cfi_offset 4, -12
 781              		.cfi_offset 5, -8
 782              		.cfi_offset 14, -4
 783 0002 85B0     		sub	sp, sp, #20
 784              	.LCFI20:
 785              		.cfi_def_cfa_offset 32
 786 0004 0446     		mov	r4, r0
 536:Src/main.c    **** 
 787              		.loc 1 536 3 is_stmt 1 view .LVU173
 536:Src/main.c    **** 
 788              		.loc 1 536 3 view .LVU174
 789 0006 4248     		ldr	r0, .L41
 790              	.LVL55:
 536:Src/main.c    **** 
 791              		.loc 1 536 3 is_stmt 0 view .LVU175
 792 0008 FFF7FEFF 		bl	hal_mcu_trace_print
 793              	.LVL56:
 536:Src/main.c    **** 
 794              		.loc 1 536 3 is_stmt 1 view .LVU176
 795 000c 4148     		ldr	r0, .L41+4
 796 000e FFF7FEFF 		bl	hal_mcu_trace_print
 797              	.LVL57:
 536:Src/main.c    **** 
 798              		.loc 1 536 3 view .LVU177
 799 0012 4148     		ldr	r0, .L41+8
 800 0014 FFF7FEFF 		bl	hal_mcu_trace_print
 801              	.LVL58:
 536:Src/main.c    **** 
 802              		.loc 1 536 3 view .LVU178
 803 0018 4048     		ldr	r0, .L41+12
ARM GAS  /tmp/ccK8WG6y.s 			page 28


 804 001a FFF7FEFF 		bl	hal_mcu_trace_print
 805              	.LVL59:
 536:Src/main.c    **** 
 806              		.loc 1 536 3 view .LVU179
 536:Src/main.c    **** 
 807              		.loc 1 536 51 view .LVU180
 538:Src/main.c    ****   uint8_t rbuffer[LR1110_VERSION_LENGTH] = { 0 };
 808              		.loc 1 538 3 view .LVU181
 539:Src/main.c    **** 
 809              		.loc 1 539 3 view .LVU182
 539:Src/main.c    **** 
 810              		.loc 1 539 11 is_stmt 0 view .LVU183
 811 001e 0023     		movs	r3, #0
 812 0020 0293     		str	r3, [sp, #8]
 541:Src/main.c    ****   cbuffer[1] = ( uint8_t )( LR1110_GET_VERSION_OC >> 0 );
 813              		.loc 1 541 3 is_stmt 1 view .LVU184
 541:Src/main.c    ****   cbuffer[1] = ( uint8_t )( LR1110_GET_VERSION_OC >> 0 );
 814              		.loc 1 541 14 is_stmt 0 view .LVU185
 815 0022 0123     		movs	r3, #1
 816 0024 8DF80C30 		strb	r3, [sp, #12]
 542:Src/main.c    ****   
 817              		.loc 1 542 3 is_stmt 1 view .LVU186
 542:Src/main.c    ****   
 818              		.loc 1 542 14 is_stmt 0 view .LVU187
 819 0028 8DF80D30 		strb	r3, [sp, #13]
 544:Src/main.c    ****     HAL_DBG_TRACE_MSG_COLOR("DONE\r\n", HAL_DBG_TRACE_COLOR_GREEN);
 820              		.loc 1 544 3 is_stmt 1 view .LVU188
 544:Src/main.c    ****     HAL_DBG_TRACE_MSG_COLOR("DONE\r\n", HAL_DBG_TRACE_COLOR_GREEN);
 821              		.loc 1 544 7 is_stmt 0 view .LVU189
 822 002c 0423     		movs	r3, #4
 823 002e 0093     		str	r3, [sp]
 824 0030 02AB     		add	r3, sp, #8
 825 0032 0222     		movs	r2, #2
 826 0034 03A9     		add	r1, sp, #12
 827 0036 2046     		mov	r0, r4
 828 0038 FFF7FEFF 		bl	lr1110_spi_read
 829              	.LVL60:
 544:Src/main.c    ****     HAL_DBG_TRACE_MSG_COLOR("DONE\r\n", HAL_DBG_TRACE_COLOR_GREEN);
 830              		.loc 1 544 6 view .LVU190
 831 003c 0028     		cmp	r0, #0
 832 003e 59D1     		bne	.L34
 545:Src/main.c    **** 
 833              		.loc 1 545 5 is_stmt 1 view .LVU191
 545:Src/main.c    **** 
 834              		.loc 1 545 5 view .LVU192
 835 0040 334D     		ldr	r5, .L41
 836 0042 2846     		mov	r0, r5
 837 0044 FFF7FEFF 		bl	hal_mcu_trace_print
 838              	.LVL61:
 545:Src/main.c    **** 
 839              		.loc 1 545 5 view .LVU193
 840 0048 3548     		ldr	r0, .L41+16
 841 004a FFF7FEFF 		bl	hal_mcu_trace_print
 842              	.LVL62:
 545:Src/main.c    **** 
 843              		.loc 1 545 5 view .LVU194
 844 004e 334C     		ldr	r4, .L41+12
ARM GAS  /tmp/ccK8WG6y.s 			page 29


 845              	.LVL63:
 545:Src/main.c    **** 
 846              		.loc 1 545 5 is_stmt 0 view .LVU195
 847 0050 2046     		mov	r0, r4
 848 0052 FFF7FEFF 		bl	hal_mcu_trace_print
 849              	.LVL64:
 545:Src/main.c    **** 
 850              		.loc 1 545 5 is_stmt 1 view .LVU196
 545:Src/main.c    **** 
 851              		.loc 1 545 67 view .LVU197
 547:Src/main.c    ****     switch (rbuffer[1]) {
 852              		.loc 1 547 5 view .LVU198
 547:Src/main.c    ****     switch (rbuffer[1]) {
 853              		.loc 1 547 5 view .LVU199
 854 0056 2846     		mov	r0, r5
 855 0058 FFF7FEFF 		bl	hal_mcu_trace_print
 856              	.LVL65:
 547:Src/main.c    ****     switch (rbuffer[1]) {
 857              		.loc 1 547 5 view .LVU200
 858 005c 2D48     		ldr	r0, .L41+4
 859 005e FFF7FEFF 		bl	hal_mcu_trace_print
 860              	.LVL66:
 547:Src/main.c    ****     switch (rbuffer[1]) {
 861              		.loc 1 547 5 view .LVU201
 862 0062 9DF80810 		ldrb	r1, [sp, #8]	@ zero_extendqisi2
 863 0066 2F48     		ldr	r0, .L41+20
 864 0068 FFF7FEFF 		bl	hal_mcu_trace_print
 865              	.LVL67:
 547:Src/main.c    ****     switch (rbuffer[1]) {
 866              		.loc 1 547 5 view .LVU202
 867 006c 2046     		mov	r0, r4
 868 006e FFF7FEFF 		bl	hal_mcu_trace_print
 869              	.LVL68:
 547:Src/main.c    ****     switch (rbuffer[1]) {
 870              		.loc 1 547 5 view .LVU203
 547:Src/main.c    ****     switch (rbuffer[1]) {
 871              		.loc 1 547 81 view .LVU204
 548:Src/main.c    ****         case 1:
 872              		.loc 1 548 5 view .LVU205
 548:Src/main.c    ****         case 1:
 873              		.loc 1 548 20 is_stmt 0 view .LVU206
 874 0072 9DF80930 		ldrb	r3, [sp, #9]	@ zero_extendqisi2
 548:Src/main.c    ****         case 1:
 875              		.loc 1 548 5 view .LVU207
 876 0076 022B     		cmp	r3, #2
 877 0078 22D0     		beq	.L35
 878 007a 032B     		cmp	r3, #3
 879 007c 2DD0     		beq	.L36
 880 007e 012B     		cmp	r3, #1
 881 0080 11D0     		beq	.L40
 882              	.L37:
 561:Src/main.c    ****   } else {
 883              		.loc 1 561 5 is_stmt 1 view .LVU208
 561:Src/main.c    ****   } else {
 884              		.loc 1 561 5 view .LVU209
 885 0082 2348     		ldr	r0, .L41
 886 0084 FFF7FEFF 		bl	hal_mcu_trace_print
ARM GAS  /tmp/ccK8WG6y.s 			page 30


 887              	.LVL69:
 561:Src/main.c    ****   } else {
 888              		.loc 1 561 5 view .LVU210
 889 0088 2248     		ldr	r0, .L41+4
 890 008a FFF7FEFF 		bl	hal_mcu_trace_print
 891              	.LVL70:
 561:Src/main.c    ****   } else {
 892              		.loc 1 561 5 view .LVU211
 893 008e 9DF80B20 		ldrb	r2, [sp, #11]	@ zero_extendqisi2
 894 0092 9DF80A10 		ldrb	r1, [sp, #10]	@ zero_extendqisi2
 895 0096 2448     		ldr	r0, .L41+24
 896 0098 FFF7FEFF 		bl	hal_mcu_trace_print
 897              	.LVL71:
 561:Src/main.c    ****   } else {
 898              		.loc 1 561 5 view .LVU212
 899 009c 1F48     		ldr	r0, .L41+12
 900 009e FFF7FEFF 		bl	hal_mcu_trace_print
 901              	.LVL72:
 561:Src/main.c    ****   } else {
 902              		.loc 1 561 5 view .LVU213
 561:Src/main.c    ****   } else {
 903              		.loc 1 561 96 view .LVU214
 904              	.L33:
 565:Src/main.c    **** 
 905              		.loc 1 565 1 is_stmt 0 view .LVU215
 906 00a2 05B0     		add	sp, sp, #20
 907              	.LCFI21:
 908              		.cfi_remember_state
 909              		.cfi_def_cfa_offset 12
 910              		@ sp needed
 911 00a4 30BD     		pop	{r4, r5, pc}
 912              	.L40:
 913              	.LCFI22:
 914              		.cfi_restore_state
 550:Src/main.c    ****             break;
 915              		.loc 1 550 13 is_stmt 1 view .LVU216
 550:Src/main.c    ****             break;
 916              		.loc 1 550 13 view .LVU217
 917 00a6 2846     		mov	r0, r5
 918 00a8 FFF7FEFF 		bl	hal_mcu_trace_print
 919              	.LVL73:
 550:Src/main.c    ****             break;
 920              		.loc 1 550 13 view .LVU218
 921 00ac 1948     		ldr	r0, .L41+4
 922 00ae FFF7FEFF 		bl	hal_mcu_trace_print
 923              	.LVL74:
 550:Src/main.c    ****             break;
 924              		.loc 1 550 13 view .LVU219
 925 00b2 1E48     		ldr	r0, .L41+28
 926 00b4 FFF7FEFF 		bl	hal_mcu_trace_print
 927              	.LVL75:
 550:Src/main.c    ****             break;
 928              		.loc 1 550 13 view .LVU220
 929 00b8 2046     		mov	r0, r4
 930 00ba FFF7FEFF 		bl	hal_mcu_trace_print
 931              	.LVL76:
 550:Src/main.c    ****             break;
ARM GAS  /tmp/ccK8WG6y.s 			page 31


 932              		.loc 1 550 13 view .LVU221
 550:Src/main.c    ****             break;
 933              		.loc 1 550 69 view .LVU222
 551:Src/main.c    ****         case 2:
 934              		.loc 1 551 13 view .LVU223
 935 00be E0E7     		b	.L37
 936              	.L35:
 553:Src/main.c    ****             break;
 937              		.loc 1 553 13 view .LVU224
 553:Src/main.c    ****             break;
 938              		.loc 1 553 13 view .LVU225
 939 00c0 1348     		ldr	r0, .L41
 940 00c2 FFF7FEFF 		bl	hal_mcu_trace_print
 941              	.LVL77:
 553:Src/main.c    ****             break;
 942              		.loc 1 553 13 view .LVU226
 943 00c6 1348     		ldr	r0, .L41+4
 944 00c8 FFF7FEFF 		bl	hal_mcu_trace_print
 945              	.LVL78:
 553:Src/main.c    ****             break;
 946              		.loc 1 553 13 view .LVU227
 947 00cc 1848     		ldr	r0, .L41+32
 948 00ce FFF7FEFF 		bl	hal_mcu_trace_print
 949              	.LVL79:
 553:Src/main.c    ****             break;
 950              		.loc 1 553 13 view .LVU228
 951 00d2 1248     		ldr	r0, .L41+12
 952 00d4 FFF7FEFF 		bl	hal_mcu_trace_print
 953              	.LVL80:
 553:Src/main.c    ****             break;
 954              		.loc 1 553 13 view .LVU229
 553:Src/main.c    ****             break;
 955              		.loc 1 553 69 view .LVU230
 554:Src/main.c    ****         case 3:
 956              		.loc 1 554 13 view .LVU231
 957 00d8 D3E7     		b	.L37
 958              	.L36:
 556:Src/main.c    ****             break;
 959              		.loc 1 556 13 view .LVU232
 556:Src/main.c    ****             break;
 960              		.loc 1 556 13 view .LVU233
 961 00da 0D48     		ldr	r0, .L41
 962 00dc FFF7FEFF 		bl	hal_mcu_trace_print
 963              	.LVL81:
 556:Src/main.c    ****             break;
 964              		.loc 1 556 13 view .LVU234
 965 00e0 0C48     		ldr	r0, .L41+4
 966 00e2 FFF7FEFF 		bl	hal_mcu_trace_print
 967              	.LVL82:
 556:Src/main.c    ****             break;
 968              		.loc 1 556 13 view .LVU235
 969 00e6 1348     		ldr	r0, .L41+36
 970 00e8 FFF7FEFF 		bl	hal_mcu_trace_print
 971              	.LVL83:
 556:Src/main.c    ****             break;
 972              		.loc 1 556 13 view .LVU236
 973 00ec 0B48     		ldr	r0, .L41+12
ARM GAS  /tmp/ccK8WG6y.s 			page 32


 974 00ee FFF7FEFF 		bl	hal_mcu_trace_print
 975              	.LVL84:
 556:Src/main.c    ****             break;
 976              		.loc 1 556 13 view .LVU237
 556:Src/main.c    ****             break;
 977              		.loc 1 556 69 view .LVU238
 557:Src/main.c    ****         default:
 978              		.loc 1 557 13 view .LVU239
 979 00f2 C6E7     		b	.L37
 980              	.LVL85:
 981              	.L34:
 563:Src/main.c    ****   }
 982              		.loc 1 563 5 view .LVU240
 563:Src/main.c    ****   }
 983              		.loc 1 563 5 view .LVU241
 984 00f4 1048     		ldr	r0, .L41+40
 985 00f6 FFF7FEFF 		bl	hal_mcu_trace_print
 986              	.LVL86:
 563:Src/main.c    ****   }
 987              		.loc 1 563 5 view .LVU242
 988 00fa 1048     		ldr	r0, .L41+44
 989 00fc FFF7FEFF 		bl	hal_mcu_trace_print
 990              	.LVL87:
 563:Src/main.c    ****   }
 991              		.loc 1 563 5 view .LVU243
 992 0100 0F48     		ldr	r0, .L41+48
 993 0102 FFF7FEFF 		bl	hal_mcu_trace_print
 994              	.LVL88:
 563:Src/main.c    ****   }
 995              		.loc 1 563 5 view .LVU244
 996 0106 0548     		ldr	r0, .L41+12
 997 0108 FFF7FEFF 		bl	hal_mcu_trace_print
 998              	.LVL89:
 563:Src/main.c    ****   }
 999              		.loc 1 563 5 view .LVU245
 563:Src/main.c    ****   }
 1000              		.loc 1 563 75 view .LVU246
 565:Src/main.c    **** 
 1001              		.loc 1 565 1 is_stmt 0 view .LVU247
 1002 010c C9E7     		b	.L33
 1003              	.L42:
 1004 010e 00BF     		.align	2
 1005              	.L41:
 1006 0110 00000000 		.word	.LC0
 1007 0114 08000000 		.word	.LC1
 1008 0118 00000000 		.word	.LC9
 1009 011c 28000000 		.word	.LC3
 1010 0120 30000000 		.word	.LC4
 1011 0124 1C000000 		.word	.LC10
 1012 0128 B4000000 		.word	.LC14
 1013 012c 48000000 		.word	.LC11
 1014 0130 6C000000 		.word	.LC12
 1015 0134 90000000 		.word	.LC13
 1016 0138 1C000000 		.word	.LC6
 1017 013c 24000000 		.word	.LC7
 1018 0140 E0000000 		.word	.LC15
 1019              		.cfi_endproc
ARM GAS  /tmp/ccK8WG6y.s 			page 33


 1020              	.LFE444:
 1022              		.section	.rodata.getLR1110_WiFi_Version.str1.4,"aMS",%progbits,1
 1023              		.align	2
 1024              	.LC16:
 1025 0000 47657474 		.ascii	"Getting Wi-Fi version... \000"
 1025      696E6720 
 1025      57692D46 
 1025      69207665 
 1025      7273696F 
 1026 001a 0000     		.align	2
 1027              	.LC17:
 1028 001c 57692D46 		.ascii	"Wi-Fi firmware version: %d.%d\015\012\000"
 1028      69206669 
 1028      726D7761 
 1028      72652076 
 1028      65727369 
 1029              		.align	2
 1030              	.LC18:
 1031 003c 4661696C 		.ascii	"Failed to get Wi-Fi version\015\012\000"
 1031      65642074 
 1031      6F206765 
 1031      74205769 
 1031      2D466920 
 1032              		.section	.text.getLR1110_WiFi_Version,"ax",%progbits
 1033              		.align	1
 1034              		.syntax unified
 1035              		.thumb
 1036              		.thumb_func
 1037              		.fpu fpv4-sp-d16
 1039              	getLR1110_WiFi_Version:
 1040              	.LVL90:
 1041              	.LFB447:
 612:Src/main.c    ****   HAL_DBG_TRACE_INFO("Getting Wi-Fi version... ");
 1042              		.loc 1 612 52 is_stmt 1 view -0
 1043              		.cfi_startproc
 1044              		@ args = 0, pretend = 0, frame = 8
 1045              		@ frame_needed = 0, uses_anonymous_args = 0
 612:Src/main.c    ****   HAL_DBG_TRACE_INFO("Getting Wi-Fi version... ");
 1046              		.loc 1 612 52 is_stmt 0 view .LVU249
 1047 0000 30B5     		push	{r4, r5, lr}
 1048              	.LCFI23:
 1049              		.cfi_def_cfa_offset 12
 1050              		.cfi_offset 4, -12
 1051              		.cfi_offset 5, -8
 1052              		.cfi_offset 14, -4
 1053 0002 85B0     		sub	sp, sp, #20
 1054              	.LCFI24:
 1055              		.cfi_def_cfa_offset 32
 1056 0004 0446     		mov	r4, r0
 613:Src/main.c    **** 
 1057              		.loc 1 613 3 is_stmt 1 view .LVU250
 613:Src/main.c    **** 
 1058              		.loc 1 613 3 view .LVU251
 1059 0006 2348     		ldr	r0, .L47
 1060              	.LVL91:
 613:Src/main.c    **** 
 1061              		.loc 1 613 3 is_stmt 0 view .LVU252
ARM GAS  /tmp/ccK8WG6y.s 			page 34


 1062 0008 FFF7FEFF 		bl	hal_mcu_trace_print
 1063              	.LVL92:
 613:Src/main.c    **** 
 1064              		.loc 1 613 3 is_stmt 1 view .LVU253
 1065 000c 2248     		ldr	r0, .L47+4
 1066 000e FFF7FEFF 		bl	hal_mcu_trace_print
 1067              	.LVL93:
 613:Src/main.c    **** 
 1068              		.loc 1 613 3 view .LVU254
 1069 0012 2248     		ldr	r0, .L47+8
 1070 0014 FFF7FEFF 		bl	hal_mcu_trace_print
 1071              	.LVL94:
 613:Src/main.c    **** 
 1072              		.loc 1 613 3 view .LVU255
 1073 0018 2148     		ldr	r0, .L47+12
 1074 001a FFF7FEFF 		bl	hal_mcu_trace_print
 1075              	.LVL95:
 613:Src/main.c    **** 
 1076              		.loc 1 613 3 view .LVU256
 613:Src/main.c    **** 
 1077              		.loc 1 613 50 view .LVU257
 615:Src/main.c    ****   uint8_t rbuffer[LR1110_WIFI_VERSION_LENGTH] = { 0 };
 1078              		.loc 1 615 3 view .LVU258
 616:Src/main.c    **** 
 1079              		.loc 1 616 3 view .LVU259
 616:Src/main.c    **** 
 1080              		.loc 1 616 11 is_stmt 0 view .LVU260
 1081 001e 0023     		movs	r3, #0
 1082 0020 ADF80830 		strh	r3, [sp, #8]	@ movhi
 618:Src/main.c    ****   cbuffer[1] = LR1110_WIFI_GET_FIRMWARE_WIFI_VERSION_CMD;
 1083              		.loc 1 618 3 is_stmt 1 view .LVU261
 618:Src/main.c    ****   cbuffer[1] = LR1110_WIFI_GET_FIRMWARE_WIFI_VERSION_CMD;
 1084              		.loc 1 618 14 is_stmt 0 view .LVU262
 1085 0024 0323     		movs	r3, #3
 1086 0026 8DF80C30 		strb	r3, [sp, #12]
 619:Src/main.c    **** 
 1087              		.loc 1 619 3 is_stmt 1 view .LVU263
 619:Src/main.c    **** 
 1088              		.loc 1 619 14 is_stmt 0 view .LVU264
 1089 002a 2023     		movs	r3, #32
 1090 002c 8DF80D30 		strb	r3, [sp, #13]
 621:Src/main.c    ****     HAL_DBG_TRACE_MSG_COLOR("DONE\r\n", HAL_DBG_TRACE_COLOR_GREEN);
 1091              		.loc 1 621 3 is_stmt 1 view .LVU265
 621:Src/main.c    ****     HAL_DBG_TRACE_MSG_COLOR("DONE\r\n", HAL_DBG_TRACE_COLOR_GREEN);
 1092              		.loc 1 621 7 is_stmt 0 view .LVU266
 1093 0030 0222     		movs	r2, #2
 1094 0032 0092     		str	r2, [sp]
 1095 0034 02AB     		add	r3, sp, #8
 1096 0036 03A9     		add	r1, sp, #12
 1097 0038 2046     		mov	r0, r4
 1098 003a FFF7FEFF 		bl	lr1110_spi_read
 1099              	.LVL96:
 621:Src/main.c    ****     HAL_DBG_TRACE_MSG_COLOR("DONE\r\n", HAL_DBG_TRACE_COLOR_GREEN);
 1100              		.loc 1 621 6 view .LVU267
 1101 003e E0B9     		cbnz	r0, .L44
 622:Src/main.c    **** 
 1102              		.loc 1 622 5 is_stmt 1 view .LVU268
ARM GAS  /tmp/ccK8WG6y.s 			page 35


 622:Src/main.c    **** 
 1103              		.loc 1 622 5 view .LVU269
 1104 0040 144D     		ldr	r5, .L47
 1105 0042 2846     		mov	r0, r5
 1106 0044 FFF7FEFF 		bl	hal_mcu_trace_print
 1107              	.LVL97:
 622:Src/main.c    **** 
 1108              		.loc 1 622 5 view .LVU270
 1109 0048 1648     		ldr	r0, .L47+16
 1110 004a FFF7FEFF 		bl	hal_mcu_trace_print
 1111              	.LVL98:
 622:Src/main.c    **** 
 1112              		.loc 1 622 5 view .LVU271
 1113 004e 144C     		ldr	r4, .L47+12
 1114              	.LVL99:
 622:Src/main.c    **** 
 1115              		.loc 1 622 5 is_stmt 0 view .LVU272
 1116 0050 2046     		mov	r0, r4
 1117 0052 FFF7FEFF 		bl	hal_mcu_trace_print
 1118              	.LVL100:
 622:Src/main.c    **** 
 1119              		.loc 1 622 5 is_stmt 1 view .LVU273
 622:Src/main.c    **** 
 1120              		.loc 1 622 67 view .LVU274
 624:Src/main.c    ****   } else {
 1121              		.loc 1 624 5 view .LVU275
 624:Src/main.c    ****   } else {
 1122              		.loc 1 624 5 view .LVU276
 1123 0056 2846     		mov	r0, r5
 1124 0058 FFF7FEFF 		bl	hal_mcu_trace_print
 1125              	.LVL101:
 624:Src/main.c    ****   } else {
 1126              		.loc 1 624 5 view .LVU277
 1127 005c 0E48     		ldr	r0, .L47+4
 1128 005e FFF7FEFF 		bl	hal_mcu_trace_print
 1129              	.LVL102:
 624:Src/main.c    ****   } else {
 1130              		.loc 1 624 5 view .LVU278
 1131 0062 9DF80920 		ldrb	r2, [sp, #9]	@ zero_extendqisi2
 1132 0066 9DF80810 		ldrb	r1, [sp, #8]	@ zero_extendqisi2
 1133 006a 0F48     		ldr	r0, .L47+20
 1134 006c FFF7FEFF 		bl	hal_mcu_trace_print
 1135              	.LVL103:
 624:Src/main.c    ****   } else {
 1136              		.loc 1 624 5 view .LVU279
 1137 0070 2046     		mov	r0, r4
 1138 0072 FFF7FEFF 		bl	hal_mcu_trace_print
 1139              	.LVL104:
 624:Src/main.c    ****   } else {
 1140              		.loc 1 624 5 view .LVU280
 624:Src/main.c    ****   } else {
 1141              		.loc 1 624 84 view .LVU281
 1142              	.L43:
 628:Src/main.c    **** 
 1143              		.loc 1 628 1 is_stmt 0 view .LVU282
 1144 0076 05B0     		add	sp, sp, #20
 1145              	.LCFI25:
ARM GAS  /tmp/ccK8WG6y.s 			page 36


 1146              		.cfi_remember_state
 1147              		.cfi_def_cfa_offset 12
 1148              		@ sp needed
 1149 0078 30BD     		pop	{r4, r5, pc}
 1150              	.LVL105:
 1151              	.L44:
 1152              	.LCFI26:
 1153              		.cfi_restore_state
 626:Src/main.c    ****   }
 1154              		.loc 1 626 5 is_stmt 1 view .LVU283
 626:Src/main.c    ****   }
 1155              		.loc 1 626 5 view .LVU284
 1156 007a 0C48     		ldr	r0, .L47+24
 1157 007c FFF7FEFF 		bl	hal_mcu_trace_print
 1158              	.LVL106:
 626:Src/main.c    ****   }
 1159              		.loc 1 626 5 view .LVU285
 1160 0080 0B48     		ldr	r0, .L47+28
 1161 0082 FFF7FEFF 		bl	hal_mcu_trace_print
 1162              	.LVL107:
 626:Src/main.c    ****   }
 1163              		.loc 1 626 5 view .LVU286
 1164 0086 0B48     		ldr	r0, .L47+32
 1165 0088 FFF7FEFF 		bl	hal_mcu_trace_print
 1166              	.LVL108:
 626:Src/main.c    ****   }
 1167              		.loc 1 626 5 view .LVU287
 1168 008c 0448     		ldr	r0, .L47+12
 1169 008e FFF7FEFF 		bl	hal_mcu_trace_print
 1170              	.LVL109:
 626:Src/main.c    ****   }
 1171              		.loc 1 626 5 view .LVU288
 626:Src/main.c    ****   }
 1172              		.loc 1 626 59 view .LVU289
 628:Src/main.c    **** 
 1173              		.loc 1 628 1 is_stmt 0 view .LVU290
 1174 0092 F0E7     		b	.L43
 1175              	.L48:
 1176              		.align	2
 1177              	.L47:
 1178 0094 00000000 		.word	.LC0
 1179 0098 08000000 		.word	.LC1
 1180 009c 00000000 		.word	.LC16
 1181 00a0 28000000 		.word	.LC3
 1182 00a4 30000000 		.word	.LC4
 1183 00a8 1C000000 		.word	.LC17
 1184 00ac 1C000000 		.word	.LC6
 1185 00b0 24000000 		.word	.LC7
 1186 00b4 3C000000 		.word	.LC18
 1187              		.cfi_endproc
 1188              	.LFE447:
 1190              		.section	.rodata.getLR1110_Chip_EUI.str1.4,"aMS",%progbits,1
 1191              		.align	2
 1192              	.LC19:
 1193 0000 47657474 		.ascii	"Getting LR1110 Chip EUI... \000"
 1193      696E6720 
 1193      4C523131 
ARM GAS  /tmp/ccK8WG6y.s 			page 37


 1193      31302043 
 1193      68697020 
 1194              		.align	2
 1195              	.LC20:
 1196 001c 43686970 		.ascii	"Chip EUI: %02X:%02X:%02X:%02X:%02X:%02X:%02X:%02X\015"
 1196      20455549 
 1196      3A202530 
 1196      32583A25 
 1196      3032583A 
 1197 004e 0A00     		.ascii	"\012\000"
 1198              		.align	2
 1199              	.LC21:
 1200 0050 4661696C 		.ascii	"Failed to get LR1110 Chip EUI\015\012\000"
 1200      65642074 
 1200      6F206765 
 1200      74204C52 
 1200      31313130 
 1201              		.section	.text.getLR1110_Chip_EUI,"ax",%progbits
 1202              		.align	1
 1203              		.syntax unified
 1204              		.thumb
 1205              		.thumb_func
 1206              		.fpu fpv4-sp-d16
 1208              	getLR1110_Chip_EUI:
 1209              	.LVL110:
 1210              	.LFB448:
 630:Src/main.c    ****   HAL_DBG_TRACE_INFO("Getting LR1110 Chip EUI... ");
 1211              		.loc 1 630 48 is_stmt 1 view -0
 1212              		.cfi_startproc
 1213              		@ args = 0, pretend = 0, frame = 16
 1214              		@ frame_needed = 0, uses_anonymous_args = 0
 630:Src/main.c    ****   HAL_DBG_TRACE_INFO("Getting LR1110 Chip EUI... ");
 1215              		.loc 1 630 48 is_stmt 0 view .LVU292
 1216 0000 30B5     		push	{r4, r5, lr}
 1217              	.LCFI27:
 1218              		.cfi_def_cfa_offset 12
 1219              		.cfi_offset 4, -12
 1220              		.cfi_offset 5, -8
 1221              		.cfi_offset 14, -4
 1222 0002 8BB0     		sub	sp, sp, #44
 1223              	.LCFI28:
 1224              		.cfi_def_cfa_offset 56
 1225 0004 0446     		mov	r4, r0
 631:Src/main.c    **** 
 1226              		.loc 1 631 3 is_stmt 1 view .LVU293
 631:Src/main.c    **** 
 1227              		.loc 1 631 3 view .LVU294
 1228 0006 2C48     		ldr	r0, .L53
 1229              	.LVL111:
 631:Src/main.c    **** 
 1230              		.loc 1 631 3 is_stmt 0 view .LVU295
 1231 0008 FFF7FEFF 		bl	hal_mcu_trace_print
 1232              	.LVL112:
 631:Src/main.c    **** 
 1233              		.loc 1 631 3 is_stmt 1 view .LVU296
 1234 000c 2B48     		ldr	r0, .L53+4
 1235 000e FFF7FEFF 		bl	hal_mcu_trace_print
ARM GAS  /tmp/ccK8WG6y.s 			page 38


 1236              	.LVL113:
 631:Src/main.c    **** 
 1237              		.loc 1 631 3 view .LVU297
 1238 0012 2B48     		ldr	r0, .L53+8
 1239 0014 FFF7FEFF 		bl	hal_mcu_trace_print
 1240              	.LVL114:
 631:Src/main.c    **** 
 1241              		.loc 1 631 3 view .LVU298
 1242 0018 2A48     		ldr	r0, .L53+12
 1243 001a FFF7FEFF 		bl	hal_mcu_trace_print
 1244              	.LVL115:
 631:Src/main.c    **** 
 1245              		.loc 1 631 3 view .LVU299
 631:Src/main.c    **** 
 1246              		.loc 1 631 52 view .LVU300
 633:Src/main.c    ****   uint8_t rbuffer[LR1110_CHIP_EUI_LENGTH] = { 0 };
 1247              		.loc 1 633 3 view .LVU301
 634:Src/main.c    **** 
 1248              		.loc 1 634 3 view .LVU302
 634:Src/main.c    **** 
 1249              		.loc 1 634 11 is_stmt 0 view .LVU303
 1250 001e 0023     		movs	r3, #0
 1251 0020 0793     		str	r3, [sp, #28]
 1252 0022 0893     		str	r3, [sp, #32]
 636:Src/main.c    ****   cbuffer[1] = ( uint8_t )( LR1110_GET_CHIP_EUI_OC >> 0 );
 1253              		.loc 1 636 3 is_stmt 1 view .LVU304
 636:Src/main.c    ****   cbuffer[1] = ( uint8_t )( LR1110_GET_CHIP_EUI_OC >> 0 );
 1254              		.loc 1 636 14 is_stmt 0 view .LVU305
 1255 0024 8023     		movs	r3, #128
 1256 0026 8DF82430 		strb	r3, [sp, #36]
 637:Src/main.c    **** 
 1257              		.loc 1 637 3 is_stmt 1 view .LVU306
 637:Src/main.c    **** 
 1258              		.loc 1 637 14 is_stmt 0 view .LVU307
 1259 002a 0C23     		movs	r3, #12
 1260 002c 8DF82530 		strb	r3, [sp, #37]
 639:Src/main.c    ****     HAL_DBG_TRACE_MSG_COLOR("DONE\r\n", HAL_DBG_TRACE_COLOR_GREEN);
 1261              		.loc 1 639 3 is_stmt 1 view .LVU308
 639:Src/main.c    ****     HAL_DBG_TRACE_MSG_COLOR("DONE\r\n", HAL_DBG_TRACE_COLOR_GREEN);
 1262              		.loc 1 639 7 is_stmt 0 view .LVU309
 1263 0030 0823     		movs	r3, #8
 1264 0032 0093     		str	r3, [sp]
 1265 0034 07AB     		add	r3, sp, #28
 1266 0036 0222     		movs	r2, #2
 1267 0038 09A9     		add	r1, sp, #36
 1268 003a 2046     		mov	r0, r4
 1269 003c FFF7FEFF 		bl	lr1110_spi_read
 1270              	.LVL116:
 639:Src/main.c    ****     HAL_DBG_TRACE_MSG_COLOR("DONE\r\n", HAL_DBG_TRACE_COLOR_GREEN);
 1271              		.loc 1 639 6 view .LVU310
 1272 0040 68BB     		cbnz	r0, .L50
 640:Src/main.c    **** 
 1273              		.loc 1 640 5 is_stmt 1 view .LVU311
 640:Src/main.c    **** 
 1274              		.loc 1 640 5 view .LVU312
 1275 0042 1D4D     		ldr	r5, .L53
 1276 0044 2846     		mov	r0, r5
ARM GAS  /tmp/ccK8WG6y.s 			page 39


 1277 0046 FFF7FEFF 		bl	hal_mcu_trace_print
 1278              	.LVL117:
 640:Src/main.c    **** 
 1279              		.loc 1 640 5 view .LVU313
 1280 004a 1F48     		ldr	r0, .L53+16
 1281 004c FFF7FEFF 		bl	hal_mcu_trace_print
 1282              	.LVL118:
 640:Src/main.c    **** 
 1283              		.loc 1 640 5 view .LVU314
 1284 0050 1C4C     		ldr	r4, .L53+12
 1285              	.LVL119:
 640:Src/main.c    **** 
 1286              		.loc 1 640 5 is_stmt 0 view .LVU315
 1287 0052 2046     		mov	r0, r4
 1288 0054 FFF7FEFF 		bl	hal_mcu_trace_print
 1289              	.LVL120:
 640:Src/main.c    **** 
 1290              		.loc 1 640 5 is_stmt 1 view .LVU316
 640:Src/main.c    **** 
 1291              		.loc 1 640 67 view .LVU317
 642:Src/main.c    ****   } else {
 1292              		.loc 1 642 5 view .LVU318
 642:Src/main.c    ****   } else {
 1293              		.loc 1 642 5 view .LVU319
 1294 0058 2846     		mov	r0, r5
 1295 005a FFF7FEFF 		bl	hal_mcu_trace_print
 1296              	.LVL121:
 642:Src/main.c    ****   } else {
 1297              		.loc 1 642 5 view .LVU320
 1298 005e 1748     		ldr	r0, .L53+4
 1299 0060 FFF7FEFF 		bl	hal_mcu_trace_print
 1300              	.LVL122:
 642:Src/main.c    ****   } else {
 1301              		.loc 1 642 5 view .LVU321
 1302 0064 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
 1303 0068 9DF82020 		ldrb	r2, [sp, #32]	@ zero_extendqisi2
 1304 006c 9DF82110 		ldrb	r1, [sp, #33]	@ zero_extendqisi2
 1305 0070 9DF82200 		ldrb	r0, [sp, #34]	@ zero_extendqisi2
 1306 0074 9DF82350 		ldrb	r5, [sp, #35]	@ zero_extendqisi2
 1307 0078 0495     		str	r5, [sp, #16]
 1308 007a 0390     		str	r0, [sp, #12]
 1309 007c 0291     		str	r1, [sp, #8]
 1310 007e 0192     		str	r2, [sp, #4]
 1311 0080 0093     		str	r3, [sp]
 1312 0082 9DF81E30 		ldrb	r3, [sp, #30]	@ zero_extendqisi2
 1313 0086 9DF81D20 		ldrb	r2, [sp, #29]	@ zero_extendqisi2
 1314 008a 9DF81C10 		ldrb	r1, [sp, #28]	@ zero_extendqisi2
 1315 008e 0F48     		ldr	r0, .L53+20
 1316 0090 FFF7FEFF 		bl	hal_mcu_trace_print
 1317              	.LVL123:
 642:Src/main.c    ****   } else {
 1318              		.loc 1 642 5 view .LVU322
 1319 0094 2046     		mov	r0, r4
 1320 0096 FFF7FEFF 		bl	hal_mcu_trace_print
 1321              	.LVL124:
 642:Src/main.c    ****   } else {
 1322              		.loc 1 642 5 view .LVU323
ARM GAS  /tmp/ccK8WG6y.s 			page 40


 642:Src/main.c    ****   } else {
 1323              		.loc 1 642 176 view .LVU324
 1324              	.L49:
 646:Src/main.c    **** 
 1325              		.loc 1 646 1 is_stmt 0 view .LVU325
 1326 009a 0BB0     		add	sp, sp, #44
 1327              	.LCFI29:
 1328              		.cfi_remember_state
 1329              		.cfi_def_cfa_offset 12
 1330              		@ sp needed
 1331 009c 30BD     		pop	{r4, r5, pc}
 1332              	.LVL125:
 1333              	.L50:
 1334              	.LCFI30:
 1335              		.cfi_restore_state
 644:Src/main.c    ****   }
 1336              		.loc 1 644 5 is_stmt 1 view .LVU326
 644:Src/main.c    ****   }
 1337              		.loc 1 644 5 view .LVU327
 1338 009e 0C48     		ldr	r0, .L53+24
 1339 00a0 FFF7FEFF 		bl	hal_mcu_trace_print
 1340              	.LVL126:
 644:Src/main.c    ****   }
 1341              		.loc 1 644 5 view .LVU328
 1342 00a4 0B48     		ldr	r0, .L53+28
 1343 00a6 FFF7FEFF 		bl	hal_mcu_trace_print
 1344              	.LVL127:
 644:Src/main.c    ****   }
 1345              		.loc 1 644 5 view .LVU329
 1346 00aa 0B48     		ldr	r0, .L53+32
 1347 00ac FFF7FEFF 		bl	hal_mcu_trace_print
 1348              	.LVL128:
 644:Src/main.c    ****   }
 1349              		.loc 1 644 5 view .LVU330
 1350 00b0 0448     		ldr	r0, .L53+12
 1351 00b2 FFF7FEFF 		bl	hal_mcu_trace_print
 1352              	.LVL129:
 644:Src/main.c    ****   }
 1353              		.loc 1 644 5 view .LVU331
 644:Src/main.c    ****   }
 1354              		.loc 1 644 61 view .LVU332
 646:Src/main.c    **** 
 1355              		.loc 1 646 1 is_stmt 0 view .LVU333
 1356 00b6 F0E7     		b	.L49
 1357              	.L54:
 1358              		.align	2
 1359              	.L53:
 1360 00b8 00000000 		.word	.LC0
 1361 00bc 08000000 		.word	.LC1
 1362 00c0 00000000 		.word	.LC19
 1363 00c4 28000000 		.word	.LC3
 1364 00c8 30000000 		.word	.LC4
 1365 00cc 1C000000 		.word	.LC20
 1366 00d0 1C000000 		.word	.LC6
 1367 00d4 24000000 		.word	.LC7
 1368 00d8 50000000 		.word	.LC21
 1369              		.cfi_endproc
ARM GAS  /tmp/ccK8WG6y.s 			page 41


 1370              	.LFE448:
 1372              		.section	.rodata.getLR1110_Temperature.str1.4,"aMS",%progbits,1
 1373              		.align	2
 1374              	.LC22:
 1375 0000 47657474 		.ascii	"Getting LR1110 temperature... \000"
 1375      696E6720 
 1375      4C523131 
 1375      31302074 
 1375      656D7065 
 1376              		.global	__aeabi_i2d
 1377              		.global	__aeabi_ddiv
 1378              		.global	__aeabi_dmul
 1379              		.global	__aeabi_dsub
 1380              		.global	__aeabi_dadd
 1381              		.global	__aeabi_d2f
 1382 001f 00       		.align	2
 1383              	.LC23:
 1384 0020 4C523131 		.ascii	"LR1110 temperature is too high\015\012\000"
 1384      31302074 
 1384      656D7065 
 1384      72617475 
 1384      72652069 
 1385 0041 000000   		.align	2
 1386              	.LC24:
 1387 0044 5443584F 		.ascii	"TCXO mode is maybe not set up correctly\015\012\000"
 1387      206D6F64 
 1387      65206973 
 1387      206D6179 
 1387      6265206E 
 1388 006e 0000     		.align	2
 1389              	.LC25:
 1390 0070 4C523131 		.ascii	"LR1110 temperature: %d.%d \302\260C\015\012\000"
 1390      31302074 
 1390      656D7065 
 1390      72617475 
 1390      72653A20 
 1391              		.align	2
 1392              	.LC26:
 1393 0090 0D0A4661 		.ascii	"\015\012Failed to get LR1110 temperature\015\012\000"
 1393      696C6564 
 1393      20746F20 
 1393      67657420 
 1393      4C523131 
 1394              		.section	.text.getLR1110_Temperature,"ax",%progbits
 1395              		.align	1
 1396              		.syntax unified
 1397              		.thumb
 1398              		.thumb_func
 1399              		.fpu fpv4-sp-d16
 1401              	getLR1110_Temperature:
 1402              	.LVL130:
 1403              	.LFB445:
 567:Src/main.c    ****   HAL_DBG_TRACE_INFO("Getting LR1110 temperature... ");
 1404              		.loc 1 567 51 is_stmt 1 view -0
 1405              		.cfi_startproc
 1406              		@ args = 0, pretend = 0, frame = 8
 1407              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccK8WG6y.s 			page 42


 567:Src/main.c    ****   HAL_DBG_TRACE_INFO("Getting LR1110 temperature... ");
 1408              		.loc 1 567 51 is_stmt 0 view .LVU335
 1409 0000 70B5     		push	{r4, r5, r6, lr}
 1410              	.LCFI31:
 1411              		.cfi_def_cfa_offset 16
 1412              		.cfi_offset 4, -16
 1413              		.cfi_offset 5, -12
 1414              		.cfi_offset 6, -8
 1415              		.cfi_offset 14, -4
 1416 0002 2DED028B 		vpush.64	{d8}
 1417              	.LCFI32:
 1418              		.cfi_def_cfa_offset 24
 1419              		.cfi_offset 80, -24
 1420              		.cfi_offset 81, -20
 1421 0006 84B0     		sub	sp, sp, #16
 1422              	.LCFI33:
 1423              		.cfi_def_cfa_offset 40
 1424 0008 0446     		mov	r4, r0
 568:Src/main.c    **** 
 1425              		.loc 1 568 3 is_stmt 1 view .LVU336
 568:Src/main.c    **** 
 1426              		.loc 1 568 3 view .LVU337
 1427 000a 5548     		ldr	r0, .L61+32
 1428              	.LVL131:
 568:Src/main.c    **** 
 1429              		.loc 1 568 3 is_stmt 0 view .LVU338
 1430 000c FFF7FEFF 		bl	hal_mcu_trace_print
 1431              	.LVL132:
 568:Src/main.c    **** 
 1432              		.loc 1 568 3 is_stmt 1 view .LVU339
 1433 0010 5448     		ldr	r0, .L61+36
 1434 0012 FFF7FEFF 		bl	hal_mcu_trace_print
 1435              	.LVL133:
 568:Src/main.c    **** 
 1436              		.loc 1 568 3 view .LVU340
 1437 0016 5448     		ldr	r0, .L61+40
 1438 0018 FFF7FEFF 		bl	hal_mcu_trace_print
 1439              	.LVL134:
 568:Src/main.c    **** 
 1440              		.loc 1 568 3 view .LVU341
 1441 001c 5348     		ldr	r0, .L61+44
 1442 001e FFF7FEFF 		bl	hal_mcu_trace_print
 1443              	.LVL135:
 568:Src/main.c    **** 
 1444              		.loc 1 568 3 view .LVU342
 568:Src/main.c    **** 
 1445              		.loc 1 568 55 view .LVU343
 570:Src/main.c    ****   uint8_t rbuffer[LR1110_TEMPERATURE_LENGTH] = { 0 };
 1446              		.loc 1 570 3 view .LVU344
 571:Src/main.c    **** 
 1447              		.loc 1 571 3 view .LVU345
 571:Src/main.c    **** 
 1448              		.loc 1 571 11 is_stmt 0 view .LVU346
 1449 0022 0023     		movs	r3, #0
 1450 0024 ADF80830 		strh	r3, [sp, #8]	@ movhi
 573:Src/main.c    ****   cbuffer[1] = ( uint8_t )( LR1110_GET_TEMPERATURE >> 0 );
 1451              		.loc 1 573 3 is_stmt 1 view .LVU347
ARM GAS  /tmp/ccK8WG6y.s 			page 43


 573:Src/main.c    ****   cbuffer[1] = ( uint8_t )( LR1110_GET_TEMPERATURE >> 0 );
 1452              		.loc 1 573 14 is_stmt 0 view .LVU348
 1453 0028 0123     		movs	r3, #1
 1454 002a 8DF80C30 		strb	r3, [sp, #12]
 574:Src/main.c    **** 
 1455              		.loc 1 574 3 is_stmt 1 view .LVU349
 574:Src/main.c    **** 
 1456              		.loc 1 574 14 is_stmt 0 view .LVU350
 1457 002e 1A23     		movs	r3, #26
 1458 0030 8DF80D30 		strb	r3, [sp, #13]
 576:Src/main.c    ****     HAL_DBG_TRACE_MSG_COLOR("DONE\r\n", HAL_DBG_TRACE_COLOR_GREEN);
 1459              		.loc 1 576 3 is_stmt 1 view .LVU351
 576:Src/main.c    ****     HAL_DBG_TRACE_MSG_COLOR("DONE\r\n", HAL_DBG_TRACE_COLOR_GREEN);
 1460              		.loc 1 576 7 is_stmt 0 view .LVU352
 1461 0034 0222     		movs	r2, #2
 1462 0036 0092     		str	r2, [sp]
 1463 0038 02AB     		add	r3, sp, #8
 1464 003a 03A9     		add	r1, sp, #12
 1465 003c 2046     		mov	r0, r4
 1466 003e FFF7FEFF 		bl	lr1110_spi_read
 1467              	.LVL136:
 576:Src/main.c    ****     HAL_DBG_TRACE_MSG_COLOR("DONE\r\n", HAL_DBG_TRACE_COLOR_GREEN);
 1468              		.loc 1 576 6 view .LVU353
 1469 0042 0028     		cmp	r0, #0
 1470 0044 6ED1     		bne	.L56
 1471              	.LBB13:
 577:Src/main.c    **** 
 1472              		.loc 1 577 5 is_stmt 1 view .LVU354
 577:Src/main.c    **** 
 1473              		.loc 1 577 5 view .LVU355
 1474 0046 4648     		ldr	r0, .L61+32
 1475 0048 FFF7FEFF 		bl	hal_mcu_trace_print
 1476              	.LVL137:
 577:Src/main.c    **** 
 1477              		.loc 1 577 5 view .LVU356
 1478 004c 4848     		ldr	r0, .L61+48
 1479 004e FFF7FEFF 		bl	hal_mcu_trace_print
 1480              	.LVL138:
 577:Src/main.c    **** 
 1481              		.loc 1 577 5 view .LVU357
 1482 0052 4648     		ldr	r0, .L61+44
 1483 0054 FFF7FEFF 		bl	hal_mcu_trace_print
 1484              	.LVL139:
 577:Src/main.c    **** 
 1485              		.loc 1 577 5 view .LVU358
 577:Src/main.c    **** 
 1486              		.loc 1 577 67 view .LVU359
 579:Src/main.c    ****     float temperature = 25 + (1000/(-1.7)) * ((temp_10_0/2047.0) * 1.35 - 0.7295);
 1487              		.loc 1 579 5 view .LVU360
 579:Src/main.c    ****     float temperature = 25 + (1000/(-1.7)) * ((temp_10_0/2047.0) * 1.35 - 0.7295);
 1488              		.loc 1 579 35 is_stmt 0 view .LVU361
 1489 0058 9DF80830 		ldrb	r3, [sp, #8]	@ zero_extendqisi2
 579:Src/main.c    ****     float temperature = 25 + (1000/(-1.7)) * ((temp_10_0/2047.0) * 1.35 - 0.7295);
 1490              		.loc 1 579 54 view .LVU362
 1491 005c 9DF80900 		ldrb	r0, [sp, #9]	@ zero_extendqisi2
 579:Src/main.c    ****     float temperature = 25 + (1000/(-1.7)) * ((temp_10_0/2047.0) * 1.35 - 0.7295);
 1492              		.loc 1 579 59 view .LVU363
ARM GAS  /tmp/ccK8WG6y.s 			page 44


 1493 0060 40EA0320 		orr	r0, r0, r3, lsl #8
 1494              	.LVL140:
 580:Src/main.c    **** 
 1495              		.loc 1 580 5 is_stmt 1 view .LVU364
 580:Src/main.c    **** 
 1496              		.loc 1 580 57 is_stmt 0 view .LVU365
 1497 0064 C0F30A00 		ubfx	r0, r0, #0, #11
 1498              	.LVL141:
 580:Src/main.c    **** 
 1499              		.loc 1 580 57 view .LVU366
 1500 0068 FFF7FEFF 		bl	__aeabi_i2d
 1501              	.LVL142:
 580:Src/main.c    **** 
 1502              		.loc 1 580 57 view .LVU367
 1503 006c 34A3     		adr	r3, .L61
 1504 006e D3E90023 		ldrd	r2, [r3]
 1505 0072 FFF7FEFF 		bl	__aeabi_ddiv
 1506              	.LVL143:
 580:Src/main.c    **** 
 1507              		.loc 1 580 66 view .LVU368
 1508 0076 34A3     		adr	r3, .L61+8
 1509 0078 D3E90023 		ldrd	r2, [r3]
 1510 007c FFF7FEFF 		bl	__aeabi_dmul
 1511              	.LVL144:
 580:Src/main.c    **** 
 1512              		.loc 1 580 73 view .LVU369
 1513 0080 33A3     		adr	r3, .L61+16
 1514 0082 D3E90023 		ldrd	r2, [r3]
 1515 0086 FFF7FEFF 		bl	__aeabi_dsub
 1516              	.LVL145:
 580:Src/main.c    **** 
 1517              		.loc 1 580 44 view .LVU370
 1518 008a 33A3     		adr	r3, .L61+24
 1519 008c D3E90023 		ldrd	r2, [r3]
 1520 0090 FFF7FEFF 		bl	__aeabi_dmul
 1521              	.LVL146:
 580:Src/main.c    **** 
 1522              		.loc 1 580 28 view .LVU371
 1523 0094 0022     		movs	r2, #0
 1524 0096 374B     		ldr	r3, .L61+52
 1525 0098 FFF7FEFF 		bl	__aeabi_dadd
 1526              	.LVL147:
 580:Src/main.c    **** 
 1527              		.loc 1 580 11 view .LVU372
 1528 009c FFF7FEFF 		bl	__aeabi_d2f
 1529              	.LVL148:
 1530 00a0 08EE100A 		vmov	s16, r0
 1531              	.LVL149:
 582:Src/main.c    ****       HAL_DBG_TRACE_ERROR("LR1110 temperature is too high\r\n");
 1532              		.loc 1 582 5 is_stmt 1 view .LVU373
 582:Src/main.c    ****       HAL_DBG_TRACE_ERROR("LR1110 temperature is too high\r\n");
 1533              		.loc 1 582 9 is_stmt 0 view .LVU374
 1534 00a4 FDEEC88A 		vcvt.s32.f32	s17, s16
 582:Src/main.c    ****       HAL_DBG_TRACE_ERROR("LR1110 temperature is too high\r\n");
 1535              		.loc 1 582 8 view .LVU375
 1536 00a8 18EE903A 		vmov	r3, s17	@ int
 1537 00ac 322B     		cmp	r3, #50
ARM GAS  /tmp/ccK8WG6y.s 			page 45


 1538 00ae 1DDC     		bgt	.L60
 1539              	.LVL150:
 1540              	.L57:
 584:Src/main.c    ****     }
 1541              		.loc 1 584 7 is_stmt 1 discriminator 1 view .LVU376
 584:Src/main.c    ****     }
 1542              		.loc 1 584 73 discriminator 1 view .LVU377
 587:Src/main.c    ****   } else {
 1543              		.loc 1 587 5 discriminator 1 view .LVU378
 587:Src/main.c    ****   } else {
 1544              		.loc 1 587 5 discriminator 1 view .LVU379
 1545 00b0 2B48     		ldr	r0, .L61+32
 1546 00b2 FFF7FEFF 		bl	hal_mcu_trace_print
 1547              	.LVL151:
 587:Src/main.c    ****   } else {
 1548              		.loc 1 587 5 discriminator 1 view .LVU380
 1549 00b6 2B48     		ldr	r0, .L61+36
 1550 00b8 FFF7FEFF 		bl	hal_mcu_trace_print
 1551              	.LVL152:
 587:Src/main.c    ****   } else {
 1552              		.loc 1 587 5 discriminator 1 view .LVU381
 1553 00bc F8EEE87A 		vcvt.f32.s32	s15, s17
 1554 00c0 38EE678A 		vsub.f32	s16, s16, s15
 1555              	.LVL153:
 587:Src/main.c    ****   } else {
 1556              		.loc 1 587 5 is_stmt 0 discriminator 1 view .LVU382
 1557 00c4 DFED2C7A 		vldr.32	s15, .L61+56
 1558 00c8 28EE278A 		vmul.f32	s16, s16, s15
 1559 00cc FDEEC87A 		vcvt.s32.f32	s15, s16
 1560 00d0 17EE902A 		vmov	r2, s15	@ int
 1561 00d4 18EE901A 		vmov	r1, s17	@ int
 1562 00d8 2848     		ldr	r0, .L61+60
 1563 00da FFF7FEFF 		bl	hal_mcu_trace_print
 1564              	.LVL154:
 587:Src/main.c    ****   } else {
 1565              		.loc 1 587 5 is_stmt 1 discriminator 1 view .LVU383
 1566 00de 2348     		ldr	r0, .L61+44
 1567 00e0 FFF7FEFF 		bl	hal_mcu_trace_print
 1568              	.LVL155:
 587:Src/main.c    ****   } else {
 1569              		.loc 1 587 5 discriminator 1 view .LVU384
 587:Src/main.c    ****   } else {
 1570              		.loc 1 587 125 discriminator 1 view .LVU385
 1571              	.L55:
 587:Src/main.c    ****   } else {
 1572              		.loc 1 587 125 is_stmt 0 discriminator 1 view .LVU386
 1573              	.LBE13:
 591:Src/main.c    **** 
 1574              		.loc 1 591 1 view .LVU387
 1575 00e4 04B0     		add	sp, sp, #16
 1576              	.LCFI34:
 1577              		.cfi_remember_state
 1578              		.cfi_def_cfa_offset 24
 1579              		@ sp needed
 1580 00e6 BDEC028B 		vldm	sp!, {d8}
 1581              	.LCFI35:
 1582              		.cfi_restore 80
ARM GAS  /tmp/ccK8WG6y.s 			page 46


 1583              		.cfi_restore 81
 1584              		.cfi_def_cfa_offset 16
 1585 00ea 70BD     		pop	{r4, r5, r6, pc}
 1586              	.LVL156:
 1587              	.L60:
 1588              	.LCFI36:
 1589              		.cfi_restore_state
 1590              	.LBB14:
 583:Src/main.c    ****       HAL_DBG_TRACE_ERROR("TCXO mode is maybe not set up correctly\r\n");
 1591              		.loc 1 583 7 is_stmt 1 view .LVU388
 583:Src/main.c    ****       HAL_DBG_TRACE_ERROR("TCXO mode is maybe not set up correctly\r\n");
 1592              		.loc 1 583 7 view .LVU389
 1593 00ec 244E     		ldr	r6, .L61+64
 1594 00ee 3046     		mov	r0, r6
 1595              	.LVL157:
 583:Src/main.c    ****       HAL_DBG_TRACE_ERROR("TCXO mode is maybe not set up correctly\r\n");
 1596              		.loc 1 583 7 is_stmt 0 view .LVU390
 1597 00f0 FFF7FEFF 		bl	hal_mcu_trace_print
 1598              	.LVL158:
 583:Src/main.c    ****       HAL_DBG_TRACE_ERROR("TCXO mode is maybe not set up correctly\r\n");
 1599              		.loc 1 583 7 is_stmt 1 view .LVU391
 1600 00f4 234D     		ldr	r5, .L61+68
 1601 00f6 2846     		mov	r0, r5
 1602 00f8 FFF7FEFF 		bl	hal_mcu_trace_print
 1603              	.LVL159:
 583:Src/main.c    ****       HAL_DBG_TRACE_ERROR("TCXO mode is maybe not set up correctly\r\n");
 1604              		.loc 1 583 7 view .LVU392
 1605 00fc 2248     		ldr	r0, .L61+72
 1606 00fe FFF7FEFF 		bl	hal_mcu_trace_print
 1607              	.LVL160:
 583:Src/main.c    ****       HAL_DBG_TRACE_ERROR("TCXO mode is maybe not set up correctly\r\n");
 1608              		.loc 1 583 7 view .LVU393
 1609 0102 1A4C     		ldr	r4, .L61+44
 1610              	.LVL161:
 583:Src/main.c    ****       HAL_DBG_TRACE_ERROR("TCXO mode is maybe not set up correctly\r\n");
 1611              		.loc 1 583 7 is_stmt 0 view .LVU394
 1612 0104 2046     		mov	r0, r4
 1613 0106 FFF7FEFF 		bl	hal_mcu_trace_print
 1614              	.LVL162:
 583:Src/main.c    ****       HAL_DBG_TRACE_ERROR("TCXO mode is maybe not set up correctly\r\n");
 1615              		.loc 1 583 7 is_stmt 1 view .LVU395
 583:Src/main.c    ****       HAL_DBG_TRACE_ERROR("TCXO mode is maybe not set up correctly\r\n");
 1616              		.loc 1 583 64 view .LVU396
 584:Src/main.c    ****     }
 1617              		.loc 1 584 7 view .LVU397
 584:Src/main.c    ****     }
 1618              		.loc 1 584 7 view .LVU398
 1619 010a 3046     		mov	r0, r6
 1620 010c FFF7FEFF 		bl	hal_mcu_trace_print
 1621              	.LVL163:
 584:Src/main.c    ****     }
 1622              		.loc 1 584 7 view .LVU399
 1623 0110 2846     		mov	r0, r5
 1624 0112 FFF7FEFF 		bl	hal_mcu_trace_print
 1625              	.LVL164:
 584:Src/main.c    ****     }
 1626              		.loc 1 584 7 view .LVU400
ARM GAS  /tmp/ccK8WG6y.s 			page 47


 1627 0116 1D48     		ldr	r0, .L61+76
 1628 0118 FFF7FEFF 		bl	hal_mcu_trace_print
 1629              	.LVL165:
 584:Src/main.c    ****     }
 1630              		.loc 1 584 7 view .LVU401
 1631 011c 2046     		mov	r0, r4
 1632 011e FFF7FEFF 		bl	hal_mcu_trace_print
 1633              	.LVL166:
 1634 0122 C5E7     		b	.L57
 1635              	.LVL167:
 1636              	.L56:
 584:Src/main.c    ****     }
 1637              		.loc 1 584 7 is_stmt 0 view .LVU402
 1638              	.LBE14:
 589:Src/main.c    ****   }
 1639              		.loc 1 589 5 is_stmt 1 view .LVU403
 589:Src/main.c    ****   }
 1640              		.loc 1 589 5 view .LVU404
 1641 0124 1648     		ldr	r0, .L61+64
 1642 0126 FFF7FEFF 		bl	hal_mcu_trace_print
 1643              	.LVL168:
 589:Src/main.c    ****   }
 1644              		.loc 1 589 5 view .LVU405
 1645 012a 1648     		ldr	r0, .L61+68
 1646 012c FFF7FEFF 		bl	hal_mcu_trace_print
 1647              	.LVL169:
 589:Src/main.c    ****   }
 1648              		.loc 1 589 5 view .LVU406
 1649 0130 1748     		ldr	r0, .L61+80
 1650 0132 FFF7FEFF 		bl	hal_mcu_trace_print
 1651              	.LVL170:
 589:Src/main.c    ****   }
 1652              		.loc 1 589 5 view .LVU407
 1653 0136 0D48     		ldr	r0, .L61+44
 1654 0138 FFF7FEFF 		bl	hal_mcu_trace_print
 1655              	.LVL171:
 589:Src/main.c    ****   }
 1656              		.loc 1 589 5 view .LVU408
 589:Src/main.c    ****   }
 1657              		.loc 1 589 68 view .LVU409
 591:Src/main.c    **** 
 1658              		.loc 1 591 1 is_stmt 0 view .LVU410
 1659 013c D2E7     		b	.L55
 1660              	.L62:
 1661 013e 00BF     		.align	3
 1662              	.L61:
 1663 0140 00000000 		.word	0
 1664 0144 00FC9F40 		.word	1084226560
 1665 0148 9A999999 		.word	-1717986918
 1666 014c 9999F53F 		.word	1073060249
 1667 0150 F2D24D62 		.word	1649267442
 1668 0154 1058E73F 		.word	1072125968
 1669 0158 E2E1E1E1 		.word	-505290270
 1670 015c E16182C0 		.word	-1065197087
 1671 0160 00000000 		.word	.LC0
 1672 0164 08000000 		.word	.LC1
 1673 0168 00000000 		.word	.LC22
ARM GAS  /tmp/ccK8WG6y.s 			page 48


 1674 016c 28000000 		.word	.LC3
 1675 0170 30000000 		.word	.LC4
 1676 0174 00003940 		.word	1077477376
 1677 0178 0000C842 		.word	1120403456
 1678 017c 70000000 		.word	.LC25
 1679 0180 1C000000 		.word	.LC6
 1680 0184 24000000 		.word	.LC7
 1681 0188 20000000 		.word	.LC23
 1682 018c 44000000 		.word	.LC24
 1683 0190 90000000 		.word	.LC26
 1684              		.cfi_endproc
 1685              	.LFE445:
 1687              		.section	.rodata.Error_Handler.str1.4,"aMS",%progbits,1
 1688              		.align	2
 1689              	.LC27:
 1690 0000 25730A00 		.ascii	"%s\012\000"
 1691              		.align	2
 1692              	.LC28:
 1693 0004 50414E49 		.ascii	"PANIC\000"
 1693      4300
 1694              		.section	.text.Error_Handler,"ax",%progbits
 1695              		.align	1
 1696              		.global	Error_Handler
 1697              		.syntax unified
 1698              		.thumb
 1699              		.thumb_func
 1700              		.fpu fpv4-sp-d16
 1702              	Error_Handler:
 1703              	.LFB451:
 678:Src/main.c    **** 
 679:Src/main.c    **** /* USER CODE END 4 */
 680:Src/main.c    **** 
 681:Src/main.c    **** /**
 682:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 683:Src/main.c    ****   * @retval None
 684:Src/main.c    ****   */
 685:Src/main.c    **** void Error_Handler(void)
 686:Src/main.c    **** {
 1704              		.loc 1 686 1 is_stmt 1 view -0
 1705              		.cfi_startproc
 1706              		@ Volatile: function does not return.
 1707              		@ args = 0, pretend = 0, frame = 0
 1708              		@ frame_needed = 0, uses_anonymous_args = 0
 1709 0000 08B5     		push	{r3, lr}
 1710              	.LCFI37:
 1711              		.cfi_def_cfa_offset 8
 1712              		.cfi_offset 3, -8
 1713              		.cfi_offset 14, -4
 687:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 688:Src/main.c    **** 
 689:Src/main.c    ****   HAL_DBG_TRACE_ERROR( "%s\n", __func__ );
 1714              		.loc 1 689 3 view .LVU412
 1715              		.loc 1 689 3 view .LVU413
 1716 0002 154E     		ldr	r6, .L66
 1717 0004 3046     		mov	r0, r6
 1718 0006 FFF7FEFF 		bl	hal_mcu_trace_print
 1719              	.LVL172:
ARM GAS  /tmp/ccK8WG6y.s 			page 49


 1720              		.loc 1 689 3 view .LVU414
 1721 000a 144D     		ldr	r5, .L66+4
 1722 000c 2846     		mov	r0, r5
 1723 000e FFF7FEFF 		bl	hal_mcu_trace_print
 1724              	.LVL173:
 1725              		.loc 1 689 3 view .LVU415
 1726 0012 1349     		ldr	r1, .L66+8
 1727 0014 1348     		ldr	r0, .L66+12
 1728 0016 FFF7FEFF 		bl	hal_mcu_trace_print
 1729              	.LVL174:
 1730              		.loc 1 689 3 view .LVU416
 1731 001a 134C     		ldr	r4, .L66+16
 1732 001c 2046     		mov	r0, r4
 1733 001e FFF7FEFF 		bl	hal_mcu_trace_print
 1734              	.LVL175:
 1735              		.loc 1 689 3 view .LVU417
 1736              		.loc 1 689 42 view .LVU418
 690:Src/main.c    ****   HAL_DBG_TRACE_ERROR( "PANIC" );
 1737              		.loc 1 690 3 view .LVU419
 1738              		.loc 1 690 3 view .LVU420
 1739 0022 3046     		mov	r0, r6
 1740 0024 FFF7FEFF 		bl	hal_mcu_trace_print
 1741              	.LVL176:
 1742              		.loc 1 690 3 view .LVU421
 1743 0028 2846     		mov	r0, r5
 1744 002a FFF7FEFF 		bl	hal_mcu_trace_print
 1745              	.LVL177:
 1746              		.loc 1 690 3 view .LVU422
 1747 002e 0F48     		ldr	r0, .L66+20
 1748 0030 FFF7FEFF 		bl	hal_mcu_trace_print
 1749              	.LVL178:
 1750              		.loc 1 690 3 view .LVU423
 1751 0034 2046     		mov	r0, r4
 1752 0036 FFF7FEFF 		bl	hal_mcu_trace_print
 1753              	.LVL179:
 1754              		.loc 1 690 3 view .LVU424
 1755              		.loc 1 690 33 view .LVU425
 691:Src/main.c    **** 
 692:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 693:Src/main.c    ****   __disable_irq();
 1756              		.loc 1 693 3 view .LVU426
 1757              	.LBB23:
 1758              	.LBI23:
 1759              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
ARM GAS  /tmp/ccK8WG6y.s 			page 50


  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
ARM GAS  /tmp/ccK8WG6y.s 			page 51


  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
ARM GAS  /tmp/ccK8WG6y.s 			page 52


 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccK8WG6y.s 			page 53


 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1760              		.loc 2 207 27 view .LVU427
 1761              	.LBB24:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1762              		.loc 2 209 3 view .LVU428
 1763              		.syntax unified
 1764              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1765 003a 72B6     		cpsid i
 1766              	@ 0 "" 2
 1767              		.thumb
 1768              		.syntax unified
 1769              	.LBE24:
 1770              	.LBE23:
 694:Src/main.c    **** 
 695:Src/main.c    ****   /* Restart system */
 696:Src/main.c    ****   NVIC_SystemReset( );
 1771              		.loc 1 696 3 view .LVU429
 1772              	.LBB25:
 1773              	.LBI25:
 1774              		.file 3 "Drivers/CMSIS/Include/core_cm4.h"
   1:Drivers/CMSIS/Include/core_cm4.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/core_cm4.h ****  * @file     core_cm4.h
   3:Drivers/CMSIS/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:Drivers/CMSIS/Include/core_cm4.h ****  * @version  V5.1.0
   5:Drivers/CMSIS/Include/core_cm4.h ****  * @date     13. March 2019
   6:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/core_cm4.h **** /*
   8:Drivers/CMSIS/Include/core_cm4.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/core_cm4.h ****  *
  10:Drivers/CMSIS/Include/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/core_cm4.h ****  *
  12:Drivers/CMSIS/Include/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/core_cm4.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/core_cm4.h ****  * You may obtain a copy of the License at
ARM GAS  /tmp/ccK8WG6y.s 			page 54


  15:Drivers/CMSIS/Include/core_cm4.h ****  *
  16:Drivers/CMSIS/Include/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/core_cm4.h ****  *
  18:Drivers/CMSIS/Include/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/core_cm4.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/core_cm4.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/core_cm4.h ****  */
  24:Drivers/CMSIS/Include/core_cm4.h **** 
  25:Drivers/CMSIS/Include/core_cm4.h **** #if   defined ( __ICCARM__ )
  26:Drivers/CMSIS/Include/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:Drivers/CMSIS/Include/core_cm4.h **** #elif defined (__clang__)
  28:Drivers/CMSIS/Include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:Drivers/CMSIS/Include/core_cm4.h **** #endif
  30:Drivers/CMSIS/Include/core_cm4.h **** 
  31:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:Drivers/CMSIS/Include/core_cm4.h **** 
  34:Drivers/CMSIS/Include/core_cm4.h **** #include <stdint.h>
  35:Drivers/CMSIS/Include/core_cm4.h **** 
  36:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
  37:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
  38:Drivers/CMSIS/Include/core_cm4.h **** #endif
  39:Drivers/CMSIS/Include/core_cm4.h **** 
  40:Drivers/CMSIS/Include/core_cm4.h **** /**
  41:Drivers/CMSIS/Include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:Drivers/CMSIS/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:Drivers/CMSIS/Include/core_cm4.h **** 
  44:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:Drivers/CMSIS/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:Drivers/CMSIS/Include/core_cm4.h **** 
  47:Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:Drivers/CMSIS/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:Drivers/CMSIS/Include/core_cm4.h **** 
  50:Drivers/CMSIS/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:Drivers/CMSIS/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:Drivers/CMSIS/Include/core_cm4.h ****  */
  53:Drivers/CMSIS/Include/core_cm4.h **** 
  54:Drivers/CMSIS/Include/core_cm4.h **** 
  55:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
  56:Drivers/CMSIS/Include/core_cm4.h ****  *                 CMSIS definitions
  57:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  58:Drivers/CMSIS/Include/core_cm4.h **** /**
  59:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup Cortex_M4
  60:Drivers/CMSIS/Include/core_cm4.h ****   @{
  61:Drivers/CMSIS/Include/core_cm4.h ****  */
  62:Drivers/CMSIS/Include/core_cm4.h **** 
  63:Drivers/CMSIS/Include/core_cm4.h **** #include "cmsis_version.h"
  64:Drivers/CMSIS/Include/core_cm4.h **** 
  65:Drivers/CMSIS/Include/core_cm4.h **** /* CMSIS CM4 definitions */
  66:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:Drivers/CMSIS/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:Drivers/CMSIS/Include/core_cm4.h **** 
  71:Drivers/CMSIS/Include/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
ARM GAS  /tmp/ccK8WG6y.s 			page 55


  72:Drivers/CMSIS/Include/core_cm4.h **** 
  73:Drivers/CMSIS/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:Drivers/CMSIS/Include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:Drivers/CMSIS/Include/core_cm4.h **** */
  76:Drivers/CMSIS/Include/core_cm4.h **** #if defined ( __CC_ARM )
  77:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  80:Drivers/CMSIS/Include/core_cm4.h ****     #else
  81:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  83:Drivers/CMSIS/Include/core_cm4.h ****     #endif
  84:Drivers/CMSIS/Include/core_cm4.h ****   #else
  85:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  86:Drivers/CMSIS/Include/core_cm4.h ****   #endif
  87:Drivers/CMSIS/Include/core_cm4.h **** 
  88:Drivers/CMSIS/Include/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARM_FP
  90:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  92:Drivers/CMSIS/Include/core_cm4.h ****     #else
  93:Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  95:Drivers/CMSIS/Include/core_cm4.h ****     #endif
  96:Drivers/CMSIS/Include/core_cm4.h ****   #else
  97:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  98:Drivers/CMSIS/Include/core_cm4.h ****   #endif
  99:Drivers/CMSIS/Include/core_cm4.h **** 
 100:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 101:Drivers/CMSIS/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 104:Drivers/CMSIS/Include/core_cm4.h ****     #else
 105:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 107:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 108:Drivers/CMSIS/Include/core_cm4.h ****   #else
 109:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 110:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 111:Drivers/CMSIS/Include/core_cm4.h **** 
 112:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 113:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARMVFP__
 114:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 116:Drivers/CMSIS/Include/core_cm4.h ****     #else
 117:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 119:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 120:Drivers/CMSIS/Include/core_cm4.h ****   #else
 121:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 122:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 123:Drivers/CMSIS/Include/core_cm4.h **** 
 124:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 128:Drivers/CMSIS/Include/core_cm4.h ****     #else
ARM GAS  /tmp/ccK8WG6y.s 			page 56


 129:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 131:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 132:Drivers/CMSIS/Include/core_cm4.h ****   #else
 133:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 134:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 135:Drivers/CMSIS/Include/core_cm4.h **** 
 136:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 137:Drivers/CMSIS/Include/core_cm4.h ****   #if defined __FPU_VFP__
 138:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 140:Drivers/CMSIS/Include/core_cm4.h ****     #else
 141:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 143:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 144:Drivers/CMSIS/Include/core_cm4.h ****   #else
 145:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 146:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 147:Drivers/CMSIS/Include/core_cm4.h **** 
 148:Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 149:Drivers/CMSIS/Include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 152:Drivers/CMSIS/Include/core_cm4.h ****     #else
 153:Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 155:Drivers/CMSIS/Include/core_cm4.h ****     #endif
 156:Drivers/CMSIS/Include/core_cm4.h ****   #else
 157:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 158:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 159:Drivers/CMSIS/Include/core_cm4.h **** 
 160:Drivers/CMSIS/Include/core_cm4.h **** #endif
 161:Drivers/CMSIS/Include/core_cm4.h **** 
 162:Drivers/CMSIS/Include/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:Drivers/CMSIS/Include/core_cm4.h **** 
 164:Drivers/CMSIS/Include/core_cm4.h **** 
 165:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 166:Drivers/CMSIS/Include/core_cm4.h **** }
 167:Drivers/CMSIS/Include/core_cm4.h **** #endif
 168:Drivers/CMSIS/Include/core_cm4.h **** 
 169:Drivers/CMSIS/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:Drivers/CMSIS/Include/core_cm4.h **** 
 171:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:Drivers/CMSIS/Include/core_cm4.h **** 
 173:Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:Drivers/CMSIS/Include/core_cm4.h **** 
 176:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 177:Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
 178:Drivers/CMSIS/Include/core_cm4.h **** #endif
 179:Drivers/CMSIS/Include/core_cm4.h **** 
 180:Drivers/CMSIS/Include/core_cm4.h **** /* check device defines and use defaults */
 181:Drivers/CMSIS/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __CM4_REV
 183:Drivers/CMSIS/Include/core_cm4.h ****     #define __CM4_REV               0x0000U
 184:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:Drivers/CMSIS/Include/core_cm4.h ****   #endif
ARM GAS  /tmp/ccK8WG6y.s 			page 57


 186:Drivers/CMSIS/Include/core_cm4.h **** 
 187:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_PRESENT             0U
 189:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 191:Drivers/CMSIS/Include/core_cm4.h **** 
 192:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:Drivers/CMSIS/Include/core_cm4.h ****     #define __MPU_PRESENT             0U
 194:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 196:Drivers/CMSIS/Include/core_cm4.h **** 
 197:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 198:Drivers/CMSIS/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 199:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 200:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 201:Drivers/CMSIS/Include/core_cm4.h **** 
 202:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 203:Drivers/CMSIS/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 204:Drivers/CMSIS/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 205:Drivers/CMSIS/Include/core_cm4.h ****   #endif
 206:Drivers/CMSIS/Include/core_cm4.h **** #endif
 207:Drivers/CMSIS/Include/core_cm4.h **** 
 208:Drivers/CMSIS/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 209:Drivers/CMSIS/Include/core_cm4.h **** /**
 210:Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 211:Drivers/CMSIS/Include/core_cm4.h **** 
 212:Drivers/CMSIS/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 213:Drivers/CMSIS/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 214:Drivers/CMSIS/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 215:Drivers/CMSIS/Include/core_cm4.h **** */
 216:Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 217:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 218:Drivers/CMSIS/Include/core_cm4.h **** #else
 219:Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 220:Drivers/CMSIS/Include/core_cm4.h **** #endif
 221:Drivers/CMSIS/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 222:Drivers/CMSIS/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 223:Drivers/CMSIS/Include/core_cm4.h **** 
 224:Drivers/CMSIS/Include/core_cm4.h **** /* following defines should be used for structure members */
 225:Drivers/CMSIS/Include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 226:Drivers/CMSIS/Include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 227:Drivers/CMSIS/Include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 228:Drivers/CMSIS/Include/core_cm4.h **** 
 229:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 230:Drivers/CMSIS/Include/core_cm4.h **** 
 231:Drivers/CMSIS/Include/core_cm4.h **** 
 232:Drivers/CMSIS/Include/core_cm4.h **** 
 233:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
 234:Drivers/CMSIS/Include/core_cm4.h ****  *                 Register Abstraction
 235:Drivers/CMSIS/Include/core_cm4.h ****   Core Register contain:
 236:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register
 237:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Register
 238:Drivers/CMSIS/Include/core_cm4.h ****   - Core SCB Register
 239:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Register
 240:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Register
 241:Drivers/CMSIS/Include/core_cm4.h ****   - Core MPU Register
 242:Drivers/CMSIS/Include/core_cm4.h ****   - Core FPU Register
ARM GAS  /tmp/ccK8WG6y.s 			page 58


 243:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
 244:Drivers/CMSIS/Include/core_cm4.h **** /**
 245:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 246:Drivers/CMSIS/Include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 247:Drivers/CMSIS/Include/core_cm4.h **** */
 248:Drivers/CMSIS/Include/core_cm4.h **** 
 249:Drivers/CMSIS/Include/core_cm4.h **** /**
 250:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 251:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 252:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Core Register type definitions.
 253:Drivers/CMSIS/Include/core_cm4.h ****   @{
 254:Drivers/CMSIS/Include/core_cm4.h ****  */
 255:Drivers/CMSIS/Include/core_cm4.h **** 
 256:Drivers/CMSIS/Include/core_cm4.h **** /**
 257:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 258:Drivers/CMSIS/Include/core_cm4.h ****  */
 259:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 260:Drivers/CMSIS/Include/core_cm4.h **** {
 261:Drivers/CMSIS/Include/core_cm4.h ****   struct
 262:Drivers/CMSIS/Include/core_cm4.h ****   {
 263:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 264:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 265:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 266:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 267:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 268:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 269:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 270:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 271:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 272:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 273:Drivers/CMSIS/Include/core_cm4.h **** } APSR_Type;
 274:Drivers/CMSIS/Include/core_cm4.h **** 
 275:Drivers/CMSIS/Include/core_cm4.h **** /* APSR Register Definitions */
 276:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 277:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 278:Drivers/CMSIS/Include/core_cm4.h **** 
 279:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 280:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 281:Drivers/CMSIS/Include/core_cm4.h **** 
 282:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 283:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 284:Drivers/CMSIS/Include/core_cm4.h **** 
 285:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 286:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 287:Drivers/CMSIS/Include/core_cm4.h **** 
 288:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 289:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 290:Drivers/CMSIS/Include/core_cm4.h **** 
 291:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 292:Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 293:Drivers/CMSIS/Include/core_cm4.h **** 
 294:Drivers/CMSIS/Include/core_cm4.h **** 
 295:Drivers/CMSIS/Include/core_cm4.h **** /**
 296:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 297:Drivers/CMSIS/Include/core_cm4.h ****  */
 298:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 299:Drivers/CMSIS/Include/core_cm4.h **** {
ARM GAS  /tmp/ccK8WG6y.s 			page 59


 300:Drivers/CMSIS/Include/core_cm4.h ****   struct
 301:Drivers/CMSIS/Include/core_cm4.h ****   {
 302:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 303:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 304:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 305:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:Drivers/CMSIS/Include/core_cm4.h **** } IPSR_Type;
 307:Drivers/CMSIS/Include/core_cm4.h **** 
 308:Drivers/CMSIS/Include/core_cm4.h **** /* IPSR Register Definitions */
 309:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 310:Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 311:Drivers/CMSIS/Include/core_cm4.h **** 
 312:Drivers/CMSIS/Include/core_cm4.h **** 
 313:Drivers/CMSIS/Include/core_cm4.h **** /**
 314:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 315:Drivers/CMSIS/Include/core_cm4.h ****  */
 316:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 317:Drivers/CMSIS/Include/core_cm4.h **** {
 318:Drivers/CMSIS/Include/core_cm4.h ****   struct
 319:Drivers/CMSIS/Include/core_cm4.h ****   {
 320:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 321:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 322:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 323:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 324:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 325:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 326:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 327:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 328:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 329:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 330:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 331:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 332:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 333:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 334:Drivers/CMSIS/Include/core_cm4.h **** } xPSR_Type;
 335:Drivers/CMSIS/Include/core_cm4.h **** 
 336:Drivers/CMSIS/Include/core_cm4.h **** /* xPSR Register Definitions */
 337:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 338:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 339:Drivers/CMSIS/Include/core_cm4.h **** 
 340:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 341:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 342:Drivers/CMSIS/Include/core_cm4.h **** 
 343:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 344:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 345:Drivers/CMSIS/Include/core_cm4.h **** 
 346:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 347:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 348:Drivers/CMSIS/Include/core_cm4.h **** 
 349:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 350:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 351:Drivers/CMSIS/Include/core_cm4.h **** 
 352:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 353:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 354:Drivers/CMSIS/Include/core_cm4.h **** 
 355:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 356:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
ARM GAS  /tmp/ccK8WG6y.s 			page 60


 357:Drivers/CMSIS/Include/core_cm4.h **** 
 358:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 359:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 360:Drivers/CMSIS/Include/core_cm4.h **** 
 361:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 362:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 363:Drivers/CMSIS/Include/core_cm4.h **** 
 364:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 365:Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 366:Drivers/CMSIS/Include/core_cm4.h **** 
 367:Drivers/CMSIS/Include/core_cm4.h **** 
 368:Drivers/CMSIS/Include/core_cm4.h **** /**
 369:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 370:Drivers/CMSIS/Include/core_cm4.h ****  */
 371:Drivers/CMSIS/Include/core_cm4.h **** typedef union
 372:Drivers/CMSIS/Include/core_cm4.h **** {
 373:Drivers/CMSIS/Include/core_cm4.h ****   struct
 374:Drivers/CMSIS/Include/core_cm4.h ****   {
 375:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 376:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 377:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 378:Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 379:Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 380:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 381:Drivers/CMSIS/Include/core_cm4.h **** } CONTROL_Type;
 382:Drivers/CMSIS/Include/core_cm4.h **** 
 383:Drivers/CMSIS/Include/core_cm4.h **** /* CONTROL Register Definitions */
 384:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 385:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 386:Drivers/CMSIS/Include/core_cm4.h **** 
 387:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 388:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 389:Drivers/CMSIS/Include/core_cm4.h **** 
 390:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 391:Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 392:Drivers/CMSIS/Include/core_cm4.h **** 
 393:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 394:Drivers/CMSIS/Include/core_cm4.h **** 
 395:Drivers/CMSIS/Include/core_cm4.h **** 
 396:Drivers/CMSIS/Include/core_cm4.h **** /**
 397:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 398:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 399:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 400:Drivers/CMSIS/Include/core_cm4.h ****   @{
 401:Drivers/CMSIS/Include/core_cm4.h ****  */
 402:Drivers/CMSIS/Include/core_cm4.h **** 
 403:Drivers/CMSIS/Include/core_cm4.h **** /**
 404:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 405:Drivers/CMSIS/Include/core_cm4.h ****  */
 406:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 407:Drivers/CMSIS/Include/core_cm4.h **** {
 408:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 409:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[24U];
 410:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 411:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[24U];
 412:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 413:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[24U];
ARM GAS  /tmp/ccK8WG6y.s 			page 61


 414:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 415:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[24U];
 416:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 417:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[56U];
 418:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 419:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[644U];
 420:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 421:Drivers/CMSIS/Include/core_cm4.h **** }  NVIC_Type;
 422:Drivers/CMSIS/Include/core_cm4.h **** 
 423:Drivers/CMSIS/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 424:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 425:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 426:Drivers/CMSIS/Include/core_cm4.h **** 
 427:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 428:Drivers/CMSIS/Include/core_cm4.h **** 
 429:Drivers/CMSIS/Include/core_cm4.h **** 
 430:Drivers/CMSIS/Include/core_cm4.h **** /**
 431:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 432:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 433:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 434:Drivers/CMSIS/Include/core_cm4.h ****   @{
 435:Drivers/CMSIS/Include/core_cm4.h ****  */
 436:Drivers/CMSIS/Include/core_cm4.h **** 
 437:Drivers/CMSIS/Include/core_cm4.h **** /**
 438:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 439:Drivers/CMSIS/Include/core_cm4.h ****  */
 440:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 441:Drivers/CMSIS/Include/core_cm4.h **** {
 442:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 443:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 444:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 445:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 446:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 447:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 448:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 449:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 450:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 451:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 452:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 453:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 454:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 455:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 456:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 457:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 458:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 459:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 460:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 461:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[5U];
 462:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 463:Drivers/CMSIS/Include/core_cm4.h **** } SCB_Type;
 464:Drivers/CMSIS/Include/core_cm4.h **** 
 465:Drivers/CMSIS/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 466:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 467:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 468:Drivers/CMSIS/Include/core_cm4.h **** 
 469:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 470:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
ARM GAS  /tmp/ccK8WG6y.s 			page 62


 471:Drivers/CMSIS/Include/core_cm4.h **** 
 472:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 473:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 474:Drivers/CMSIS/Include/core_cm4.h **** 
 475:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 476:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 477:Drivers/CMSIS/Include/core_cm4.h **** 
 478:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 479:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 480:Drivers/CMSIS/Include/core_cm4.h **** 
 481:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 482:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 483:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 484:Drivers/CMSIS/Include/core_cm4.h **** 
 485:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 486:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 487:Drivers/CMSIS/Include/core_cm4.h **** 
 488:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 489:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 490:Drivers/CMSIS/Include/core_cm4.h **** 
 491:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 492:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 493:Drivers/CMSIS/Include/core_cm4.h **** 
 494:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 495:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 496:Drivers/CMSIS/Include/core_cm4.h **** 
 497:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 498:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 499:Drivers/CMSIS/Include/core_cm4.h **** 
 500:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 501:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 502:Drivers/CMSIS/Include/core_cm4.h **** 
 503:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 504:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 505:Drivers/CMSIS/Include/core_cm4.h **** 
 506:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 507:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 508:Drivers/CMSIS/Include/core_cm4.h **** 
 509:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 510:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 511:Drivers/CMSIS/Include/core_cm4.h **** 
 512:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 513:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 514:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 515:Drivers/CMSIS/Include/core_cm4.h **** 
 516:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 517:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 518:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 519:Drivers/CMSIS/Include/core_cm4.h **** 
 520:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 521:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 522:Drivers/CMSIS/Include/core_cm4.h **** 
 523:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 524:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 525:Drivers/CMSIS/Include/core_cm4.h **** 
 526:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 527:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
ARM GAS  /tmp/ccK8WG6y.s 			page 63


 528:Drivers/CMSIS/Include/core_cm4.h **** 
 529:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 530:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 531:Drivers/CMSIS/Include/core_cm4.h **** 
 532:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 533:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 534:Drivers/CMSIS/Include/core_cm4.h **** 
 535:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 536:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 537:Drivers/CMSIS/Include/core_cm4.h **** 
 538:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Control Register Definitions */
 539:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 540:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 541:Drivers/CMSIS/Include/core_cm4.h **** 
 542:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 543:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 544:Drivers/CMSIS/Include/core_cm4.h **** 
 545:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 546:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 547:Drivers/CMSIS/Include/core_cm4.h **** 
 548:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 549:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 550:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 551:Drivers/CMSIS/Include/core_cm4.h **** 
 552:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 553:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 554:Drivers/CMSIS/Include/core_cm4.h **** 
 555:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 556:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 557:Drivers/CMSIS/Include/core_cm4.h **** 
 558:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 559:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 560:Drivers/CMSIS/Include/core_cm4.h **** 
 561:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 562:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 563:Drivers/CMSIS/Include/core_cm4.h **** 
 564:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 565:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 566:Drivers/CMSIS/Include/core_cm4.h **** 
 567:Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 568:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 569:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 570:Drivers/CMSIS/Include/core_cm4.h **** 
 571:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 572:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 573:Drivers/CMSIS/Include/core_cm4.h **** 
 574:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 575:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 576:Drivers/CMSIS/Include/core_cm4.h **** 
 577:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 578:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 579:Drivers/CMSIS/Include/core_cm4.h **** 
 580:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 581:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 582:Drivers/CMSIS/Include/core_cm4.h **** 
 583:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 584:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
ARM GAS  /tmp/ccK8WG6y.s 			page 64


 585:Drivers/CMSIS/Include/core_cm4.h **** 
 586:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 587:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 588:Drivers/CMSIS/Include/core_cm4.h **** 
 589:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 590:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 591:Drivers/CMSIS/Include/core_cm4.h **** 
 592:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 593:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 594:Drivers/CMSIS/Include/core_cm4.h **** 
 595:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 596:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 597:Drivers/CMSIS/Include/core_cm4.h **** 
 598:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 599:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 600:Drivers/CMSIS/Include/core_cm4.h **** 
 601:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 602:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 603:Drivers/CMSIS/Include/core_cm4.h **** 
 604:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 605:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 606:Drivers/CMSIS/Include/core_cm4.h **** 
 607:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 608:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 609:Drivers/CMSIS/Include/core_cm4.h **** 
 610:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 611:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 612:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 613:Drivers/CMSIS/Include/core_cm4.h **** 
 614:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 615:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 616:Drivers/CMSIS/Include/core_cm4.h **** 
 617:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 618:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 619:Drivers/CMSIS/Include/core_cm4.h **** 
 620:Drivers/CMSIS/Include/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 621:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 622:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 623:Drivers/CMSIS/Include/core_cm4.h **** 
 624:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 625:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 626:Drivers/CMSIS/Include/core_cm4.h **** 
 627:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 628:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 629:Drivers/CMSIS/Include/core_cm4.h **** 
 630:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 631:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 632:Drivers/CMSIS/Include/core_cm4.h **** 
 633:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 634:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 635:Drivers/CMSIS/Include/core_cm4.h **** 
 636:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 637:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 638:Drivers/CMSIS/Include/core_cm4.h **** 
 639:Drivers/CMSIS/Include/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 640:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 641:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
ARM GAS  /tmp/ccK8WG6y.s 			page 65


 642:Drivers/CMSIS/Include/core_cm4.h **** 
 643:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 644:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 645:Drivers/CMSIS/Include/core_cm4.h **** 
 646:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 647:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 648:Drivers/CMSIS/Include/core_cm4.h **** 
 649:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 650:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 651:Drivers/CMSIS/Include/core_cm4.h **** 
 652:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 653:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 654:Drivers/CMSIS/Include/core_cm4.h **** 
 655:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 656:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 657:Drivers/CMSIS/Include/core_cm4.h **** 
 658:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 659:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 660:Drivers/CMSIS/Include/core_cm4.h **** 
 661:Drivers/CMSIS/Include/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 662:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 663:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 664:Drivers/CMSIS/Include/core_cm4.h **** 
 665:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 666:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 667:Drivers/CMSIS/Include/core_cm4.h **** 
 668:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 669:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 670:Drivers/CMSIS/Include/core_cm4.h **** 
 671:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 672:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 673:Drivers/CMSIS/Include/core_cm4.h **** 
 674:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 675:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 676:Drivers/CMSIS/Include/core_cm4.h **** 
 677:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 678:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 679:Drivers/CMSIS/Include/core_cm4.h **** 
 680:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 681:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 682:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 683:Drivers/CMSIS/Include/core_cm4.h **** 
 684:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 685:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 686:Drivers/CMSIS/Include/core_cm4.h **** 
 687:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 688:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 689:Drivers/CMSIS/Include/core_cm4.h **** 
 690:Drivers/CMSIS/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 691:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 692:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 693:Drivers/CMSIS/Include/core_cm4.h **** 
 694:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 695:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 696:Drivers/CMSIS/Include/core_cm4.h **** 
 697:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 698:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
ARM GAS  /tmp/ccK8WG6y.s 			page 66


 699:Drivers/CMSIS/Include/core_cm4.h **** 
 700:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 701:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 702:Drivers/CMSIS/Include/core_cm4.h **** 
 703:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 704:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 705:Drivers/CMSIS/Include/core_cm4.h **** 
 706:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 707:Drivers/CMSIS/Include/core_cm4.h **** 
 708:Drivers/CMSIS/Include/core_cm4.h **** 
 709:Drivers/CMSIS/Include/core_cm4.h **** /**
 710:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 711:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 712:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 713:Drivers/CMSIS/Include/core_cm4.h ****   @{
 714:Drivers/CMSIS/Include/core_cm4.h ****  */
 715:Drivers/CMSIS/Include/core_cm4.h **** 
 716:Drivers/CMSIS/Include/core_cm4.h **** /**
 717:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 718:Drivers/CMSIS/Include/core_cm4.h ****  */
 719:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 720:Drivers/CMSIS/Include/core_cm4.h **** {
 721:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 722:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 723:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 724:Drivers/CMSIS/Include/core_cm4.h **** } SCnSCB_Type;
 725:Drivers/CMSIS/Include/core_cm4.h **** 
 726:Drivers/CMSIS/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 727:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 728:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 729:Drivers/CMSIS/Include/core_cm4.h **** 
 730:Drivers/CMSIS/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 731:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 732:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 733:Drivers/CMSIS/Include/core_cm4.h **** 
 734:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 735:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 736:Drivers/CMSIS/Include/core_cm4.h **** 
 737:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 738:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 739:Drivers/CMSIS/Include/core_cm4.h **** 
 740:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 741:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 742:Drivers/CMSIS/Include/core_cm4.h **** 
 743:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 744:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 745:Drivers/CMSIS/Include/core_cm4.h **** 
 746:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 747:Drivers/CMSIS/Include/core_cm4.h **** 
 748:Drivers/CMSIS/Include/core_cm4.h **** 
 749:Drivers/CMSIS/Include/core_cm4.h **** /**
 750:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 751:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 752:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 753:Drivers/CMSIS/Include/core_cm4.h ****   @{
 754:Drivers/CMSIS/Include/core_cm4.h ****  */
 755:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccK8WG6y.s 			page 67


 756:Drivers/CMSIS/Include/core_cm4.h **** /**
 757:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 758:Drivers/CMSIS/Include/core_cm4.h ****  */
 759:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 760:Drivers/CMSIS/Include/core_cm4.h **** {
 761:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 762:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 763:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 764:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 765:Drivers/CMSIS/Include/core_cm4.h **** } SysTick_Type;
 766:Drivers/CMSIS/Include/core_cm4.h **** 
 767:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 768:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 769:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 770:Drivers/CMSIS/Include/core_cm4.h **** 
 771:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 772:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 773:Drivers/CMSIS/Include/core_cm4.h **** 
 774:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 775:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 776:Drivers/CMSIS/Include/core_cm4.h **** 
 777:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 778:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 779:Drivers/CMSIS/Include/core_cm4.h **** 
 780:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 781:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 782:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 783:Drivers/CMSIS/Include/core_cm4.h **** 
 784:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 785:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 786:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 787:Drivers/CMSIS/Include/core_cm4.h **** 
 788:Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 789:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 790:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 791:Drivers/CMSIS/Include/core_cm4.h **** 
 792:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 793:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 794:Drivers/CMSIS/Include/core_cm4.h **** 
 795:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 796:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 797:Drivers/CMSIS/Include/core_cm4.h **** 
 798:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 799:Drivers/CMSIS/Include/core_cm4.h **** 
 800:Drivers/CMSIS/Include/core_cm4.h **** 
 801:Drivers/CMSIS/Include/core_cm4.h **** /**
 802:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 803:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 804:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 805:Drivers/CMSIS/Include/core_cm4.h ****   @{
 806:Drivers/CMSIS/Include/core_cm4.h ****  */
 807:Drivers/CMSIS/Include/core_cm4.h **** 
 808:Drivers/CMSIS/Include/core_cm4.h **** /**
 809:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 810:Drivers/CMSIS/Include/core_cm4.h ****  */
 811:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 812:Drivers/CMSIS/Include/core_cm4.h **** {
ARM GAS  /tmp/ccK8WG6y.s 			page 68


 813:Drivers/CMSIS/Include/core_cm4.h ****   __OM  union
 814:Drivers/CMSIS/Include/core_cm4.h ****   {
 815:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 816:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 817:Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 818:Drivers/CMSIS/Include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 819:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[864U];
 820:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 821:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[15U];
 822:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 823:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[15U];
 824:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 825:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[32U];
 826:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[43U];
 827:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 828:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 829:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[6U];
 830:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 831:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 832:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 833:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 834:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 835:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 836:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 837:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 838:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 839:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 840:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 841:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 842:Drivers/CMSIS/Include/core_cm4.h **** } ITM_Type;
 843:Drivers/CMSIS/Include/core_cm4.h **** 
 844:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 845:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 846:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 847:Drivers/CMSIS/Include/core_cm4.h **** 
 848:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 849:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 850:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 851:Drivers/CMSIS/Include/core_cm4.h **** 
 852:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 853:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 854:Drivers/CMSIS/Include/core_cm4.h **** 
 855:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 856:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 857:Drivers/CMSIS/Include/core_cm4.h **** 
 858:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 859:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 860:Drivers/CMSIS/Include/core_cm4.h **** 
 861:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 862:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 863:Drivers/CMSIS/Include/core_cm4.h **** 
 864:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 865:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 866:Drivers/CMSIS/Include/core_cm4.h **** 
 867:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 868:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 869:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccK8WG6y.s 			page 69


 870:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 871:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 872:Drivers/CMSIS/Include/core_cm4.h **** 
 873:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 874:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 875:Drivers/CMSIS/Include/core_cm4.h **** 
 876:Drivers/CMSIS/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 877:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:Drivers/CMSIS/Include/core_cm4.h **** 
 880:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:Drivers/CMSIS/Include/core_cm4.h **** 
 883:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 885:Drivers/CMSIS/Include/core_cm4.h **** 
 886:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 887:Drivers/CMSIS/Include/core_cm4.h **** 
 888:Drivers/CMSIS/Include/core_cm4.h **** 
 889:Drivers/CMSIS/Include/core_cm4.h **** /**
 890:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 891:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 893:Drivers/CMSIS/Include/core_cm4.h ****   @{
 894:Drivers/CMSIS/Include/core_cm4.h ****  */
 895:Drivers/CMSIS/Include/core_cm4.h **** 
 896:Drivers/CMSIS/Include/core_cm4.h **** /**
 897:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 898:Drivers/CMSIS/Include/core_cm4.h ****  */
 899:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 900:Drivers/CMSIS/Include/core_cm4.h **** {
 901:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 912:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 913:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 914:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[1U];
 917:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[1U];
 921:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 924:Drivers/CMSIS/Include/core_cm4.h **** } DWT_Type;
 925:Drivers/CMSIS/Include/core_cm4.h **** 
 926:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Control Register Definitions */
ARM GAS  /tmp/ccK8WG6y.s 			page 70


 927:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:Drivers/CMSIS/Include/core_cm4.h **** 
 930:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 931:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:Drivers/CMSIS/Include/core_cm4.h **** 
 933:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 934:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:Drivers/CMSIS/Include/core_cm4.h **** 
 936:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:Drivers/CMSIS/Include/core_cm4.h **** 
 939:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:Drivers/CMSIS/Include/core_cm4.h **** 
 942:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 944:Drivers/CMSIS/Include/core_cm4.h **** 
 945:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:Drivers/CMSIS/Include/core_cm4.h **** 
 948:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 950:Drivers/CMSIS/Include/core_cm4.h **** 
 951:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:Drivers/CMSIS/Include/core_cm4.h **** 
 954:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 955:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:Drivers/CMSIS/Include/core_cm4.h **** 
 957:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:Drivers/CMSIS/Include/core_cm4.h **** 
 960:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:Drivers/CMSIS/Include/core_cm4.h **** 
 963:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:Drivers/CMSIS/Include/core_cm4.h **** 
 966:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:Drivers/CMSIS/Include/core_cm4.h **** 
 969:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 971:Drivers/CMSIS/Include/core_cm4.h **** 
 972:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:Drivers/CMSIS/Include/core_cm4.h **** 
 975:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:Drivers/CMSIS/Include/core_cm4.h **** 
 978:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:Drivers/CMSIS/Include/core_cm4.h **** 
 981:Drivers/CMSIS/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 982:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
ARM GAS  /tmp/ccK8WG6y.s 			page 71


 984:Drivers/CMSIS/Include/core_cm4.h **** 
 985:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 988:Drivers/CMSIS/Include/core_cm4.h **** 
 989:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 991:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:Drivers/CMSIS/Include/core_cm4.h **** 
 993:Drivers/CMSIS/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:Drivers/CMSIS/Include/core_cm4.h **** 
 997:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 999:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:Drivers/CMSIS/Include/core_cm4.h **** 
1001:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1002:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:Drivers/CMSIS/Include/core_cm4.h **** 
1005:Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1007:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:Drivers/CMSIS/Include/core_cm4.h **** 
1009:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:Drivers/CMSIS/Include/core_cm4.h **** 
1012:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:Drivers/CMSIS/Include/core_cm4.h **** 
1015:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:Drivers/CMSIS/Include/core_cm4.h **** 
1018:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:Drivers/CMSIS/Include/core_cm4.h **** 
1021:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:Drivers/CMSIS/Include/core_cm4.h **** 
1024:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1026:Drivers/CMSIS/Include/core_cm4.h **** 
1027:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1028:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:Drivers/CMSIS/Include/core_cm4.h **** 
1030:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:Drivers/CMSIS/Include/core_cm4.h **** 
1033:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:Drivers/CMSIS/Include/core_cm4.h **** 
1035:Drivers/CMSIS/Include/core_cm4.h **** 
1036:Drivers/CMSIS/Include/core_cm4.h **** /**
1037:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1038:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1039:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:Drivers/CMSIS/Include/core_cm4.h ****   @{
ARM GAS  /tmp/ccK8WG6y.s 			page 72


1041:Drivers/CMSIS/Include/core_cm4.h ****  */
1042:Drivers/CMSIS/Include/core_cm4.h **** 
1043:Drivers/CMSIS/Include/core_cm4.h **** /**
1044:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1045:Drivers/CMSIS/Include/core_cm4.h ****  */
1046:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1047:Drivers/CMSIS/Include/core_cm4.h **** {
1048:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[2U];
1051:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[55U];
1053:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[131U];
1055:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1056:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1058:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[759U];
1059:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1060:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[1U];
1063:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1064:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[39U];
1067:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1069:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED7[8U];
1070:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:Drivers/CMSIS/Include/core_cm4.h **** } TPI_Type;
1073:Drivers/CMSIS/Include/core_cm4.h **** 
1074:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:Drivers/CMSIS/Include/core_cm4.h **** 
1078:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:Drivers/CMSIS/Include/core_cm4.h **** 
1082:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1083:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1085:Drivers/CMSIS/Include/core_cm4.h **** 
1086:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:Drivers/CMSIS/Include/core_cm4.h **** 
1089:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:Drivers/CMSIS/Include/core_cm4.h **** 
1092:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:Drivers/CMSIS/Include/core_cm4.h **** 
1095:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1096:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
ARM GAS  /tmp/ccK8WG6y.s 			page 73


1098:Drivers/CMSIS/Include/core_cm4.h **** 
1099:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:Drivers/CMSIS/Include/core_cm4.h **** 
1102:Drivers/CMSIS/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1105:Drivers/CMSIS/Include/core_cm4.h **** 
1106:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:Drivers/CMSIS/Include/core_cm4.h **** 
1110:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:Drivers/CMSIS/Include/core_cm4.h **** 
1113:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1115:Drivers/CMSIS/Include/core_cm4.h **** 
1116:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:Drivers/CMSIS/Include/core_cm4.h **** 
1119:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1121:Drivers/CMSIS/Include/core_cm4.h **** 
1122:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:Drivers/CMSIS/Include/core_cm4.h **** 
1125:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1126:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:Drivers/CMSIS/Include/core_cm4.h **** 
1128:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1130:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1131:Drivers/CMSIS/Include/core_cm4.h **** 
1132:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1133:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1134:Drivers/CMSIS/Include/core_cm4.h **** 
1135:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1136:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1137:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1138:Drivers/CMSIS/Include/core_cm4.h **** 
1139:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1140:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1141:Drivers/CMSIS/Include/core_cm4.h **** 
1142:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1143:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1144:Drivers/CMSIS/Include/core_cm4.h **** 
1145:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1146:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1147:Drivers/CMSIS/Include/core_cm4.h **** 
1148:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1149:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1150:Drivers/CMSIS/Include/core_cm4.h **** 
1151:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1152:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1153:Drivers/CMSIS/Include/core_cm4.h **** 
1154:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
ARM GAS  /tmp/ccK8WG6y.s 			page 74


1155:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1156:Drivers/CMSIS/Include/core_cm4.h **** 
1157:Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1158:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1159:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1160:Drivers/CMSIS/Include/core_cm4.h **** 
1161:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1162:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1163:Drivers/CMSIS/Include/core_cm4.h **** 
1164:Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1165:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1166:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1167:Drivers/CMSIS/Include/core_cm4.h **** 
1168:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1169:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1170:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1171:Drivers/CMSIS/Include/core_cm4.h **** 
1172:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1173:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1174:Drivers/CMSIS/Include/core_cm4.h **** 
1175:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1176:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1177:Drivers/CMSIS/Include/core_cm4.h **** 
1178:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1179:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1180:Drivers/CMSIS/Include/core_cm4.h **** 
1181:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1182:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1183:Drivers/CMSIS/Include/core_cm4.h **** 
1184:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1185:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1186:Drivers/CMSIS/Include/core_cm4.h **** 
1187:Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1188:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1189:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1190:Drivers/CMSIS/Include/core_cm4.h **** 
1191:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1192:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1193:Drivers/CMSIS/Include/core_cm4.h **** 
1194:Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1195:Drivers/CMSIS/Include/core_cm4.h **** 
1196:Drivers/CMSIS/Include/core_cm4.h **** 
1197:Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1198:Drivers/CMSIS/Include/core_cm4.h **** /**
1199:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1200:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1201:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1202:Drivers/CMSIS/Include/core_cm4.h ****   @{
1203:Drivers/CMSIS/Include/core_cm4.h ****  */
1204:Drivers/CMSIS/Include/core_cm4.h **** 
1205:Drivers/CMSIS/Include/core_cm4.h **** /**
1206:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1207:Drivers/CMSIS/Include/core_cm4.h ****  */
1208:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1209:Drivers/CMSIS/Include/core_cm4.h **** {
1210:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1211:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
ARM GAS  /tmp/ccK8WG6y.s 			page 75


1212:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1213:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1214:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1215:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1216:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1217:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1218:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1219:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1220:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1221:Drivers/CMSIS/Include/core_cm4.h **** } MPU_Type;
1222:Drivers/CMSIS/Include/core_cm4.h **** 
1223:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1224:Drivers/CMSIS/Include/core_cm4.h **** 
1225:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Type Register Definitions */
1226:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1227:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1228:Drivers/CMSIS/Include/core_cm4.h **** 
1229:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1230:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1231:Drivers/CMSIS/Include/core_cm4.h **** 
1232:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1233:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1234:Drivers/CMSIS/Include/core_cm4.h **** 
1235:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Control Register Definitions */
1236:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1237:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1238:Drivers/CMSIS/Include/core_cm4.h **** 
1239:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1240:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1241:Drivers/CMSIS/Include/core_cm4.h **** 
1242:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1243:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1244:Drivers/CMSIS/Include/core_cm4.h **** 
1245:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Number Register Definitions */
1246:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1247:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1248:Drivers/CMSIS/Include/core_cm4.h **** 
1249:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1250:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1251:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1252:Drivers/CMSIS/Include/core_cm4.h **** 
1253:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1254:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1255:Drivers/CMSIS/Include/core_cm4.h **** 
1256:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1257:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1258:Drivers/CMSIS/Include/core_cm4.h **** 
1259:Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1260:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1261:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1262:Drivers/CMSIS/Include/core_cm4.h **** 
1263:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1264:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1265:Drivers/CMSIS/Include/core_cm4.h **** 
1266:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1267:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1268:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccK8WG6y.s 			page 76


1269:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1270:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1271:Drivers/CMSIS/Include/core_cm4.h **** 
1272:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1273:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1274:Drivers/CMSIS/Include/core_cm4.h **** 
1275:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1276:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1277:Drivers/CMSIS/Include/core_cm4.h **** 
1278:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1279:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1280:Drivers/CMSIS/Include/core_cm4.h **** 
1281:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1282:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1283:Drivers/CMSIS/Include/core_cm4.h **** 
1284:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1285:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1286:Drivers/CMSIS/Include/core_cm4.h **** 
1287:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1288:Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1289:Drivers/CMSIS/Include/core_cm4.h **** 
1290:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1291:Drivers/CMSIS/Include/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1292:Drivers/CMSIS/Include/core_cm4.h **** 
1293:Drivers/CMSIS/Include/core_cm4.h **** 
1294:Drivers/CMSIS/Include/core_cm4.h **** /**
1295:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1296:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1297:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1298:Drivers/CMSIS/Include/core_cm4.h ****   @{
1299:Drivers/CMSIS/Include/core_cm4.h ****  */
1300:Drivers/CMSIS/Include/core_cm4.h **** 
1301:Drivers/CMSIS/Include/core_cm4.h **** /**
1302:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1303:Drivers/CMSIS/Include/core_cm4.h ****  */
1304:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1305:Drivers/CMSIS/Include/core_cm4.h **** {
1306:Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
1307:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1308:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1309:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1310:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1311:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1312:Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1313:Drivers/CMSIS/Include/core_cm4.h **** } FPU_Type;
1314:Drivers/CMSIS/Include/core_cm4.h **** 
1315:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1316:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1317:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1318:Drivers/CMSIS/Include/core_cm4.h **** 
1319:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1320:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1321:Drivers/CMSIS/Include/core_cm4.h **** 
1322:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1323:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1324:Drivers/CMSIS/Include/core_cm4.h **** 
1325:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
ARM GAS  /tmp/ccK8WG6y.s 			page 77


1326:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1327:Drivers/CMSIS/Include/core_cm4.h **** 
1328:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1329:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1330:Drivers/CMSIS/Include/core_cm4.h **** 
1331:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1332:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1333:Drivers/CMSIS/Include/core_cm4.h **** 
1334:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1335:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1336:Drivers/CMSIS/Include/core_cm4.h **** 
1337:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1338:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1339:Drivers/CMSIS/Include/core_cm4.h **** 
1340:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1341:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1342:Drivers/CMSIS/Include/core_cm4.h **** 
1343:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1344:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1345:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1346:Drivers/CMSIS/Include/core_cm4.h **** 
1347:Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1348:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1349:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1350:Drivers/CMSIS/Include/core_cm4.h **** 
1351:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1352:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1353:Drivers/CMSIS/Include/core_cm4.h **** 
1354:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1355:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1356:Drivers/CMSIS/Include/core_cm4.h **** 
1357:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1358:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1359:Drivers/CMSIS/Include/core_cm4.h **** 
1360:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1361:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1362:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1363:Drivers/CMSIS/Include/core_cm4.h **** 
1364:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1365:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1366:Drivers/CMSIS/Include/core_cm4.h **** 
1367:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1368:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1369:Drivers/CMSIS/Include/core_cm4.h **** 
1370:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1371:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1372:Drivers/CMSIS/Include/core_cm4.h **** 
1373:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1374:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1375:Drivers/CMSIS/Include/core_cm4.h **** 
1376:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1377:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1378:Drivers/CMSIS/Include/core_cm4.h **** 
1379:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1380:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1381:Drivers/CMSIS/Include/core_cm4.h **** 
1382:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
ARM GAS  /tmp/ccK8WG6y.s 			page 78


1383:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1384:Drivers/CMSIS/Include/core_cm4.h **** 
1385:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1386:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1387:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1388:Drivers/CMSIS/Include/core_cm4.h **** 
1389:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1390:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1391:Drivers/CMSIS/Include/core_cm4.h **** 
1392:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1393:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1394:Drivers/CMSIS/Include/core_cm4.h **** 
1395:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1396:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1397:Drivers/CMSIS/Include/core_cm4.h **** 
1398:Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 2 Definitions */
1399:Drivers/CMSIS/Include/core_cm4.h **** 
1400:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1401:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1402:Drivers/CMSIS/Include/core_cm4.h **** 
1403:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1404:Drivers/CMSIS/Include/core_cm4.h **** 
1405:Drivers/CMSIS/Include/core_cm4.h **** 
1406:Drivers/CMSIS/Include/core_cm4.h **** /**
1407:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1408:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1409:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1410:Drivers/CMSIS/Include/core_cm4.h ****   @{
1411:Drivers/CMSIS/Include/core_cm4.h ****  */
1412:Drivers/CMSIS/Include/core_cm4.h **** 
1413:Drivers/CMSIS/Include/core_cm4.h **** /**
1414:Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1415:Drivers/CMSIS/Include/core_cm4.h ****  */
1416:Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1417:Drivers/CMSIS/Include/core_cm4.h **** {
1418:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1419:Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1420:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1421:Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1422:Drivers/CMSIS/Include/core_cm4.h **** } CoreDebug_Type;
1423:Drivers/CMSIS/Include/core_cm4.h **** 
1424:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1425:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1426:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1427:Drivers/CMSIS/Include/core_cm4.h **** 
1428:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1429:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1430:Drivers/CMSIS/Include/core_cm4.h **** 
1431:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1432:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1433:Drivers/CMSIS/Include/core_cm4.h **** 
1434:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1435:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1436:Drivers/CMSIS/Include/core_cm4.h **** 
1437:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1438:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1439:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccK8WG6y.s 			page 79


1440:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1441:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1442:Drivers/CMSIS/Include/core_cm4.h **** 
1443:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1444:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1445:Drivers/CMSIS/Include/core_cm4.h **** 
1446:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1447:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1448:Drivers/CMSIS/Include/core_cm4.h **** 
1449:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1450:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1451:Drivers/CMSIS/Include/core_cm4.h **** 
1452:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1453:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1454:Drivers/CMSIS/Include/core_cm4.h **** 
1455:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1456:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1457:Drivers/CMSIS/Include/core_cm4.h **** 
1458:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1459:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1460:Drivers/CMSIS/Include/core_cm4.h **** 
1461:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1462:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1463:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1464:Drivers/CMSIS/Include/core_cm4.h **** 
1465:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1466:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1467:Drivers/CMSIS/Include/core_cm4.h **** 
1468:Drivers/CMSIS/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1469:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1470:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1471:Drivers/CMSIS/Include/core_cm4.h **** 
1472:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1473:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1474:Drivers/CMSIS/Include/core_cm4.h **** 
1475:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1476:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1477:Drivers/CMSIS/Include/core_cm4.h **** 
1478:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1479:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1480:Drivers/CMSIS/Include/core_cm4.h **** 
1481:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1482:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1483:Drivers/CMSIS/Include/core_cm4.h **** 
1484:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1485:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1486:Drivers/CMSIS/Include/core_cm4.h **** 
1487:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1488:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1489:Drivers/CMSIS/Include/core_cm4.h **** 
1490:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1491:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1492:Drivers/CMSIS/Include/core_cm4.h **** 
1493:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1494:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1495:Drivers/CMSIS/Include/core_cm4.h **** 
1496:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
ARM GAS  /tmp/ccK8WG6y.s 			page 80


1497:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1498:Drivers/CMSIS/Include/core_cm4.h **** 
1499:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1500:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1501:Drivers/CMSIS/Include/core_cm4.h **** 
1502:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1503:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1504:Drivers/CMSIS/Include/core_cm4.h **** 
1505:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1506:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1507:Drivers/CMSIS/Include/core_cm4.h **** 
1508:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1509:Drivers/CMSIS/Include/core_cm4.h **** 
1510:Drivers/CMSIS/Include/core_cm4.h **** 
1511:Drivers/CMSIS/Include/core_cm4.h **** /**
1512:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1513:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1514:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1515:Drivers/CMSIS/Include/core_cm4.h ****   @{
1516:Drivers/CMSIS/Include/core_cm4.h ****  */
1517:Drivers/CMSIS/Include/core_cm4.h **** 
1518:Drivers/CMSIS/Include/core_cm4.h **** /**
1519:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1520:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1521:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1522:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted value.
1523:Drivers/CMSIS/Include/core_cm4.h **** */
1524:Drivers/CMSIS/Include/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1525:Drivers/CMSIS/Include/core_cm4.h **** 
1526:Drivers/CMSIS/Include/core_cm4.h **** /**
1527:Drivers/CMSIS/Include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1528:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1529:Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1530:Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted bit field value.
1531:Drivers/CMSIS/Include/core_cm4.h **** */
1532:Drivers/CMSIS/Include/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1533:Drivers/CMSIS/Include/core_cm4.h **** 
1534:Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1535:Drivers/CMSIS/Include/core_cm4.h **** 
1536:Drivers/CMSIS/Include/core_cm4.h **** 
1537:Drivers/CMSIS/Include/core_cm4.h **** /**
1538:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1539:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1540:Drivers/CMSIS/Include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1541:Drivers/CMSIS/Include/core_cm4.h ****   @{
1542:Drivers/CMSIS/Include/core_cm4.h ****  */
1543:Drivers/CMSIS/Include/core_cm4.h **** 
1544:Drivers/CMSIS/Include/core_cm4.h **** /* Memory mapping of Core Hardware */
1545:Drivers/CMSIS/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1546:Drivers/CMSIS/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1547:Drivers/CMSIS/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1548:Drivers/CMSIS/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1549:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1550:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1551:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1552:Drivers/CMSIS/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1553:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccK8WG6y.s 			page 81


1554:Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1555:Drivers/CMSIS/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1556:Drivers/CMSIS/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1557:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1558:Drivers/CMSIS/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1559:Drivers/CMSIS/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1560:Drivers/CMSIS/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1561:Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1562:Drivers/CMSIS/Include/core_cm4.h **** 
1563:Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1564:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1565:Drivers/CMSIS/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1566:Drivers/CMSIS/Include/core_cm4.h **** #endif
1567:Drivers/CMSIS/Include/core_cm4.h **** 
1568:Drivers/CMSIS/Include/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1569:Drivers/CMSIS/Include/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1570:Drivers/CMSIS/Include/core_cm4.h **** 
1571:Drivers/CMSIS/Include/core_cm4.h **** /*@} */
1572:Drivers/CMSIS/Include/core_cm4.h **** 
1573:Drivers/CMSIS/Include/core_cm4.h **** 
1574:Drivers/CMSIS/Include/core_cm4.h **** 
1575:Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
1576:Drivers/CMSIS/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1577:Drivers/CMSIS/Include/core_cm4.h ****   Core Function Interface contains:
1578:Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Functions
1579:Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Functions
1580:Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Functions
1581:Drivers/CMSIS/Include/core_cm4.h ****   - Core Register Access Functions
1582:Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
1583:Drivers/CMSIS/Include/core_cm4.h **** /**
1584:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1585:Drivers/CMSIS/Include/core_cm4.h **** */
1586:Drivers/CMSIS/Include/core_cm4.h **** 
1587:Drivers/CMSIS/Include/core_cm4.h **** 
1588:Drivers/CMSIS/Include/core_cm4.h **** 
1589:Drivers/CMSIS/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1590:Drivers/CMSIS/Include/core_cm4.h **** /**
1591:Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1592:Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1593:Drivers/CMSIS/Include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1594:Drivers/CMSIS/Include/core_cm4.h ****   @{
1595:Drivers/CMSIS/Include/core_cm4.h ****  */
1596:Drivers/CMSIS/Include/core_cm4.h **** 
1597:Drivers/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1598:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1599:Drivers/CMSIS/Include/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1600:Drivers/CMSIS/Include/core_cm4.h ****   #endif
1601:Drivers/CMSIS/Include/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1602:Drivers/CMSIS/Include/core_cm4.h **** #else
1603:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1604:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1605:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1606:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1607:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1608:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1609:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1610:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
ARM GAS  /tmp/ccK8WG6y.s 			page 82


1611:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1612:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1613:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1614:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1615:Drivers/CMSIS/Include/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1616:Drivers/CMSIS/Include/core_cm4.h **** 
1617:Drivers/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1618:Drivers/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1619:Drivers/CMSIS/Include/core_cm4.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1620:Drivers/CMSIS/Include/core_cm4.h ****   #endif
1621:Drivers/CMSIS/Include/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1622:Drivers/CMSIS/Include/core_cm4.h **** #else
1623:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1624:Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1625:Drivers/CMSIS/Include/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1626:Drivers/CMSIS/Include/core_cm4.h **** 
1627:Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1628:Drivers/CMSIS/Include/core_cm4.h **** 
1629:Drivers/CMSIS/Include/core_cm4.h **** 
1630:Drivers/CMSIS/Include/core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1631:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1632:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1633:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1634:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1635:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1636:Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1637:Drivers/CMSIS/Include/core_cm4.h **** 
1638:Drivers/CMSIS/Include/core_cm4.h **** 
1639:Drivers/CMSIS/Include/core_cm4.h **** /**
1640:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Priority Grouping
1641:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1642:Drivers/CMSIS/Include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1643:Drivers/CMSIS/Include/core_cm4.h ****            Only values from 0..7 are used.
1644:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1645:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1646:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1647:Drivers/CMSIS/Include/core_cm4.h ****  */
1648:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1649:Drivers/CMSIS/Include/core_cm4.h **** {
1650:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t reg_value;
1651:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1652:Drivers/CMSIS/Include/core_cm4.h **** 
1653:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1654:Drivers/CMSIS/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1655:Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
1656:Drivers/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1657:Drivers/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1658:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
1659:Drivers/CMSIS/Include/core_cm4.h **** }
1660:Drivers/CMSIS/Include/core_cm4.h **** 
1661:Drivers/CMSIS/Include/core_cm4.h **** 
1662:Drivers/CMSIS/Include/core_cm4.h **** /**
1663:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Priority Grouping
1664:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1665:Drivers/CMSIS/Include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1666:Drivers/CMSIS/Include/core_cm4.h ****  */
1667:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
ARM GAS  /tmp/ccK8WG6y.s 			page 83


1668:Drivers/CMSIS/Include/core_cm4.h **** {
1669:Drivers/CMSIS/Include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1670:Drivers/CMSIS/Include/core_cm4.h **** }
1671:Drivers/CMSIS/Include/core_cm4.h **** 
1672:Drivers/CMSIS/Include/core_cm4.h **** 
1673:Drivers/CMSIS/Include/core_cm4.h **** /**
1674:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Enable Interrupt
1675:Drivers/CMSIS/Include/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1676:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1677:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1678:Drivers/CMSIS/Include/core_cm4.h ****  */
1679:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1680:Drivers/CMSIS/Include/core_cm4.h **** {
1681:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1682:Drivers/CMSIS/Include/core_cm4.h ****   {
1683:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
1684:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1685:Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
1686:Drivers/CMSIS/Include/core_cm4.h ****   }
1687:Drivers/CMSIS/Include/core_cm4.h **** }
1688:Drivers/CMSIS/Include/core_cm4.h **** 
1689:Drivers/CMSIS/Include/core_cm4.h **** 
1690:Drivers/CMSIS/Include/core_cm4.h **** /**
1691:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Enable status
1692:Drivers/CMSIS/Include/core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1693:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1694:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt is not enabled.
1695:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt is enabled.
1696:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1697:Drivers/CMSIS/Include/core_cm4.h ****  */
1698:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1699:Drivers/CMSIS/Include/core_cm4.h **** {
1700:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1701:Drivers/CMSIS/Include/core_cm4.h ****   {
1702:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1703:Drivers/CMSIS/Include/core_cm4.h ****   }
1704:Drivers/CMSIS/Include/core_cm4.h ****   else
1705:Drivers/CMSIS/Include/core_cm4.h ****   {
1706:Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1707:Drivers/CMSIS/Include/core_cm4.h ****   }
1708:Drivers/CMSIS/Include/core_cm4.h **** }
1709:Drivers/CMSIS/Include/core_cm4.h **** 
1710:Drivers/CMSIS/Include/core_cm4.h **** 
1711:Drivers/CMSIS/Include/core_cm4.h **** /**
1712:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Disable Interrupt
1713:Drivers/CMSIS/Include/core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1714:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1715:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1716:Drivers/CMSIS/Include/core_cm4.h ****  */
1717:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1718:Drivers/CMSIS/Include/core_cm4.h **** {
1719:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1720:Drivers/CMSIS/Include/core_cm4.h ****   {
1721:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1722:Drivers/CMSIS/Include/core_cm4.h ****     __DSB();
1723:Drivers/CMSIS/Include/core_cm4.h ****     __ISB();
1724:Drivers/CMSIS/Include/core_cm4.h ****   }
ARM GAS  /tmp/ccK8WG6y.s 			page 84


1725:Drivers/CMSIS/Include/core_cm4.h **** }
1726:Drivers/CMSIS/Include/core_cm4.h **** 
1727:Drivers/CMSIS/Include/core_cm4.h **** 
1728:Drivers/CMSIS/Include/core_cm4.h **** /**
1729:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Pending Interrupt
1730:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1731:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1732:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not pending.
1733:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is pending.
1734:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1735:Drivers/CMSIS/Include/core_cm4.h ****  */
1736:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1737:Drivers/CMSIS/Include/core_cm4.h **** {
1738:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1739:Drivers/CMSIS/Include/core_cm4.h ****   {
1740:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1741:Drivers/CMSIS/Include/core_cm4.h ****   }
1742:Drivers/CMSIS/Include/core_cm4.h ****   else
1743:Drivers/CMSIS/Include/core_cm4.h ****   {
1744:Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1745:Drivers/CMSIS/Include/core_cm4.h ****   }
1746:Drivers/CMSIS/Include/core_cm4.h **** }
1747:Drivers/CMSIS/Include/core_cm4.h **** 
1748:Drivers/CMSIS/Include/core_cm4.h **** 
1749:Drivers/CMSIS/Include/core_cm4.h **** /**
1750:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Pending Interrupt
1751:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1752:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1753:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1754:Drivers/CMSIS/Include/core_cm4.h ****  */
1755:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1756:Drivers/CMSIS/Include/core_cm4.h **** {
1757:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1758:Drivers/CMSIS/Include/core_cm4.h ****   {
1759:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1760:Drivers/CMSIS/Include/core_cm4.h ****   }
1761:Drivers/CMSIS/Include/core_cm4.h **** }
1762:Drivers/CMSIS/Include/core_cm4.h **** 
1763:Drivers/CMSIS/Include/core_cm4.h **** 
1764:Drivers/CMSIS/Include/core_cm4.h **** /**
1765:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Clear Pending Interrupt
1766:Drivers/CMSIS/Include/core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1767:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1768:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1769:Drivers/CMSIS/Include/core_cm4.h ****  */
1770:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1771:Drivers/CMSIS/Include/core_cm4.h **** {
1772:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1773:Drivers/CMSIS/Include/core_cm4.h ****   {
1774:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1775:Drivers/CMSIS/Include/core_cm4.h ****   }
1776:Drivers/CMSIS/Include/core_cm4.h **** }
1777:Drivers/CMSIS/Include/core_cm4.h **** 
1778:Drivers/CMSIS/Include/core_cm4.h **** 
1779:Drivers/CMSIS/Include/core_cm4.h **** /**
1780:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Active Interrupt
1781:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
ARM GAS  /tmp/ccK8WG6y.s 			page 85


1782:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1783:Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not active.
1784:Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is active.
1785:Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1786:Drivers/CMSIS/Include/core_cm4.h ****  */
1787:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1788:Drivers/CMSIS/Include/core_cm4.h **** {
1789:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1790:Drivers/CMSIS/Include/core_cm4.h ****   {
1791:Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1792:Drivers/CMSIS/Include/core_cm4.h ****   }
1793:Drivers/CMSIS/Include/core_cm4.h ****   else
1794:Drivers/CMSIS/Include/core_cm4.h ****   {
1795:Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1796:Drivers/CMSIS/Include/core_cm4.h ****   }
1797:Drivers/CMSIS/Include/core_cm4.h **** }
1798:Drivers/CMSIS/Include/core_cm4.h **** 
1799:Drivers/CMSIS/Include/core_cm4.h **** 
1800:Drivers/CMSIS/Include/core_cm4.h **** /**
1801:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Priority
1802:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1803:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1804:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1805:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1806:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]  priority  Priority to set.
1807:Drivers/CMSIS/Include/core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1808:Drivers/CMSIS/Include/core_cm4.h ****  */
1809:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1810:Drivers/CMSIS/Include/core_cm4.h **** {
1811:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1812:Drivers/CMSIS/Include/core_cm4.h ****   {
1813:Drivers/CMSIS/Include/core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1814:Drivers/CMSIS/Include/core_cm4.h ****   }
1815:Drivers/CMSIS/Include/core_cm4.h ****   else
1816:Drivers/CMSIS/Include/core_cm4.h ****   {
1817:Drivers/CMSIS/Include/core_cm4.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1818:Drivers/CMSIS/Include/core_cm4.h ****   }
1819:Drivers/CMSIS/Include/core_cm4.h **** }
1820:Drivers/CMSIS/Include/core_cm4.h **** 
1821:Drivers/CMSIS/Include/core_cm4.h **** 
1822:Drivers/CMSIS/Include/core_cm4.h **** /**
1823:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Priority
1824:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1825:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1826:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1827:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1828:Drivers/CMSIS/Include/core_cm4.h ****   \return             Interrupt Priority.
1829:Drivers/CMSIS/Include/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1830:Drivers/CMSIS/Include/core_cm4.h ****  */
1831:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1832:Drivers/CMSIS/Include/core_cm4.h **** {
1833:Drivers/CMSIS/Include/core_cm4.h **** 
1834:Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1835:Drivers/CMSIS/Include/core_cm4.h ****   {
1836:Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
1837:Drivers/CMSIS/Include/core_cm4.h ****   }
1838:Drivers/CMSIS/Include/core_cm4.h ****   else
ARM GAS  /tmp/ccK8WG6y.s 			page 86


1839:Drivers/CMSIS/Include/core_cm4.h ****   {
1840:Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
1841:Drivers/CMSIS/Include/core_cm4.h ****   }
1842:Drivers/CMSIS/Include/core_cm4.h **** }
1843:Drivers/CMSIS/Include/core_cm4.h **** 
1844:Drivers/CMSIS/Include/core_cm4.h **** 
1845:Drivers/CMSIS/Include/core_cm4.h **** /**
1846:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Encode Priority
1847:Drivers/CMSIS/Include/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1848:Drivers/CMSIS/Include/core_cm4.h ****            preemptive priority value, and subpriority value.
1849:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1850:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1851:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1852:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1853:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1854:Drivers/CMSIS/Include/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1855:Drivers/CMSIS/Include/core_cm4.h ****  */
1856:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1857:Drivers/CMSIS/Include/core_cm4.h **** {
1858:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1859:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1860:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1861:Drivers/CMSIS/Include/core_cm4.h **** 
1862:Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1863:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1864:Drivers/CMSIS/Include/core_cm4.h **** 
1865:Drivers/CMSIS/Include/core_cm4.h ****   return (
1866:Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
1867:Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1868:Drivers/CMSIS/Include/core_cm4.h ****          );
1869:Drivers/CMSIS/Include/core_cm4.h **** }
1870:Drivers/CMSIS/Include/core_cm4.h **** 
1871:Drivers/CMSIS/Include/core_cm4.h **** 
1872:Drivers/CMSIS/Include/core_cm4.h **** /**
1873:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Decode Priority
1874:Drivers/CMSIS/Include/core_cm4.h ****   \details Decodes an interrupt priority value with a given priority group to
1875:Drivers/CMSIS/Include/core_cm4.h ****            preemptive priority value and subpriority value.
1876:Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1877:Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1878:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1879:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1880:Drivers/CMSIS/Include/core_cm4.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1881:Drivers/CMSIS/Include/core_cm4.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1882:Drivers/CMSIS/Include/core_cm4.h ****  */
1883:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1884:Drivers/CMSIS/Include/core_cm4.h **** {
1885:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1886:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1887:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1888:Drivers/CMSIS/Include/core_cm4.h **** 
1889:Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1890:Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1891:Drivers/CMSIS/Include/core_cm4.h **** 
1892:Drivers/CMSIS/Include/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1893:Drivers/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1894:Drivers/CMSIS/Include/core_cm4.h **** }
1895:Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccK8WG6y.s 			page 87


1896:Drivers/CMSIS/Include/core_cm4.h **** 
1897:Drivers/CMSIS/Include/core_cm4.h **** /**
1898:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Vector
1899:Drivers/CMSIS/Include/core_cm4.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
1900:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1901:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1902:Drivers/CMSIS/Include/core_cm4.h ****            VTOR must been relocated to SRAM before.
1903:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number
1904:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   vector    Address of interrupt handler function
1905:Drivers/CMSIS/Include/core_cm4.h ****  */
1906:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
1907:Drivers/CMSIS/Include/core_cm4.h **** {
1908:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
1909:Drivers/CMSIS/Include/core_cm4.h ****   (* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4)) = vector;
1910:Drivers/CMSIS/Include/core_cm4.h ****   /* ARM Application Note 321 states that the M4 does not require the architectural barrier */
1911:Drivers/CMSIS/Include/core_cm4.h **** }
1912:Drivers/CMSIS/Include/core_cm4.h **** 
1913:Drivers/CMSIS/Include/core_cm4.h **** 
1914:Drivers/CMSIS/Include/core_cm4.h **** /**
1915:Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Vector
1916:Drivers/CMSIS/Include/core_cm4.h ****   \details Reads an interrupt vector from interrupt vector table.
1917:Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1918:Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1919:Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number.
1920:Drivers/CMSIS/Include/core_cm4.h ****   \return                 Address of interrupt handler function
1921:Drivers/CMSIS/Include/core_cm4.h ****  */
1922:Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
1923:Drivers/CMSIS/Include/core_cm4.h **** {
1924:Drivers/CMSIS/Include/core_cm4.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
1925:Drivers/CMSIS/Include/core_cm4.h ****   return (uint32_t)(* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4));
1926:Drivers/CMSIS/Include/core_cm4.h **** }
1927:Drivers/CMSIS/Include/core_cm4.h **** 
1928:Drivers/CMSIS/Include/core_cm4.h **** 
1929:Drivers/CMSIS/Include/core_cm4.h **** /**
1930:Drivers/CMSIS/Include/core_cm4.h ****   \brief   System Reset
1931:Drivers/CMSIS/Include/core_cm4.h ****   \details Initiates a system reset request to reset the MCU.
1932:Drivers/CMSIS/Include/core_cm4.h ****  */
1933:Drivers/CMSIS/Include/core_cm4.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
 1775              		.loc 3 1933 34 view .LVU430
 1776              	.LBB26:
1934:Drivers/CMSIS/Include/core_cm4.h **** {
1935:Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
 1777              		.loc 3 1935 3 view .LVU431
 1778              	.LBB27:
 1779              	.LBI27:
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccK8WG6y.s 			page 88


 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccK8WG6y.s 			page 89


 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccK8WG6y.s 			page 90


 336:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccK8WG6y.s 			page 91


 393:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
ARM GAS  /tmp/ccK8WG6y.s 			page 92


 450:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
ARM GAS  /tmp/ccK8WG6y.s 			page 93


 507:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccK8WG6y.s 			page 94


 564:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
ARM GAS  /tmp/ccK8WG6y.s 			page 95


 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccK8WG6y.s 			page 96


 678:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccK8WG6y.s 			page 97


 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccK8WG6y.s 			page 98


 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  /tmp/ccK8WG6y.s 			page 99


 849:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccK8WG6y.s 			page 100


 906:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 1780              		.loc 2 944 27 view .LVU432
 1781              	.LBB28:
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 1782              		.loc 2 946 3 view .LVU433
 1783              		.syntax unified
 1784              	@ 946 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1785 003c BFF34F8F 		dsb 0xF
 1786              	@ 0 "" 2
 1787              		.thumb
 1788              		.syntax unified
 1789              	.LBE28:
 1790              	.LBE27:
1936:Drivers/CMSIS/Include/core_cm4.h ****                                                                        buffered write are completed
1937:Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 1791              		.loc 3 1937 3 view .LVU434
1938:Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 1792              		.loc 3 1938 32 is_stmt 0 view .LVU435
ARM GAS  /tmp/ccK8WG6y.s 			page 101


 1793 0040 0B49     		ldr	r1, .L66+24
 1794 0042 CA68     		ldr	r2, [r1, #12]
 1795              		.loc 3 1938 40 view .LVU436
 1796 0044 02F4E062 		and	r2, r2, #1792
1937:Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 1797              		.loc 3 1937 17 view .LVU437
 1798 0048 0A4B     		ldr	r3, .L66+28
 1799 004a 1343     		orrs	r3, r3, r2
1937:Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 1800              		.loc 3 1937 15 view .LVU438
 1801 004c CB60     		str	r3, [r1, #12]
1939:Drivers/CMSIS/Include/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1940:Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
 1802              		.loc 3 1940 3 is_stmt 1 view .LVU439
 1803              	.LBB29:
 1804              	.LBI29:
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1805              		.loc 2 944 27 view .LVU440
 1806              	.LBB30:
 1807              		.loc 2 946 3 view .LVU441
 1808              		.syntax unified
 1809              	@ 946 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1810 004e BFF34F8F 		dsb 0xF
 1811              	@ 0 "" 2
 1812              		.thumb
 1813              		.syntax unified
 1814              	.L64:
 1815              	.LBE30:
 1816              	.LBE29:
1941:Drivers/CMSIS/Include/core_cm4.h **** 
1942:Drivers/CMSIS/Include/core_cm4.h ****   for(;;)                                                           /* wait until reset */
 1817              		.loc 3 1942 3 view .LVU442
1943:Drivers/CMSIS/Include/core_cm4.h ****   {
1944:Drivers/CMSIS/Include/core_cm4.h ****     __NOP();
 1818              		.loc 3 1944 5 view .LVU443
 1819              		.syntax unified
 1820              	@ 1944 "Drivers/CMSIS/Include/core_cm4.h" 1
 1821 0052 00BF     		nop
 1822              	@ 0 "" 2
1942:Drivers/CMSIS/Include/core_cm4.h ****   {
 1823              		.loc 3 1942 8 view .LVU444
 1824              		.thumb
 1825              		.syntax unified
 1826 0054 FDE7     		b	.L64
 1827              	.L67:
 1828 0056 00BF     		.align	2
 1829              	.L66:
 1830 0058 1C000000 		.word	.LC6
 1831 005c 24000000 		.word	.LC7
 1832 0060 00000000 		.word	.LANCHOR1
 1833 0064 00000000 		.word	.LC27
 1834 0068 28000000 		.word	.LC3
 1835 006c 04000000 		.word	.LC28
 1836 0070 00ED00E0 		.word	-536810240
 1837 0074 0400FA05 		.word	100270084
 1838              	.LBE26:
 1839              	.LBE25:
ARM GAS  /tmp/ccK8WG6y.s 			page 102


 1840              		.cfi_endproc
 1841              	.LFE451:
 1843              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 1844              		.align	1
 1845              		.syntax unified
 1846              		.thumb
 1847              		.thumb_func
 1848              		.fpu fpv4-sp-d16
 1850              	MX_USART2_UART_Init:
 1851              	.LFB437:
 405:Src/main.c    **** 
 1852              		.loc 1 405 1 view -0
 1853              		.cfi_startproc
 1854              		@ args = 0, pretend = 0, frame = 0
 1855              		@ frame_needed = 0, uses_anonymous_args = 0
 1856 0000 08B5     		push	{r3, lr}
 1857              	.LCFI38:
 1858              		.cfi_def_cfa_offset 8
 1859              		.cfi_offset 3, -8
 1860              		.cfi_offset 14, -4
 414:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 1861              		.loc 1 414 3 view .LVU446
 414:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 1862              		.loc 1 414 19 is_stmt 0 view .LVU447
 1863 0002 0B48     		ldr	r0, .L72
 1864 0004 0B4B     		ldr	r3, .L72+4
 1865 0006 0360     		str	r3, [r0]
 415:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1866              		.loc 1 415 3 is_stmt 1 view .LVU448
 415:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 1867              		.loc 1 415 24 is_stmt 0 view .LVU449
 1868 0008 4FF4E133 		mov	r3, #115200
 1869 000c 4360     		str	r3, [r0, #4]
 416:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1870              		.loc 1 416 3 is_stmt 1 view .LVU450
 416:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 1871              		.loc 1 416 26 is_stmt 0 view .LVU451
 1872 000e 0023     		movs	r3, #0
 1873 0010 8360     		str	r3, [r0, #8]
 417:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 1874              		.loc 1 417 3 is_stmt 1 view .LVU452
 417:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 1875              		.loc 1 417 24 is_stmt 0 view .LVU453
 1876 0012 C360     		str	r3, [r0, #12]
 418:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1877              		.loc 1 418 3 is_stmt 1 view .LVU454
 418:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 1878              		.loc 1 418 22 is_stmt 0 view .LVU455
 1879 0014 0361     		str	r3, [r0, #16]
 419:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1880              		.loc 1 419 3 is_stmt 1 view .LVU456
 419:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 1881              		.loc 1 419 20 is_stmt 0 view .LVU457
 1882 0016 0C22     		movs	r2, #12
 1883 0018 4261     		str	r2, [r0, #20]
 420:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1884              		.loc 1 420 3 is_stmt 1 view .LVU458
ARM GAS  /tmp/ccK8WG6y.s 			page 103


 420:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 1885              		.loc 1 420 25 is_stmt 0 view .LVU459
 1886 001a 8361     		str	r3, [r0, #24]
 421:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1887              		.loc 1 421 3 is_stmt 1 view .LVU460
 421:Src/main.c    ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 1888              		.loc 1 421 28 is_stmt 0 view .LVU461
 1889 001c C361     		str	r3, [r0, #28]
 422:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1890              		.loc 1 422 3 is_stmt 1 view .LVU462
 422:Src/main.c    ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 1891              		.loc 1 422 30 is_stmt 0 view .LVU463
 1892 001e 0362     		str	r3, [r0, #32]
 423:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1893              		.loc 1 423 3 is_stmt 1 view .LVU464
 423:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 1894              		.loc 1 423 38 is_stmt 0 view .LVU465
 1895 0020 4362     		str	r3, [r0, #36]
 424:Src/main.c    ****   {
 1896              		.loc 1 424 3 is_stmt 1 view .LVU466
 424:Src/main.c    ****   {
 1897              		.loc 1 424 7 is_stmt 0 view .LVU467
 1898 0022 FFF7FEFF 		bl	HAL_UART_Init
 1899              	.LVL180:
 424:Src/main.c    ****   {
 1900              		.loc 1 424 6 view .LVU468
 1901 0026 00B9     		cbnz	r0, .L71
 432:Src/main.c    **** 
 1902              		.loc 1 432 1 view .LVU469
 1903 0028 08BD     		pop	{r3, pc}
 1904              	.L71:
 426:Src/main.c    ****   }
 1905              		.loc 1 426 5 is_stmt 1 view .LVU470
 1906 002a FFF7FEFF 		bl	Error_Handler
 1907              	.LVL181:
 1908              	.L73:
 1909 002e 00BF     		.align	2
 1910              	.L72:
 1911 0030 00000000 		.word	.LANCHOR0
 1912 0034 00440040 		.word	1073759232
 1913              		.cfi_endproc
 1914              	.LFE437:
 1916              		.section	.text.MX_RTC_Init,"ax",%progbits
 1917              		.align	1
 1918              		.syntax unified
 1919              		.thumb
 1920              		.thumb_func
 1921              		.fpu fpv4-sp-d16
 1923              	MX_RTC_Init:
 1924              	.LFB435:
 299:Src/main.c    **** 
 1925              		.loc 1 299 1 view -0
 1926              		.cfi_startproc
 1927              		@ args = 0, pretend = 0, frame = 24
 1928              		@ frame_needed = 0, uses_anonymous_args = 0
 1929 0000 00B5     		push	{lr}
 1930              	.LCFI39:
ARM GAS  /tmp/ccK8WG6y.s 			page 104


 1931              		.cfi_def_cfa_offset 4
 1932              		.cfi_offset 14, -4
 1933 0002 87B0     		sub	sp, sp, #28
 1934              	.LCFI40:
 1935              		.cfi_def_cfa_offset 32
 305:Src/main.c    ****   RTC_DateTypeDef sDate = {0};
 1936              		.loc 1 305 3 view .LVU472
 305:Src/main.c    ****   RTC_DateTypeDef sDate = {0};
 1937              		.loc 1 305 19 is_stmt 0 view .LVU473
 1938 0004 0023     		movs	r3, #0
 1939 0006 0193     		str	r3, [sp, #4]
 1940 0008 0293     		str	r3, [sp, #8]
 1941 000a 0393     		str	r3, [sp, #12]
 1942 000c 0493     		str	r3, [sp, #16]
 1943 000e 0593     		str	r3, [sp, #20]
 306:Src/main.c    **** 
 1944              		.loc 1 306 3 is_stmt 1 view .LVU474
 306:Src/main.c    **** 
 1945              		.loc 1 306 19 is_stmt 0 view .LVU475
 1946 0010 0093     		str	r3, [sp]
 314:Src/main.c    ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 1947              		.loc 1 314 3 is_stmt 1 view .LVU476
 314:Src/main.c    ****   hrtc.Init.HourFormat = RTC_HOURFORMAT_24;
 1948              		.loc 1 314 17 is_stmt 0 view .LVU477
 1949 0012 1B48     		ldr	r0, .L82
 1950 0014 1B4A     		ldr	r2, .L82+4
 1951 0016 0260     		str	r2, [r0]
 315:Src/main.c    ****   hrtc.Init.AsynchPrediv = 127;
 1952              		.loc 1 315 3 is_stmt 1 view .LVU478
 315:Src/main.c    ****   hrtc.Init.AsynchPrediv = 127;
 1953              		.loc 1 315 24 is_stmt 0 view .LVU479
 1954 0018 4360     		str	r3, [r0, #4]
 316:Src/main.c    ****   hrtc.Init.SynchPrediv = 255;
 1955              		.loc 1 316 3 is_stmt 1 view .LVU480
 316:Src/main.c    ****   hrtc.Init.SynchPrediv = 255;
 1956              		.loc 1 316 26 is_stmt 0 view .LVU481
 1957 001a 7F22     		movs	r2, #127
 1958 001c 8260     		str	r2, [r0, #8]
 317:Src/main.c    ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 1959              		.loc 1 317 3 is_stmt 1 view .LVU482
 317:Src/main.c    ****   hrtc.Init.OutPut = RTC_OUTPUT_DISABLE;
 1960              		.loc 1 317 25 is_stmt 0 view .LVU483
 1961 001e FF22     		movs	r2, #255
 1962 0020 C260     		str	r2, [r0, #12]
 318:Src/main.c    ****   hrtc.Init.OutPutRemap = RTC_OUTPUT_REMAP_NONE;
 1963              		.loc 1 318 3 is_stmt 1 view .LVU484
 318:Src/main.c    ****   hrtc.Init.OutPutRemap = RTC_OUTPUT_REMAP_NONE;
 1964              		.loc 1 318 20 is_stmt 0 view .LVU485
 1965 0022 0361     		str	r3, [r0, #16]
 319:Src/main.c    ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 1966              		.loc 1 319 3 is_stmt 1 view .LVU486
 319:Src/main.c    ****   hrtc.Init.OutPutPolarity = RTC_OUTPUT_POLARITY_HIGH;
 1967              		.loc 1 319 25 is_stmt 0 view .LVU487
 1968 0024 4361     		str	r3, [r0, #20]
 320:Src/main.c    ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
 1969              		.loc 1 320 3 is_stmt 1 view .LVU488
 320:Src/main.c    ****   hrtc.Init.OutPutType = RTC_OUTPUT_TYPE_OPENDRAIN;
ARM GAS  /tmp/ccK8WG6y.s 			page 105


 1970              		.loc 1 320 28 is_stmt 0 view .LVU489
 1971 0026 8361     		str	r3, [r0, #24]
 321:Src/main.c    ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 1972              		.loc 1 321 3 is_stmt 1 view .LVU490
 321:Src/main.c    ****   if (HAL_RTC_Init(&hrtc) != HAL_OK)
 1973              		.loc 1 321 24 is_stmt 0 view .LVU491
 1974 0028 C361     		str	r3, [r0, #28]
 322:Src/main.c    ****   {
 1975              		.loc 1 322 3 is_stmt 1 view .LVU492
 322:Src/main.c    ****   {
 1976              		.loc 1 322 7 is_stmt 0 view .LVU493
 1977 002a FFF7FEFF 		bl	HAL_RTC_Init
 1978              	.LVL182:
 322:Src/main.c    ****   {
 1979              		.loc 1 322 6 view .LVU494
 1980 002e 00BB     		cbnz	r0, .L79
 333:Src/main.c    ****   sTime.Minutes = 0x0;
 1981              		.loc 1 333 3 is_stmt 1 view .LVU495
 333:Src/main.c    ****   sTime.Minutes = 0x0;
 1982              		.loc 1 333 15 is_stmt 0 view .LVU496
 1983 0030 0023     		movs	r3, #0
 1984 0032 8DF80430 		strb	r3, [sp, #4]
 334:Src/main.c    ****   sTime.Seconds = 0x0;
 1985              		.loc 1 334 3 is_stmt 1 view .LVU497
 334:Src/main.c    ****   sTime.Seconds = 0x0;
 1986              		.loc 1 334 17 is_stmt 0 view .LVU498
 1987 0036 8DF80530 		strb	r3, [sp, #5]
 335:Src/main.c    ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 1988              		.loc 1 335 3 is_stmt 1 view .LVU499
 335:Src/main.c    ****   sTime.DayLightSaving = RTC_DAYLIGHTSAVING_NONE;
 1989              		.loc 1 335 17 is_stmt 0 view .LVU500
 1990 003a 8DF80630 		strb	r3, [sp, #6]
 336:Src/main.c    ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 1991              		.loc 1 336 3 is_stmt 1 view .LVU501
 336:Src/main.c    ****   sTime.StoreOperation = RTC_STOREOPERATION_RESET;
 1992              		.loc 1 336 24 is_stmt 0 view .LVU502
 1993 003e 0493     		str	r3, [sp, #16]
 337:Src/main.c    ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 1994              		.loc 1 337 3 is_stmt 1 view .LVU503
 337:Src/main.c    ****   if (HAL_RTC_SetTime(&hrtc, &sTime, RTC_FORMAT_BCD) != HAL_OK)
 1995              		.loc 1 337 24 is_stmt 0 view .LVU504
 1996 0040 0593     		str	r3, [sp, #20]
 338:Src/main.c    ****   {
 1997              		.loc 1 338 3 is_stmt 1 view .LVU505
 338:Src/main.c    ****   {
 1998              		.loc 1 338 7 is_stmt 0 view .LVU506
 1999 0042 0122     		movs	r2, #1
 2000 0044 01A9     		add	r1, sp, #4
 2001 0046 0E48     		ldr	r0, .L82
 2002 0048 FFF7FEFF 		bl	HAL_RTC_SetTime
 2003              	.LVL183:
 338:Src/main.c    ****   {
 2004              		.loc 1 338 6 view .LVU507
 2005 004c 98B9     		cbnz	r0, .L80
 342:Src/main.c    ****   sDate.Month = RTC_MONTH_JANUARY;
 2006              		.loc 1 342 3 is_stmt 1 view .LVU508
 342:Src/main.c    ****   sDate.Month = RTC_MONTH_JANUARY;
ARM GAS  /tmp/ccK8WG6y.s 			page 106


 2007              		.loc 1 342 17 is_stmt 0 view .LVU509
 2008 004e 0122     		movs	r2, #1
 2009 0050 8DF80020 		strb	r2, [sp]
 343:Src/main.c    ****   sDate.Date = 0x1;
 2010              		.loc 1 343 3 is_stmt 1 view .LVU510
 343:Src/main.c    ****   sDate.Date = 0x1;
 2011              		.loc 1 343 15 is_stmt 0 view .LVU511
 2012 0054 8DF80120 		strb	r2, [sp, #1]
 344:Src/main.c    ****   sDate.Year = 0x0;
 2013              		.loc 1 344 3 is_stmt 1 view .LVU512
 344:Src/main.c    ****   sDate.Year = 0x0;
 2014              		.loc 1 344 14 is_stmt 0 view .LVU513
 2015 0058 8DF80220 		strb	r2, [sp, #2]
 345:Src/main.c    **** 
 2016              		.loc 1 345 3 is_stmt 1 view .LVU514
 345:Src/main.c    **** 
 2017              		.loc 1 345 14 is_stmt 0 view .LVU515
 2018 005c 0023     		movs	r3, #0
 2019 005e 8DF80330 		strb	r3, [sp, #3]
 347:Src/main.c    ****   {
 2020              		.loc 1 347 3 is_stmt 1 view .LVU516
 347:Src/main.c    ****   {
 2021              		.loc 1 347 7 is_stmt 0 view .LVU517
 2022 0062 6946     		mov	r1, sp
 2023 0064 0648     		ldr	r0, .L82
 2024 0066 FFF7FEFF 		bl	HAL_RTC_SetDate
 2025              	.LVL184:
 347:Src/main.c    ****   {
 2026              		.loc 1 347 6 view .LVU518
 2027 006a 30B9     		cbnz	r0, .L81
 355:Src/main.c    **** 
 2028              		.loc 1 355 1 view .LVU519
 2029 006c 07B0     		add	sp, sp, #28
 2030              	.LCFI41:
 2031              		.cfi_remember_state
 2032              		.cfi_def_cfa_offset 4
 2033              		@ sp needed
 2034 006e 5DF804FB 		ldr	pc, [sp], #4
 2035              	.L79:
 2036              	.LCFI42:
 2037              		.cfi_restore_state
 324:Src/main.c    ****   }
 2038              		.loc 1 324 5 is_stmt 1 view .LVU520
 2039 0072 FFF7FEFF 		bl	Error_Handler
 2040              	.LVL185:
 2041              	.L80:
 340:Src/main.c    ****   }
 2042              		.loc 1 340 5 view .LVU521
 2043 0076 FFF7FEFF 		bl	Error_Handler
 2044              	.LVL186:
 2045              	.L81:
 349:Src/main.c    ****   }
 2046              		.loc 1 349 5 view .LVU522
 2047 007a FFF7FEFF 		bl	Error_Handler
 2048              	.LVL187:
 2049              	.L83:
 2050 007e 00BF     		.align	2
ARM GAS  /tmp/ccK8WG6y.s 			page 107


 2051              	.L82:
 2052 0080 00000000 		.word	.LANCHOR2
 2053 0084 00280040 		.word	1073752064
 2054              		.cfi_endproc
 2055              	.LFE435:
 2057              		.section	.text.MX_SPI1_Init,"ax",%progbits
 2058              		.align	1
 2059              		.syntax unified
 2060              		.thumb
 2061              		.thumb_func
 2062              		.fpu fpv4-sp-d16
 2064              	MX_SPI1_Init:
 2065              	.LFB436:
 363:Src/main.c    **** 
 2066              		.loc 1 363 1 view -0
 2067              		.cfi_startproc
 2068              		@ args = 0, pretend = 0, frame = 0
 2069              		@ frame_needed = 0, uses_anonymous_args = 0
 2070 0000 08B5     		push	{r3, lr}
 2071              	.LCFI43:
 2072              		.cfi_def_cfa_offset 8
 2073              		.cfi_offset 3, -8
 2074              		.cfi_offset 14, -4
 373:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 2075              		.loc 1 373 3 view .LVU524
 373:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 2076              		.loc 1 373 18 is_stmt 0 view .LVU525
 2077 0002 1348     		ldr	r0, .L88
 2078 0004 134B     		ldr	r3, .L88+4
 2079 0006 0360     		str	r3, [r0]
 374:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 2080              		.loc 1 374 3 is_stmt 1 view .LVU526
 374:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 2081              		.loc 1 374 19 is_stmt 0 view .LVU527
 2082 0008 4FF48273 		mov	r3, #260
 2083 000c 4360     		str	r3, [r0, #4]
 375:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 2084              		.loc 1 375 3 is_stmt 1 view .LVU528
 375:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 2085              		.loc 1 375 24 is_stmt 0 view .LVU529
 2086 000e 0023     		movs	r3, #0
 2087 0010 8360     		str	r3, [r0, #8]
 376:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 2088              		.loc 1 376 3 is_stmt 1 view .LVU530
 376:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 2089              		.loc 1 376 23 is_stmt 0 view .LVU531
 2090 0012 4FF4E062 		mov	r2, #1792
 2091 0016 C260     		str	r2, [r0, #12]
 377:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 2092              		.loc 1 377 3 is_stmt 1 view .LVU532
 377:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 2093              		.loc 1 377 26 is_stmt 0 view .LVU533
 2094 0018 0361     		str	r3, [r0, #16]
 378:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 2095              		.loc 1 378 3 is_stmt 1 view .LVU534
 378:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 2096              		.loc 1 378 23 is_stmt 0 view .LVU535
ARM GAS  /tmp/ccK8WG6y.s 			page 108


 2097 001a 4361     		str	r3, [r0, #20]
 379:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 2098              		.loc 1 379 3 is_stmt 1 view .LVU536
 379:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 2099              		.loc 1 379 18 is_stmt 0 view .LVU537
 2100 001c 4FF40072 		mov	r2, #512
 2101 0020 8261     		str	r2, [r0, #24]
 380:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 2102              		.loc 1 380 3 is_stmt 1 view .LVU538
 380:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 2103              		.loc 1 380 32 is_stmt 0 view .LVU539
 2104 0022 1022     		movs	r2, #16
 2105 0024 C261     		str	r2, [r0, #28]
 381:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 2106              		.loc 1 381 3 is_stmt 1 view .LVU540
 381:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 2107              		.loc 1 381 23 is_stmt 0 view .LVU541
 2108 0026 0362     		str	r3, [r0, #32]
 382:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2109              		.loc 1 382 3 is_stmt 1 view .LVU542
 382:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 2110              		.loc 1 382 21 is_stmt 0 view .LVU543
 2111 0028 4362     		str	r3, [r0, #36]
 383:Src/main.c    ****   hspi1.Init.CRCPolynomial = 7;
 2112              		.loc 1 383 3 is_stmt 1 view .LVU544
 383:Src/main.c    ****   hspi1.Init.CRCPolynomial = 7;
 2113              		.loc 1 383 29 is_stmt 0 view .LVU545
 2114 002a 8362     		str	r3, [r0, #40]
 384:Src/main.c    ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 2115              		.loc 1 384 3 is_stmt 1 view .LVU546
 384:Src/main.c    ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 2116              		.loc 1 384 28 is_stmt 0 view .LVU547
 2117 002c 0722     		movs	r2, #7
 2118 002e C262     		str	r2, [r0, #44]
 385:Src/main.c    ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 2119              		.loc 1 385 3 is_stmt 1 view .LVU548
 385:Src/main.c    ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 2120              		.loc 1 385 24 is_stmt 0 view .LVU549
 2121 0030 0363     		str	r3, [r0, #48]
 386:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 2122              		.loc 1 386 3 is_stmt 1 view .LVU550
 386:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 2123              		.loc 1 386 23 is_stmt 0 view .LVU551
 2124 0032 0823     		movs	r3, #8
 2125 0034 4363     		str	r3, [r0, #52]
 387:Src/main.c    ****   {
 2126              		.loc 1 387 3 is_stmt 1 view .LVU552
 387:Src/main.c    ****   {
 2127              		.loc 1 387 7 is_stmt 0 view .LVU553
 2128 0036 FFF7FEFF 		bl	HAL_SPI_Init
 2129              	.LVL188:
 387:Src/main.c    ****   {
 2130              		.loc 1 387 6 view .LVU554
 2131 003a 30B9     		cbnz	r0, .L87
 393:Src/main.c    **** 
 2132              		.loc 1 393 3 is_stmt 1 view .LVU555
 2133 003c 044B     		ldr	r3, .L88
ARM GAS  /tmp/ccK8WG6y.s 			page 109


 2134 003e 1A68     		ldr	r2, [r3]
 2135 0040 1368     		ldr	r3, [r2]
 2136 0042 43F04003 		orr	r3, r3, #64
 2137 0046 1360     		str	r3, [r2]
 397:Src/main.c    **** 
 2138              		.loc 1 397 1 is_stmt 0 view .LVU556
 2139 0048 08BD     		pop	{r3, pc}
 2140              	.L87:
 389:Src/main.c    ****   }
 2141              		.loc 1 389 5 is_stmt 1 view .LVU557
 2142 004a FFF7FEFF 		bl	Error_Handler
 2143              	.LVL189:
 2144              	.L89:
 2145 004e 00BF     		.align	2
 2146              	.L88:
 2147 0050 00000000 		.word	.LANCHOR3
 2148 0054 00300140 		.word	1073819648
 2149              		.cfi_endproc
 2150              	.LFE436:
 2152              		.section	.text.SystemClock_Config,"ax",%progbits
 2153              		.align	1
 2154              		.global	SystemClock_Config
 2155              		.syntax unified
 2156              		.thumb
 2157              		.thumb_func
 2158              		.fpu fpv4-sp-d16
 2160              	SystemClock_Config:
 2161              	.LFB434:
 248:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 2162              		.loc 1 248 1 view -0
 2163              		.cfi_startproc
 2164              		@ args = 0, pretend = 0, frame = 88
 2165              		@ frame_needed = 0, uses_anonymous_args = 0
 2166 0000 00B5     		push	{lr}
 2167              	.LCFI44:
 2168              		.cfi_def_cfa_offset 4
 2169              		.cfi_offset 14, -4
 2170 0002 97B0     		sub	sp, sp, #92
 2171              	.LCFI45:
 2172              		.cfi_def_cfa_offset 96
 249:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2173              		.loc 1 249 3 view .LVU559
 249:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 2174              		.loc 1 249 22 is_stmt 0 view .LVU560
 2175 0004 4422     		movs	r2, #68
 2176 0006 0021     		movs	r1, #0
 2177 0008 05A8     		add	r0, sp, #20
 2178 000a FFF7FEFF 		bl	memset
 2179              	.LVL190:
 250:Src/main.c    **** 
 2180              		.loc 1 250 3 is_stmt 1 view .LVU561
 250:Src/main.c    **** 
 2181              		.loc 1 250 22 is_stmt 0 view .LVU562
 2182 000e 0023     		movs	r3, #0
 2183 0010 0093     		str	r3, [sp]
 2184 0012 0193     		str	r3, [sp, #4]
 2185 0014 0293     		str	r3, [sp, #8]
ARM GAS  /tmp/ccK8WG6y.s 			page 110


 2186 0016 0393     		str	r3, [sp, #12]
 2187 0018 0493     		str	r3, [sp, #16]
 254:Src/main.c    ****   {
 2188              		.loc 1 254 3 is_stmt 1 view .LVU563
 254:Src/main.c    ****   {
 2189              		.loc 1 254 7 is_stmt 0 view .LVU564
 2190 001a 4FF40070 		mov	r0, #512
 2191 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 2192              	.LVL191:
 254:Src/main.c    ****   {
 2193              		.loc 1 254 6 view .LVU565
 2194 0022 28BB     		cbnz	r0, .L95
 262:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 2195              		.loc 1 262 3 is_stmt 1 view .LVU566
 262:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 2196              		.loc 1 262 36 is_stmt 0 view .LVU567
 2197 0024 0A22     		movs	r2, #10
 2198 0026 0592     		str	r2, [sp, #20]
 263:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 2199              		.loc 1 263 3 is_stmt 1 view .LVU568
 263:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 2200              		.loc 1 263 30 is_stmt 0 view .LVU569
 2201 0028 4FF48073 		mov	r3, #256
 2202 002c 0893     		str	r3, [sp, #32]
 264:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 2203              		.loc 1 264 3 is_stmt 1 view .LVU570
 264:Src/main.c    ****   RCC_OscInitStruct.LSIState = RCC_LSI_ON;
 2204              		.loc 1 264 41 is_stmt 0 view .LVU571
 2205 002e 1023     		movs	r3, #16
 2206 0030 0993     		str	r3, [sp, #36]
 265:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2207              		.loc 1 265 3 is_stmt 1 view .LVU572
 265:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 2208              		.loc 1 265 30 is_stmt 0 view .LVU573
 2209 0032 0121     		movs	r1, #1
 2210 0034 0A91     		str	r1, [sp, #40]
 266:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 2211              		.loc 1 266 3 is_stmt 1 view .LVU574
 266:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 2212              		.loc 1 266 34 is_stmt 0 view .LVU575
 2213 0036 0223     		movs	r3, #2
 2214 0038 0F93     		str	r3, [sp, #60]
 267:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
 2215              		.loc 1 267 3 is_stmt 1 view .LVU576
 267:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 1;
 2216              		.loc 1 267 35 is_stmt 0 view .LVU577
 2217 003a 1093     		str	r3, [sp, #64]
 268:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 10;
 2218              		.loc 1 268 3 is_stmt 1 view .LVU578
 268:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 10;
 2219              		.loc 1 268 30 is_stmt 0 view .LVU579
 2220 003c 1191     		str	r1, [sp, #68]
 269:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 2221              		.loc 1 269 3 is_stmt 1 view .LVU580
 269:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 2222              		.loc 1 269 30 is_stmt 0 view .LVU581
 2223 003e 1292     		str	r2, [sp, #72]
ARM GAS  /tmp/ccK8WG6y.s 			page 111


 270:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 2224              		.loc 1 270 3 is_stmt 1 view .LVU582
 270:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 2225              		.loc 1 270 30 is_stmt 0 view .LVU583
 2226 0040 0722     		movs	r2, #7
 2227 0042 1392     		str	r2, [sp, #76]
 271:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 2228              		.loc 1 271 3 is_stmt 1 view .LVU584
 271:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 2229              		.loc 1 271 30 is_stmt 0 view .LVU585
 2230 0044 1493     		str	r3, [sp, #80]
 272:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2231              		.loc 1 272 3 is_stmt 1 view .LVU586
 272:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 2232              		.loc 1 272 30 is_stmt 0 view .LVU587
 2233 0046 1593     		str	r3, [sp, #84]
 273:Src/main.c    ****   {
 2234              		.loc 1 273 3 is_stmt 1 view .LVU588
 273:Src/main.c    ****   {
 2235              		.loc 1 273 7 is_stmt 0 view .LVU589
 2236 0048 05A8     		add	r0, sp, #20
 2237 004a FFF7FEFF 		bl	HAL_RCC_OscConfig
 2238              	.LVL192:
 273:Src/main.c    ****   {
 2239              		.loc 1 273 6 view .LVU590
 2240 004e 88B9     		cbnz	r0, .L96
 280:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 2241              		.loc 1 280 3 is_stmt 1 view .LVU591
 280:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 2242              		.loc 1 280 31 is_stmt 0 view .LVU592
 2243 0050 0F23     		movs	r3, #15
 2244 0052 0093     		str	r3, [sp]
 282:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2245              		.loc 1 282 3 is_stmt 1 view .LVU593
 282:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 2246              		.loc 1 282 34 is_stmt 0 view .LVU594
 2247 0054 0323     		movs	r3, #3
 2248 0056 0193     		str	r3, [sp, #4]
 283:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 2249              		.loc 1 283 3 is_stmt 1 view .LVU595
 283:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 2250              		.loc 1 283 35 is_stmt 0 view .LVU596
 2251 0058 0023     		movs	r3, #0
 2252 005a 0293     		str	r3, [sp, #8]
 284:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 2253              		.loc 1 284 3 is_stmt 1 view .LVU597
 284:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 2254              		.loc 1 284 36 is_stmt 0 view .LVU598
 2255 005c 0393     		str	r3, [sp, #12]
 285:Src/main.c    **** 
 2256              		.loc 1 285 3 is_stmt 1 view .LVU599
 285:Src/main.c    **** 
 2257              		.loc 1 285 36 is_stmt 0 view .LVU600
 2258 005e 0493     		str	r3, [sp, #16]
 287:Src/main.c    ****   {
 2259              		.loc 1 287 3 is_stmt 1 view .LVU601
 287:Src/main.c    ****   {
ARM GAS  /tmp/ccK8WG6y.s 			page 112


 2260              		.loc 1 287 7 is_stmt 0 view .LVU602
 2261 0060 0421     		movs	r1, #4
 2262 0062 6846     		mov	r0, sp
 2263 0064 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 2264              	.LVL193:
 287:Src/main.c    ****   {
 2265              		.loc 1 287 6 view .LVU603
 2266 0068 30B9     		cbnz	r0, .L97
 291:Src/main.c    **** 
 2267              		.loc 1 291 1 view .LVU604
 2268 006a 17B0     		add	sp, sp, #92
 2269              	.LCFI46:
 2270              		.cfi_remember_state
 2271              		.cfi_def_cfa_offset 4
 2272              		@ sp needed
 2273 006c 5DF804FB 		ldr	pc, [sp], #4
 2274              	.L95:
 2275              	.LCFI47:
 2276              		.cfi_restore_state
 256:Src/main.c    ****   }
 2277              		.loc 1 256 5 is_stmt 1 view .LVU605
 2278 0070 FFF7FEFF 		bl	Error_Handler
 2279              	.LVL194:
 2280              	.L96:
 275:Src/main.c    ****   }
 2281              		.loc 1 275 5 view .LVU606
 2282 0074 FFF7FEFF 		bl	Error_Handler
 2283              	.LVL195:
 2284              	.L97:
 289:Src/main.c    ****   }
 2285              		.loc 1 289 5 view .LVU607
 2286 0078 FFF7FEFF 		bl	Error_Handler
 2287              	.LVL196:
 2288              		.cfi_endproc
 2289              	.LFE434:
 2291              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 2292              		.align	2
 2293              	.LC29:
 2294 0000 2D2D2D2D 		.ascii	"-----------------------------\015\012\015\012\000"
 2294      2D2D2D2D 
 2294      2D2D2D2D 
 2294      2D2D2D2D 
 2294      2D2D2D2D 
 2295 0022 0000     		.align	2
 2296              	.LC30:
 2297 0024 3261203D 		.ascii	"2a = %d\015\012\000"
 2297      2025640D 
 2297      0A00
 2298              		.section	.text.main,"ax",%progbits
 2299              		.align	1
 2300              		.global	main
 2301              		.syntax unified
 2302              		.thumb
 2303              		.thumb_func
 2304              		.fpu fpv4-sp-d16
 2306              	main:
 2307              	.LFB433:
ARM GAS  /tmp/ccK8WG6y.s 			page 113


 164:Src/main.c    ****   /* USER CODE BEGIN 1 */
 2308              		.loc 1 164 1 view -0
 2309              		.cfi_startproc
 2310              		@ args = 0, pretend = 0, frame = 0
 2311              		@ frame_needed = 0, uses_anonymous_args = 0
 2312 0000 30B5     		push	{r4, r5, lr}
 2313              	.LCFI48:
 2314              		.cfi_def_cfa_offset 12
 2315              		.cfi_offset 4, -12
 2316              		.cfi_offset 5, -8
 2317              		.cfi_offset 14, -4
 2318 0002 83B0     		sub	sp, sp, #12
 2319              	.LCFI49:
 2320              		.cfi_def_cfa_offset 24
 172:Src/main.c    **** 
 2321              		.loc 1 172 3 view .LVU609
 2322 0004 FFF7FEFF 		bl	HAL_Init
 2323              	.LVL197:
 176:Src/main.c    **** 
 2324              		.loc 1 176 3 view .LVU610
 178:Src/main.c    ****   ((radio_t*)lr1110_context)->spi             = SPI1;
 2325              		.loc 1 178 3 view .LVU611
 178:Src/main.c    ****   ((radio_t*)lr1110_context)->spi             = SPI1;
 2326              		.loc 1 178 26 is_stmt 0 view .LVU612
 2327 0008 2C20     		movs	r0, #44
 2328 000a FFF7FEFF 		bl	malloc
 2329              	.LVL198:
 2330 000e 0546     		mov	r5, r0
 2331              	.LVL199:
 179:Src/main.c    ****   ((radio_t*)lr1110_context)->nss.port        = GPIOA;
 2332              		.loc 1 179 3 is_stmt 1 view .LVU613
 179:Src/main.c    ****   ((radio_t*)lr1110_context)->nss.port        = GPIOA;
 2333              		.loc 1 179 47 is_stmt 0 view .LVU614
 2334 0010 234B     		ldr	r3, .L101
 2335 0012 0360     		str	r3, [r0]
 180:Src/main.c    ****   ((radio_t*)lr1110_context)->nss.pin         = NSS_Pin;
 2336              		.loc 1 180 3 is_stmt 1 view .LVU615
 180:Src/main.c    ****   ((radio_t*)lr1110_context)->nss.pin         = NSS_Pin;
 2337              		.loc 1 180 47 is_stmt 0 view .LVU616
 2338 0014 4FF09043 		mov	r3, #1207959552
 2339 0018 4360     		str	r3, [r0, #4]
 181:Src/main.c    ****   ((radio_t*)lr1110_context)->reset.port      = GPIOA;
 2340              		.loc 1 181 3 is_stmt 1 view .LVU617
 181:Src/main.c    ****   ((radio_t*)lr1110_context)->reset.port      = GPIOA;
 2341              		.loc 1 181 47 is_stmt 0 view .LVU618
 2342 001a 4FF48072 		mov	r2, #256
 2343 001e 8260     		str	r2, [r0, #8]
 182:Src/main.c    ****   ((radio_t*)lr1110_context)->reset.pin       = RESET_Pin;
 2344              		.loc 1 182 3 is_stmt 1 view .LVU619
 182:Src/main.c    ****   ((radio_t*)lr1110_context)->reset.pin       = RESET_Pin;
 2345              		.loc 1 182 47 is_stmt 0 view .LVU620
 2346 0020 C360     		str	r3, [r0, #12]
 183:Src/main.c    ****   // ((radio_t*)lr1110_context)->event.irq1.port = GPIOB;
 2347              		.loc 1 183 3 is_stmt 1 view .LVU621
 183:Src/main.c    ****   // ((radio_t*)lr1110_context)->event.irq1.port = GPIOB;
 2348              		.loc 1 183 47 is_stmt 0 view .LVU622
 2349 0022 0124     		movs	r4, #1
ARM GAS  /tmp/ccK8WG6y.s 			page 114


 2350 0024 0461     		str	r4, [r0, #16]
 188:Src/main.c    ****   ((radio_t*)lr1110_context)->busy.port       = GPIOB;
 2351              		.loc 1 188 3 is_stmt 1 view .LVU623
 188:Src/main.c    ****   ((radio_t*)lr1110_context)->busy.port       = GPIOB;
 2352              		.loc 1 188 47 is_stmt 0 view .LVU624
 2353 0026 C061     		str	r0, [r0, #28]
 189:Src/main.c    ****   ((radio_t*)lr1110_context)->busy.pin        = BUSY_Pin;
 2354              		.loc 1 189 3 is_stmt 1 view .LVU625
 189:Src/main.c    ****   ((radio_t*)lr1110_context)->busy.pin        = BUSY_Pin;
 2355              		.loc 1 189 47 is_stmt 0 view .LVU626
 2356 0028 03F58063 		add	r3, r3, #1024
 2357 002c 4362     		str	r3, [r0, #36]
 190:Src/main.c    **** 
 2358              		.loc 1 190 3 is_stmt 1 view .LVU627
 190:Src/main.c    **** 
 2359              		.loc 1 190 47 is_stmt 0 view .LVU628
 2360 002e 0823     		movs	r3, #8
 2361 0030 8362     		str	r3, [r0, #40]
 195:Src/main.c    **** 
 2362              		.loc 1 195 3 is_stmt 1 view .LVU629
 2363 0032 FFF7FEFF 		bl	SystemClock_Config
 2364              	.LVL200:
 202:Src/main.c    ****   MX_USART2_UART_Init();
 2365              		.loc 1 202 3 view .LVU630
 2366 0036 FFF7FEFF 		bl	MX_GPIO_Init
 2367              	.LVL201:
 203:Src/main.c    ****   MX_RTC_Init();
 2368              		.loc 1 203 3 view .LVU631
 2369 003a FFF7FEFF 		bl	MX_USART2_UART_Init
 2370              	.LVL202:
 204:Src/main.c    ****   MX_SPI1_Init();
 2371              		.loc 1 204 3 view .LVU632
 2372 003e FFF7FEFF 		bl	MX_RTC_Init
 2373              	.LVL203:
 205:Src/main.c    ****   /* USER CODE BEGIN 2 */
 2374              		.loc 1 205 3 view .LVU633
 2375 0042 FFF7FEFF 		bl	MX_SPI1_Init
 2376              	.LVL204:
 209:Src/main.c    ****   resetLR1110();
 2377              		.loc 1 209 3 view .LVU634
 209:Src/main.c    ****   resetLR1110();
 2378              		.loc 1 209 3 view .LVU635
 2379 0046 1748     		ldr	r0, .L101+4
 2380 0048 FFF7FEFF 		bl	hal_mcu_trace_print
 2381              	.LVL205:
 209:Src/main.c    ****   resetLR1110();
 2382              		.loc 1 209 3 view .LVU636
 2383 004c 1648     		ldr	r0, .L101+8
 2384 004e FFF7FEFF 		bl	hal_mcu_trace_print
 2385              	.LVL206:
 209:Src/main.c    ****   resetLR1110();
 2386              		.loc 1 209 3 view .LVU637
 209:Src/main.c    ****   resetLR1110();
 2387              		.loc 1 209 61 view .LVU638
 210:Src/main.c    **** 
 2388              		.loc 1 210 3 view .LVU639
 2389 0052 FFF7FEFF 		bl	resetLR1110
ARM GAS  /tmp/ccK8WG6y.s 			page 115


 2390              	.LVL207:
 212:Src/main.c    **** 
 2391              		.loc 1 212 3 view .LVU640
 2392 0056 0094     		str	r4, [sp]
 2393 0058 0523     		movs	r3, #5
 2394 005a 6422     		movs	r2, #100
 2395 005c 0321     		movs	r1, #3
 2396 005e 1348     		ldr	r0, .L101+12
 2397 0060 FFF7FEFF 		bl	blinkLED
 2398              	.LVL208:
 214:Src/main.c    **** 
 2399              		.loc 1 214 3 view .LVU641
 2400 0064 2846     		mov	r0, r5
 2401 0066 FFF7FEFF 		bl	setupTCXO
 2402              	.LVL209:
 216:Src/main.c    ****   getLR1110_Bootloader_Version(lr1110_context);
 2403              		.loc 1 216 3 view .LVU642
 2404 006a 2846     		mov	r0, r5
 2405 006c FFF7FEFF 		bl	getLR1110_Bootloader_Version
 2406              	.LVL210:
 217:Src/main.c    ****   getLR1110_WiFi_Version(lr1110_context);
 2407              		.loc 1 217 3 view .LVU643
 2408 0070 2846     		mov	r0, r5
 2409 0072 FFF7FEFF 		bl	getLR1110_Bootloader_Version
 2410              	.LVL211:
 218:Src/main.c    ****   getLR1110_Chip_EUI(lr1110_context);
 2411              		.loc 1 218 3 view .LVU644
 2412 0076 2846     		mov	r0, r5
 2413 0078 FFF7FEFF 		bl	getLR1110_WiFi_Version
 2414              	.LVL212:
 219:Src/main.c    **** 
 2415              		.loc 1 219 3 view .LVU645
 2416 007c 2846     		mov	r0, r5
 2417 007e FFF7FEFF 		bl	getLR1110_Chip_EUI
 2418              	.LVL213:
 176:Src/main.c    **** 
 2419              		.loc 1 176 7 is_stmt 0 view .LVU646
 2420 0082 0021     		movs	r1, #0
 2421              	.LVL214:
 2422              	.L99:
 225:Src/main.c    ****     
 2423              		.loc 1 225 3 is_stmt 1 discriminator 1 view .LVU647
 231:Src/main.c    **** 
 2424              		.loc 1 231 5 discriminator 1 view .LVU648
 2425 0084 4C1C     		adds	r4, r1, #1
 2426              	.LVL215:
 231:Src/main.c    **** 
 2427              		.loc 1 231 5 is_stmt 0 discriminator 1 view .LVU649
 2428 0086 0A48     		ldr	r0, .L101+16
 2429 0088 FFF7FEFF 		bl	hal_mcu_trace_print
 2430              	.LVL216:
 233:Src/main.c    **** 
 2431              		.loc 1 233 5 is_stmt 1 discriminator 1 view .LVU650
 2432 008c 2846     		mov	r0, r5
 2433 008e FFF7FEFF 		bl	getLR1110_Temperature
 2434              	.LVL217:
 238:Src/main.c    ****   }
ARM GAS  /tmp/ccK8WG6y.s 			page 116


 2435              		.loc 1 238 5 discriminator 1 view .LVU651
 2436 0092 4FF47A70 		mov	r0, #1000
 2437 0096 FFF7FEFF 		bl	HAL_Delay
 2438              	.LVL218:
 225:Src/main.c    ****     
 2439              		.loc 1 225 9 discriminator 1 view .LVU652
 231:Src/main.c    **** 
 2440              		.loc 1 231 5 is_stmt 0 discriminator 1 view .LVU653
 2441 009a 2146     		mov	r1, r4
 2442 009c F2E7     		b	.L99
 2443              	.L102:
 2444 009e 00BF     		.align	2
 2445              	.L101:
 2446 00a0 00300140 		.word	1073819648
 2447 00a4 28000000 		.word	.LC3
 2448 00a8 00000000 		.word	.LC29
 2449 00ac 00080048 		.word	1207961600
 2450 00b0 24000000 		.word	.LC30
 2451              		.cfi_endproc
 2452              	.LFE433:
 2454              		.global	huart2
 2455              		.global	hspi1
 2456              		.global	hrtc
 2457              		.section	.bss.hrtc,"aw",%nobits
 2458              		.align	2
 2459              		.set	.LANCHOR2,. + 0
 2462              	hrtc:
 2463 0000 00000000 		.space	36
 2463      00000000 
 2463      00000000 
 2463      00000000 
 2463      00000000 
 2464              		.section	.bss.hspi1,"aw",%nobits
 2465              		.align	2
 2466              		.set	.LANCHOR3,. + 0
 2469              	hspi1:
 2470 0000 00000000 		.space	100
 2470      00000000 
 2470      00000000 
 2470      00000000 
 2470      00000000 
 2471              		.section	.bss.huart2,"aw",%nobits
 2472              		.align	2
 2473              		.set	.LANCHOR0,. + 0
 2476              	huart2:
 2477 0000 00000000 		.space	136
 2477      00000000 
 2477      00000000 
 2477      00000000 
 2477      00000000 
 2478              		.section	.rodata.__func__.0,"a"
 2479              		.align	2
 2480              		.set	.LANCHOR1,. + 0
 2483              	__func__.0:
 2484 0000 4572726F 		.ascii	"Error_Handler\000"
 2484      725F4861 
 2484      6E646C65 
ARM GAS  /tmp/ccK8WG6y.s 			page 117


 2484      7200
 2485              		.text
 2486              	.Letext0:
 2487              		.file 4 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 2488              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 2489              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 2490              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 2491              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 2492              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 2493              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rtc.h"
 2494              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_spi.h"
 2495              		.file 12 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 2496              		.file 13 "Inc/constants.h"
 2497              		.file 14 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdarg.h"
 2498              		.file 15 "Inc/spi.h"
 2499              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 2500              		.file 17 "/usr/include/newlib/stdio.h"
 2501              		.file 18 "/usr/include/newlib/string.h"
 2502              		.file 19 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 2503              		.file 20 "/usr/include/newlib/stdlib.h"
 2504              		.file 21 "<built-in>"
ARM GAS  /tmp/ccK8WG6y.s 			page 118


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccK8WG6y.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccK8WG6y.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccK8WG6y.s:218    .text.MX_GPIO_Init:00000000000000e0 $d
     /tmp/ccK8WG6y.s:224    .text.turnOnLED:0000000000000000 $t
     /tmp/ccK8WG6y.s:231    .text.turnOnLED:0000000000000000 turnOnLED
     /tmp/ccK8WG6y.s:254    .text.turnOffLED:0000000000000000 $t
     /tmp/ccK8WG6y.s:261    .text.turnOffLED:0000000000000000 turnOffLED
     /tmp/ccK8WG6y.s:284    .text.toggleLED:0000000000000000 $t
     /tmp/ccK8WG6y.s:291    .text.toggleLED:0000000000000000 toggleLED
     /tmp/ccK8WG6y.s:313    .text.blinkLED:0000000000000000 $t
     /tmp/ccK8WG6y.s:320    .text.blinkLED:0000000000000000 blinkLED
     /tmp/ccK8WG6y.s:395    .text.hal_mcu_trace_print:0000000000000000 $t
     /tmp/ccK8WG6y.s:402    .text.hal_mcu_trace_print:0000000000000000 hal_mcu_trace_print
     /tmp/ccK8WG6y.s:478    .text.hal_mcu_trace_print:0000000000000038 $d
     /tmp/ccK8WG6y.s:483    .rodata.resetLR1110.str1.4:0000000000000000 $d
     /tmp/ccK8WG6y.s:499    .text.resetLR1110:0000000000000000 $t
     /tmp/ccK8WG6y.s:505    .text.resetLR1110:0000000000000000 resetLR1110
     /tmp/ccK8WG6y.s:575    .text.resetLR1110:0000000000000050 $d
     /tmp/ccK8WG6y.s:584    .rodata.setupTCXO.str1.4:0000000000000000 $d
     /tmp/ccK8WG6y.s:597    .text.setupTCXO:0000000000000000 $t
     /tmp/ccK8WG6y.s:603    .text.setupTCXO:0000000000000000 setupTCXO
     /tmp/ccK8WG6y.s:728    .text.setupTCXO:0000000000000080 $d
     /tmp/ccK8WG6y.s:740    .rodata.getLR1110_Bootloader_Version.str1.4:0000000000000000 $d
     /tmp/ccK8WG6y.s:763    .text.getLR1110_Bootloader_Version:0000000000000000 $t
     /tmp/ccK8WG6y.s:769    .text.getLR1110_Bootloader_Version:0000000000000000 getLR1110_Bootloader_Version
     /tmp/ccK8WG6y.s:1006   .text.getLR1110_Bootloader_Version:0000000000000110 $d
     /tmp/ccK8WG6y.s:1023   .rodata.getLR1110_WiFi_Version.str1.4:0000000000000000 $d
     /tmp/ccK8WG6y.s:1033   .text.getLR1110_WiFi_Version:0000000000000000 $t
     /tmp/ccK8WG6y.s:1039   .text.getLR1110_WiFi_Version:0000000000000000 getLR1110_WiFi_Version
     /tmp/ccK8WG6y.s:1178   .text.getLR1110_WiFi_Version:0000000000000094 $d
     /tmp/ccK8WG6y.s:1191   .rodata.getLR1110_Chip_EUI.str1.4:0000000000000000 $d
     /tmp/ccK8WG6y.s:1202   .text.getLR1110_Chip_EUI:0000000000000000 $t
     /tmp/ccK8WG6y.s:1208   .text.getLR1110_Chip_EUI:0000000000000000 getLR1110_Chip_EUI
     /tmp/ccK8WG6y.s:1360   .text.getLR1110_Chip_EUI:00000000000000b8 $d
     /tmp/ccK8WG6y.s:1373   .rodata.getLR1110_Temperature.str1.4:0000000000000000 $d
     /tmp/ccK8WG6y.s:1395   .text.getLR1110_Temperature:0000000000000000 $t
     /tmp/ccK8WG6y.s:1401   .text.getLR1110_Temperature:0000000000000000 getLR1110_Temperature
     /tmp/ccK8WG6y.s:1663   .text.getLR1110_Temperature:0000000000000140 $d
     /tmp/ccK8WG6y.s:1688   .rodata.Error_Handler.str1.4:0000000000000000 $d
     /tmp/ccK8WG6y.s:1695   .text.Error_Handler:0000000000000000 $t
     /tmp/ccK8WG6y.s:1702   .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccK8WG6y.s:1830   .text.Error_Handler:0000000000000058 $d
     /tmp/ccK8WG6y.s:1844   .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccK8WG6y.s:1850   .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccK8WG6y.s:1911   .text.MX_USART2_UART_Init:0000000000000030 $d
     /tmp/ccK8WG6y.s:1917   .text.MX_RTC_Init:0000000000000000 $t
     /tmp/ccK8WG6y.s:1923   .text.MX_RTC_Init:0000000000000000 MX_RTC_Init
     /tmp/ccK8WG6y.s:2052   .text.MX_RTC_Init:0000000000000080 $d
     /tmp/ccK8WG6y.s:2058   .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/ccK8WG6y.s:2064   .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/ccK8WG6y.s:2147   .text.MX_SPI1_Init:0000000000000050 $d
     /tmp/ccK8WG6y.s:2153   .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccK8WG6y.s:2160   .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccK8WG6y.s:2292   .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccK8WG6y.s:2299   .text.main:0000000000000000 $t
ARM GAS  /tmp/ccK8WG6y.s 			page 119


     /tmp/ccK8WG6y.s:2306   .text.main:0000000000000000 main
     /tmp/ccK8WG6y.s:2446   .text.main:00000000000000a0 $d
     /tmp/ccK8WG6y.s:2476   .bss.huart2:0000000000000000 huart2
     /tmp/ccK8WG6y.s:2469   .bss.hspi1:0000000000000000 hspi1
     /tmp/ccK8WG6y.s:2462   .bss.hrtc:0000000000000000 hrtc
     /tmp/ccK8WG6y.s:2458   .bss.hrtc:0000000000000000 $d
     /tmp/ccK8WG6y.s:2465   .bss.hspi1:0000000000000000 $d
     /tmp/ccK8WG6y.s:2472   .bss.huart2:0000000000000000 $d
     /tmp/ccK8WG6y.s:2479   .rodata.__func__.0:0000000000000000 $d
     /tmp/ccK8WG6y.s:2483   .rodata.__func__.0:0000000000000000 __func__.0

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_GPIO_TogglePin
HAL_Delay
vsprintf
strlen
HAL_UART_Transmit
lr1110_spi_write
lr1110_spi_read
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dsub
__aeabi_dadd
__aeabi_d2f
HAL_UART_Init
HAL_RTC_Init
HAL_RTC_SetTime
HAL_RTC_SetDate
HAL_SPI_Init
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
malloc
