ARM GAS  /tmp/ccwAxJ3w.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"smtc_hal_mcu.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.__NVIC_SystemReset,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	__NVIC_SystemReset:
  26              	.LFB117:
  27              		.file 1 "../Drivers/CMSIS/Include/core_cm4.h"
   1:../Drivers/CMSIS/Include/core_cm4.h **** /**************************************************************************//**
   2:../Drivers/CMSIS/Include/core_cm4.h ****  * @file     core_cm4.h
   3:../Drivers/CMSIS/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:../Drivers/CMSIS/Include/core_cm4.h ****  * @version  V5.0.8
   5:../Drivers/CMSIS/Include/core_cm4.h ****  * @date     04. June 2018
   6:../Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
   7:../Drivers/CMSIS/Include/core_cm4.h **** /*
   8:../Drivers/CMSIS/Include/core_cm4.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:../Drivers/CMSIS/Include/core_cm4.h ****  *
  10:../Drivers/CMSIS/Include/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../Drivers/CMSIS/Include/core_cm4.h ****  *
  12:../Drivers/CMSIS/Include/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../Drivers/CMSIS/Include/core_cm4.h ****  * not use this file except in compliance with the License.
  14:../Drivers/CMSIS/Include/core_cm4.h ****  * You may obtain a copy of the License at
  15:../Drivers/CMSIS/Include/core_cm4.h ****  *
  16:../Drivers/CMSIS/Include/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../Drivers/CMSIS/Include/core_cm4.h ****  *
  18:../Drivers/CMSIS/Include/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../Drivers/CMSIS/Include/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../Drivers/CMSIS/Include/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../Drivers/CMSIS/Include/core_cm4.h ****  * See the License for the specific language governing permissions and
  22:../Drivers/CMSIS/Include/core_cm4.h ****  * limitations under the License.
  23:../Drivers/CMSIS/Include/core_cm4.h ****  */
  24:../Drivers/CMSIS/Include/core_cm4.h **** 
  25:../Drivers/CMSIS/Include/core_cm4.h **** #if   defined ( __ICCARM__ )
  26:../Drivers/CMSIS/Include/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:../Drivers/CMSIS/Include/core_cm4.h **** #elif defined (__clang__)
  28:../Drivers/CMSIS/Include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:../Drivers/CMSIS/Include/core_cm4.h **** #endif
  30:../Drivers/CMSIS/Include/core_cm4.h **** 
  31:../Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
ARM GAS  /tmp/ccwAxJ3w.s 			page 2


  32:../Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:../Drivers/CMSIS/Include/core_cm4.h **** 
  34:../Drivers/CMSIS/Include/core_cm4.h **** #include <stdint.h>
  35:../Drivers/CMSIS/Include/core_cm4.h **** 
  36:../Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
  37:../Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
  38:../Drivers/CMSIS/Include/core_cm4.h **** #endif
  39:../Drivers/CMSIS/Include/core_cm4.h **** 
  40:../Drivers/CMSIS/Include/core_cm4.h **** /**
  41:../Drivers/CMSIS/Include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:../Drivers/CMSIS/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:../Drivers/CMSIS/Include/core_cm4.h **** 
  44:../Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:../Drivers/CMSIS/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:../Drivers/CMSIS/Include/core_cm4.h **** 
  47:../Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:../Drivers/CMSIS/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:../Drivers/CMSIS/Include/core_cm4.h **** 
  50:../Drivers/CMSIS/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:../Drivers/CMSIS/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:../Drivers/CMSIS/Include/core_cm4.h ****  */
  53:../Drivers/CMSIS/Include/core_cm4.h **** 
  54:../Drivers/CMSIS/Include/core_cm4.h **** 
  55:../Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
  56:../Drivers/CMSIS/Include/core_cm4.h ****  *                 CMSIS definitions
  57:../Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  58:../Drivers/CMSIS/Include/core_cm4.h **** /**
  59:../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup Cortex_M4
  60:../Drivers/CMSIS/Include/core_cm4.h ****   @{
  61:../Drivers/CMSIS/Include/core_cm4.h ****  */
  62:../Drivers/CMSIS/Include/core_cm4.h **** 
  63:../Drivers/CMSIS/Include/core_cm4.h **** #include "cmsis_version.h"
  64:../Drivers/CMSIS/Include/core_cm4.h **** 
  65:../Drivers/CMSIS/Include/core_cm4.h **** /* CMSIS CM4 definitions */
  66:../Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:../Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:../Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:../Drivers/CMSIS/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:../Drivers/CMSIS/Include/core_cm4.h **** 
  71:../Drivers/CMSIS/Include/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:../Drivers/CMSIS/Include/core_cm4.h **** 
  73:../Drivers/CMSIS/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:../Drivers/CMSIS/Include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:../Drivers/CMSIS/Include/core_cm4.h **** */
  76:../Drivers/CMSIS/Include/core_cm4.h **** #if defined ( __CC_ARM )
  77:../Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:../Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  80:../Drivers/CMSIS/Include/core_cm4.h ****     #else
  81:../Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  83:../Drivers/CMSIS/Include/core_cm4.h ****     #endif
  84:../Drivers/CMSIS/Include/core_cm4.h ****   #else
  85:../Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  86:../Drivers/CMSIS/Include/core_cm4.h ****   #endif
  87:../Drivers/CMSIS/Include/core_cm4.h **** 
  88:../Drivers/CMSIS/Include/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
ARM GAS  /tmp/ccwAxJ3w.s 			page 3


  89:../Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARM_PCS_VFP
  90:../Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  92:../Drivers/CMSIS/Include/core_cm4.h ****     #else
  93:../Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  95:../Drivers/CMSIS/Include/core_cm4.h ****     #endif
  96:../Drivers/CMSIS/Include/core_cm4.h ****   #else
  97:../Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  98:../Drivers/CMSIS/Include/core_cm4.h ****   #endif
  99:../Drivers/CMSIS/Include/core_cm4.h **** 
 100:../Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 101:../Drivers/CMSIS/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:../Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 104:../Drivers/CMSIS/Include/core_cm4.h ****     #else
 105:../Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 107:../Drivers/CMSIS/Include/core_cm4.h ****     #endif
 108:../Drivers/CMSIS/Include/core_cm4.h ****   #else
 109:../Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 110:../Drivers/CMSIS/Include/core_cm4.h ****   #endif
 111:../Drivers/CMSIS/Include/core_cm4.h **** 
 112:../Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 113:../Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARMVFP__
 114:../Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 116:../Drivers/CMSIS/Include/core_cm4.h ****     #else
 117:../Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 119:../Drivers/CMSIS/Include/core_cm4.h ****     #endif
 120:../Drivers/CMSIS/Include/core_cm4.h ****   #else
 121:../Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 122:../Drivers/CMSIS/Include/core_cm4.h ****   #endif
 123:../Drivers/CMSIS/Include/core_cm4.h **** 
 124:../Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:../Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:../Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 128:../Drivers/CMSIS/Include/core_cm4.h ****     #else
 129:../Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 131:../Drivers/CMSIS/Include/core_cm4.h ****     #endif
 132:../Drivers/CMSIS/Include/core_cm4.h ****   #else
 133:../Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 134:../Drivers/CMSIS/Include/core_cm4.h ****   #endif
 135:../Drivers/CMSIS/Include/core_cm4.h **** 
 136:../Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 137:../Drivers/CMSIS/Include/core_cm4.h ****   #if defined __FPU_VFP__
 138:../Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 140:../Drivers/CMSIS/Include/core_cm4.h ****     #else
 141:../Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 143:../Drivers/CMSIS/Include/core_cm4.h ****     #endif
 144:../Drivers/CMSIS/Include/core_cm4.h ****   #else
 145:../Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
ARM GAS  /tmp/ccwAxJ3w.s 			page 4


 146:../Drivers/CMSIS/Include/core_cm4.h ****   #endif
 147:../Drivers/CMSIS/Include/core_cm4.h **** 
 148:../Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 149:../Drivers/CMSIS/Include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:../Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 152:../Drivers/CMSIS/Include/core_cm4.h ****     #else
 153:../Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:../Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 155:../Drivers/CMSIS/Include/core_cm4.h ****     #endif
 156:../Drivers/CMSIS/Include/core_cm4.h ****   #else
 157:../Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 158:../Drivers/CMSIS/Include/core_cm4.h ****   #endif
 159:../Drivers/CMSIS/Include/core_cm4.h **** 
 160:../Drivers/CMSIS/Include/core_cm4.h **** #endif
 161:../Drivers/CMSIS/Include/core_cm4.h **** 
 162:../Drivers/CMSIS/Include/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:../Drivers/CMSIS/Include/core_cm4.h **** 
 164:../Drivers/CMSIS/Include/core_cm4.h **** 
 165:../Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 166:../Drivers/CMSIS/Include/core_cm4.h **** }
 167:../Drivers/CMSIS/Include/core_cm4.h **** #endif
 168:../Drivers/CMSIS/Include/core_cm4.h **** 
 169:../Drivers/CMSIS/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:../Drivers/CMSIS/Include/core_cm4.h **** 
 171:../Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:../Drivers/CMSIS/Include/core_cm4.h **** 
 173:../Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:../Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:../Drivers/CMSIS/Include/core_cm4.h **** 
 176:../Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 177:../Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
 178:../Drivers/CMSIS/Include/core_cm4.h **** #endif
 179:../Drivers/CMSIS/Include/core_cm4.h **** 
 180:../Drivers/CMSIS/Include/core_cm4.h **** /* check device defines and use defaults */
 181:../Drivers/CMSIS/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:../Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __CM4_REV
 183:../Drivers/CMSIS/Include/core_cm4.h ****     #define __CM4_REV               0x0000U
 184:../Drivers/CMSIS/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:../Drivers/CMSIS/Include/core_cm4.h ****   #endif
 186:../Drivers/CMSIS/Include/core_cm4.h **** 
 187:../Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:../Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_PRESENT             0U
 189:../Drivers/CMSIS/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:../Drivers/CMSIS/Include/core_cm4.h ****   #endif
 191:../Drivers/CMSIS/Include/core_cm4.h **** 
 192:../Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
 193:../Drivers/CMSIS/Include/core_cm4.h ****     #define __MPU_PRESENT             0U
 194:../Drivers/CMSIS/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:../Drivers/CMSIS/Include/core_cm4.h ****   #endif
 196:../Drivers/CMSIS/Include/core_cm4.h **** 
 197:../Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 198:../Drivers/CMSIS/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 199:../Drivers/CMSIS/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 200:../Drivers/CMSIS/Include/core_cm4.h ****   #endif
 201:../Drivers/CMSIS/Include/core_cm4.h **** 
 202:../Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
ARM GAS  /tmp/ccwAxJ3w.s 			page 5


 203:../Drivers/CMSIS/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 204:../Drivers/CMSIS/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 205:../Drivers/CMSIS/Include/core_cm4.h ****   #endif
 206:../Drivers/CMSIS/Include/core_cm4.h **** #endif
 207:../Drivers/CMSIS/Include/core_cm4.h **** 
 208:../Drivers/CMSIS/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 209:../Drivers/CMSIS/Include/core_cm4.h **** /**
 210:../Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 211:../Drivers/CMSIS/Include/core_cm4.h **** 
 212:../Drivers/CMSIS/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 213:../Drivers/CMSIS/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 214:../Drivers/CMSIS/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 215:../Drivers/CMSIS/Include/core_cm4.h **** */
 216:../Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 217:../Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 218:../Drivers/CMSIS/Include/core_cm4.h **** #else
 219:../Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 220:../Drivers/CMSIS/Include/core_cm4.h **** #endif
 221:../Drivers/CMSIS/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 222:../Drivers/CMSIS/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 223:../Drivers/CMSIS/Include/core_cm4.h **** 
 224:../Drivers/CMSIS/Include/core_cm4.h **** /* following defines should be used for structure members */
 225:../Drivers/CMSIS/Include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 226:../Drivers/CMSIS/Include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 227:../Drivers/CMSIS/Include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 228:../Drivers/CMSIS/Include/core_cm4.h **** 
 229:../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 230:../Drivers/CMSIS/Include/core_cm4.h **** 
 231:../Drivers/CMSIS/Include/core_cm4.h **** 
 232:../Drivers/CMSIS/Include/core_cm4.h **** 
 233:../Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
 234:../Drivers/CMSIS/Include/core_cm4.h ****  *                 Register Abstraction
 235:../Drivers/CMSIS/Include/core_cm4.h ****   Core Register contain:
 236:../Drivers/CMSIS/Include/core_cm4.h ****   - Core Register
 237:../Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Register
 238:../Drivers/CMSIS/Include/core_cm4.h ****   - Core SCB Register
 239:../Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Register
 240:../Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Register
 241:../Drivers/CMSIS/Include/core_cm4.h ****   - Core MPU Register
 242:../Drivers/CMSIS/Include/core_cm4.h ****   - Core FPU Register
 243:../Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
 244:../Drivers/CMSIS/Include/core_cm4.h **** /**
 245:../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 246:../Drivers/CMSIS/Include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 247:../Drivers/CMSIS/Include/core_cm4.h **** */
 248:../Drivers/CMSIS/Include/core_cm4.h **** 
 249:../Drivers/CMSIS/Include/core_cm4.h **** /**
 250:../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 251:../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 252:../Drivers/CMSIS/Include/core_cm4.h ****   \brief      Core Register type definitions.
 253:../Drivers/CMSIS/Include/core_cm4.h ****   @{
 254:../Drivers/CMSIS/Include/core_cm4.h ****  */
 255:../Drivers/CMSIS/Include/core_cm4.h **** 
 256:../Drivers/CMSIS/Include/core_cm4.h **** /**
 257:../Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 258:../Drivers/CMSIS/Include/core_cm4.h ****  */
 259:../Drivers/CMSIS/Include/core_cm4.h **** typedef union
ARM GAS  /tmp/ccwAxJ3w.s 			page 6


 260:../Drivers/CMSIS/Include/core_cm4.h **** {
 261:../Drivers/CMSIS/Include/core_cm4.h ****   struct
 262:../Drivers/CMSIS/Include/core_cm4.h ****   {
 263:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 264:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 265:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 266:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 267:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 268:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 269:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 270:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 271:../Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 272:../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 273:../Drivers/CMSIS/Include/core_cm4.h **** } APSR_Type;
 274:../Drivers/CMSIS/Include/core_cm4.h **** 
 275:../Drivers/CMSIS/Include/core_cm4.h **** /* APSR Register Definitions */
 276:../Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 277:../Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 278:../Drivers/CMSIS/Include/core_cm4.h **** 
 279:../Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 280:../Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 281:../Drivers/CMSIS/Include/core_cm4.h **** 
 282:../Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 283:../Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 284:../Drivers/CMSIS/Include/core_cm4.h **** 
 285:../Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 286:../Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 287:../Drivers/CMSIS/Include/core_cm4.h **** 
 288:../Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 289:../Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 290:../Drivers/CMSIS/Include/core_cm4.h **** 
 291:../Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 292:../Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 293:../Drivers/CMSIS/Include/core_cm4.h **** 
 294:../Drivers/CMSIS/Include/core_cm4.h **** 
 295:../Drivers/CMSIS/Include/core_cm4.h **** /**
 296:../Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 297:../Drivers/CMSIS/Include/core_cm4.h ****  */
 298:../Drivers/CMSIS/Include/core_cm4.h **** typedef union
 299:../Drivers/CMSIS/Include/core_cm4.h **** {
 300:../Drivers/CMSIS/Include/core_cm4.h ****   struct
 301:../Drivers/CMSIS/Include/core_cm4.h ****   {
 302:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 303:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 304:../Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 305:../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:../Drivers/CMSIS/Include/core_cm4.h **** } IPSR_Type;
 307:../Drivers/CMSIS/Include/core_cm4.h **** 
 308:../Drivers/CMSIS/Include/core_cm4.h **** /* IPSR Register Definitions */
 309:../Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 310:../Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 311:../Drivers/CMSIS/Include/core_cm4.h **** 
 312:../Drivers/CMSIS/Include/core_cm4.h **** 
 313:../Drivers/CMSIS/Include/core_cm4.h **** /**
 314:../Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 315:../Drivers/CMSIS/Include/core_cm4.h ****  */
 316:../Drivers/CMSIS/Include/core_cm4.h **** typedef union
ARM GAS  /tmp/ccwAxJ3w.s 			page 7


 317:../Drivers/CMSIS/Include/core_cm4.h **** {
 318:../Drivers/CMSIS/Include/core_cm4.h ****   struct
 319:../Drivers/CMSIS/Include/core_cm4.h ****   {
 320:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 321:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 322:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 323:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 324:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 325:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 326:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 327:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 328:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 329:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 330:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 331:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 332:../Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 333:../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 334:../Drivers/CMSIS/Include/core_cm4.h **** } xPSR_Type;
 335:../Drivers/CMSIS/Include/core_cm4.h **** 
 336:../Drivers/CMSIS/Include/core_cm4.h **** /* xPSR Register Definitions */
 337:../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 338:../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 339:../Drivers/CMSIS/Include/core_cm4.h **** 
 340:../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 341:../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 342:../Drivers/CMSIS/Include/core_cm4.h **** 
 343:../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 344:../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 345:../Drivers/CMSIS/Include/core_cm4.h **** 
 346:../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 347:../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 348:../Drivers/CMSIS/Include/core_cm4.h **** 
 349:../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 350:../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 351:../Drivers/CMSIS/Include/core_cm4.h **** 
 352:../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 353:../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 354:../Drivers/CMSIS/Include/core_cm4.h **** 
 355:../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 356:../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 357:../Drivers/CMSIS/Include/core_cm4.h **** 
 358:../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 359:../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 360:../Drivers/CMSIS/Include/core_cm4.h **** 
 361:../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 362:../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 363:../Drivers/CMSIS/Include/core_cm4.h **** 
 364:../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 365:../Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 366:../Drivers/CMSIS/Include/core_cm4.h **** 
 367:../Drivers/CMSIS/Include/core_cm4.h **** 
 368:../Drivers/CMSIS/Include/core_cm4.h **** /**
 369:../Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 370:../Drivers/CMSIS/Include/core_cm4.h ****  */
 371:../Drivers/CMSIS/Include/core_cm4.h **** typedef union
 372:../Drivers/CMSIS/Include/core_cm4.h **** {
 373:../Drivers/CMSIS/Include/core_cm4.h ****   struct
ARM GAS  /tmp/ccwAxJ3w.s 			page 8


 374:../Drivers/CMSIS/Include/core_cm4.h ****   {
 375:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 376:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 377:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 378:../Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 379:../Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 380:../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 381:../Drivers/CMSIS/Include/core_cm4.h **** } CONTROL_Type;
 382:../Drivers/CMSIS/Include/core_cm4.h **** 
 383:../Drivers/CMSIS/Include/core_cm4.h **** /* CONTROL Register Definitions */
 384:../Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 385:../Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 386:../Drivers/CMSIS/Include/core_cm4.h **** 
 387:../Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 388:../Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 389:../Drivers/CMSIS/Include/core_cm4.h **** 
 390:../Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 391:../Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 392:../Drivers/CMSIS/Include/core_cm4.h **** 
 393:../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 394:../Drivers/CMSIS/Include/core_cm4.h **** 
 395:../Drivers/CMSIS/Include/core_cm4.h **** 
 396:../Drivers/CMSIS/Include/core_cm4.h **** /**
 397:../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 398:../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 399:../Drivers/CMSIS/Include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 400:../Drivers/CMSIS/Include/core_cm4.h ****   @{
 401:../Drivers/CMSIS/Include/core_cm4.h ****  */
 402:../Drivers/CMSIS/Include/core_cm4.h **** 
 403:../Drivers/CMSIS/Include/core_cm4.h **** /**
 404:../Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 405:../Drivers/CMSIS/Include/core_cm4.h ****  */
 406:../Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 407:../Drivers/CMSIS/Include/core_cm4.h **** {
 408:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 409:../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[24U];
 410:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 411:../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RSERVED1[24U];
 412:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 413:../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[24U];
 414:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 415:../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[24U];
 416:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 417:../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[56U];
 418:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 419:../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[644U];
 420:../Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 421:../Drivers/CMSIS/Include/core_cm4.h **** }  NVIC_Type;
 422:../Drivers/CMSIS/Include/core_cm4.h **** 
 423:../Drivers/CMSIS/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 424:../Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 425:../Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 426:../Drivers/CMSIS/Include/core_cm4.h **** 
 427:../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 428:../Drivers/CMSIS/Include/core_cm4.h **** 
 429:../Drivers/CMSIS/Include/core_cm4.h **** 
 430:../Drivers/CMSIS/Include/core_cm4.h **** /**
ARM GAS  /tmp/ccwAxJ3w.s 			page 9


 431:../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 432:../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 433:../Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 434:../Drivers/CMSIS/Include/core_cm4.h ****   @{
 435:../Drivers/CMSIS/Include/core_cm4.h ****  */
 436:../Drivers/CMSIS/Include/core_cm4.h **** 
 437:../Drivers/CMSIS/Include/core_cm4.h **** /**
 438:../Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 439:../Drivers/CMSIS/Include/core_cm4.h ****  */
 440:../Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 441:../Drivers/CMSIS/Include/core_cm4.h **** {
 442:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 443:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 444:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 445:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 446:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 447:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 448:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 449:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 450:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 451:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 452:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 453:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 454:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 455:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 456:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 457:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 458:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 459:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 460:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 461:../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[5U];
 462:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 463:../Drivers/CMSIS/Include/core_cm4.h **** } SCB_Type;
 464:../Drivers/CMSIS/Include/core_cm4.h **** 
 465:../Drivers/CMSIS/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 466:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 467:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 468:../Drivers/CMSIS/Include/core_cm4.h **** 
 469:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 470:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 471:../Drivers/CMSIS/Include/core_cm4.h **** 
 472:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 473:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 474:../Drivers/CMSIS/Include/core_cm4.h **** 
 475:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 476:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 477:../Drivers/CMSIS/Include/core_cm4.h **** 
 478:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 479:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 480:../Drivers/CMSIS/Include/core_cm4.h **** 
 481:../Drivers/CMSIS/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 482:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 483:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 484:../Drivers/CMSIS/Include/core_cm4.h **** 
 485:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 486:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 487:../Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccwAxJ3w.s 			page 10


 488:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 489:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 490:../Drivers/CMSIS/Include/core_cm4.h **** 
 491:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 492:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 493:../Drivers/CMSIS/Include/core_cm4.h **** 
 494:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 495:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 496:../Drivers/CMSIS/Include/core_cm4.h **** 
 497:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 498:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 499:../Drivers/CMSIS/Include/core_cm4.h **** 
 500:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 501:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 502:../Drivers/CMSIS/Include/core_cm4.h **** 
 503:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 504:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 505:../Drivers/CMSIS/Include/core_cm4.h **** 
 506:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 507:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 508:../Drivers/CMSIS/Include/core_cm4.h **** 
 509:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 510:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 511:../Drivers/CMSIS/Include/core_cm4.h **** 
 512:../Drivers/CMSIS/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 513:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 514:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 515:../Drivers/CMSIS/Include/core_cm4.h **** 
 516:../Drivers/CMSIS/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 517:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 518:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 519:../Drivers/CMSIS/Include/core_cm4.h **** 
 520:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 521:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 522:../Drivers/CMSIS/Include/core_cm4.h **** 
 523:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 524:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 525:../Drivers/CMSIS/Include/core_cm4.h **** 
 526:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 527:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 528:../Drivers/CMSIS/Include/core_cm4.h **** 
 529:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 530:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 531:../Drivers/CMSIS/Include/core_cm4.h **** 
 532:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 533:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 534:../Drivers/CMSIS/Include/core_cm4.h **** 
 535:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 536:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 537:../Drivers/CMSIS/Include/core_cm4.h **** 
 538:../Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Control Register Definitions */
 539:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 540:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 541:../Drivers/CMSIS/Include/core_cm4.h **** 
 542:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 543:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 544:../Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccwAxJ3w.s 			page 11


 545:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 546:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 547:../Drivers/CMSIS/Include/core_cm4.h **** 
 548:../Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 549:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 550:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 551:../Drivers/CMSIS/Include/core_cm4.h **** 
 552:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 553:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 554:../Drivers/CMSIS/Include/core_cm4.h **** 
 555:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 556:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 557:../Drivers/CMSIS/Include/core_cm4.h **** 
 558:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 559:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 560:../Drivers/CMSIS/Include/core_cm4.h **** 
 561:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 562:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 563:../Drivers/CMSIS/Include/core_cm4.h **** 
 564:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 565:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 566:../Drivers/CMSIS/Include/core_cm4.h **** 
 567:../Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 568:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 569:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 570:../Drivers/CMSIS/Include/core_cm4.h **** 
 571:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 572:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 573:../Drivers/CMSIS/Include/core_cm4.h **** 
 574:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 575:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 576:../Drivers/CMSIS/Include/core_cm4.h **** 
 577:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 578:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 579:../Drivers/CMSIS/Include/core_cm4.h **** 
 580:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 581:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 582:../Drivers/CMSIS/Include/core_cm4.h **** 
 583:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 584:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 585:../Drivers/CMSIS/Include/core_cm4.h **** 
 586:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 587:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 588:../Drivers/CMSIS/Include/core_cm4.h **** 
 589:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 590:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 591:../Drivers/CMSIS/Include/core_cm4.h **** 
 592:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 593:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 594:../Drivers/CMSIS/Include/core_cm4.h **** 
 595:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 596:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 597:../Drivers/CMSIS/Include/core_cm4.h **** 
 598:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 599:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 600:../Drivers/CMSIS/Include/core_cm4.h **** 
 601:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
ARM GAS  /tmp/ccwAxJ3w.s 			page 12


 602:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 603:../Drivers/CMSIS/Include/core_cm4.h **** 
 604:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 605:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 606:../Drivers/CMSIS/Include/core_cm4.h **** 
 607:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 608:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 609:../Drivers/CMSIS/Include/core_cm4.h **** 
 610:../Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 611:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 612:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 613:../Drivers/CMSIS/Include/core_cm4.h **** 
 614:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 615:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 616:../Drivers/CMSIS/Include/core_cm4.h **** 
 617:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 618:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 619:../Drivers/CMSIS/Include/core_cm4.h **** 
 620:../Drivers/CMSIS/Include/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 621:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 622:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 623:../Drivers/CMSIS/Include/core_cm4.h **** 
 624:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 625:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 626:../Drivers/CMSIS/Include/core_cm4.h **** 
 627:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 628:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 629:../Drivers/CMSIS/Include/core_cm4.h **** 
 630:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 631:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 632:../Drivers/CMSIS/Include/core_cm4.h **** 
 633:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 634:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 635:../Drivers/CMSIS/Include/core_cm4.h **** 
 636:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 637:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 638:../Drivers/CMSIS/Include/core_cm4.h **** 
 639:../Drivers/CMSIS/Include/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 640:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 641:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 642:../Drivers/CMSIS/Include/core_cm4.h **** 
 643:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 644:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 645:../Drivers/CMSIS/Include/core_cm4.h **** 
 646:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 647:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 648:../Drivers/CMSIS/Include/core_cm4.h **** 
 649:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 650:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 651:../Drivers/CMSIS/Include/core_cm4.h **** 
 652:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 653:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 654:../Drivers/CMSIS/Include/core_cm4.h **** 
 655:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 656:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 657:../Drivers/CMSIS/Include/core_cm4.h **** 
 658:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
ARM GAS  /tmp/ccwAxJ3w.s 			page 13


 659:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 660:../Drivers/CMSIS/Include/core_cm4.h **** 
 661:../Drivers/CMSIS/Include/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 662:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 663:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 664:../Drivers/CMSIS/Include/core_cm4.h **** 
 665:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 666:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 667:../Drivers/CMSIS/Include/core_cm4.h **** 
 668:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 669:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 670:../Drivers/CMSIS/Include/core_cm4.h **** 
 671:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 672:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 673:../Drivers/CMSIS/Include/core_cm4.h **** 
 674:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 675:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 676:../Drivers/CMSIS/Include/core_cm4.h **** 
 677:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 678:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 679:../Drivers/CMSIS/Include/core_cm4.h **** 
 680:../Drivers/CMSIS/Include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 681:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 682:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 683:../Drivers/CMSIS/Include/core_cm4.h **** 
 684:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 685:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 686:../Drivers/CMSIS/Include/core_cm4.h **** 
 687:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 688:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 689:../Drivers/CMSIS/Include/core_cm4.h **** 
 690:../Drivers/CMSIS/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 691:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 692:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 693:../Drivers/CMSIS/Include/core_cm4.h **** 
 694:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 695:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 696:../Drivers/CMSIS/Include/core_cm4.h **** 
 697:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 698:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 699:../Drivers/CMSIS/Include/core_cm4.h **** 
 700:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 701:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 702:../Drivers/CMSIS/Include/core_cm4.h **** 
 703:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 704:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 705:../Drivers/CMSIS/Include/core_cm4.h **** 
 706:../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 707:../Drivers/CMSIS/Include/core_cm4.h **** 
 708:../Drivers/CMSIS/Include/core_cm4.h **** 
 709:../Drivers/CMSIS/Include/core_cm4.h **** /**
 710:../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 711:../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 712:../Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 713:../Drivers/CMSIS/Include/core_cm4.h ****   @{
 714:../Drivers/CMSIS/Include/core_cm4.h ****  */
 715:../Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccwAxJ3w.s 			page 14


 716:../Drivers/CMSIS/Include/core_cm4.h **** /**
 717:../Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 718:../Drivers/CMSIS/Include/core_cm4.h ****  */
 719:../Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 720:../Drivers/CMSIS/Include/core_cm4.h **** {
 721:../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 722:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 723:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 724:../Drivers/CMSIS/Include/core_cm4.h **** } SCnSCB_Type;
 725:../Drivers/CMSIS/Include/core_cm4.h **** 
 726:../Drivers/CMSIS/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 727:../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 728:../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 729:../Drivers/CMSIS/Include/core_cm4.h **** 
 730:../Drivers/CMSIS/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 731:../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 732:../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 733:../Drivers/CMSIS/Include/core_cm4.h **** 
 734:../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 735:../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 736:../Drivers/CMSIS/Include/core_cm4.h **** 
 737:../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 738:../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 739:../Drivers/CMSIS/Include/core_cm4.h **** 
 740:../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 741:../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 742:../Drivers/CMSIS/Include/core_cm4.h **** 
 743:../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 744:../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 745:../Drivers/CMSIS/Include/core_cm4.h **** 
 746:../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 747:../Drivers/CMSIS/Include/core_cm4.h **** 
 748:../Drivers/CMSIS/Include/core_cm4.h **** 
 749:../Drivers/CMSIS/Include/core_cm4.h **** /**
 750:../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 751:../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 752:../Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 753:../Drivers/CMSIS/Include/core_cm4.h ****   @{
 754:../Drivers/CMSIS/Include/core_cm4.h ****  */
 755:../Drivers/CMSIS/Include/core_cm4.h **** 
 756:../Drivers/CMSIS/Include/core_cm4.h **** /**
 757:../Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 758:../Drivers/CMSIS/Include/core_cm4.h ****  */
 759:../Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 760:../Drivers/CMSIS/Include/core_cm4.h **** {
 761:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 762:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 763:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 764:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 765:../Drivers/CMSIS/Include/core_cm4.h **** } SysTick_Type;
 766:../Drivers/CMSIS/Include/core_cm4.h **** 
 767:../Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 768:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 769:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 770:../Drivers/CMSIS/Include/core_cm4.h **** 
 771:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 772:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
ARM GAS  /tmp/ccwAxJ3w.s 			page 15


 773:../Drivers/CMSIS/Include/core_cm4.h **** 
 774:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 775:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 776:../Drivers/CMSIS/Include/core_cm4.h **** 
 777:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 778:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 779:../Drivers/CMSIS/Include/core_cm4.h **** 
 780:../Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 781:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 782:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 783:../Drivers/CMSIS/Include/core_cm4.h **** 
 784:../Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 785:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 786:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 787:../Drivers/CMSIS/Include/core_cm4.h **** 
 788:../Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 789:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 790:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 791:../Drivers/CMSIS/Include/core_cm4.h **** 
 792:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 793:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 794:../Drivers/CMSIS/Include/core_cm4.h **** 
 795:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 796:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 797:../Drivers/CMSIS/Include/core_cm4.h **** 
 798:../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 799:../Drivers/CMSIS/Include/core_cm4.h **** 
 800:../Drivers/CMSIS/Include/core_cm4.h **** 
 801:../Drivers/CMSIS/Include/core_cm4.h **** /**
 802:../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 803:../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 804:../Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 805:../Drivers/CMSIS/Include/core_cm4.h ****   @{
 806:../Drivers/CMSIS/Include/core_cm4.h ****  */
 807:../Drivers/CMSIS/Include/core_cm4.h **** 
 808:../Drivers/CMSIS/Include/core_cm4.h **** /**
 809:../Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 810:../Drivers/CMSIS/Include/core_cm4.h ****  */
 811:../Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 812:../Drivers/CMSIS/Include/core_cm4.h **** {
 813:../Drivers/CMSIS/Include/core_cm4.h ****   __OM  union
 814:../Drivers/CMSIS/Include/core_cm4.h ****   {
 815:../Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 816:../Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 817:../Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 818:../Drivers/CMSIS/Include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 819:../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[864U];
 820:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 821:../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[15U];
 822:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 823:../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[15U];
 824:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 825:../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[29U];
 826:../Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 827:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 828:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 829:../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[43U];
ARM GAS  /tmp/ccwAxJ3w.s 			page 16


 830:../Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 831:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 832:../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[6U];
 833:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 834:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 835:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 836:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 837:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 838:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 839:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 840:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 841:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 842:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 843:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 844:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 845:../Drivers/CMSIS/Include/core_cm4.h **** } ITM_Type;
 846:../Drivers/CMSIS/Include/core_cm4.h **** 
 847:../Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 848:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 849:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 850:../Drivers/CMSIS/Include/core_cm4.h **** 
 851:../Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 852:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 853:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 854:../Drivers/CMSIS/Include/core_cm4.h **** 
 855:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 856:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 857:../Drivers/CMSIS/Include/core_cm4.h **** 
 858:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 859:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 860:../Drivers/CMSIS/Include/core_cm4.h **** 
 861:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 862:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 863:../Drivers/CMSIS/Include/core_cm4.h **** 
 864:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 865:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 866:../Drivers/CMSIS/Include/core_cm4.h **** 
 867:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 868:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 869:../Drivers/CMSIS/Include/core_cm4.h **** 
 870:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 871:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 872:../Drivers/CMSIS/Include/core_cm4.h **** 
 873:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 874:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 875:../Drivers/CMSIS/Include/core_cm4.h **** 
 876:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 877:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 878:../Drivers/CMSIS/Include/core_cm4.h **** 
 879:../Drivers/CMSIS/Include/core_cm4.h **** /* ITM Integration Write Register Definitions */
 880:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 881:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 882:../Drivers/CMSIS/Include/core_cm4.h **** 
 883:../Drivers/CMSIS/Include/core_cm4.h **** /* ITM Integration Read Register Definitions */
 884:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 885:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 886:../Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccwAxJ3w.s 			page 17


 887:../Drivers/CMSIS/Include/core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 888:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 889:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 890:../Drivers/CMSIS/Include/core_cm4.h **** 
 891:../Drivers/CMSIS/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
 892:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 893:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 894:../Drivers/CMSIS/Include/core_cm4.h **** 
 895:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 896:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 897:../Drivers/CMSIS/Include/core_cm4.h **** 
 898:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 899:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 900:../Drivers/CMSIS/Include/core_cm4.h **** 
 901:../Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 902:../Drivers/CMSIS/Include/core_cm4.h **** 
 903:../Drivers/CMSIS/Include/core_cm4.h **** 
 904:../Drivers/CMSIS/Include/core_cm4.h **** /**
 905:../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 906:../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 907:../Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 908:../Drivers/CMSIS/Include/core_cm4.h ****   @{
 909:../Drivers/CMSIS/Include/core_cm4.h ****  */
 910:../Drivers/CMSIS/Include/core_cm4.h **** 
 911:../Drivers/CMSIS/Include/core_cm4.h **** /**
 912:../Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 913:../Drivers/CMSIS/Include/core_cm4.h ****  */
 914:../Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 915:../Drivers/CMSIS/Include/core_cm4.h **** {
 916:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 917:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 918:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 919:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 920:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 921:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 922:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 923:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 924:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 925:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 926:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 927:../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 928:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 929:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 930:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 931:../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[1U];
 932:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 933:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 934:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 935:../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[1U];
 936:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 937:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 938:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 939:../Drivers/CMSIS/Include/core_cm4.h **** } DWT_Type;
 940:../Drivers/CMSIS/Include/core_cm4.h **** 
 941:../Drivers/CMSIS/Include/core_cm4.h **** /* DWT Control Register Definitions */
 942:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 943:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
ARM GAS  /tmp/ccwAxJ3w.s 			page 18


 944:../Drivers/CMSIS/Include/core_cm4.h **** 
 945:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 946:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 947:../Drivers/CMSIS/Include/core_cm4.h **** 
 948:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 949:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 950:../Drivers/CMSIS/Include/core_cm4.h **** 
 951:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 952:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 953:../Drivers/CMSIS/Include/core_cm4.h **** 
 954:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 955:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 956:../Drivers/CMSIS/Include/core_cm4.h **** 
 957:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 958:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 959:../Drivers/CMSIS/Include/core_cm4.h **** 
 960:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 961:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 962:../Drivers/CMSIS/Include/core_cm4.h **** 
 963:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 964:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 965:../Drivers/CMSIS/Include/core_cm4.h **** 
 966:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 967:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 968:../Drivers/CMSIS/Include/core_cm4.h **** 
 969:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 970:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 971:../Drivers/CMSIS/Include/core_cm4.h **** 
 972:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 973:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 974:../Drivers/CMSIS/Include/core_cm4.h **** 
 975:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 976:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 977:../Drivers/CMSIS/Include/core_cm4.h **** 
 978:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 979:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 980:../Drivers/CMSIS/Include/core_cm4.h **** 
 981:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 982:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 983:../Drivers/CMSIS/Include/core_cm4.h **** 
 984:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 985:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 986:../Drivers/CMSIS/Include/core_cm4.h **** 
 987:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 988:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 989:../Drivers/CMSIS/Include/core_cm4.h **** 
 990:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 991:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 992:../Drivers/CMSIS/Include/core_cm4.h **** 
 993:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 994:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 995:../Drivers/CMSIS/Include/core_cm4.h **** 
 996:../Drivers/CMSIS/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 997:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 998:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 999:../Drivers/CMSIS/Include/core_cm4.h **** 
1000:../Drivers/CMSIS/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
ARM GAS  /tmp/ccwAxJ3w.s 			page 19


1001:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1002:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1003:../Drivers/CMSIS/Include/core_cm4.h **** 
1004:../Drivers/CMSIS/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
1005:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1006:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1007:../Drivers/CMSIS/Include/core_cm4.h **** 
1008:../Drivers/CMSIS/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
1009:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1010:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1011:../Drivers/CMSIS/Include/core_cm4.h **** 
1012:../Drivers/CMSIS/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
1013:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1014:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1015:../Drivers/CMSIS/Include/core_cm4.h **** 
1016:../Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1017:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1018:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1019:../Drivers/CMSIS/Include/core_cm4.h **** 
1020:../Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1021:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1022:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1023:../Drivers/CMSIS/Include/core_cm4.h **** 
1024:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1025:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1026:../Drivers/CMSIS/Include/core_cm4.h **** 
1027:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1028:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1029:../Drivers/CMSIS/Include/core_cm4.h **** 
1030:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1031:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1032:../Drivers/CMSIS/Include/core_cm4.h **** 
1033:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1034:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1035:../Drivers/CMSIS/Include/core_cm4.h **** 
1036:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1037:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1038:../Drivers/CMSIS/Include/core_cm4.h **** 
1039:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1040:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1041:../Drivers/CMSIS/Include/core_cm4.h **** 
1042:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1043:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1044:../Drivers/CMSIS/Include/core_cm4.h **** 
1045:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1046:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1047:../Drivers/CMSIS/Include/core_cm4.h **** 
1048:../Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1049:../Drivers/CMSIS/Include/core_cm4.h **** 
1050:../Drivers/CMSIS/Include/core_cm4.h **** 
1051:../Drivers/CMSIS/Include/core_cm4.h **** /**
1052:../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1053:../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1054:../Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1055:../Drivers/CMSIS/Include/core_cm4.h ****   @{
1056:../Drivers/CMSIS/Include/core_cm4.h ****  */
1057:../Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccwAxJ3w.s 			page 20


1058:../Drivers/CMSIS/Include/core_cm4.h **** /**
1059:../Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1060:../Drivers/CMSIS/Include/core_cm4.h ****  */
1061:../Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1062:../Drivers/CMSIS/Include/core_cm4.h **** {
1063:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1064:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1065:../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[2U];
1066:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1067:../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[55U];
1068:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1069:../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[131U];
1070:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1071:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1072:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1073:../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[759U];
1074:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1075:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1076:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1077:../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[1U];
1078:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1079:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1080:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1081:../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[39U];
1082:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1083:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1084:../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED7[8U];
1085:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1086:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1087:../Drivers/CMSIS/Include/core_cm4.h **** } TPI_Type;
1088:../Drivers/CMSIS/Include/core_cm4.h **** 
1089:../Drivers/CMSIS/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1090:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1091:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1092:../Drivers/CMSIS/Include/core_cm4.h **** 
1093:../Drivers/CMSIS/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1094:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1095:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1096:../Drivers/CMSIS/Include/core_cm4.h **** 
1097:../Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1098:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1099:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1100:../Drivers/CMSIS/Include/core_cm4.h **** 
1101:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1102:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1103:../Drivers/CMSIS/Include/core_cm4.h **** 
1104:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1105:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1106:../Drivers/CMSIS/Include/core_cm4.h **** 
1107:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1108:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1109:../Drivers/CMSIS/Include/core_cm4.h **** 
1110:../Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1111:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1112:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1113:../Drivers/CMSIS/Include/core_cm4.h **** 
1114:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
ARM GAS  /tmp/ccwAxJ3w.s 			page 21


1115:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1116:../Drivers/CMSIS/Include/core_cm4.h **** 
1117:../Drivers/CMSIS/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1118:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1119:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1120:../Drivers/CMSIS/Include/core_cm4.h **** 
1121:../Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1122:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1123:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1124:../Drivers/CMSIS/Include/core_cm4.h **** 
1125:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1126:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1127:../Drivers/CMSIS/Include/core_cm4.h **** 
1128:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1129:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1130:../Drivers/CMSIS/Include/core_cm4.h **** 
1131:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1132:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1133:../Drivers/CMSIS/Include/core_cm4.h **** 
1134:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1135:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1136:../Drivers/CMSIS/Include/core_cm4.h **** 
1137:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1138:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1139:../Drivers/CMSIS/Include/core_cm4.h **** 
1140:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1141:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1142:../Drivers/CMSIS/Include/core_cm4.h **** 
1143:../Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1144:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1145:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1146:../Drivers/CMSIS/Include/core_cm4.h **** 
1147:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1148:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1149:../Drivers/CMSIS/Include/core_cm4.h **** 
1150:../Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1151:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1152:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1153:../Drivers/CMSIS/Include/core_cm4.h **** 
1154:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1155:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1156:../Drivers/CMSIS/Include/core_cm4.h **** 
1157:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1158:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1159:../Drivers/CMSIS/Include/core_cm4.h **** 
1160:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1161:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1162:../Drivers/CMSIS/Include/core_cm4.h **** 
1163:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1164:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1165:../Drivers/CMSIS/Include/core_cm4.h **** 
1166:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1167:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1168:../Drivers/CMSIS/Include/core_cm4.h **** 
1169:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1170:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1171:../Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccwAxJ3w.s 			page 22


1172:../Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1173:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1174:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1175:../Drivers/CMSIS/Include/core_cm4.h **** 
1176:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1177:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1178:../Drivers/CMSIS/Include/core_cm4.h **** 
1179:../Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1180:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1181:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1182:../Drivers/CMSIS/Include/core_cm4.h **** 
1183:../Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1184:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1185:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1186:../Drivers/CMSIS/Include/core_cm4.h **** 
1187:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1188:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1189:../Drivers/CMSIS/Include/core_cm4.h **** 
1190:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1191:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1192:../Drivers/CMSIS/Include/core_cm4.h **** 
1193:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1194:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1195:../Drivers/CMSIS/Include/core_cm4.h **** 
1196:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1197:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1198:../Drivers/CMSIS/Include/core_cm4.h **** 
1199:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1200:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1201:../Drivers/CMSIS/Include/core_cm4.h **** 
1202:../Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1203:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1204:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1205:../Drivers/CMSIS/Include/core_cm4.h **** 
1206:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1207:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1208:../Drivers/CMSIS/Include/core_cm4.h **** 
1209:../Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1210:../Drivers/CMSIS/Include/core_cm4.h **** 
1211:../Drivers/CMSIS/Include/core_cm4.h **** 
1212:../Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1213:../Drivers/CMSIS/Include/core_cm4.h **** /**
1214:../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1215:../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1216:../Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1217:../Drivers/CMSIS/Include/core_cm4.h ****   @{
1218:../Drivers/CMSIS/Include/core_cm4.h ****  */
1219:../Drivers/CMSIS/Include/core_cm4.h **** 
1220:../Drivers/CMSIS/Include/core_cm4.h **** /**
1221:../Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1222:../Drivers/CMSIS/Include/core_cm4.h ****  */
1223:../Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1224:../Drivers/CMSIS/Include/core_cm4.h **** {
1225:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1226:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1227:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1228:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
ARM GAS  /tmp/ccwAxJ3w.s 			page 23


1229:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1230:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1231:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1232:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1233:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1234:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1235:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1236:../Drivers/CMSIS/Include/core_cm4.h **** } MPU_Type;
1237:../Drivers/CMSIS/Include/core_cm4.h **** 
1238:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1239:../Drivers/CMSIS/Include/core_cm4.h **** 
1240:../Drivers/CMSIS/Include/core_cm4.h **** /* MPU Type Register Definitions */
1241:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1242:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1243:../Drivers/CMSIS/Include/core_cm4.h **** 
1244:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1245:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1246:../Drivers/CMSIS/Include/core_cm4.h **** 
1247:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1248:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1249:../Drivers/CMSIS/Include/core_cm4.h **** 
1250:../Drivers/CMSIS/Include/core_cm4.h **** /* MPU Control Register Definitions */
1251:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1252:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1253:../Drivers/CMSIS/Include/core_cm4.h **** 
1254:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1255:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1256:../Drivers/CMSIS/Include/core_cm4.h **** 
1257:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1258:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1259:../Drivers/CMSIS/Include/core_cm4.h **** 
1260:../Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Number Register Definitions */
1261:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1262:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1263:../Drivers/CMSIS/Include/core_cm4.h **** 
1264:../Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1265:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1266:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1267:../Drivers/CMSIS/Include/core_cm4.h **** 
1268:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1269:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1270:../Drivers/CMSIS/Include/core_cm4.h **** 
1271:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1272:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1273:../Drivers/CMSIS/Include/core_cm4.h **** 
1274:../Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1275:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1276:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1277:../Drivers/CMSIS/Include/core_cm4.h **** 
1278:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1279:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1280:../Drivers/CMSIS/Include/core_cm4.h **** 
1281:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1282:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1283:../Drivers/CMSIS/Include/core_cm4.h **** 
1284:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1285:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
ARM GAS  /tmp/ccwAxJ3w.s 			page 24


1286:../Drivers/CMSIS/Include/core_cm4.h **** 
1287:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1288:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1289:../Drivers/CMSIS/Include/core_cm4.h **** 
1290:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1291:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1292:../Drivers/CMSIS/Include/core_cm4.h **** 
1293:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1294:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1295:../Drivers/CMSIS/Include/core_cm4.h **** 
1296:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1297:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1298:../Drivers/CMSIS/Include/core_cm4.h **** 
1299:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1300:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1301:../Drivers/CMSIS/Include/core_cm4.h **** 
1302:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1303:../Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1304:../Drivers/CMSIS/Include/core_cm4.h **** 
1305:../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1306:../Drivers/CMSIS/Include/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1307:../Drivers/CMSIS/Include/core_cm4.h **** 
1308:../Drivers/CMSIS/Include/core_cm4.h **** 
1309:../Drivers/CMSIS/Include/core_cm4.h **** /**
1310:../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1311:../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1312:../Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1313:../Drivers/CMSIS/Include/core_cm4.h ****   @{
1314:../Drivers/CMSIS/Include/core_cm4.h ****  */
1315:../Drivers/CMSIS/Include/core_cm4.h **** 
1316:../Drivers/CMSIS/Include/core_cm4.h **** /**
1317:../Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1318:../Drivers/CMSIS/Include/core_cm4.h ****  */
1319:../Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1320:../Drivers/CMSIS/Include/core_cm4.h **** {
1321:../Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
1322:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1323:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1324:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1325:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1326:../Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1327:../Drivers/CMSIS/Include/core_cm4.h **** } FPU_Type;
1328:../Drivers/CMSIS/Include/core_cm4.h **** 
1329:../Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1330:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1331:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1332:../Drivers/CMSIS/Include/core_cm4.h **** 
1333:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1334:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1335:../Drivers/CMSIS/Include/core_cm4.h **** 
1336:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1337:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1338:../Drivers/CMSIS/Include/core_cm4.h **** 
1339:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1340:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1341:../Drivers/CMSIS/Include/core_cm4.h **** 
1342:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
ARM GAS  /tmp/ccwAxJ3w.s 			page 25


1343:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1344:../Drivers/CMSIS/Include/core_cm4.h **** 
1345:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1346:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1347:../Drivers/CMSIS/Include/core_cm4.h **** 
1348:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1349:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1350:../Drivers/CMSIS/Include/core_cm4.h **** 
1351:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1352:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1353:../Drivers/CMSIS/Include/core_cm4.h **** 
1354:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1355:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1356:../Drivers/CMSIS/Include/core_cm4.h **** 
1357:../Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1358:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1359:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1360:../Drivers/CMSIS/Include/core_cm4.h **** 
1361:../Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1362:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1363:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1364:../Drivers/CMSIS/Include/core_cm4.h **** 
1365:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1366:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1367:../Drivers/CMSIS/Include/core_cm4.h **** 
1368:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1369:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1370:../Drivers/CMSIS/Include/core_cm4.h **** 
1371:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1372:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1373:../Drivers/CMSIS/Include/core_cm4.h **** 
1374:../Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1375:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1376:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1377:../Drivers/CMSIS/Include/core_cm4.h **** 
1378:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1379:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1380:../Drivers/CMSIS/Include/core_cm4.h **** 
1381:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1382:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1383:../Drivers/CMSIS/Include/core_cm4.h **** 
1384:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1385:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1386:../Drivers/CMSIS/Include/core_cm4.h **** 
1387:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1388:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1389:../Drivers/CMSIS/Include/core_cm4.h **** 
1390:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1391:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1392:../Drivers/CMSIS/Include/core_cm4.h **** 
1393:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1394:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1395:../Drivers/CMSIS/Include/core_cm4.h **** 
1396:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1397:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1398:../Drivers/CMSIS/Include/core_cm4.h **** 
1399:../Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
ARM GAS  /tmp/ccwAxJ3w.s 			page 26


1400:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1401:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1402:../Drivers/CMSIS/Include/core_cm4.h **** 
1403:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1404:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1405:../Drivers/CMSIS/Include/core_cm4.h **** 
1406:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1407:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1408:../Drivers/CMSIS/Include/core_cm4.h **** 
1409:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1410:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1411:../Drivers/CMSIS/Include/core_cm4.h **** 
1412:../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1413:../Drivers/CMSIS/Include/core_cm4.h **** 
1414:../Drivers/CMSIS/Include/core_cm4.h **** 
1415:../Drivers/CMSIS/Include/core_cm4.h **** /**
1416:../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1417:../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1418:../Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1419:../Drivers/CMSIS/Include/core_cm4.h ****   @{
1420:../Drivers/CMSIS/Include/core_cm4.h ****  */
1421:../Drivers/CMSIS/Include/core_cm4.h **** 
1422:../Drivers/CMSIS/Include/core_cm4.h **** /**
1423:../Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1424:../Drivers/CMSIS/Include/core_cm4.h ****  */
1425:../Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1426:../Drivers/CMSIS/Include/core_cm4.h **** {
1427:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1428:../Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1429:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1430:../Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1431:../Drivers/CMSIS/Include/core_cm4.h **** } CoreDebug_Type;
1432:../Drivers/CMSIS/Include/core_cm4.h **** 
1433:../Drivers/CMSIS/Include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1434:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1435:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1436:../Drivers/CMSIS/Include/core_cm4.h **** 
1437:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1438:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1439:../Drivers/CMSIS/Include/core_cm4.h **** 
1440:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1441:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1442:../Drivers/CMSIS/Include/core_cm4.h **** 
1443:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1444:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1445:../Drivers/CMSIS/Include/core_cm4.h **** 
1446:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1447:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1448:../Drivers/CMSIS/Include/core_cm4.h **** 
1449:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1450:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1451:../Drivers/CMSIS/Include/core_cm4.h **** 
1452:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1453:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1454:../Drivers/CMSIS/Include/core_cm4.h **** 
1455:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1456:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
ARM GAS  /tmp/ccwAxJ3w.s 			page 27


1457:../Drivers/CMSIS/Include/core_cm4.h **** 
1458:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1459:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1460:../Drivers/CMSIS/Include/core_cm4.h **** 
1461:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1462:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1463:../Drivers/CMSIS/Include/core_cm4.h **** 
1464:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1465:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1466:../Drivers/CMSIS/Include/core_cm4.h **** 
1467:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1468:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1469:../Drivers/CMSIS/Include/core_cm4.h **** 
1470:../Drivers/CMSIS/Include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1471:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1472:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1473:../Drivers/CMSIS/Include/core_cm4.h **** 
1474:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1475:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1476:../Drivers/CMSIS/Include/core_cm4.h **** 
1477:../Drivers/CMSIS/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1478:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1479:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1480:../Drivers/CMSIS/Include/core_cm4.h **** 
1481:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1482:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1483:../Drivers/CMSIS/Include/core_cm4.h **** 
1484:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1485:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1486:../Drivers/CMSIS/Include/core_cm4.h **** 
1487:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1488:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1489:../Drivers/CMSIS/Include/core_cm4.h **** 
1490:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1491:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1492:../Drivers/CMSIS/Include/core_cm4.h **** 
1493:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1494:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1495:../Drivers/CMSIS/Include/core_cm4.h **** 
1496:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1497:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1498:../Drivers/CMSIS/Include/core_cm4.h **** 
1499:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1500:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1501:../Drivers/CMSIS/Include/core_cm4.h **** 
1502:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1503:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1504:../Drivers/CMSIS/Include/core_cm4.h **** 
1505:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1506:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1507:../Drivers/CMSIS/Include/core_cm4.h **** 
1508:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1509:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1510:../Drivers/CMSIS/Include/core_cm4.h **** 
1511:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1512:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1513:../Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  /tmp/ccwAxJ3w.s 			page 28


1514:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1515:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1516:../Drivers/CMSIS/Include/core_cm4.h **** 
1517:../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1518:../Drivers/CMSIS/Include/core_cm4.h **** 
1519:../Drivers/CMSIS/Include/core_cm4.h **** 
1520:../Drivers/CMSIS/Include/core_cm4.h **** /**
1521:../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1522:../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1523:../Drivers/CMSIS/Include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1524:../Drivers/CMSIS/Include/core_cm4.h ****   @{
1525:../Drivers/CMSIS/Include/core_cm4.h ****  */
1526:../Drivers/CMSIS/Include/core_cm4.h **** 
1527:../Drivers/CMSIS/Include/core_cm4.h **** /**
1528:../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1529:../Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1530:../Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1531:../Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted value.
1532:../Drivers/CMSIS/Include/core_cm4.h **** */
1533:../Drivers/CMSIS/Include/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1534:../Drivers/CMSIS/Include/core_cm4.h **** 
1535:../Drivers/CMSIS/Include/core_cm4.h **** /**
1536:../Drivers/CMSIS/Include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1537:../Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1538:../Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1539:../Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted bit field value.
1540:../Drivers/CMSIS/Include/core_cm4.h **** */
1541:../Drivers/CMSIS/Include/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1542:../Drivers/CMSIS/Include/core_cm4.h **** 
1543:../Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1544:../Drivers/CMSIS/Include/core_cm4.h **** 
1545:../Drivers/CMSIS/Include/core_cm4.h **** 
1546:../Drivers/CMSIS/Include/core_cm4.h **** /**
1547:../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1548:../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1549:../Drivers/CMSIS/Include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1550:../Drivers/CMSIS/Include/core_cm4.h ****   @{
1551:../Drivers/CMSIS/Include/core_cm4.h ****  */
1552:../Drivers/CMSIS/Include/core_cm4.h **** 
1553:../Drivers/CMSIS/Include/core_cm4.h **** /* Memory mapping of Core Hardware */
1554:../Drivers/CMSIS/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1555:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1556:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1557:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1558:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1559:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1560:../Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1561:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1562:../Drivers/CMSIS/Include/core_cm4.h **** 
1563:../Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1564:../Drivers/CMSIS/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1565:../Drivers/CMSIS/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1566:../Drivers/CMSIS/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1567:../Drivers/CMSIS/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1568:../Drivers/CMSIS/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1569:../Drivers/CMSIS/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1570:../Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
ARM GAS  /tmp/ccwAxJ3w.s 			page 29


1571:../Drivers/CMSIS/Include/core_cm4.h **** 
1572:../Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1573:../Drivers/CMSIS/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1574:../Drivers/CMSIS/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1575:../Drivers/CMSIS/Include/core_cm4.h **** #endif
1576:../Drivers/CMSIS/Include/core_cm4.h **** 
1577:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1578:../Drivers/CMSIS/Include/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1579:../Drivers/CMSIS/Include/core_cm4.h **** 
1580:../Drivers/CMSIS/Include/core_cm4.h **** /*@} */
1581:../Drivers/CMSIS/Include/core_cm4.h **** 
1582:../Drivers/CMSIS/Include/core_cm4.h **** 
1583:../Drivers/CMSIS/Include/core_cm4.h **** 
1584:../Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
1585:../Drivers/CMSIS/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1586:../Drivers/CMSIS/Include/core_cm4.h ****   Core Function Interface contains:
1587:../Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Functions
1588:../Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Functions
1589:../Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Functions
1590:../Drivers/CMSIS/Include/core_cm4.h ****   - Core Register Access Functions
1591:../Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
1592:../Drivers/CMSIS/Include/core_cm4.h **** /**
1593:../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1594:../Drivers/CMSIS/Include/core_cm4.h **** */
1595:../Drivers/CMSIS/Include/core_cm4.h **** 
1596:../Drivers/CMSIS/Include/core_cm4.h **** 
1597:../Drivers/CMSIS/Include/core_cm4.h **** 
1598:../Drivers/CMSIS/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1599:../Drivers/CMSIS/Include/core_cm4.h **** /**
1600:../Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1601:../Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1602:../Drivers/CMSIS/Include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1603:../Drivers/CMSIS/Include/core_cm4.h ****   @{
1604:../Drivers/CMSIS/Include/core_cm4.h ****  */
1605:../Drivers/CMSIS/Include/core_cm4.h **** 
1606:../Drivers/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1607:../Drivers/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1608:../Drivers/CMSIS/Include/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1609:../Drivers/CMSIS/Include/core_cm4.h ****   #endif
1610:../Drivers/CMSIS/Include/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1611:../Drivers/CMSIS/Include/core_cm4.h **** #else
1612:../Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1613:../Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1614:../Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1615:../Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1616:../Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1617:../Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1618:../Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1619:../Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1620:../Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1621:../Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1622:../Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1623:../Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1624:../Drivers/CMSIS/Include/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1625:../Drivers/CMSIS/Include/core_cm4.h **** 
1626:../Drivers/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1627:../Drivers/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
ARM GAS  /tmp/ccwAxJ3w.s 			page 30


1628:../Drivers/CMSIS/Include/core_cm4.h ****    #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1629:../Drivers/CMSIS/Include/core_cm4.h ****   #endif
1630:../Drivers/CMSIS/Include/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1631:../Drivers/CMSIS/Include/core_cm4.h **** #else
1632:../Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1633:../Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1634:../Drivers/CMSIS/Include/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1635:../Drivers/CMSIS/Include/core_cm4.h **** 
1636:../Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1637:../Drivers/CMSIS/Include/core_cm4.h **** 
1638:../Drivers/CMSIS/Include/core_cm4.h **** 
1639:../Drivers/CMSIS/Include/core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1640:../Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1641:../Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1642:../Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1643:../Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1644:../Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1645:../Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1646:../Drivers/CMSIS/Include/core_cm4.h **** 
1647:../Drivers/CMSIS/Include/core_cm4.h **** 
1648:../Drivers/CMSIS/Include/core_cm4.h **** /**
1649:../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Priority Grouping
1650:../Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1651:../Drivers/CMSIS/Include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1652:../Drivers/CMSIS/Include/core_cm4.h ****            Only values from 0..7 are used.
1653:../Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1654:../Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1655:../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1656:../Drivers/CMSIS/Include/core_cm4.h ****  */
1657:../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1658:../Drivers/CMSIS/Include/core_cm4.h **** {
1659:../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t reg_value;
1660:../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1661:../Drivers/CMSIS/Include/core_cm4.h **** 
1662:../Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1663:../Drivers/CMSIS/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1664:../Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
1665:../Drivers/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1666:../Drivers/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1667:../Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
1668:../Drivers/CMSIS/Include/core_cm4.h **** }
1669:../Drivers/CMSIS/Include/core_cm4.h **** 
1670:../Drivers/CMSIS/Include/core_cm4.h **** 
1671:../Drivers/CMSIS/Include/core_cm4.h **** /**
1672:../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Priority Grouping
1673:../Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1674:../Drivers/CMSIS/Include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1675:../Drivers/CMSIS/Include/core_cm4.h ****  */
1676:../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1677:../Drivers/CMSIS/Include/core_cm4.h **** {
1678:../Drivers/CMSIS/Include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
1679:../Drivers/CMSIS/Include/core_cm4.h **** }
1680:../Drivers/CMSIS/Include/core_cm4.h **** 
1681:../Drivers/CMSIS/Include/core_cm4.h **** 
1682:../Drivers/CMSIS/Include/core_cm4.h **** /**
1683:../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Enable Interrupt
1684:../Drivers/CMSIS/Include/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
ARM GAS  /tmp/ccwAxJ3w.s 			page 31


1685:../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1686:../Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1687:../Drivers/CMSIS/Include/core_cm4.h ****  */
1688:../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1689:../Drivers/CMSIS/Include/core_cm4.h **** {
1690:../Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1691:../Drivers/CMSIS/Include/core_cm4.h ****   {
1692:../Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1693:../Drivers/CMSIS/Include/core_cm4.h ****   }
1694:../Drivers/CMSIS/Include/core_cm4.h **** }
1695:../Drivers/CMSIS/Include/core_cm4.h **** 
1696:../Drivers/CMSIS/Include/core_cm4.h **** 
1697:../Drivers/CMSIS/Include/core_cm4.h **** /**
1698:../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Enable status
1699:../Drivers/CMSIS/Include/core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1700:../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1701:../Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt is not enabled.
1702:../Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt is enabled.
1703:../Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1704:../Drivers/CMSIS/Include/core_cm4.h ****  */
1705:../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1706:../Drivers/CMSIS/Include/core_cm4.h **** {
1707:../Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1708:../Drivers/CMSIS/Include/core_cm4.h ****   {
1709:../Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1710:../Drivers/CMSIS/Include/core_cm4.h ****   }
1711:../Drivers/CMSIS/Include/core_cm4.h ****   else
1712:../Drivers/CMSIS/Include/core_cm4.h ****   {
1713:../Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1714:../Drivers/CMSIS/Include/core_cm4.h ****   }
1715:../Drivers/CMSIS/Include/core_cm4.h **** }
1716:../Drivers/CMSIS/Include/core_cm4.h **** 
1717:../Drivers/CMSIS/Include/core_cm4.h **** 
1718:../Drivers/CMSIS/Include/core_cm4.h **** /**
1719:../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Disable Interrupt
1720:../Drivers/CMSIS/Include/core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1721:../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1722:../Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1723:../Drivers/CMSIS/Include/core_cm4.h ****  */
1724:../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1725:../Drivers/CMSIS/Include/core_cm4.h **** {
1726:../Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1727:../Drivers/CMSIS/Include/core_cm4.h ****   {
1728:../Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1729:../Drivers/CMSIS/Include/core_cm4.h ****     __DSB();
1730:../Drivers/CMSIS/Include/core_cm4.h ****     __ISB();
1731:../Drivers/CMSIS/Include/core_cm4.h ****   }
1732:../Drivers/CMSIS/Include/core_cm4.h **** }
1733:../Drivers/CMSIS/Include/core_cm4.h **** 
1734:../Drivers/CMSIS/Include/core_cm4.h **** 
1735:../Drivers/CMSIS/Include/core_cm4.h **** /**
1736:../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Pending Interrupt
1737:../Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1738:../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1739:../Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not pending.
1740:../Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is pending.
1741:../Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
ARM GAS  /tmp/ccwAxJ3w.s 			page 32


1742:../Drivers/CMSIS/Include/core_cm4.h ****  */
1743:../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1744:../Drivers/CMSIS/Include/core_cm4.h **** {
1745:../Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1746:../Drivers/CMSIS/Include/core_cm4.h ****   {
1747:../Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1748:../Drivers/CMSIS/Include/core_cm4.h ****   }
1749:../Drivers/CMSIS/Include/core_cm4.h ****   else
1750:../Drivers/CMSIS/Include/core_cm4.h ****   {
1751:../Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1752:../Drivers/CMSIS/Include/core_cm4.h ****   }
1753:../Drivers/CMSIS/Include/core_cm4.h **** }
1754:../Drivers/CMSIS/Include/core_cm4.h **** 
1755:../Drivers/CMSIS/Include/core_cm4.h **** 
1756:../Drivers/CMSIS/Include/core_cm4.h **** /**
1757:../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Pending Interrupt
1758:../Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1759:../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1760:../Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1761:../Drivers/CMSIS/Include/core_cm4.h ****  */
1762:../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1763:../Drivers/CMSIS/Include/core_cm4.h **** {
1764:../Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1765:../Drivers/CMSIS/Include/core_cm4.h ****   {
1766:../Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1767:../Drivers/CMSIS/Include/core_cm4.h ****   }
1768:../Drivers/CMSIS/Include/core_cm4.h **** }
1769:../Drivers/CMSIS/Include/core_cm4.h **** 
1770:../Drivers/CMSIS/Include/core_cm4.h **** 
1771:../Drivers/CMSIS/Include/core_cm4.h **** /**
1772:../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Clear Pending Interrupt
1773:../Drivers/CMSIS/Include/core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1774:../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1775:../Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1776:../Drivers/CMSIS/Include/core_cm4.h ****  */
1777:../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1778:../Drivers/CMSIS/Include/core_cm4.h **** {
1779:../Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1780:../Drivers/CMSIS/Include/core_cm4.h ****   {
1781:../Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1782:../Drivers/CMSIS/Include/core_cm4.h ****   }
1783:../Drivers/CMSIS/Include/core_cm4.h **** }
1784:../Drivers/CMSIS/Include/core_cm4.h **** 
1785:../Drivers/CMSIS/Include/core_cm4.h **** 
1786:../Drivers/CMSIS/Include/core_cm4.h **** /**
1787:../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Active Interrupt
1788:../Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1789:../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1790:../Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not active.
1791:../Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is active.
1792:../Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1793:../Drivers/CMSIS/Include/core_cm4.h ****  */
1794:../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1795:../Drivers/CMSIS/Include/core_cm4.h **** {
1796:../Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1797:../Drivers/CMSIS/Include/core_cm4.h ****   {
1798:../Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
ARM GAS  /tmp/ccwAxJ3w.s 			page 33


1799:../Drivers/CMSIS/Include/core_cm4.h ****   }
1800:../Drivers/CMSIS/Include/core_cm4.h ****   else
1801:../Drivers/CMSIS/Include/core_cm4.h ****   {
1802:../Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1803:../Drivers/CMSIS/Include/core_cm4.h ****   }
1804:../Drivers/CMSIS/Include/core_cm4.h **** }
1805:../Drivers/CMSIS/Include/core_cm4.h **** 
1806:../Drivers/CMSIS/Include/core_cm4.h **** 
1807:../Drivers/CMSIS/Include/core_cm4.h **** /**
1808:../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Priority
1809:../Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1810:../Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1811:../Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1812:../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1813:../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]  priority  Priority to set.
1814:../Drivers/CMSIS/Include/core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1815:../Drivers/CMSIS/Include/core_cm4.h ****  */
1816:../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1817:../Drivers/CMSIS/Include/core_cm4.h **** {
1818:../Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1819:../Drivers/CMSIS/Include/core_cm4.h ****   {
1820:../Drivers/CMSIS/Include/core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1821:../Drivers/CMSIS/Include/core_cm4.h ****   }
1822:../Drivers/CMSIS/Include/core_cm4.h ****   else
1823:../Drivers/CMSIS/Include/core_cm4.h ****   {
1824:../Drivers/CMSIS/Include/core_cm4.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1825:../Drivers/CMSIS/Include/core_cm4.h ****   }
1826:../Drivers/CMSIS/Include/core_cm4.h **** }
1827:../Drivers/CMSIS/Include/core_cm4.h **** 
1828:../Drivers/CMSIS/Include/core_cm4.h **** 
1829:../Drivers/CMSIS/Include/core_cm4.h **** /**
1830:../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Priority
1831:../Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1832:../Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1833:../Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1834:../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1835:../Drivers/CMSIS/Include/core_cm4.h ****   \return             Interrupt Priority.
1836:../Drivers/CMSIS/Include/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1837:../Drivers/CMSIS/Include/core_cm4.h ****  */
1838:../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1839:../Drivers/CMSIS/Include/core_cm4.h **** {
1840:../Drivers/CMSIS/Include/core_cm4.h **** 
1841:../Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1842:../Drivers/CMSIS/Include/core_cm4.h ****   {
1843:../Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
1844:../Drivers/CMSIS/Include/core_cm4.h ****   }
1845:../Drivers/CMSIS/Include/core_cm4.h ****   else
1846:../Drivers/CMSIS/Include/core_cm4.h ****   {
1847:../Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
1848:../Drivers/CMSIS/Include/core_cm4.h ****   }
1849:../Drivers/CMSIS/Include/core_cm4.h **** }
1850:../Drivers/CMSIS/Include/core_cm4.h **** 
1851:../Drivers/CMSIS/Include/core_cm4.h **** 
1852:../Drivers/CMSIS/Include/core_cm4.h **** /**
1853:../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Encode Priority
1854:../Drivers/CMSIS/Include/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1855:../Drivers/CMSIS/Include/core_cm4.h ****            preemptive priority value, and subpriority value.
ARM GAS  /tmp/ccwAxJ3w.s 			page 34


1856:../Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1857:../Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1858:../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1859:../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1860:../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1861:../Drivers/CMSIS/Include/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1862:../Drivers/CMSIS/Include/core_cm4.h ****  */
1863:../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1864:../Drivers/CMSIS/Include/core_cm4.h **** {
1865:../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1866:../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1867:../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1868:../Drivers/CMSIS/Include/core_cm4.h **** 
1869:../Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1870:../Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1871:../Drivers/CMSIS/Include/core_cm4.h **** 
1872:../Drivers/CMSIS/Include/core_cm4.h ****   return (
1873:../Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
1874:../Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
1875:../Drivers/CMSIS/Include/core_cm4.h ****          );
1876:../Drivers/CMSIS/Include/core_cm4.h **** }
1877:../Drivers/CMSIS/Include/core_cm4.h **** 
1878:../Drivers/CMSIS/Include/core_cm4.h **** 
1879:../Drivers/CMSIS/Include/core_cm4.h **** /**
1880:../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Decode Priority
1881:../Drivers/CMSIS/Include/core_cm4.h ****   \details Decodes an interrupt priority value with a given priority group to
1882:../Drivers/CMSIS/Include/core_cm4.h ****            preemptive priority value and subpriority value.
1883:../Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1884:../Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1885:../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1886:../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1887:../Drivers/CMSIS/Include/core_cm4.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1888:../Drivers/CMSIS/Include/core_cm4.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1889:../Drivers/CMSIS/Include/core_cm4.h ****  */
1890:../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1891:../Drivers/CMSIS/Include/core_cm4.h **** {
1892:../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1893:../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1894:../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1895:../Drivers/CMSIS/Include/core_cm4.h **** 
1896:../Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1897:../Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1898:../Drivers/CMSIS/Include/core_cm4.h **** 
1899:../Drivers/CMSIS/Include/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1900:../Drivers/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1901:../Drivers/CMSIS/Include/core_cm4.h **** }
1902:../Drivers/CMSIS/Include/core_cm4.h **** 
1903:../Drivers/CMSIS/Include/core_cm4.h **** 
1904:../Drivers/CMSIS/Include/core_cm4.h **** /**
1905:../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Vector
1906:../Drivers/CMSIS/Include/core_cm4.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
1907:../Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1908:../Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1909:../Drivers/CMSIS/Include/core_cm4.h ****            VTOR must been relocated to SRAM before.
1910:../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number
1911:../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   vector    Address of interrupt handler function
1912:../Drivers/CMSIS/Include/core_cm4.h ****  */
ARM GAS  /tmp/ccwAxJ3w.s 			page 35


1913:../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
1914:../Drivers/CMSIS/Include/core_cm4.h **** {
1915:../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1916:../Drivers/CMSIS/Include/core_cm4.h ****   vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET] = vector;
1917:../Drivers/CMSIS/Include/core_cm4.h **** }
1918:../Drivers/CMSIS/Include/core_cm4.h **** 
1919:../Drivers/CMSIS/Include/core_cm4.h **** 
1920:../Drivers/CMSIS/Include/core_cm4.h **** /**
1921:../Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Vector
1922:../Drivers/CMSIS/Include/core_cm4.h ****   \details Reads an interrupt vector from interrupt vector table.
1923:../Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1924:../Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1925:../Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number.
1926:../Drivers/CMSIS/Include/core_cm4.h ****   \return                 Address of interrupt handler function
1927:../Drivers/CMSIS/Include/core_cm4.h ****  */
1928:../Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
1929:../Drivers/CMSIS/Include/core_cm4.h **** {
1930:../Drivers/CMSIS/Include/core_cm4.h ****   uint32_t *vectors = (uint32_t *)SCB->VTOR;
1931:../Drivers/CMSIS/Include/core_cm4.h ****   return vectors[(int32_t)IRQn + NVIC_USER_IRQ_OFFSET];
1932:../Drivers/CMSIS/Include/core_cm4.h **** }
1933:../Drivers/CMSIS/Include/core_cm4.h **** 
1934:../Drivers/CMSIS/Include/core_cm4.h **** 
1935:../Drivers/CMSIS/Include/core_cm4.h **** /**
1936:../Drivers/CMSIS/Include/core_cm4.h ****   \brief   System Reset
1937:../Drivers/CMSIS/Include/core_cm4.h ****   \details Initiates a system reset request to reset the MCU.
1938:../Drivers/CMSIS/Include/core_cm4.h ****  */
1939:../Drivers/CMSIS/Include/core_cm4.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
1940:../Drivers/CMSIS/Include/core_cm4.h **** {
  28              		.loc 1 1940 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 00AF     		add	r7, sp, #0
  38              	.LCFI1:
  39              		.cfi_def_cfa_register 7
  40              	.LBB22:
  41              	.LBB23:
  42              		.file 2 "../Drivers/CMSIS/Include/cmsis_gcc.h"
   1:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:../Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:../Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
ARM GAS  /tmp/ccwAxJ3w.s 			page 36


  15:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/ccwAxJ3w.s 			page 37


  72:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:../Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:../Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccwAxJ3w.s 			page 38


 129:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccwAxJ3w.s 			page 39


 186:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /tmp/ccwAxJ3w.s 			page 40


 243:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
ARM GAS  /tmp/ccwAxJ3w.s 			page 41


 300:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
ARM GAS  /tmp/ccwAxJ3w.s 			page 42


 357:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccwAxJ3w.s 			page 43


 414:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  /tmp/ccwAxJ3w.s 			page 44


 471:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:../Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
ARM GAS  /tmp/ccwAxJ3w.s 			page 45


 528:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:../Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:../Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
ARM GAS  /tmp/ccwAxJ3w.s 			page 46


 585:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:../Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:../Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:../Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:../Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:../Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:../Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:../Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
ARM GAS  /tmp/ccwAxJ3w.s 			page 47


 642:../Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:../Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:../Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:../Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccwAxJ3w.s 			page 48


 699:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:../Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:../Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:../Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:../Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccwAxJ3w.s 			page 49


 756:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:../Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:../Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:../Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:../Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:../Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:../Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:../Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:../Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:../Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccwAxJ3w.s 			page 50


 813:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:../Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:../Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:../Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:../Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccwAxJ3w.s 			page 51


 870:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:../Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
  43              		.loc 2 879 3
  44              		.syntax unified
  45              	@ 879 "../Drivers/CMSIS/Include/cmsis_gcc.h" 1
  46 0004 BFF34F8F 		dsb 0xF
  47              	@ 0 "" 2
 880:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  48              		.loc 2 880 1
  49              		.thumb
  50              		.syntax unified
  51 0008 00BF     		nop
  52              	.LBE23:
  53              	.LBE22:
1941:../Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
1942:../Drivers/CMSIS/Include/core_cm4.h ****                                                                        buffered write are completed
1943:../Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
1944:../Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  54              		.loc 1 1944 32
  55 000a 064B     		ldr	r3, .L3
  56 000c DB68     		ldr	r3, [r3, #12]
  57              		.loc 1 1944 40
  58 000e 03F4E062 		and	r2, r3, #1792
1943:../Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  59              		.loc 1 1943 6
  60 0012 0449     		ldr	r1, .L3
1943:../Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  61              		.loc 1 1943 17
  62 0014 044B     		ldr	r3, .L3+4
  63 0016 1343     		orrs	r3, r3, r2
1943:../Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
  64              		.loc 1 1943 15
  65 0018 CB60     		str	r3, [r1, #12]
  66              	.LBB24:
  67              	.LBB25:
 879:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  68              		.loc 2 879 3
  69              		.syntax unified
  70              	@ 879 "../Drivers/CMSIS/Include/cmsis_gcc.h" 1
  71 001a BFF34F8F 		dsb 0xF
  72              	@ 0 "" 2
  73              		.loc 2 880 1
  74              		.thumb
  75              		.syntax unified
  76 001e 00BF     		nop
  77              	.L2:
  78              	.LBE25:
  79              	.LBE24:
1945:../Drivers/CMSIS/Include/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
ARM GAS  /tmp/ccwAxJ3w.s 			page 52


1946:../Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
1947:../Drivers/CMSIS/Include/core_cm4.h **** 
1948:../Drivers/CMSIS/Include/core_cm4.h ****   for(;;)                                                           /* wait until reset */
1949:../Drivers/CMSIS/Include/core_cm4.h ****   {
1950:../Drivers/CMSIS/Include/core_cm4.h ****     __NOP();
  80              		.loc 1 1950 5 discriminator 1
  81              		.syntax unified
  82              	@ 1950 "../Drivers/CMSIS/Include/core_cm4.h" 1
  83 0020 00BF     		nop
  84              	@ 0 "" 2
  85              		.thumb
  86              		.syntax unified
  87 0022 FDE7     		b	.L2
  88              	.L4:
  89              		.align	2
  90              	.L3:
  91 0024 00ED00E0 		.word	-536810240
  92 0028 0400FA05 		.word	100270084
  93              		.cfi_endproc
  94              	.LFE117:
  96              		.global	lr1110
  97              		.section	.bss.lr1110,"aw",%nobits
  98              		.align	2
 101              	lr1110:
 102 0000 00000000 		.space	188
 102      00000000 
 102      00000000 
 102      00000000 
 102      00000000 
 103              		.section	.bss.hal_exit_wait,"aw",%nobits
 106              	hal_exit_wait:
 107 0000 00       		.space	1
 108              		.section	.bss.hal_lp_current_mode,"aw",%nobits
 111              	hal_lp_current_mode:
 112 0000 00       		.space	1
 113              		.section	.bss.partial_sleep_enable,"aw",%nobits
 116              	partial_sleep_enable:
 117 0000 00       		.space	1
 118              		.section	.bss.soft_watchdog,"aw",%nobits
 119              		.align	2
 122              	soft_watchdog:
 123 0000 00000000 		.space	24
 123      00000000 
 123      00000000 
 123      00000000 
 123      00000000 
 124              		.section	.text.hal_mcu_critical_section_begin,"ax",%progbits
 125              		.align	1
 126              		.global	hal_mcu_critical_section_begin
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
 130              		.fpu fpv4-sp-d16
 132              	hal_mcu_critical_section_begin:
 133              	.LFB596:
 134              		.file 3 "../Src/smtc_hal/smtc_hal_mcu.c"
   1:../Src/smtc_hal/smtc_hal_mcu.c **** /*!
ARM GAS  /tmp/ccwAxJ3w.s 			page 53


   2:../Src/smtc_hal/smtc_hal_mcu.c ****  * @file      smtc_hal_mcu.c
   3:../Src/smtc_hal/smtc_hal_mcu.c ****  *
   4:../Src/smtc_hal/smtc_hal_mcu.c ****  * @brief     Board specific package MCU API implementation.
   5:../Src/smtc_hal/smtc_hal_mcu.c ****  *
   6:../Src/smtc_hal/smtc_hal_mcu.c ****  * Revised BSD License
   7:../Src/smtc_hal/smtc_hal_mcu.c ****  * Copyright Semtech Corporation 2020. All rights reserved.
   8:../Src/smtc_hal/smtc_hal_mcu.c ****  *
   9:../Src/smtc_hal/smtc_hal_mcu.c ****  * Redistribution and use in source and binary forms, with or without
  10:../Src/smtc_hal/smtc_hal_mcu.c ****  * modification, are permitted provided that the following conditions are met:
  11:../Src/smtc_hal/smtc_hal_mcu.c ****  *     * Redistributions of source code must retain the above copyright
  12:../Src/smtc_hal/smtc_hal_mcu.c ****  *       notice, this list of conditions and the following disclaimer.
  13:../Src/smtc_hal/smtc_hal_mcu.c ****  *     * Redistributions in binary form must reproduce the above copyright
  14:../Src/smtc_hal/smtc_hal_mcu.c ****  *       notice, this list of conditions and the following disclaimer in the
  15:../Src/smtc_hal/smtc_hal_mcu.c ****  *       documentation and/or other materials provided with the distribution.
  16:../Src/smtc_hal/smtc_hal_mcu.c ****  *     * Neither the name of the Semtech corporation nor the
  17:../Src/smtc_hal/smtc_hal_mcu.c ****  *       names of its contributors may be used to endorse or promote products
  18:../Src/smtc_hal/smtc_hal_mcu.c ****  *       derived from this software without specific prior written permission.
  19:../Src/smtc_hal/smtc_hal_mcu.c ****  *
  20:../Src/smtc_hal/smtc_hal_mcu.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:../Src/smtc_hal/smtc_hal_mcu.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:../Src/smtc_hal/smtc_hal_mcu.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:../Src/smtc_hal/smtc_hal_mcu.c ****  * ARE DISCLAIMED. IN NO EVENT SHALL SEMTECH CORPORATION BE LIABLE FOR ANY
  24:../Src/smtc_hal/smtc_hal_mcu.c ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  25:../Src/smtc_hal/smtc_hal_mcu.c ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  26:../Src/smtc_hal/smtc_hal_mcu.c ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  27:../Src/smtc_hal/smtc_hal_mcu.c ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  28:../Src/smtc_hal/smtc_hal_mcu.c ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  29:../Src/smtc_hal/smtc_hal_mcu.c ****  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:../Src/smtc_hal/smtc_hal_mcu.c ****  */
  31:../Src/smtc_hal/smtc_hal_mcu.c **** 
  32:../Src/smtc_hal/smtc_hal_mcu.c **** /*
  33:../Src/smtc_hal/smtc_hal_mcu.c ****  * -----------------------------------------------------------------------------
  34:../Src/smtc_hal/smtc_hal_mcu.c ****  * --- DEPENDENCIES ------------------------------------------------------------
  35:../Src/smtc_hal/smtc_hal_mcu.c ****  */
  36:../Src/smtc_hal/smtc_hal_mcu.c **** 
  37:../Src/smtc_hal/smtc_hal_mcu.c **** #include <stdint.h>   // C99 types
  38:../Src/smtc_hal/smtc_hal_mcu.c **** #include <stdbool.h>  // bool type
  39:../Src/smtc_hal/smtc_hal_mcu.c **** 
  40:../Src/smtc_hal/smtc_hal_mcu.c **** #include "stm32l4xx_hal.h"
  41:../Src/smtc_hal/smtc_hal_mcu.c **** #include "stm32l4xx_ll_utils.h"
  42:../Src/smtc_hal/smtc_hal_mcu.c **** #include "lr1110_modem_board.h"
  43:../Src/smtc_hal/smtc_hal_mcu.c **** #include "smtc_hal.h"
  44:../Src/smtc_hal/smtc_hal_mcu.c **** 
  45:../Src/smtc_hal/smtc_hal_mcu.c **** #if( HAL_DBG_TRACE == HAL_FEATURE_ON )
  46:../Src/smtc_hal/smtc_hal_mcu.c **** #include <stdarg.h>
  47:../Src/smtc_hal/smtc_hal_mcu.c **** #include <string.h>
  48:../Src/smtc_hal/smtc_hal_mcu.c **** #include <stdio.h>
  49:../Src/smtc_hal/smtc_hal_mcu.c **** #endif
  50:../Src/smtc_hal/smtc_hal_mcu.c **** 
  51:../Src/smtc_hal/smtc_hal_mcu.c **** /*
  52:../Src/smtc_hal/smtc_hal_mcu.c ****  * -----------------------------------------------------------------------------
  53:../Src/smtc_hal/smtc_hal_mcu.c ****  * --- PRIVATE MACROS-----------------------------------------------------------
  54:../Src/smtc_hal/smtc_hal_mcu.c ****  */
  55:../Src/smtc_hal/smtc_hal_mcu.c **** 
  56:../Src/smtc_hal/smtc_hal_mcu.c **** /*
  57:../Src/smtc_hal/smtc_hal_mcu.c ****  * -----------------------------------------------------------------------------
  58:../Src/smtc_hal/smtc_hal_mcu.c ****  * --- PRIVATE CONSTANTS -------------------------------------------------------
ARM GAS  /tmp/ccwAxJ3w.s 			page 54


  59:../Src/smtc_hal/smtc_hal_mcu.c ****  */
  60:../Src/smtc_hal/smtc_hal_mcu.c **** 
  61:../Src/smtc_hal/smtc_hal_mcu.c **** /*
  62:../Src/smtc_hal/smtc_hal_mcu.c ****  * -----------------------------------------------------------------------------
  63:../Src/smtc_hal/smtc_hal_mcu.c ****  * --- PRIVATE TYPES -----------------------------------------------------------
  64:../Src/smtc_hal/smtc_hal_mcu.c ****  */
  65:../Src/smtc_hal/smtc_hal_mcu.c **** 
  66:../Src/smtc_hal/smtc_hal_mcu.c **** /*
  67:../Src/smtc_hal/smtc_hal_mcu.c ****  * -----------------------------------------------------------------------------
  68:../Src/smtc_hal/smtc_hal_mcu.c ****  * --- PRIVATE VARIABLES -------------------------------------------------------
  69:../Src/smtc_hal/smtc_hal_mcu.c ****  */
  70:../Src/smtc_hal/smtc_hal_mcu.c **** 
  71:../Src/smtc_hal/smtc_hal_mcu.c **** /*!
  72:../Src/smtc_hal/smtc_hal_mcu.c ****  * @brief Radio hardware and global parameters
  73:../Src/smtc_hal/smtc_hal_mcu.c ****  */
  74:../Src/smtc_hal/smtc_hal_mcu.c **** lr1110_t lr1110;
  75:../Src/smtc_hal/smtc_hal_mcu.c **** 
  76:../Src/smtc_hal/smtc_hal_mcu.c **** /*!
  77:../Src/smtc_hal/smtc_hal_mcu.c ****  * @brief Low Power options
  78:../Src/smtc_hal/smtc_hal_mcu.c ****  */
  79:../Src/smtc_hal/smtc_hal_mcu.c **** typedef enum low_power_mode_e
  80:../Src/smtc_hal/smtc_hal_mcu.c **** {
  81:../Src/smtc_hal/smtc_hal_mcu.c ****     LOW_POWER_ENABLE,
  82:../Src/smtc_hal/smtc_hal_mcu.c ****     LOW_POWER_DISABLE,
  83:../Src/smtc_hal/smtc_hal_mcu.c ****     LOW_POWER_DISABLE_ONCE
  84:../Src/smtc_hal/smtc_hal_mcu.c **** } low_power_mode_t;
  85:../Src/smtc_hal/smtc_hal_mcu.c **** 
  86:../Src/smtc_hal/smtc_hal_mcu.c **** /*
  87:../Src/smtc_hal/smtc_hal_mcu.c ****  * -----------------------------------------------------------------------------
  88:../Src/smtc_hal/smtc_hal_mcu.c ****  * --- PRIVATE VARIABLES -------------------------------------------------------
  89:../Src/smtc_hal/smtc_hal_mcu.c ****  */
  90:../Src/smtc_hal/smtc_hal_mcu.c **** 
  91:../Src/smtc_hal/smtc_hal_mcu.c **** static volatile bool             hal_exit_wait        = false;
  92:../Src/smtc_hal/smtc_hal_mcu.c **** static volatile low_power_mode_t hal_lp_current_mode  = LOW_POWER_ENABLE;
  93:../Src/smtc_hal/smtc_hal_mcu.c **** static bool                      partial_sleep_enable = false;
  94:../Src/smtc_hal/smtc_hal_mcu.c **** 
  95:../Src/smtc_hal/smtc_hal_mcu.c **** /*!
  96:../Src/smtc_hal/smtc_hal_mcu.c ****  * @brief Timer to handle the software watchdog
  97:../Src/smtc_hal/smtc_hal_mcu.c ****  */
  98:../Src/smtc_hal/smtc_hal_mcu.c **** static timer_event_t soft_watchdog;
  99:../Src/smtc_hal/smtc_hal_mcu.c **** 
 100:../Src/smtc_hal/smtc_hal_mcu.c **** /*
 101:../Src/smtc_hal/smtc_hal_mcu.c ****  * -----------------------------------------------------------------------------
 102:../Src/smtc_hal/smtc_hal_mcu.c ****  * --- PRIVATE FUNCTIONS DECLARATION -------------------------------------------
 103:../Src/smtc_hal/smtc_hal_mcu.c ****  */
 104:../Src/smtc_hal/smtc_hal_mcu.c **** 
 105:../Src/smtc_hal/smtc_hal_mcu.c **** /*!
 106:../Src/smtc_hal/smtc_hal_mcu.c ****  * @brief init the MCU clock tree
 107:../Src/smtc_hal/smtc_hal_mcu.c ****  */
 108:../Src/smtc_hal/smtc_hal_mcu.c **** static void hal_mcu_system_clock_config( void );
 109:../Src/smtc_hal/smtc_hal_mcu.c **** 
 110:../Src/smtc_hal/smtc_hal_mcu.c **** /*!
 111:../Src/smtc_hal/smtc_hal_mcu.c ****  * @brief reinit the MCU clock tree after a stop mode
 112:../Src/smtc_hal/smtc_hal_mcu.c ****  */
 113:../Src/smtc_hal/smtc_hal_mcu.c **** static void hal_mcu_system_clock_re_config_after_stop( void );
 114:../Src/smtc_hal/smtc_hal_mcu.c **** 
 115:../Src/smtc_hal/smtc_hal_mcu.c **** /*!
ARM GAS  /tmp/ccwAxJ3w.s 			page 55


 116:../Src/smtc_hal/smtc_hal_mcu.c ****  * @brief init the GPIO
 117:../Src/smtc_hal/smtc_hal_mcu.c ****  */
 118:../Src/smtc_hal/smtc_hal_mcu.c **** static void hal_mcu_gpio_init( void );
 119:../Src/smtc_hal/smtc_hal_mcu.c **** 
 120:../Src/smtc_hal/smtc_hal_mcu.c **** /* Uncomment for achieve lower consumption, comment for LED example in class C example */
 121:../Src/smtc_hal/smtc_hal_mcu.c **** //#define HAL_MCU_GPIO_DEINIT
 122:../Src/smtc_hal/smtc_hal_mcu.c **** #ifdef HAL_MCU_GPIO_DEINIT
 123:../Src/smtc_hal/smtc_hal_mcu.c **** /*!
 124:../Src/smtc_hal/smtc_hal_mcu.c ****  * @brief deinit the GPIO
 125:../Src/smtc_hal/smtc_hal_mcu.c ****  */
 126:../Src/smtc_hal/smtc_hal_mcu.c **** static void hal_mcu_gpio_deinit( void );
 127:../Src/smtc_hal/smtc_hal_mcu.c **** #endif
 128:../Src/smtc_hal/smtc_hal_mcu.c **** 
 129:../Src/smtc_hal/smtc_hal_mcu.c **** /*!
 130:../Src/smtc_hal/smtc_hal_mcu.c ****  * @brief init the power voltage detector
 131:../Src/smtc_hal/smtc_hal_mcu.c ****  */
 132:../Src/smtc_hal/smtc_hal_mcu.c **** static void hal_mcu_pvd_config( void );
 133:../Src/smtc_hal/smtc_hal_mcu.c **** 
 134:../Src/smtc_hal/smtc_hal_mcu.c **** /*!
 135:../Src/smtc_hal/smtc_hal_mcu.c ****  * @brief Deinit the MCU
 136:../Src/smtc_hal/smtc_hal_mcu.c ****  */
 137:../Src/smtc_hal/smtc_hal_mcu.c **** static void hal_mcu_deinit( void );
 138:../Src/smtc_hal/smtc_hal_mcu.c **** 
 139:../Src/smtc_hal/smtc_hal_mcu.c **** /*!
 140:../Src/smtc_hal/smtc_hal_mcu.c ****  * @brief Initializes MCU after a stop mode
 141:../Src/smtc_hal/smtc_hal_mcu.c ****  */
 142:../Src/smtc_hal/smtc_hal_mcu.c **** static void hal_mcu_reinit( void );
 143:../Src/smtc_hal/smtc_hal_mcu.c **** 
 144:../Src/smtc_hal/smtc_hal_mcu.c **** /*!
 145:../Src/smtc_hal/smtc_hal_mcu.c ****  * @brief deinit the peripherals
 146:../Src/smtc_hal/smtc_hal_mcu.c ****  */
 147:../Src/smtc_hal/smtc_hal_mcu.c **** static void hal_mcu_deinit_periph( void );
 148:../Src/smtc_hal/smtc_hal_mcu.c **** 
 149:../Src/smtc_hal/smtc_hal_mcu.c **** #if( HAL_DBG_TRACE == HAL_FEATURE_ON )
 150:../Src/smtc_hal/smtc_hal_mcu.c **** /*!
 151:../Src/smtc_hal/smtc_hal_mcu.c ****  * @brief printf
 152:../Src/smtc_hal/smtc_hal_mcu.c ****  */
 153:../Src/smtc_hal/smtc_hal_mcu.c **** static void vprint( const char* fmt, va_list argp );
 154:../Src/smtc_hal/smtc_hal_mcu.c **** #endif
 155:../Src/smtc_hal/smtc_hal_mcu.c **** 
 156:../Src/smtc_hal/smtc_hal_mcu.c **** /*!
 157:../Src/smtc_hal/smtc_hal_mcu.c ****  * @brief Function executed on software watchdog event
 158:../Src/smtc_hal/smtc_hal_mcu.c ****  */
 159:../Src/smtc_hal/smtc_hal_mcu.c **** static void on_soft_watchdog_event( void* context );
 160:../Src/smtc_hal/smtc_hal_mcu.c **** 
 161:../Src/smtc_hal/smtc_hal_mcu.c **** /*
 162:../Src/smtc_hal/smtc_hal_mcu.c ****  * -----------------------------------------------------------------------------
 163:../Src/smtc_hal/smtc_hal_mcu.c ****  * --- PUBLIC FUNCTIONS DEFINITION ---------------------------------------------
 164:../Src/smtc_hal/smtc_hal_mcu.c ****  */
 165:../Src/smtc_hal/smtc_hal_mcu.c **** 
 166:../Src/smtc_hal/smtc_hal_mcu.c **** void hal_mcu_critical_section_begin( uint32_t* mask )
 167:../Src/smtc_hal/smtc_hal_mcu.c **** {
 135              		.loc 3 167 1
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 16
 138              		@ frame_needed = 1, uses_anonymous_args = 0
 139              		@ link register save eliminated.
ARM GAS  /tmp/ccwAxJ3w.s 			page 56


 140 0000 80B4     		push	{r7}
 141              	.LCFI2:
 142              		.cfi_def_cfa_offset 4
 143              		.cfi_offset 7, -4
 144 0002 85B0     		sub	sp, sp, #20
 145              	.LCFI3:
 146              		.cfi_def_cfa_offset 24
 147 0004 00AF     		add	r7, sp, #0
 148              	.LCFI4:
 149              		.cfi_def_cfa_register 7
 150 0006 7860     		str	r0, [r7, #4]
 151              	.LBB26:
 152              	.LBB27:
 386:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 153              		.loc 2 386 3
 154              		.syntax unified
 155              	@ 386 "../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 156 0008 EFF31083 		MRS r3, primask
 157              	@ 0 "" 2
 158              		.thumb
 159              		.syntax unified
 160 000c FB60     		str	r3, [r7, #12]
 387:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 161              		.loc 2 387 9
 162 000e FA68     		ldr	r2, [r7, #12]
 163              	.LBE27:
 164              	.LBE26:
 168:../Src/smtc_hal/smtc_hal_mcu.c ****     *mask = __get_PRIMASK( );
 165              		.loc 3 168 11
 166 0010 7B68     		ldr	r3, [r7, #4]
 167 0012 1A60     		str	r2, [r3]
 168              	.LBB28:
 169              	.LBB29:
 142:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 170              		.loc 2 142 3
 171              		.syntax unified
 172              	@ 142 "../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 173 0014 72B6     		cpsid i
 174              	@ 0 "" 2
 143:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175              		.loc 2 143 1
 176              		.thumb
 177              		.syntax unified
 178 0016 00BF     		nop
 179              	.LBE29:
 180              	.LBE28:
 169:../Src/smtc_hal/smtc_hal_mcu.c ****     __disable_irq( );
 170:../Src/smtc_hal/smtc_hal_mcu.c **** }
 181              		.loc 3 170 1
 182 0018 00BF     		nop
 183 001a 1437     		adds	r7, r7, #20
 184              	.LCFI5:
 185              		.cfi_def_cfa_offset 4
 186 001c BD46     		mov	sp, r7
 187              	.LCFI6:
 188              		.cfi_def_cfa_register 13
 189              		@ sp needed
ARM GAS  /tmp/ccwAxJ3w.s 			page 57


 190 001e 5DF8047B 		ldr	r7, [sp], #4
 191              	.LCFI7:
 192              		.cfi_restore 7
 193              		.cfi_def_cfa_offset 0
 194 0022 7047     		bx	lr
 195              		.cfi_endproc
 196              	.LFE596:
 198              		.section	.text.hal_mcu_critical_section_end,"ax",%progbits
 199              		.align	1
 200              		.global	hal_mcu_critical_section_end
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 204              		.fpu fpv4-sp-d16
 206              	hal_mcu_critical_section_end:
 207              	.LFB597:
 171:../Src/smtc_hal/smtc_hal_mcu.c **** 
 172:../Src/smtc_hal/smtc_hal_mcu.c **** void hal_mcu_critical_section_end( uint32_t* mask ) { __set_PRIMASK( *mask ); }
 208              		.loc 3 172 53
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 16
 211              		@ frame_needed = 1, uses_anonymous_args = 0
 212              		@ link register save eliminated.
 213 0000 80B4     		push	{r7}
 214              	.LCFI8:
 215              		.cfi_def_cfa_offset 4
 216              		.cfi_offset 7, -4
 217 0002 85B0     		sub	sp, sp, #20
 218              	.LCFI9:
 219              		.cfi_def_cfa_offset 24
 220 0004 00AF     		add	r7, sp, #0
 221              	.LCFI10:
 222              		.cfi_def_cfa_register 7
 223 0006 7860     		str	r0, [r7, #4]
 224              		.loc 3 172 55
 225 0008 7B68     		ldr	r3, [r7, #4]
 226 000a 1B68     		ldr	r3, [r3]
 227 000c FB60     		str	r3, [r7, #12]
 228              	.LBB30:
 229              	.LBB31:
 414:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 230              		.loc 2 414 3
 231 000e FB68     		ldr	r3, [r7, #12]
 232              		.syntax unified
 233              	@ 414 "../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 234 0010 83F31088 		MSR primask, r3
 235              	@ 0 "" 2
 415:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236              		.loc 2 415 1
 237              		.thumb
 238              		.syntax unified
 239 0014 00BF     		nop
 240              	.LBE31:
 241              	.LBE30:
 242              		.loc 3 172 79
 243 0016 00BF     		nop
 244 0018 1437     		adds	r7, r7, #20
ARM GAS  /tmp/ccwAxJ3w.s 			page 58


 245              	.LCFI11:
 246              		.cfi_def_cfa_offset 4
 247 001a BD46     		mov	sp, r7
 248              	.LCFI12:
 249              		.cfi_def_cfa_register 13
 250              		@ sp needed
 251 001c 5DF8047B 		ldr	r7, [sp], #4
 252              	.LCFI13:
 253              		.cfi_restore 7
 254              		.cfi_def_cfa_offset 0
 255 0020 7047     		bx	lr
 256              		.cfi_endproc
 257              	.LFE597:
 259              		.section	.text.hal_mcu_deinit_periph,"ax",%progbits
 260              		.align	1
 261              		.syntax unified
 262              		.thumb
 263              		.thumb_func
 264              		.fpu fpv4-sp-d16
 266              	hal_mcu_deinit_periph:
 267              	.LFB598:
 173:../Src/smtc_hal/smtc_hal_mcu.c **** 
 174:../Src/smtc_hal/smtc_hal_mcu.c **** void hal_mcu_deinit_periph( void )
 175:../Src/smtc_hal/smtc_hal_mcu.c **** {
 268              		.loc 3 175 1
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 0
 271              		@ frame_needed = 1, uses_anonymous_args = 0
 272              		@ link register save eliminated.
 273 0000 80B4     		push	{r7}
 274              	.LCFI14:
 275              		.cfi_def_cfa_offset 4
 276              		.cfi_offset 7, -4
 277 0002 00AF     		add	r7, sp, #0
 278              	.LCFI15:
 279              		.cfi_def_cfa_register 7
 176:../Src/smtc_hal/smtc_hal_mcu.c **** 
 177:../Src/smtc_hal/smtc_hal_mcu.c ****     
 178:../Src/smtc_hal/smtc_hal_mcu.c **** #ifdef HAL_MCU_GPIO_DEINIT
 179:../Src/smtc_hal/smtc_hal_mcu.c ****     hal_mcu_gpio_deinit( );
 180:../Src/smtc_hal/smtc_hal_mcu.c **** #endif
 181:../Src/smtc_hal/smtc_hal_mcu.c **** }
 280              		.loc 3 181 1
 281 0004 00BF     		nop
 282 0006 BD46     		mov	sp, r7
 283              	.LCFI16:
 284              		.cfi_def_cfa_register 13
 285              		@ sp needed
 286 0008 5DF8047B 		ldr	r7, [sp], #4
 287              	.LCFI17:
 288              		.cfi_restore 7
 289              		.cfi_def_cfa_offset 0
 290 000c 7047     		bx	lr
 291              		.cfi_endproc
 292              	.LFE598:
 294              		.section	.text.hal_mcu_init,"ax",%progbits
 295              		.align	1
ARM GAS  /tmp/ccwAxJ3w.s 			page 59


 296              		.global	hal_mcu_init
 297              		.syntax unified
 298              		.thumb
 299              		.thumb_func
 300              		.fpu fpv4-sp-d16
 302              	hal_mcu_init:
 303              	.LFB599:
 182:../Src/smtc_hal/smtc_hal_mcu.c **** 
 183:../Src/smtc_hal/smtc_hal_mcu.c **** void hal_mcu_init( void )
 184:../Src/smtc_hal/smtc_hal_mcu.c **** {
 304              		.loc 3 184 1
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 1, uses_anonymous_args = 0
 308 0000 80B5     		push	{r7, lr}
 309              	.LCFI18:
 310              		.cfi_def_cfa_offset 8
 311              		.cfi_offset 7, -8
 312              		.cfi_offset 14, -4
 313 0002 00AF     		add	r7, sp, #0
 314              	.LCFI19:
 315              		.cfi_def_cfa_register 7
 185:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Initialize MCU HAL library */
 186:../Src/smtc_hal/smtc_hal_mcu.c ****     HAL_Init( );
 316              		.loc 3 186 5
 317 0004 FFF7FEFF 		bl	HAL_Init
 187:../Src/smtc_hal/smtc_hal_mcu.c **** 
 188:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Initialize clocks */
 189:../Src/smtc_hal/smtc_hal_mcu.c ****     hal_mcu_system_clock_config( );
 318              		.loc 3 189 5
 319 0008 FFF7FEFF 		bl	hal_mcu_system_clock_config
 190:../Src/smtc_hal/smtc_hal_mcu.c **** 
 191:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Initialize GPIOs */
 192:../Src/smtc_hal/smtc_hal_mcu.c ****     hal_mcu_gpio_init( );
 320              		.loc 3 192 5
 321 000c FFF7FEFF 		bl	hal_mcu_gpio_init
 193:../Src/smtc_hal/smtc_hal_mcu.c **** 
 194:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Initialize low power timer */
 195:../Src/smtc_hal/smtc_hal_mcu.c ****     hal_tmr_init( );
 322              		.loc 3 195 5
 323 0010 FFF7FEFF 		bl	hal_tmr_init
 196:../Src/smtc_hal/smtc_hal_mcu.c **** 
 197:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Initialize the user flash */
 198:../Src/smtc_hal/smtc_hal_mcu.c ****     flash_init( );
 324              		.loc 3 198 5
 325 0014 FFF7FEFF 		bl	flash_init
 199:../Src/smtc_hal/smtc_hal_mcu.c **** 
 200:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Init power voltage voltage detector */
 201:../Src/smtc_hal/smtc_hal_mcu.c ****     hal_mcu_pvd_config( );
 326              		.loc 3 201 5
 327 0018 FFF7FEFF 		bl	hal_mcu_pvd_config
 202:../Src/smtc_hal/smtc_hal_mcu.c **** 
 203:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Initialize UART */
 204:../Src/smtc_hal/smtc_hal_mcu.c **** #if( HAL_USE_PRINTF_UART == HAL_FEATURE_ON )
 205:../Src/smtc_hal/smtc_hal_mcu.c ****     hal_uart_init( HAL_PRINTF_UART_ID, UART_TX, UART_RX );
 328              		.loc 3 205 5
 329 001c 0322     		movs	r2, #3
ARM GAS  /tmp/ccwAxJ3w.s 			page 60


 330 001e 0221     		movs	r1, #2
 331 0020 0220     		movs	r0, #2
 332 0022 FFF7FEFF 		bl	hal_uart_init
 206:../Src/smtc_hal/smtc_hal_mcu.c **** #endif
 207:../Src/smtc_hal/smtc_hal_mcu.c **** 
 208:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Initialize SPI */
 209:../Src/smtc_hal/smtc_hal_mcu.c ****     hal_spi_init( HAL_RADIO_SPI_ID, RADIO_MOSI, RADIO_MISO, RADIO_SCLK );
 333              		.loc 3 209 5
 334 0026 0523     		movs	r3, #5
 335 0028 0622     		movs	r2, #6
 336 002a 0721     		movs	r1, #7
 337 002c 0120     		movs	r0, #1
 338 002e FFF7FEFF 		bl	hal_spi_init
 210:../Src/smtc_hal/smtc_hal_mcu.c ****     lr1110_modem_board_init_io_context( &lr1110 );
 339              		.loc 3 210 5
 340 0032 0748     		ldr	r0, .L10
 341 0034 FFF7FEFF 		bl	lr1110_modem_board_init_io_context
 211:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Init LR1110 IO */
 212:../Src/smtc_hal/smtc_hal_mcu.c ****     lr1110_modem_board_init_io( &lr1110 );
 342              		.loc 3 212 5
 343 0038 0548     		ldr	r0, .L10
 344 003a FFF7FEFF 		bl	lr1110_modem_board_init_io
 213:../Src/smtc_hal/smtc_hal_mcu.c **** 
 214:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Initialize RTC */
 215:../Src/smtc_hal/smtc_hal_mcu.c ****     hal_rtc_init( );
 345              		.loc 3 215 5
 346 003e FFF7FEFF 		bl	hal_rtc_init
 216:../Src/smtc_hal/smtc_hal_mcu.c **** 
 217:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Initialize I2C */
 218:../Src/smtc_hal/smtc_hal_mcu.c ****     hal_i2c_init( HAL_I2C_ID, I2C_SDA, I2C_SCL );
 347              		.loc 3 218 5
 348 0042 1822     		movs	r2, #24
 349 0044 1921     		movs	r1, #25
 350 0046 0120     		movs	r0, #1
 351 0048 FFF7FEFF 		bl	hal_i2c_init
 219:../Src/smtc_hal/smtc_hal_mcu.c **** }
 352              		.loc 3 219 1
 353 004c 00BF     		nop
 354 004e 80BD     		pop	{r7, pc}
 355              	.L11:
 356              		.align	2
 357              	.L10:
 358 0050 00000000 		.word	lr1110
 359              		.cfi_endproc
 360              	.LFE599:
 362              		.section	.text.hal_mcu_disable_irq,"ax",%progbits
 363              		.align	1
 364              		.global	hal_mcu_disable_irq
 365              		.syntax unified
 366              		.thumb
 367              		.thumb_func
 368              		.fpu fpv4-sp-d16
 370              	hal_mcu_disable_irq:
 371              	.LFB600:
 220:../Src/smtc_hal/smtc_hal_mcu.c **** 
 221:../Src/smtc_hal/smtc_hal_mcu.c **** void hal_mcu_disable_irq( void ) { __disable_irq( ); }
 372              		.loc 3 221 34
ARM GAS  /tmp/ccwAxJ3w.s 			page 61


 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 0
 375              		@ frame_needed = 1, uses_anonymous_args = 0
 376              		@ link register save eliminated.
 377 0000 80B4     		push	{r7}
 378              	.LCFI20:
 379              		.cfi_def_cfa_offset 4
 380              		.cfi_offset 7, -4
 381 0002 00AF     		add	r7, sp, #0
 382              	.LCFI21:
 383              		.cfi_def_cfa_register 7
 384              	.LBB32:
 385              	.LBB33:
 142:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 386              		.loc 2 142 3
 387              		.syntax unified
 388              	@ 142 "../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 389 0004 72B6     		cpsid i
 390              	@ 0 "" 2
 143:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391              		.loc 2 143 1
 392              		.thumb
 393              		.syntax unified
 394 0006 00BF     		nop
 395              	.LBE33:
 396              	.LBE32:
 397              		.loc 3 221 54
 398 0008 00BF     		nop
 399 000a BD46     		mov	sp, r7
 400              	.LCFI22:
 401              		.cfi_def_cfa_register 13
 402              		@ sp needed
 403 000c 5DF8047B 		ldr	r7, [sp], #4
 404              	.LCFI23:
 405              		.cfi_restore 7
 406              		.cfi_def_cfa_offset 0
 407 0010 7047     		bx	lr
 408              		.cfi_endproc
 409              	.LFE600:
 411              		.section	.text.hal_mcu_enable_irq,"ax",%progbits
 412              		.align	1
 413              		.global	hal_mcu_enable_irq
 414              		.syntax unified
 415              		.thumb
 416              		.thumb_func
 417              		.fpu fpv4-sp-d16
 419              	hal_mcu_enable_irq:
 420              	.LFB601:
 222:../Src/smtc_hal/smtc_hal_mcu.c **** 
 223:../Src/smtc_hal/smtc_hal_mcu.c **** void hal_mcu_enable_irq( void ) { __enable_irq( ); }
 421              		.loc 3 223 33
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 0
 424              		@ frame_needed = 1, uses_anonymous_args = 0
 425              		@ link register save eliminated.
 426 0000 80B4     		push	{r7}
 427              	.LCFI24:
ARM GAS  /tmp/ccwAxJ3w.s 			page 62


 428              		.cfi_def_cfa_offset 4
 429              		.cfi_offset 7, -4
 430 0002 00AF     		add	r7, sp, #0
 431              	.LCFI25:
 432              		.cfi_def_cfa_register 7
 433              	.LBB34:
 434              	.LBB35:
 131:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 435              		.loc 2 131 3
 436              		.syntax unified
 437              	@ 131 "../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 438 0004 62B6     		cpsie i
 439              	@ 0 "" 2
 132:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 440              		.loc 2 132 1
 441              		.thumb
 442              		.syntax unified
 443 0006 00BF     		nop
 444              	.LBE35:
 445              	.LBE34:
 446              		.loc 3 223 52
 447 0008 00BF     		nop
 448 000a BD46     		mov	sp, r7
 449              	.LCFI26:
 450              		.cfi_def_cfa_register 13
 451              		@ sp needed
 452 000c 5DF8047B 		ldr	r7, [sp], #4
 453              	.LCFI27:
 454              		.cfi_restore 7
 455              		.cfi_def_cfa_offset 0
 456 0010 7047     		bx	lr
 457              		.cfi_endproc
 458              	.LFE601:
 460              		.section	.text.hal_mcu_reset,"ax",%progbits
 461              		.align	1
 462              		.global	hal_mcu_reset
 463              		.syntax unified
 464              		.thumb
 465              		.thumb_func
 466              		.fpu fpv4-sp-d16
 468              	hal_mcu_reset:
 469              	.LFB602:
 224:../Src/smtc_hal/smtc_hal_mcu.c **** 
 225:../Src/smtc_hal/smtc_hal_mcu.c **** void hal_mcu_reset( void )
 226:../Src/smtc_hal/smtc_hal_mcu.c **** {
 470              		.loc 3 226 1
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 1, uses_anonymous_args = 0
 474 0000 80B5     		push	{r7, lr}
 475              	.LCFI28:
 476              		.cfi_def_cfa_offset 8
 477              		.cfi_offset 7, -8
 478              		.cfi_offset 14, -4
 479 0002 00AF     		add	r7, sp, #0
 480              	.LCFI29:
 481              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccwAxJ3w.s 			page 63


 482              	.LBB36:
 483              	.LBB37:
 142:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 484              		.loc 2 142 3
 485              		.syntax unified
 486              	@ 142 "../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 487 0004 72B6     		cpsid i
 488              	@ 0 "" 2
 143:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 489              		.loc 2 143 1
 490              		.thumb
 491              		.syntax unified
 492 0006 00BF     		nop
 493              	.LBE37:
 494              	.LBE36:
 227:../Src/smtc_hal/smtc_hal_mcu.c ****     __disable_irq( );
 228:../Src/smtc_hal/smtc_hal_mcu.c **** 
 229:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Restart system */
 230:../Src/smtc_hal/smtc_hal_mcu.c ****     NVIC_SystemReset( );
 495              		.loc 3 230 5
 496 0008 FFF7FEFF 		bl	__NVIC_SystemReset
 497              		.cfi_endproc
 498              	.LFE602:
 500              		.section	.rodata
 501              		.align	2
 502              	.LC0:
 503 0000 1B5B303B 		.ascii	"\033[0;31m\000"
 503      33316D00 
 504              		.align	2
 505              	.LC1:
 506 0008 4552524F 		.ascii	"ERROR: \000"
 506      523A2000 
 507              		.align	2
 508              	.LC2:
 509 0010 25730A00 		.ascii	"%s\012\000"
 510              		.align	2
 511              	.LC3:
 512 0014 1B5B306D 		.ascii	"\033[0m\000"
 512      00
 513 0019 000000   		.align	2
 514              	.LC4:
 515 001c 50414E49 		.ascii	"PANIC\000"
 515      4300
 516              		.section	.text.hal_mcu_panic,"ax",%progbits
 517              		.align	1
 518              		.global	hal_mcu_panic
 519              		.syntax unified
 520              		.thumb
 521              		.thumb_func
 522              		.fpu fpv4-sp-d16
 524              	hal_mcu_panic:
 525              	.LFB603:
 231:../Src/smtc_hal/smtc_hal_mcu.c **** }
 232:../Src/smtc_hal/smtc_hal_mcu.c **** 
 233:../Src/smtc_hal/smtc_hal_mcu.c **** void hal_mcu_panic( void )
 234:../Src/smtc_hal/smtc_hal_mcu.c **** {
 526              		.loc 3 234 1
ARM GAS  /tmp/ccwAxJ3w.s 			page 64


 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 8
 529              		@ frame_needed = 1, uses_anonymous_args = 0
 530 0000 80B5     		push	{r7, lr}
 531              	.LCFI30:
 532              		.cfi_def_cfa_offset 8
 533              		.cfi_offset 7, -8
 534              		.cfi_offset 14, -4
 535 0002 82B0     		sub	sp, sp, #8
 536              	.LCFI31:
 537              		.cfi_def_cfa_offset 16
 538 0004 00AF     		add	r7, sp, #0
 539              	.LCFI32:
 540              		.cfi_def_cfa_register 7
 235:../Src/smtc_hal/smtc_hal_mcu.c ****     CRITICAL_SECTION_BEGIN( );
 541              		.loc 3 235 5
 542 0006 3B1D     		adds	r3, r7, #4
 543 0008 1846     		mov	r0, r3
 544 000a FFF7FEFF 		bl	hal_mcu_critical_section_begin
 236:../Src/smtc_hal/smtc_hal_mcu.c **** 
 237:../Src/smtc_hal/smtc_hal_mcu.c ****     HAL_DBG_TRACE_ERROR( "%s\n", __func__ );
 545              		.loc 3 237 5
 546 000e 0F48     		ldr	r0, .L16
 547 0010 FFF7FEFF 		bl	hal_mcu_trace_print
 548 0014 0E48     		ldr	r0, .L16+4
 549 0016 FFF7FEFF 		bl	hal_mcu_trace_print
 550 001a 0E49     		ldr	r1, .L16+8
 551 001c 0E48     		ldr	r0, .L16+12
 552 001e FFF7FEFF 		bl	hal_mcu_trace_print
 553 0022 0E48     		ldr	r0, .L16+16
 554 0024 FFF7FEFF 		bl	hal_mcu_trace_print
 238:../Src/smtc_hal/smtc_hal_mcu.c ****     HAL_DBG_TRACE_ERROR( "PANIC" );
 555              		.loc 3 238 5
 556 0028 0848     		ldr	r0, .L16
 557 002a FFF7FEFF 		bl	hal_mcu_trace_print
 558 002e 0848     		ldr	r0, .L16+4
 559 0030 FFF7FEFF 		bl	hal_mcu_trace_print
 560 0034 0A48     		ldr	r0, .L16+20
 561 0036 FFF7FEFF 		bl	hal_mcu_trace_print
 562 003a 0848     		ldr	r0, .L16+16
 563 003c FFF7FEFF 		bl	hal_mcu_trace_print
 239:../Src/smtc_hal/smtc_hal_mcu.c **** 
 240:../Src/smtc_hal/smtc_hal_mcu.c ****     /* reset the board */
 241:../Src/smtc_hal/smtc_hal_mcu.c ****     hal_mcu_reset( );
 564              		.loc 3 241 5
 565 0040 FFF7FEFF 		bl	hal_mcu_reset
 242:../Src/smtc_hal/smtc_hal_mcu.c **** }
 566              		.loc 3 242 1
 567 0044 00BF     		nop
 568 0046 0837     		adds	r7, r7, #8
 569              	.LCFI33:
 570              		.cfi_def_cfa_offset 8
 571 0048 BD46     		mov	sp, r7
 572              	.LCFI34:
 573              		.cfi_def_cfa_register 13
 574              		@ sp needed
 575 004a 80BD     		pop	{r7, pc}
ARM GAS  /tmp/ccwAxJ3w.s 			page 65


 576              	.L17:
 577              		.align	2
 578              	.L16:
 579 004c 00000000 		.word	.LC0
 580 0050 08000000 		.word	.LC1
 581 0054 00000000 		.word	__func__.0
 582 0058 10000000 		.word	.LC2
 583 005c 14000000 		.word	.LC3
 584 0060 1C000000 		.word	.LC4
 585              		.cfi_endproc
 586              	.LFE603:
 588              		.section	.text.hal_mcu_wait_us,"ax",%progbits
 589              		.align	1
 590              		.global	hal_mcu_wait_us
 591              		.syntax unified
 592              		.thumb
 593              		.thumb_func
 594              		.fpu fpv4-sp-d16
 596              	hal_mcu_wait_us:
 597              	.LFB604:
 243:../Src/smtc_hal/smtc_hal_mcu.c **** 
 244:../Src/smtc_hal/smtc_hal_mcu.c **** void hal_mcu_wait_us( const int32_t microseconds )
 245:../Src/smtc_hal/smtc_hal_mcu.c **** {
 598              		.loc 3 245 1
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 16
 601              		@ frame_needed = 1, uses_anonymous_args = 0
 602              		@ link register save eliminated.
 603 0000 80B4     		push	{r7}
 604              	.LCFI35:
 605              		.cfi_def_cfa_offset 4
 606              		.cfi_offset 7, -4
 607 0002 85B0     		sub	sp, sp, #20
 608              	.LCFI36:
 609              		.cfi_def_cfa_offset 24
 610 0004 00AF     		add	r7, sp, #0
 611              	.LCFI37:
 612              		.cfi_def_cfa_register 7
 613 0006 7860     		str	r0, [r7, #4]
 246:../Src/smtc_hal/smtc_hal_mcu.c ****     const uint32_t nb_nop = microseconds * 1000 / 561;
 614              		.loc 3 246 42
 615 0008 7B68     		ldr	r3, [r7, #4]
 616 000a 4FF47A72 		mov	r2, #1000
 617 000e 02FB03F3 		mul	r3, r2, r3
 618              		.loc 3 246 49
 619 0012 0D4A     		ldr	r2, .L21
 620 0014 82FB0312 		smull	r1, r2, r2, r3
 621 0018 1A44     		add	r2, r2, r3
 622 001a 5212     		asrs	r2, r2, #9
 623 001c DB17     		asrs	r3, r3, #31
 624 001e D31A     		subs	r3, r2, r3
 625              		.loc 3 246 20
 626 0020 BB60     		str	r3, [r7, #8]
 627              	.LBB38:
 247:../Src/smtc_hal/smtc_hal_mcu.c ****     for( uint32_t i = 0; i < nb_nop; i++ )
 628              		.loc 3 247 19
 629 0022 0023     		movs	r3, #0
ARM GAS  /tmp/ccwAxJ3w.s 			page 66


 630 0024 FB60     		str	r3, [r7, #12]
 631              		.loc 3 247 5
 632 0026 03E0     		b	.L19
 633              	.L20:
 248:../Src/smtc_hal/smtc_hal_mcu.c ****     {
 249:../Src/smtc_hal/smtc_hal_mcu.c ****         __NOP( );
 634              		.loc 3 249 9 discriminator 3
 635              		.syntax unified
 636              	@ 249 "../Src/smtc_hal/smtc_hal_mcu.c" 1
 637 0028 00BF     		nop
 638              	@ 0 "" 2
 247:../Src/smtc_hal/smtc_hal_mcu.c ****     for( uint32_t i = 0; i < nb_nop; i++ )
 639              		.loc 3 247 39 discriminator 3
 640              		.thumb
 641              		.syntax unified
 642 002a FB68     		ldr	r3, [r7, #12]
 643 002c 0133     		adds	r3, r3, #1
 644 002e FB60     		str	r3, [r7, #12]
 645              	.L19:
 247:../Src/smtc_hal/smtc_hal_mcu.c ****     for( uint32_t i = 0; i < nb_nop; i++ )
 646              		.loc 3 247 5 discriminator 1
 647 0030 FA68     		ldr	r2, [r7, #12]
 648 0032 BB68     		ldr	r3, [r7, #8]
 649 0034 9A42     		cmp	r2, r3
 650 0036 F7D3     		bcc	.L20
 651              	.LBE38:
 250:../Src/smtc_hal/smtc_hal_mcu.c ****     }
 251:../Src/smtc_hal/smtc_hal_mcu.c **** }
 652              		.loc 3 251 1
 653 0038 00BF     		nop
 654 003a 00BF     		nop
 655 003c 1437     		adds	r7, r7, #20
 656              	.LCFI38:
 657              		.cfi_def_cfa_offset 4
 658 003e BD46     		mov	sp, r7
 659              	.LCFI39:
 660              		.cfi_def_cfa_register 13
 661              		@ sp needed
 662 0040 5DF8047B 		ldr	r7, [sp], #4
 663              	.LCFI40:
 664              		.cfi_restore 7
 665              		.cfi_def_cfa_offset 0
 666 0044 7047     		bx	lr
 667              	.L22:
 668 0046 00BF     		.align	2
 669              	.L21:
 670 0048 5FD2A3E9 		.word	-375139745
 671              		.cfi_endproc
 672              	.LFE604:
 674              		.section	.text.hal_mcu_init_software_watchdog,"ax",%progbits
 675              		.align	1
 676              		.global	hal_mcu_init_software_watchdog
 677              		.syntax unified
 678              		.thumb
 679              		.thumb_func
 680              		.fpu fpv4-sp-d16
 682              	hal_mcu_init_software_watchdog:
ARM GAS  /tmp/ccwAxJ3w.s 			page 67


 683              	.LFB605:
 252:../Src/smtc_hal/smtc_hal_mcu.c **** 
 253:../Src/smtc_hal/smtc_hal_mcu.c **** void hal_mcu_init_software_watchdog( uint32_t value )
 254:../Src/smtc_hal/smtc_hal_mcu.c **** {
 684              		.loc 3 254 1
 685              		.cfi_startproc
 686              		@ args = 0, pretend = 0, frame = 8
 687              		@ frame_needed = 1, uses_anonymous_args = 0
 688 0000 80B5     		push	{r7, lr}
 689              	.LCFI41:
 690              		.cfi_def_cfa_offset 8
 691              		.cfi_offset 7, -8
 692              		.cfi_offset 14, -4
 693 0002 82B0     		sub	sp, sp, #8
 694              	.LCFI42:
 695              		.cfi_def_cfa_offset 16
 696 0004 00AF     		add	r7, sp, #0
 697              	.LCFI43:
 698              		.cfi_def_cfa_register 7
 699 0006 7860     		str	r0, [r7, #4]
 255:../Src/smtc_hal/smtc_hal_mcu.c **** #if HAL_USE_WATCHDOG == HAL_FEATURE_ON
 256:../Src/smtc_hal/smtc_hal_mcu.c ****     timer_init( &soft_watchdog, on_soft_watchdog_event );
 700              		.loc 3 256 5
 701 0008 0749     		ldr	r1, .L24
 702 000a 0848     		ldr	r0, .L24+4
 703 000c FFF7FEFF 		bl	timer_init
 257:../Src/smtc_hal/smtc_hal_mcu.c ****     timer_set_value( &soft_watchdog, value );
 704              		.loc 3 257 5
 705 0010 7968     		ldr	r1, [r7, #4]
 706 0012 0648     		ldr	r0, .L24+4
 707 0014 FFF7FEFF 		bl	timer_set_value
 258:../Src/smtc_hal/smtc_hal_mcu.c ****     timer_start( &soft_watchdog );
 708              		.loc 3 258 5
 709 0018 0448     		ldr	r0, .L24+4
 710 001a FFF7FEFF 		bl	timer_start
 259:../Src/smtc_hal/smtc_hal_mcu.c **** #endif
 260:../Src/smtc_hal/smtc_hal_mcu.c **** }
 711              		.loc 3 260 1
 712 001e 00BF     		nop
 713 0020 0837     		adds	r7, r7, #8
 714              	.LCFI44:
 715              		.cfi_def_cfa_offset 8
 716 0022 BD46     		mov	sp, r7
 717              	.LCFI45:
 718              		.cfi_def_cfa_register 13
 719              		@ sp needed
 720 0024 80BD     		pop	{r7, pc}
 721              	.L25:
 722 0026 00BF     		.align	2
 723              	.L24:
 724 0028 00000000 		.word	on_soft_watchdog_event
 725 002c 00000000 		.word	soft_watchdog
 726              		.cfi_endproc
 727              	.LFE605:
 729              		.section	.text.hal_mcu_set_software_watchdog_value,"ax",%progbits
 730              		.align	1
 731              		.global	hal_mcu_set_software_watchdog_value
ARM GAS  /tmp/ccwAxJ3w.s 			page 68


 732              		.syntax unified
 733              		.thumb
 734              		.thumb_func
 735              		.fpu fpv4-sp-d16
 737              	hal_mcu_set_software_watchdog_value:
 738              	.LFB606:
 261:../Src/smtc_hal/smtc_hal_mcu.c **** 
 262:../Src/smtc_hal/smtc_hal_mcu.c **** void hal_mcu_set_software_watchdog_value( uint32_t value )
 263:../Src/smtc_hal/smtc_hal_mcu.c **** {
 739              		.loc 3 263 1
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 8
 742              		@ frame_needed = 1, uses_anonymous_args = 0
 743 0000 80B5     		push	{r7, lr}
 744              	.LCFI46:
 745              		.cfi_def_cfa_offset 8
 746              		.cfi_offset 7, -8
 747              		.cfi_offset 14, -4
 748 0002 82B0     		sub	sp, sp, #8
 749              	.LCFI47:
 750              		.cfi_def_cfa_offset 16
 751 0004 00AF     		add	r7, sp, #0
 752              	.LCFI48:
 753              		.cfi_def_cfa_register 7
 754 0006 7860     		str	r0, [r7, #4]
 264:../Src/smtc_hal/smtc_hal_mcu.c **** #if HAL_USE_WATCHDOG == HAL_FEATURE_ON
 265:../Src/smtc_hal/smtc_hal_mcu.c ****     timer_set_value( &soft_watchdog, value );
 755              		.loc 3 265 5
 756 0008 7968     		ldr	r1, [r7, #4]
 757 000a 0348     		ldr	r0, .L27
 758 000c FFF7FEFF 		bl	timer_set_value
 266:../Src/smtc_hal/smtc_hal_mcu.c **** #endif
 267:../Src/smtc_hal/smtc_hal_mcu.c **** }
 759              		.loc 3 267 1
 760 0010 00BF     		nop
 761 0012 0837     		adds	r7, r7, #8
 762              	.LCFI49:
 763              		.cfi_def_cfa_offset 8
 764 0014 BD46     		mov	sp, r7
 765              	.LCFI50:
 766              		.cfi_def_cfa_register 13
 767              		@ sp needed
 768 0016 80BD     		pop	{r7, pc}
 769              	.L28:
 770              		.align	2
 771              	.L27:
 772 0018 00000000 		.word	soft_watchdog
 773              		.cfi_endproc
 774              	.LFE606:
 776              		.section	.text.hal_mcu_start_software_watchdog,"ax",%progbits
 777              		.align	1
 778              		.global	hal_mcu_start_software_watchdog
 779              		.syntax unified
 780              		.thumb
 781              		.thumb_func
 782              		.fpu fpv4-sp-d16
 784              	hal_mcu_start_software_watchdog:
ARM GAS  /tmp/ccwAxJ3w.s 			page 69


 785              	.LFB607:
 268:../Src/smtc_hal/smtc_hal_mcu.c **** 
 269:../Src/smtc_hal/smtc_hal_mcu.c **** void hal_mcu_start_software_watchdog( void )
 270:../Src/smtc_hal/smtc_hal_mcu.c **** {
 786              		.loc 3 270 1
 787              		.cfi_startproc
 788              		@ args = 0, pretend = 0, frame = 0
 789              		@ frame_needed = 1, uses_anonymous_args = 0
 790 0000 80B5     		push	{r7, lr}
 791              	.LCFI51:
 792              		.cfi_def_cfa_offset 8
 793              		.cfi_offset 7, -8
 794              		.cfi_offset 14, -4
 795 0002 00AF     		add	r7, sp, #0
 796              	.LCFI52:
 797              		.cfi_def_cfa_register 7
 271:../Src/smtc_hal/smtc_hal_mcu.c **** #if HAL_USE_WATCHDOG == HAL_FEATURE_ON
 272:../Src/smtc_hal/smtc_hal_mcu.c ****     timer_start( &soft_watchdog );
 798              		.loc 3 272 5
 799 0004 0248     		ldr	r0, .L30
 800 0006 FFF7FEFF 		bl	timer_start
 273:../Src/smtc_hal/smtc_hal_mcu.c **** #endif
 274:../Src/smtc_hal/smtc_hal_mcu.c **** }
 801              		.loc 3 274 1
 802 000a 00BF     		nop
 803 000c 80BD     		pop	{r7, pc}
 804              	.L31:
 805 000e 00BF     		.align	2
 806              	.L30:
 807 0010 00000000 		.word	soft_watchdog
 808              		.cfi_endproc
 809              	.LFE607:
 811              		.section	.text.hal_mcu_reset_software_watchdog,"ax",%progbits
 812              		.align	1
 813              		.global	hal_mcu_reset_software_watchdog
 814              		.syntax unified
 815              		.thumb
 816              		.thumb_func
 817              		.fpu fpv4-sp-d16
 819              	hal_mcu_reset_software_watchdog:
 820              	.LFB608:
 275:../Src/smtc_hal/smtc_hal_mcu.c **** 
 276:../Src/smtc_hal/smtc_hal_mcu.c **** void hal_mcu_reset_software_watchdog( void )
 277:../Src/smtc_hal/smtc_hal_mcu.c **** {
 821              		.loc 3 277 1
 822              		.cfi_startproc
 823              		@ args = 0, pretend = 0, frame = 0
 824              		@ frame_needed = 1, uses_anonymous_args = 0
 825 0000 80B5     		push	{r7, lr}
 826              	.LCFI53:
 827              		.cfi_def_cfa_offset 8
 828              		.cfi_offset 7, -8
 829              		.cfi_offset 14, -4
 830 0002 00AF     		add	r7, sp, #0
 831              	.LCFI54:
 832              		.cfi_def_cfa_register 7
 278:../Src/smtc_hal/smtc_hal_mcu.c **** #if HAL_USE_WATCHDOG == HAL_FEATURE_ON
ARM GAS  /tmp/ccwAxJ3w.s 			page 70


 279:../Src/smtc_hal/smtc_hal_mcu.c ****     timer_reset( &soft_watchdog );
 833              		.loc 3 279 5
 834 0004 0248     		ldr	r0, .L33
 835 0006 FFF7FEFF 		bl	timer_reset
 280:../Src/smtc_hal/smtc_hal_mcu.c **** #endif
 281:../Src/smtc_hal/smtc_hal_mcu.c **** }
 836              		.loc 3 281 1
 837 000a 00BF     		nop
 838 000c 80BD     		pop	{r7, pc}
 839              	.L34:
 840 000e 00BF     		.align	2
 841              	.L33:
 842 0010 00000000 		.word	soft_watchdog
 843              		.cfi_endproc
 844              	.LFE608:
 846              		.section	.text.hal_mcu_get_vref_level,"ax",%progbits
 847              		.align	1
 848              		.global	hal_mcu_get_vref_level
 849              		.syntax unified
 850              		.thumb
 851              		.thumb_func
 852              		.fpu fpv4-sp-d16
 854              	hal_mcu_get_vref_level:
 855              	.LFB609:
 282:../Src/smtc_hal/smtc_hal_mcu.c **** 
 283:../Src/smtc_hal/smtc_hal_mcu.c **** uint16_t hal_mcu_get_vref_level( void ) { return 0; }
 856              		.loc 3 283 41
 857              		.cfi_startproc
 858              		@ args = 0, pretend = 0, frame = 0
 859              		@ frame_needed = 1, uses_anonymous_args = 0
 860              		@ link register save eliminated.
 861 0000 80B4     		push	{r7}
 862              	.LCFI55:
 863              		.cfi_def_cfa_offset 4
 864              		.cfi_offset 7, -4
 865 0002 00AF     		add	r7, sp, #0
 866              	.LCFI56:
 867              		.cfi_def_cfa_register 7
 868              		.loc 3 283 50
 869 0004 0023     		movs	r3, #0
 870              		.loc 3 283 53
 871 0006 1846     		mov	r0, r3
 872 0008 BD46     		mov	sp, r7
 873              	.LCFI57:
 874              		.cfi_def_cfa_register 13
 875              		@ sp needed
 876 000a 5DF8047B 		ldr	r7, [sp], #4
 877              	.LCFI58:
 878              		.cfi_restore 7
 879              		.cfi_def_cfa_offset 0
 880 000e 7047     		bx	lr
 881              		.cfi_endproc
 882              	.LFE609:
 884              		.section	.text.hal_mcu_get_temperature,"ax",%progbits
 885              		.align	1
 886              		.global	hal_mcu_get_temperature
 887              		.syntax unified
ARM GAS  /tmp/ccwAxJ3w.s 			page 71


 888              		.thumb
 889              		.thumb_func
 890              		.fpu fpv4-sp-d16
 892              	hal_mcu_get_temperature:
 893              	.LFB610:
 284:../Src/smtc_hal/smtc_hal_mcu.c **** 
 285:../Src/smtc_hal/smtc_hal_mcu.c **** int16_t hal_mcu_get_temperature( void ) { return 0; }
 894              		.loc 3 285 41
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 0
 897              		@ frame_needed = 1, uses_anonymous_args = 0
 898              		@ link register save eliminated.
 899 0000 80B4     		push	{r7}
 900              	.LCFI59:
 901              		.cfi_def_cfa_offset 4
 902              		.cfi_offset 7, -4
 903 0002 00AF     		add	r7, sp, #0
 904              	.LCFI60:
 905              		.cfi_def_cfa_register 7
 906              		.loc 3 285 50
 907 0004 0023     		movs	r3, #0
 908              		.loc 3 285 53
 909 0006 1846     		mov	r0, r3
 910 0008 BD46     		mov	sp, r7
 911              	.LCFI61:
 912              		.cfi_def_cfa_register 13
 913              		@ sp needed
 914 000a 5DF8047B 		ldr	r7, [sp], #4
 915              	.LCFI62:
 916              		.cfi_restore 7
 917              		.cfi_def_cfa_offset 0
 918 000e 7047     		bx	lr
 919              		.cfi_endproc
 920              	.LFE610:
 922              		.section	.text.hal_mcu_disable_low_power_wait,"ax",%progbits
 923              		.align	1
 924              		.global	hal_mcu_disable_low_power_wait
 925              		.syntax unified
 926              		.thumb
 927              		.thumb_func
 928              		.fpu fpv4-sp-d16
 930              	hal_mcu_disable_low_power_wait:
 931              	.LFB611:
 286:../Src/smtc_hal/smtc_hal_mcu.c **** 
 287:../Src/smtc_hal/smtc_hal_mcu.c **** void hal_mcu_disable_low_power_wait( void )
 288:../Src/smtc_hal/smtc_hal_mcu.c **** {
 932              		.loc 3 288 1
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 0
 935              		@ frame_needed = 1, uses_anonymous_args = 0
 936              		@ link register save eliminated.
 937 0000 80B4     		push	{r7}
 938              	.LCFI63:
 939              		.cfi_def_cfa_offset 4
 940              		.cfi_offset 7, -4
 941 0002 00AF     		add	r7, sp, #0
 942              	.LCFI64:
ARM GAS  /tmp/ccwAxJ3w.s 			page 72


 943              		.cfi_def_cfa_register 7
 289:../Src/smtc_hal/smtc_hal_mcu.c ****     hal_exit_wait       = true;
 944              		.loc 3 289 25
 945 0004 054B     		ldr	r3, .L40
 946 0006 0122     		movs	r2, #1
 947 0008 1A70     		strb	r2, [r3]
 290:../Src/smtc_hal/smtc_hal_mcu.c ****     hal_lp_current_mode = LOW_POWER_DISABLE;
 948              		.loc 3 290 25
 949 000a 054B     		ldr	r3, .L40+4
 950 000c 0122     		movs	r2, #1
 951 000e 1A70     		strb	r2, [r3]
 291:../Src/smtc_hal/smtc_hal_mcu.c **** }
 952              		.loc 3 291 1
 953 0010 00BF     		nop
 954 0012 BD46     		mov	sp, r7
 955              	.LCFI65:
 956              		.cfi_def_cfa_register 13
 957              		@ sp needed
 958 0014 5DF8047B 		ldr	r7, [sp], #4
 959              	.LCFI66:
 960              		.cfi_restore 7
 961              		.cfi_def_cfa_offset 0
 962 0018 7047     		bx	lr
 963              	.L41:
 964 001a 00BF     		.align	2
 965              	.L40:
 966 001c 00000000 		.word	hal_exit_wait
 967 0020 00000000 		.word	hal_lp_current_mode
 968              		.cfi_endproc
 969              	.LFE611:
 971              		.section	.text.hal_mcu_enable_low_power_wait,"ax",%progbits
 972              		.align	1
 973              		.global	hal_mcu_enable_low_power_wait
 974              		.syntax unified
 975              		.thumb
 976              		.thumb_func
 977              		.fpu fpv4-sp-d16
 979              	hal_mcu_enable_low_power_wait:
 980              	.LFB612:
 292:../Src/smtc_hal/smtc_hal_mcu.c **** 
 293:../Src/smtc_hal/smtc_hal_mcu.c **** void hal_mcu_enable_low_power_wait( void )
 294:../Src/smtc_hal/smtc_hal_mcu.c **** {
 981              		.loc 3 294 1
 982              		.cfi_startproc
 983              		@ args = 0, pretend = 0, frame = 0
 984              		@ frame_needed = 1, uses_anonymous_args = 0
 985              		@ link register save eliminated.
 986 0000 80B4     		push	{r7}
 987              	.LCFI67:
 988              		.cfi_def_cfa_offset 4
 989              		.cfi_offset 7, -4
 990 0002 00AF     		add	r7, sp, #0
 991              	.LCFI68:
 992              		.cfi_def_cfa_register 7
 295:../Src/smtc_hal/smtc_hal_mcu.c ****     hal_exit_wait       = false;
 993              		.loc 3 295 25
 994 0004 054B     		ldr	r3, .L43
ARM GAS  /tmp/ccwAxJ3w.s 			page 73


 995 0006 0022     		movs	r2, #0
 996 0008 1A70     		strb	r2, [r3]
 296:../Src/smtc_hal/smtc_hal_mcu.c ****     hal_lp_current_mode = LOW_POWER_ENABLE;
 997              		.loc 3 296 25
 998 000a 054B     		ldr	r3, .L43+4
 999 000c 0022     		movs	r2, #0
 1000 000e 1A70     		strb	r2, [r3]
 297:../Src/smtc_hal/smtc_hal_mcu.c **** }
 1001              		.loc 3 297 1
 1002 0010 00BF     		nop
 1003 0012 BD46     		mov	sp, r7
 1004              	.LCFI69:
 1005              		.cfi_def_cfa_register 13
 1006              		@ sp needed
 1007 0014 5DF8047B 		ldr	r7, [sp], #4
 1008              	.LCFI70:
 1009              		.cfi_restore 7
 1010              		.cfi_def_cfa_offset 0
 1011 0018 7047     		bx	lr
 1012              	.L44:
 1013 001a 00BF     		.align	2
 1014              	.L43:
 1015 001c 00000000 		.word	hal_exit_wait
 1016 0020 00000000 		.word	hal_lp_current_mode
 1017              		.cfi_endproc
 1018              	.LFE612:
 1020              		.section	.text.hal_mcu_disable_once_low_power_wait,"ax",%progbits
 1021              		.align	1
 1022              		.global	hal_mcu_disable_once_low_power_wait
 1023              		.syntax unified
 1024              		.thumb
 1025              		.thumb_func
 1026              		.fpu fpv4-sp-d16
 1028              	hal_mcu_disable_once_low_power_wait:
 1029              	.LFB613:
 298:../Src/smtc_hal/smtc_hal_mcu.c **** 
 299:../Src/smtc_hal/smtc_hal_mcu.c **** void hal_mcu_disable_once_low_power_wait( void )
 300:../Src/smtc_hal/smtc_hal_mcu.c **** {
 1030              		.loc 3 300 1
 1031              		.cfi_startproc
 1032              		@ args = 0, pretend = 0, frame = 0
 1033              		@ frame_needed = 1, uses_anonymous_args = 0
 1034              		@ link register save eliminated.
 1035 0000 80B4     		push	{r7}
 1036              	.LCFI71:
 1037              		.cfi_def_cfa_offset 4
 1038              		.cfi_offset 7, -4
 1039 0002 00AF     		add	r7, sp, #0
 1040              	.LCFI72:
 1041              		.cfi_def_cfa_register 7
 301:../Src/smtc_hal/smtc_hal_mcu.c ****     hal_exit_wait       = true;
 1042              		.loc 3 301 25
 1043 0004 054B     		ldr	r3, .L46
 1044 0006 0122     		movs	r2, #1
 1045 0008 1A70     		strb	r2, [r3]
 302:../Src/smtc_hal/smtc_hal_mcu.c ****     hal_lp_current_mode = LOW_POWER_DISABLE_ONCE;
 1046              		.loc 3 302 25
ARM GAS  /tmp/ccwAxJ3w.s 			page 74


 1047 000a 054B     		ldr	r3, .L46+4
 1048 000c 0222     		movs	r2, #2
 1049 000e 1A70     		strb	r2, [r3]
 303:../Src/smtc_hal/smtc_hal_mcu.c **** }
 1050              		.loc 3 303 1
 1051 0010 00BF     		nop
 1052 0012 BD46     		mov	sp, r7
 1053              	.LCFI73:
 1054              		.cfi_def_cfa_register 13
 1055              		@ sp needed
 1056 0014 5DF8047B 		ldr	r7, [sp], #4
 1057              	.LCFI74:
 1058              		.cfi_restore 7
 1059              		.cfi_def_cfa_offset 0
 1060 0018 7047     		bx	lr
 1061              	.L47:
 1062 001a 00BF     		.align	2
 1063              	.L46:
 1064 001c 00000000 		.word	hal_exit_wait
 1065 0020 00000000 		.word	hal_lp_current_mode
 1066              		.cfi_endproc
 1067              	.LFE613:
 1069              		.section	.text.SysTick_Handler,"ax",%progbits
 1070              		.align	1
 1071              		.global	SysTick_Handler
 1072              		.syntax unified
 1073              		.thumb
 1074              		.thumb_func
 1075              		.fpu fpv4-sp-d16
 1077              	SysTick_Handler:
 1078              	.LFB614:
 304:../Src/smtc_hal/smtc_hal_mcu.c **** 
 305:../Src/smtc_hal/smtc_hal_mcu.c **** void SysTick_Handler( void )
 306:../Src/smtc_hal/smtc_hal_mcu.c **** {
 1079              		.loc 3 306 1
 1080              		.cfi_startproc
 1081              		@ args = 0, pretend = 0, frame = 0
 1082              		@ frame_needed = 1, uses_anonymous_args = 0
 1083 0000 80B5     		push	{r7, lr}
 1084              	.LCFI75:
 1085              		.cfi_def_cfa_offset 8
 1086              		.cfi_offset 7, -8
 1087              		.cfi_offset 14, -4
 1088 0002 00AF     		add	r7, sp, #0
 1089              	.LCFI76:
 1090              		.cfi_def_cfa_register 7
 307:../Src/smtc_hal/smtc_hal_mcu.c ****     HAL_IncTick( );
 1091              		.loc 3 307 5
 1092 0004 FFF7FEFF 		bl	HAL_IncTick
 308:../Src/smtc_hal/smtc_hal_mcu.c ****     HAL_SYSTICK_IRQHandler( );
 1093              		.loc 3 308 5
 1094 0008 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
 309:../Src/smtc_hal/smtc_hal_mcu.c **** }
 1095              		.loc 3 309 1
 1096 000c 00BF     		nop
 1097 000e 80BD     		pop	{r7, pc}
 1098              		.cfi_endproc
ARM GAS  /tmp/ccwAxJ3w.s 			page 75


 1099              	.LFE614:
 1101              		.section	.text.hal_mcu_trace_print,"ax",%progbits
 1102              		.align	1
 1103              		.global	hal_mcu_trace_print
 1104              		.syntax unified
 1105              		.thumb
 1106              		.thumb_func
 1107              		.fpu fpv4-sp-d16
 1109              	hal_mcu_trace_print:
 1110              	.LFB615:
 310:../Src/smtc_hal/smtc_hal_mcu.c **** 
 311:../Src/smtc_hal/smtc_hal_mcu.c **** void hal_mcu_trace_print( const char* fmt, ... )
 312:../Src/smtc_hal/smtc_hal_mcu.c **** {
 1111              		.loc 3 312 1
 1112              		.cfi_startproc
 1113              		@ args = 4, pretend = 16, frame = 8
 1114              		@ frame_needed = 1, uses_anonymous_args = 1
 1115 0000 0FB4     		push	{r0, r1, r2, r3}
 1116              	.LCFI77:
 1117              		.cfi_def_cfa_offset 16
 1118              		.cfi_offset 0, -16
 1119              		.cfi_offset 1, -12
 1120              		.cfi_offset 2, -8
 1121              		.cfi_offset 3, -4
 1122 0002 80B5     		push	{r7, lr}
 1123              	.LCFI78:
 1124              		.cfi_def_cfa_offset 24
 1125              		.cfi_offset 7, -24
 1126              		.cfi_offset 14, -20
 1127 0004 82B0     		sub	sp, sp, #8
 1128              	.LCFI79:
 1129              		.cfi_def_cfa_offset 32
 1130 0006 00AF     		add	r7, sp, #0
 1131              	.LCFI80:
 1132              		.cfi_def_cfa_register 7
 313:../Src/smtc_hal/smtc_hal_mcu.c **** #if HAL_DBG_TRACE == HAL_FEATURE_ON
 314:../Src/smtc_hal/smtc_hal_mcu.c ****     va_list argp;
 315:../Src/smtc_hal/smtc_hal_mcu.c ****     va_start( argp, fmt );
 1133              		.loc 3 315 5
 1134 0008 07F11403 		add	r3, r7, #20
 1135 000c 7B60     		str	r3, [r7, #4]
 316:../Src/smtc_hal/smtc_hal_mcu.c ****     vprint( fmt, argp );
 1136              		.loc 3 316 5
 1137 000e 7968     		ldr	r1, [r7, #4]
 1138 0010 3869     		ldr	r0, [r7, #16]
 1139 0012 FFF7FEFF 		bl	vprint
 317:../Src/smtc_hal/smtc_hal_mcu.c ****     va_end( argp );
 318:../Src/smtc_hal/smtc_hal_mcu.c **** #endif
 319:../Src/smtc_hal/smtc_hal_mcu.c **** }
 1140              		.loc 3 319 1
 1141 0016 00BF     		nop
 1142 0018 0837     		adds	r7, r7, #8
 1143              	.LCFI81:
 1144              		.cfi_def_cfa_offset 24
 1145 001a BD46     		mov	sp, r7
 1146              	.LCFI82:
 1147              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccwAxJ3w.s 			page 76


 1148              		@ sp needed
 1149 001c BDE88040 		pop	{r7, lr}
 1150              	.LCFI83:
 1151              		.cfi_restore 14
 1152              		.cfi_restore 7
 1153              		.cfi_def_cfa_offset 16
 1154 0020 04B0     		add	sp, sp, #16
 1155              	.LCFI84:
 1156              		.cfi_restore 3
 1157              		.cfi_restore 2
 1158              		.cfi_restore 1
 1159              		.cfi_restore 0
 1160              		.cfi_def_cfa_offset 0
 1161 0022 7047     		bx	lr
 1162              		.cfi_endproc
 1163              	.LFE615:
 1165              		.section	.text.hal_mcu_partial_sleep_enable,"ax",%progbits
 1166              		.align	1
 1167              		.global	hal_mcu_partial_sleep_enable
 1168              		.syntax unified
 1169              		.thumb
 1170              		.thumb_func
 1171              		.fpu fpv4-sp-d16
 1173              	hal_mcu_partial_sleep_enable:
 1174              	.LFB616:
 320:../Src/smtc_hal/smtc_hal_mcu.c **** 
 321:../Src/smtc_hal/smtc_hal_mcu.c **** #ifdef USE_FULL_ASSERT
 322:../Src/smtc_hal/smtc_hal_mcu.c **** /*
 323:../Src/smtc_hal/smtc_hal_mcu.c ****  * Function Name  : assert_failed
 324:../Src/smtc_hal/smtc_hal_mcu.c ****  * Description    : Reports the name of the source file and the source line
 325:../Src/smtc_hal/smtc_hal_mcu.c ****  * number where the assert_param error has occurred. Input          : - file:
 326:../Src/smtc_hal/smtc_hal_mcu.c ****  * pointer to the source file name
 327:../Src/smtc_hal/smtc_hal_mcu.c ****  *                  - line: assert_param error line source number
 328:../Src/smtc_hal/smtc_hal_mcu.c ****  * Output         : None
 329:../Src/smtc_hal/smtc_hal_mcu.c ****  * Return         : None
 330:../Src/smtc_hal/smtc_hal_mcu.c ****  */
 331:../Src/smtc_hal/smtc_hal_mcu.c **** void assert_failed( uint8_t* file, uint32_t line )
 332:../Src/smtc_hal/smtc_hal_mcu.c **** {
 333:../Src/smtc_hal/smtc_hal_mcu.c ****     /* User can add his own implementation to report the file name and line
 334:../Src/smtc_hal/smtc_hal_mcu.c ****        number,
 335:../Src/smtc_hal/smtc_hal_mcu.c ****        ex: printf("Wrong parameters value: file %s on line %lu\r\n", file, line) */
 336:../Src/smtc_hal/smtc_hal_mcu.c **** 
 337:../Src/smtc_hal/smtc_hal_mcu.c ****     HAL_DBG_TRACE_PRINTF( "Wrong parameters value: file %s on line %lu\r\n", ( const char* ) file, 
 338:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Infinite loop */
 339:../Src/smtc_hal/smtc_hal_mcu.c ****     while( 1 )
 340:../Src/smtc_hal/smtc_hal_mcu.c ****     {
 341:../Src/smtc_hal/smtc_hal_mcu.c ****     }
 342:../Src/smtc_hal/smtc_hal_mcu.c **** }
 343:../Src/smtc_hal/smtc_hal_mcu.c **** #endif
 344:../Src/smtc_hal/smtc_hal_mcu.c **** 
 345:../Src/smtc_hal/smtc_hal_mcu.c **** void hal_mcu_partial_sleep_enable( bool enable ) { partial_sleep_enable = enable; }
 1175              		.loc 3 345 50
 1176              		.cfi_startproc
 1177              		@ args = 0, pretend = 0, frame = 8
 1178              		@ frame_needed = 1, uses_anonymous_args = 0
 1179              		@ link register save eliminated.
 1180 0000 80B4     		push	{r7}
ARM GAS  /tmp/ccwAxJ3w.s 			page 77


 1181              	.LCFI85:
 1182              		.cfi_def_cfa_offset 4
 1183              		.cfi_offset 7, -4
 1184 0002 83B0     		sub	sp, sp, #12
 1185              	.LCFI86:
 1186              		.cfi_def_cfa_offset 16
 1187 0004 00AF     		add	r7, sp, #0
 1188              	.LCFI87:
 1189              		.cfi_def_cfa_register 7
 1190 0006 0346     		mov	r3, r0
 1191 0008 FB71     		strb	r3, [r7, #7]
 1192              		.loc 3 345 73
 1193 000a 044A     		ldr	r2, .L51
 1194 000c FB79     		ldrb	r3, [r7, #7]
 1195 000e 1370     		strb	r3, [r2]
 1196              		.loc 3 345 83
 1197 0010 00BF     		nop
 1198 0012 0C37     		adds	r7, r7, #12
 1199              	.LCFI88:
 1200              		.cfi_def_cfa_offset 4
 1201 0014 BD46     		mov	sp, r7
 1202              	.LCFI89:
 1203              		.cfi_def_cfa_register 13
 1204              		@ sp needed
 1205 0016 5DF8047B 		ldr	r7, [sp], #4
 1206              	.LCFI90:
 1207              		.cfi_restore 7
 1208              		.cfi_def_cfa_offset 0
 1209 001a 7047     		bx	lr
 1210              	.L52:
 1211              		.align	2
 1212              	.L51:
 1213 001c 00000000 		.word	partial_sleep_enable
 1214              		.cfi_endproc
 1215              	.LFE616:
 1217              		.section	.text.hal_mcu_system_clock_config,"ax",%progbits
 1218              		.align	1
 1219              		.syntax unified
 1220              		.thumb
 1221              		.thumb_func
 1222              		.fpu fpv4-sp-d16
 1224              	hal_mcu_system_clock_config:
 1225              	.LFB617:
 346:../Src/smtc_hal/smtc_hal_mcu.c **** 
 347:../Src/smtc_hal/smtc_hal_mcu.c **** /*
 348:../Src/smtc_hal/smtc_hal_mcu.c ****  * -----------------------------------------------------------------------------
 349:../Src/smtc_hal/smtc_hal_mcu.c ****  * --- PRIVATE FUNCTIONS DEFINITION --------------------------------------------
 350:../Src/smtc_hal/smtc_hal_mcu.c ****  */
 351:../Src/smtc_hal/smtc_hal_mcu.c **** 
 352:../Src/smtc_hal/smtc_hal_mcu.c **** static void hal_mcu_system_clock_config( void )
 353:../Src/smtc_hal/smtc_hal_mcu.c **** {
 1226              		.loc 3 353 1
 1227              		.cfi_startproc
 1228              		@ args = 0, pretend = 0, frame = 232
 1229              		@ frame_needed = 1, uses_anonymous_args = 0
 1230 0000 80B5     		push	{r7, lr}
 1231              	.LCFI91:
ARM GAS  /tmp/ccwAxJ3w.s 			page 78


 1232              		.cfi_def_cfa_offset 8
 1233              		.cfi_offset 7, -8
 1234              		.cfi_offset 14, -4
 1235 0002 BAB0     		sub	sp, sp, #232
 1236              	.LCFI92:
 1237              		.cfi_def_cfa_offset 240
 1238 0004 00AF     		add	r7, sp, #0
 1239              	.LCFI93:
 1240              		.cfi_def_cfa_register 7
 1241              	.LBB39:
 354:../Src/smtc_hal/smtc_hal_mcu.c ****     RCC_OscInitTypeDef       rcc_osc_init;
 355:../Src/smtc_hal/smtc_hal_mcu.c ****     RCC_ClkInitTypeDef       rcc_clk_init;
 356:../Src/smtc_hal/smtc_hal_mcu.c ****     RCC_PeriphCLKInitTypeDef periph_clk_init;
 357:../Src/smtc_hal/smtc_hal_mcu.c **** 
 358:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Configure the main internal regulator output voltage */
 359:../Src/smtc_hal/smtc_hal_mcu.c ****     __HAL_RCC_PWR_CLK_ENABLE( );
 1242              		.loc 3 359 5
 1243 0006 474B     		ldr	r3, .L54
 1244 0008 9B6D     		ldr	r3, [r3, #88]
 1245 000a 464A     		ldr	r2, .L54
 1246 000c 43F08053 		orr	r3, r3, #268435456
 1247 0010 9365     		str	r3, [r2, #88]
 1248 0012 444B     		ldr	r3, .L54
 1249 0014 9B6D     		ldr	r3, [r3, #88]
 1250 0016 03F08053 		and	r3, r3, #268435456
 1251 001a 7B60     		str	r3, [r7, #4]
 1252 001c 7B68     		ldr	r3, [r7, #4]
 1253              	.LBE39:
 1254              	.LBB40:
 360:../Src/smtc_hal/smtc_hal_mcu.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG( PWR_REGULATOR_VOLTAGE_SCALE1 );
 1255              		.loc 3 360 5
 1256 001e 424B     		ldr	r3, .L54+4
 1257 0020 1B68     		ldr	r3, [r3]
 1258 0022 23F4C063 		bic	r3, r3, #1536
 1259 0026 404A     		ldr	r2, .L54+4
 1260 0028 43F40073 		orr	r3, r3, #512
 1261 002c 1360     		str	r3, [r2]
 1262 002e 3E4B     		ldr	r3, .L54+4
 1263 0030 1B68     		ldr	r3, [r3]
 1264 0032 03F4C063 		and	r3, r3, #1536
 1265 0036 3B60     		str	r3, [r7]
 1266 0038 3B68     		ldr	r3, [r7]
 1267              	.LBE40:
 361:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Ensure that MSI is wake-up system clock */
 362:../Src/smtc_hal/smtc_hal_mcu.c ****     __HAL_RCC_WAKEUPSTOP_CLK_CONFIG( RCC_STOP_WAKEUPCLOCK_MSI );
 1268              		.loc 3 362 5
 1269 003a 3A4B     		ldr	r3, .L54
 1270 003c 9B68     		ldr	r3, [r3, #8]
 1271 003e 394A     		ldr	r2, .L54
 1272 0040 23F40043 		bic	r3, r3, #32768
 1273 0044 9360     		str	r3, [r2, #8]
 363:../Src/smtc_hal/smtc_hal_mcu.c **** 
 364:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Initializes the CPU, AHB and APB busses clocks */
 365:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_osc_init.OscillatorType      = RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_MSI | RCC_OSCILL
 1274              		.loc 3 365 38
 1275 0046 1623     		movs	r3, #22
 1276 0048 C7F8A430 		str	r3, [r7, #164]
ARM GAS  /tmp/ccwAxJ3w.s 			page 79


 366:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_osc_init.MSIState            = RCC_MSI_ON;
 1277              		.loc 3 366 38
 1278 004c 0123     		movs	r3, #1
 1279 004e C7F8BC30 		str	r3, [r7, #188]
 367:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_osc_init.HSEState            = RCC_HSE_OFF;
 1280              		.loc 3 367 38
 1281 0052 0023     		movs	r3, #0
 1282 0054 C7F8A830 		str	r3, [r7, #168]
 368:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_osc_init.HSIState            = RCC_HSI_OFF;
 1283              		.loc 3 368 38
 1284 0058 0023     		movs	r3, #0
 1285 005a C7F8B030 		str	r3, [r7, #176]
 369:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_osc_init.LSEState            = RCC_LSE_ON;
 1286              		.loc 3 369 38
 1287 005e 0123     		movs	r3, #1
 1288 0060 C7F8AC30 		str	r3, [r7, #172]
 370:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_osc_init.LSIState            = RCC_LSI_OFF;
 1289              		.loc 3 370 38
 1290 0064 0023     		movs	r3, #0
 1291 0066 C7F8B830 		str	r3, [r7, #184]
 371:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_osc_init.MSICalibrationValue = RCC_MSICALIBRATION_DEFAULT;
 1292              		.loc 3 371 38
 1293 006a 0023     		movs	r3, #0
 1294 006c C7F8C030 		str	r3, [r7, #192]
 372:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_osc_init.MSIClockRange       = RCC_MSIRANGE_11;
 1295              		.loc 3 372 38
 1296 0070 B023     		movs	r3, #176
 1297 0072 C7F8C430 		str	r3, [r7, #196]
 373:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_osc_init.PLL.PLLState        = RCC_PLL_ON;
 1298              		.loc 3 373 38
 1299 0076 0223     		movs	r3, #2
 1300 0078 C7F8CC30 		str	r3, [r7, #204]
 374:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_osc_init.PLL.PLLSource       = RCC_PLLSOURCE_MSI;
 1301              		.loc 3 374 38
 1302 007c 0123     		movs	r3, #1
 1303 007e C7F8D030 		str	r3, [r7, #208]
 375:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_osc_init.PLL.PLLM            = 3;
 1304              		.loc 3 375 38
 1305 0082 0323     		movs	r3, #3
 1306 0084 C7F8D430 		str	r3, [r7, #212]
 376:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_osc_init.PLL.PLLN            = 10;
 1307              		.loc 3 376 38
 1308 0088 0A23     		movs	r3, #10
 1309 008a C7F8D830 		str	r3, [r7, #216]
 377:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_osc_init.PLL.PLLP            = RCC_PLLP_DIV7;
 1310              		.loc 3 377 38
 1311 008e 0723     		movs	r3, #7
 1312 0090 C7F8DC30 		str	r3, [r7, #220]
 378:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_osc_init.PLL.PLLQ            = RCC_PLLQ_DIV2;
 1313              		.loc 3 378 38
 1314 0094 0223     		movs	r3, #2
 1315 0096 C7F8E030 		str	r3, [r7, #224]
 379:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_osc_init.PLL.PLLR            = RCC_PLLR_DIV2;
 1316              		.loc 3 379 38
 1317 009a 0223     		movs	r3, #2
 1318 009c C7F8E430 		str	r3, [r7, #228]
 380:../Src/smtc_hal/smtc_hal_mcu.c ****     if( HAL_RCC_OscConfig( &rcc_osc_init ) != HAL_OK )
ARM GAS  /tmp/ccwAxJ3w.s 			page 80


 1319              		.loc 3 380 9
 1320 00a0 07F1A403 		add	r3, r7, #164
 1321 00a4 1846     		mov	r0, r3
 1322 00a6 FFF7FEFF 		bl	HAL_RCC_OscConfig
 381:../Src/smtc_hal/smtc_hal_mcu.c ****     {
 382:../Src/smtc_hal/smtc_hal_mcu.c ****     }
 383:../Src/smtc_hal/smtc_hal_mcu.c **** 
 384:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Initializes the CPU, AHB and APB busses clocks */
 385:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_clk_init.ClockType      = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 |
 1323              		.loc 3 385 33
 1324 00aa 0F23     		movs	r3, #15
 1325 00ac C7F89030 		str	r3, [r7, #144]
 386:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_clk_init.SYSCLKSource   = RCC_SYSCLKSOURCE_PLLCLK;
 1326              		.loc 3 386 33
 1327 00b0 0323     		movs	r3, #3
 1328 00b2 C7F89430 		str	r3, [r7, #148]
 387:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_clk_init.AHBCLKDivider  = RCC_SYSCLK_DIV1;
 1329              		.loc 3 387 33
 1330 00b6 0023     		movs	r3, #0
 1331 00b8 C7F89830 		str	r3, [r7, #152]
 388:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_clk_init.APB1CLKDivider = RCC_HCLK_DIV1;
 1332              		.loc 3 388 33
 1333 00bc 0023     		movs	r3, #0
 1334 00be C7F89C30 		str	r3, [r7, #156]
 389:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_clk_init.APB2CLKDivider = RCC_HCLK_DIV1;
 1335              		.loc 3 389 33
 1336 00c2 0023     		movs	r3, #0
 1337 00c4 C7F8A030 		str	r3, [r7, #160]
 390:../Src/smtc_hal/smtc_hal_mcu.c **** 
 391:../Src/smtc_hal/smtc_hal_mcu.c ****     if( HAL_RCC_ClockConfig( &rcc_clk_init, FLASH_LATENCY_1 ) != HAL_OK )
 1338              		.loc 3 391 9
 1339 00c8 07F19003 		add	r3, r7, #144
 1340 00cc 0121     		movs	r1, #1
 1341 00ce 1846     		mov	r0, r3
 1342 00d0 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 392:../Src/smtc_hal/smtc_hal_mcu.c ****     {
 393:../Src/smtc_hal/smtc_hal_mcu.c ****     }
 394:../Src/smtc_hal/smtc_hal_mcu.c **** 
 395:../Src/smtc_hal/smtc_hal_mcu.c ****     periph_clk_init.PeriphClockSelection = RCC_PERIPHCLK_RTC | RCC_PERIPHCLK_USART2 | RCC_PERIPHCLK
 1343              		.loc 3 395 42
 1344 00d4 154B     		ldr	r3, .L54+8
 1345 00d6 BB60     		str	r3, [r7, #8]
 396:../Src/smtc_hal/smtc_hal_mcu.c ****     periph_clk_init.Lptim1ClockSelection = RCC_LPTIM1CLKSOURCE_LSE;
 1346              		.loc 3 396 42
 1347 00d8 4FF44023 		mov	r3, #786432
 1348 00dc 7B66     		str	r3, [r7, #100]
 397:../Src/smtc_hal/smtc_hal_mcu.c ****     periph_clk_init.RTCClockSelection    = RCC_RTCCLKSOURCE_LSE;
 1349              		.loc 3 397 42
 1350 00de 4FF48073 		mov	r3, #256
 1351 00e2 C7F88C30 		str	r3, [r7, #140]
 398:../Src/smtc_hal/smtc_hal_mcu.c ****     periph_clk_init.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 1352              		.loc 3 398 42
 1353 00e6 0023     		movs	r3, #0
 1354 00e8 7B64     		str	r3, [r7, #68]
 399:../Src/smtc_hal/smtc_hal_mcu.c ****     if( HAL_RCCEx_PeriphCLKConfig( &periph_clk_init ) != HAL_OK )
 1355              		.loc 3 399 9
 1356 00ea 07F10803 		add	r3, r7, #8
ARM GAS  /tmp/ccwAxJ3w.s 			page 81


 1357 00ee 1846     		mov	r0, r3
 1358 00f0 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 400:../Src/smtc_hal/smtc_hal_mcu.c ****     {
 401:../Src/smtc_hal/smtc_hal_mcu.c ****     }
 402:../Src/smtc_hal/smtc_hal_mcu.c **** 
 403:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Configure the Systick interrupt time */
 404:../Src/smtc_hal/smtc_hal_mcu.c ****     HAL_SYSTICK_Config( HAL_RCC_GetHCLKFreq( ) / 1000 );
 1359              		.loc 3 404 25
 1360 00f4 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1361 00f8 0346     		mov	r3, r0
 1362              		.loc 3 404 5
 1363 00fa 0D4A     		ldr	r2, .L54+12
 1364 00fc A2FB0323 		umull	r2, r3, r2, r3
 1365 0100 9B09     		lsrs	r3, r3, #6
 1366 0102 1846     		mov	r0, r3
 1367 0104 FFF7FEFF 		bl	HAL_SYSTICK_Config
 405:../Src/smtc_hal/smtc_hal_mcu.c **** 
 406:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Configure the Systick */
 407:../Src/smtc_hal/smtc_hal_mcu.c ****     HAL_SYSTICK_CLKSourceConfig( SYSTICK_CLKSOURCE_HCLK );
 1368              		.loc 3 407 5
 1369 0108 0420     		movs	r0, #4
 1370 010a FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 408:../Src/smtc_hal/smtc_hal_mcu.c **** 
 409:../Src/smtc_hal/smtc_hal_mcu.c ****     /* SysTick_IRQn interrupt configuration */
 410:../Src/smtc_hal/smtc_hal_mcu.c ****     HAL_NVIC_SetPriority( SysTick_IRQn, 0, 0 );
 1371              		.loc 3 410 5
 1372 010e 0022     		movs	r2, #0
 1373 0110 0021     		movs	r1, #0
 1374 0112 4FF0FF30 		mov	r0, #-1
 1375 0116 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 411:../Src/smtc_hal/smtc_hal_mcu.c **** }
 1376              		.loc 3 411 1
 1377 011a 00BF     		nop
 1378 011c E837     		adds	r7, r7, #232
 1379              	.LCFI94:
 1380              		.cfi_def_cfa_offset 8
 1381 011e BD46     		mov	sp, r7
 1382              	.LCFI95:
 1383              		.cfi_def_cfa_register 13
 1384              		@ sp needed
 1385 0120 80BD     		pop	{r7, pc}
 1386              	.L55:
 1387 0122 00BF     		.align	2
 1388              	.L54:
 1389 0124 00100240 		.word	1073876992
 1390 0128 00700040 		.word	1073770496
 1391 012c 02020200 		.word	131586
 1392 0130 D34D6210 		.word	274877907
 1393              		.cfi_endproc
 1394              	.LFE617:
 1396              		.section	.text.hal_mcu_pvd_config,"ax",%progbits
 1397              		.align	1
 1398              		.syntax unified
 1399              		.thumb
 1400              		.thumb_func
 1401              		.fpu fpv4-sp-d16
 1403              	hal_mcu_pvd_config:
ARM GAS  /tmp/ccwAxJ3w.s 			page 82


 1404              	.LFB618:
 412:../Src/smtc_hal/smtc_hal_mcu.c **** 
 413:../Src/smtc_hal/smtc_hal_mcu.c **** /*!
 414:../Src/smtc_hal/smtc_hal_mcu.c ****  * @brief  Programmable Voltage Detector (PVD) Configuration
 415:../Src/smtc_hal/smtc_hal_mcu.c ****  *         PVD set to level 6 for a threshold around 2.9V.
 416:../Src/smtc_hal/smtc_hal_mcu.c ****  * @param  None
 417:../Src/smtc_hal/smtc_hal_mcu.c ****  * @returns None
 418:../Src/smtc_hal/smtc_hal_mcu.c ****  */
 419:../Src/smtc_hal/smtc_hal_mcu.c **** static void hal_mcu_pvd_config( void )
 420:../Src/smtc_hal/smtc_hal_mcu.c **** {
 1405              		.loc 3 420 1
 1406              		.cfi_startproc
 1407              		@ args = 0, pretend = 0, frame = 8
 1408              		@ frame_needed = 1, uses_anonymous_args = 0
 1409 0000 80B5     		push	{r7, lr}
 1410              	.LCFI96:
 1411              		.cfi_def_cfa_offset 8
 1412              		.cfi_offset 7, -8
 1413              		.cfi_offset 14, -4
 1414 0002 82B0     		sub	sp, sp, #8
 1415              	.LCFI97:
 1416              		.cfi_def_cfa_offset 16
 1417 0004 00AF     		add	r7, sp, #0
 1418              	.LCFI98:
 1419              		.cfi_def_cfa_register 7
 421:../Src/smtc_hal/smtc_hal_mcu.c ****     PWR_PVDTypeDef sConfigPVD;
 422:../Src/smtc_hal/smtc_hal_mcu.c ****     sConfigPVD.PVDLevel = PWR_PVDLEVEL_1;
 1420              		.loc 3 422 25
 1421 0006 0223     		movs	r3, #2
 1422 0008 3B60     		str	r3, [r7]
 423:../Src/smtc_hal/smtc_hal_mcu.c ****     sConfigPVD.Mode     = PWR_PVD_MODE_IT_RISING;
 1423              		.loc 3 423 25
 1424 000a 4FF00113 		mov	r3, #65537
 1425 000e 7B60     		str	r3, [r7, #4]
 424:../Src/smtc_hal/smtc_hal_mcu.c ****     if( HAL_PWR_ConfigPVD( &sConfigPVD ) != HAL_OK )
 1426              		.loc 3 424 9
 1427 0010 3B46     		mov	r3, r7
 1428 0012 1846     		mov	r0, r3
 1429 0014 FFF7FEFF 		bl	HAL_PWR_ConfigPVD
 425:../Src/smtc_hal/smtc_hal_mcu.c ****     {
 426:../Src/smtc_hal/smtc_hal_mcu.c ****         assert_param( SMTC_FAIL );
 427:../Src/smtc_hal/smtc_hal_mcu.c ****     }
 428:../Src/smtc_hal/smtc_hal_mcu.c **** 
 429:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Enable PVD */
 430:../Src/smtc_hal/smtc_hal_mcu.c ****     HAL_PWR_EnablePVD( );
 1430              		.loc 3 430 5
 1431 0018 FFF7FEFF 		bl	HAL_PWR_EnablePVD
 431:../Src/smtc_hal/smtc_hal_mcu.c **** 
 432:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Enable and set PVD Interrupt priority */
 433:../Src/smtc_hal/smtc_hal_mcu.c ****     HAL_NVIC_SetPriority( PVD_PVM_IRQn, 0, 0 );
 1432              		.loc 3 433 5
 1433 001c 0022     		movs	r2, #0
 1434 001e 0021     		movs	r1, #0
 1435 0020 0120     		movs	r0, #1
 1436 0022 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 434:../Src/smtc_hal/smtc_hal_mcu.c ****     HAL_NVIC_EnableIRQ( PVD_PVM_IRQn );
 1437              		.loc 3 434 5
ARM GAS  /tmp/ccwAxJ3w.s 			page 83


 1438 0026 0120     		movs	r0, #1
 1439 0028 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 435:../Src/smtc_hal/smtc_hal_mcu.c **** }
 1440              		.loc 3 435 1
 1441 002c 00BF     		nop
 1442 002e 0837     		adds	r7, r7, #8
 1443              	.LCFI99:
 1444              		.cfi_def_cfa_offset 8
 1445 0030 BD46     		mov	sp, r7
 1446              	.LCFI100:
 1447              		.cfi_def_cfa_register 13
 1448              		@ sp needed
 1449 0032 80BD     		pop	{r7, pc}
 1450              		.cfi_endproc
 1451              	.LFE618:
 1453              		.section	.text.hal_mcu_gpio_init,"ax",%progbits
 1454              		.align	1
 1455              		.syntax unified
 1456              		.thumb
 1457              		.thumb_func
 1458              		.fpu fpv4-sp-d16
 1460              	hal_mcu_gpio_init:
 1461              	.LFB619:
 436:../Src/smtc_hal/smtc_hal_mcu.c **** 
 437:../Src/smtc_hal/smtc_hal_mcu.c **** static void hal_mcu_gpio_init( void )
 438:../Src/smtc_hal/smtc_hal_mcu.c **** {
 1462              		.loc 3 438 1
 1463              		.cfi_startproc
 1464              		@ args = 0, pretend = 0, frame = 24
 1465              		@ frame_needed = 1, uses_anonymous_args = 0
 1466 0000 80B5     		push	{r7, lr}
 1467              	.LCFI101:
 1468              		.cfi_def_cfa_offset 8
 1469              		.cfi_offset 7, -8
 1470              		.cfi_offset 14, -4
 1471 0002 86B0     		sub	sp, sp, #24
 1472              	.LCFI102:
 1473              		.cfi_def_cfa_offset 32
 1474 0004 00AF     		add	r7, sp, #0
 1475              	.LCFI103:
 1476              		.cfi_def_cfa_register 7
 1477              	.LBB41:
 439:../Src/smtc_hal/smtc_hal_mcu.c ****     /* GPIO Ports Clock Enable */
 440:../Src/smtc_hal/smtc_hal_mcu.c ****     __HAL_RCC_GPIOA_CLK_ENABLE( );
 1478              		.loc 3 440 5
 1479 0006 234B     		ldr	r3, .L58
 1480 0008 DB6C     		ldr	r3, [r3, #76]
 1481 000a 224A     		ldr	r2, .L58
 1482 000c 43F00103 		orr	r3, r3, #1
 1483 0010 D364     		str	r3, [r2, #76]
 1484 0012 204B     		ldr	r3, .L58
 1485 0014 DB6C     		ldr	r3, [r3, #76]
 1486 0016 03F00103 		and	r3, r3, #1
 1487 001a 7B61     		str	r3, [r7, #20]
 1488 001c 7B69     		ldr	r3, [r7, #20]
 1489              	.LBE41:
 1490              	.LBB42:
ARM GAS  /tmp/ccwAxJ3w.s 			page 84


 441:../Src/smtc_hal/smtc_hal_mcu.c ****     __HAL_RCC_GPIOB_CLK_ENABLE( );
 1491              		.loc 3 441 5
 1492 001e 1D4B     		ldr	r3, .L58
 1493 0020 DB6C     		ldr	r3, [r3, #76]
 1494 0022 1C4A     		ldr	r2, .L58
 1495 0024 43F00203 		orr	r3, r3, #2
 1496 0028 D364     		str	r3, [r2, #76]
 1497 002a 1A4B     		ldr	r3, .L58
 1498 002c DB6C     		ldr	r3, [r3, #76]
 1499 002e 03F00203 		and	r3, r3, #2
 1500 0032 3B61     		str	r3, [r7, #16]
 1501 0034 3B69     		ldr	r3, [r7, #16]
 1502              	.LBE42:
 1503              	.LBB43:
 442:../Src/smtc_hal/smtc_hal_mcu.c ****     __HAL_RCC_GPIOC_CLK_ENABLE( );
 1504              		.loc 3 442 5
 1505 0036 174B     		ldr	r3, .L58
 1506 0038 DB6C     		ldr	r3, [r3, #76]
 1507 003a 164A     		ldr	r2, .L58
 1508 003c 43F00403 		orr	r3, r3, #4
 1509 0040 D364     		str	r3, [r2, #76]
 1510 0042 144B     		ldr	r3, .L58
 1511 0044 DB6C     		ldr	r3, [r3, #76]
 1512 0046 03F00403 		and	r3, r3, #4
 1513 004a FB60     		str	r3, [r7, #12]
 1514 004c FB68     		ldr	r3, [r7, #12]
 1515              	.LBE43:
 1516              	.LBB44:
 443:../Src/smtc_hal/smtc_hal_mcu.c ****     __HAL_RCC_GPIOD_CLK_ENABLE( );
 1517              		.loc 3 443 5
 1518 004e 114B     		ldr	r3, .L58
 1519 0050 DB6C     		ldr	r3, [r3, #76]
 1520 0052 104A     		ldr	r2, .L58
 1521 0054 43F00803 		orr	r3, r3, #8
 1522 0058 D364     		str	r3, [r2, #76]
 1523 005a 0E4B     		ldr	r3, .L58
 1524 005c DB6C     		ldr	r3, [r3, #76]
 1525 005e 03F00803 		and	r3, r3, #8
 1526 0062 BB60     		str	r3, [r7, #8]
 1527 0064 BB68     		ldr	r3, [r7, #8]
 1528              	.LBE44:
 1529              	.LBB45:
 444:../Src/smtc_hal/smtc_hal_mcu.c ****     __HAL_RCC_GPIOH_CLK_ENABLE( );
 1530              		.loc 3 444 5
 1531 0066 0B4B     		ldr	r3, .L58
 1532 0068 DB6C     		ldr	r3, [r3, #76]
 1533 006a 0A4A     		ldr	r2, .L58
 1534 006c 43F08003 		orr	r3, r3, #128
 1535 0070 D364     		str	r3, [r2, #76]
 1536 0072 084B     		ldr	r3, .L58
 1537 0074 DB6C     		ldr	r3, [r3, #76]
 1538 0076 03F08003 		and	r3, r3, #128
 1539 007a 7B60     		str	r3, [r7, #4]
 1540 007c 7B68     		ldr	r3, [r7, #4]
 1541              	.LBE45:
 445:../Src/smtc_hal/smtc_hal_mcu.c **** 
 446:../Src/smtc_hal/smtc_hal_mcu.c **** #if( HAL_HW_DEBUG_PROBE == HAL_FEATURE_ON )
ARM GAS  /tmp/ccwAxJ3w.s 			page 85


 447:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Enable debug in sleep/stop/standby */
 448:../Src/smtc_hal/smtc_hal_mcu.c ****     HAL_DBGMCU_EnableDBGSleepMode( );
 449:../Src/smtc_hal/smtc_hal_mcu.c ****     HAL_DBGMCU_EnableDBGStopMode( );
 450:../Src/smtc_hal/smtc_hal_mcu.c ****     HAL_DBGMCU_EnableDBGStandbyMode( );
 451:../Src/smtc_hal/smtc_hal_mcu.c **** #else
 452:../Src/smtc_hal/smtc_hal_mcu.c ****     HAL_DBGMCU_DisableDBGSleepMode( );
 1542              		.loc 3 452 5
 1543 007e FFF7FEFF 		bl	HAL_DBGMCU_DisableDBGSleepMode
 453:../Src/smtc_hal/smtc_hal_mcu.c ****     HAL_DBGMCU_DisableDBGStopMode( );
 1544              		.loc 3 453 5
 1545 0082 FFF7FEFF 		bl	HAL_DBGMCU_DisableDBGStopMode
 454:../Src/smtc_hal/smtc_hal_mcu.c ****     HAL_DBGMCU_DisableDBGStandbyMode( );
 1546              		.loc 3 454 5
 1547 0086 FFF7FEFF 		bl	HAL_DBGMCU_DisableDBGStandbyMode
 455:../Src/smtc_hal/smtc_hal_mcu.c **** #endif
 456:../Src/smtc_hal/smtc_hal_mcu.c **** }
 1548              		.loc 3 456 1
 1549 008a 00BF     		nop
 1550 008c 1837     		adds	r7, r7, #24
 1551              	.LCFI104:
 1552              		.cfi_def_cfa_offset 8
 1553 008e BD46     		mov	sp, r7
 1554              	.LCFI105:
 1555              		.cfi_def_cfa_register 13
 1556              		@ sp needed
 1557 0090 80BD     		pop	{r7, pc}
 1558              	.L59:
 1559 0092 00BF     		.align	2
 1560              	.L58:
 1561 0094 00100240 		.word	1073876992
 1562              		.cfi_endproc
 1563              	.LFE619:
 1565              		.section	.text.HAL_MspInit,"ax",%progbits
 1566              		.align	1
 1567              		.global	HAL_MspInit
 1568              		.syntax unified
 1569              		.thumb
 1570              		.thumb_func
 1571              		.fpu fpv4-sp-d16
 1573              	HAL_MspInit:
 1574              	.LFB620:
 457:../Src/smtc_hal/smtc_hal_mcu.c **** 
 458:../Src/smtc_hal/smtc_hal_mcu.c **** #ifdef HAL_MCU_GPIO_DEINIT
 459:../Src/smtc_hal/smtc_hal_mcu.c **** static void hal_mcu_gpio_deinit( void )
 460:../Src/smtc_hal/smtc_hal_mcu.c **** {
 461:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Disable GPIOs clock */
 462:../Src/smtc_hal/smtc_hal_mcu.c ****     __HAL_RCC_GPIOA_CLK_DISABLE( );
 463:../Src/smtc_hal/smtc_hal_mcu.c ****     __HAL_RCC_GPIOB_CLK_DISABLE( );
 464:../Src/smtc_hal/smtc_hal_mcu.c ****     __HAL_RCC_GPIOC_CLK_DISABLE( );
 465:../Src/smtc_hal/smtc_hal_mcu.c ****     __HAL_RCC_GPIOD_CLK_DISABLE( );
 466:../Src/smtc_hal/smtc_hal_mcu.c ****     __HAL_RCC_GPIOE_CLK_DISABLE( );
 467:../Src/smtc_hal/smtc_hal_mcu.c ****     __HAL_RCC_GPIOH_CLK_DISABLE( );
 468:../Src/smtc_hal/smtc_hal_mcu.c **** }
 469:../Src/smtc_hal/smtc_hal_mcu.c **** #endif
 470:../Src/smtc_hal/smtc_hal_mcu.c **** 
 471:../Src/smtc_hal/smtc_hal_mcu.c **** void HAL_MspInit( void )
 472:../Src/smtc_hal/smtc_hal_mcu.c **** {
ARM GAS  /tmp/ccwAxJ3w.s 			page 86


 1575              		.loc 3 472 1
 1576              		.cfi_startproc
 1577              		@ args = 0, pretend = 0, frame = 8
 1578              		@ frame_needed = 1, uses_anonymous_args = 0
 1579 0000 80B5     		push	{r7, lr}
 1580              	.LCFI106:
 1581              		.cfi_def_cfa_offset 8
 1582              		.cfi_offset 7, -8
 1583              		.cfi_offset 14, -4
 1584 0002 82B0     		sub	sp, sp, #8
 1585              	.LCFI107:
 1586              		.cfi_def_cfa_offset 16
 1587 0004 00AF     		add	r7, sp, #0
 1588              	.LCFI108:
 1589              		.cfi_def_cfa_register 7
 1590              	.LBB46:
 473:../Src/smtc_hal/smtc_hal_mcu.c ****     __HAL_RCC_SYSCFG_CLK_ENABLE( );
 1591              		.loc 3 473 5
 1592 0006 244B     		ldr	r3, .L61
 1593 0008 1B6E     		ldr	r3, [r3, #96]
 1594 000a 234A     		ldr	r2, .L61
 1595 000c 43F00103 		orr	r3, r3, #1
 1596 0010 1366     		str	r3, [r2, #96]
 1597 0012 214B     		ldr	r3, .L61
 1598 0014 1B6E     		ldr	r3, [r3, #96]
 1599 0016 03F00103 		and	r3, r3, #1
 1600 001a 7B60     		str	r3, [r7, #4]
 1601 001c 7B68     		ldr	r3, [r7, #4]
 1602              	.LBE46:
 1603              	.LBB47:
 474:../Src/smtc_hal/smtc_hal_mcu.c ****     __HAL_RCC_PWR_CLK_ENABLE( );
 1604              		.loc 3 474 5
 1605 001e 1E4B     		ldr	r3, .L61
 1606 0020 9B6D     		ldr	r3, [r3, #88]
 1607 0022 1D4A     		ldr	r2, .L61
 1608 0024 43F08053 		orr	r3, r3, #268435456
 1609 0028 9365     		str	r3, [r2, #88]
 1610 002a 1B4B     		ldr	r3, .L61
 1611 002c 9B6D     		ldr	r3, [r3, #88]
 1612 002e 03F08053 		and	r3, r3, #268435456
 1613 0032 3B60     		str	r3, [r7]
 1614 0034 3B68     		ldr	r3, [r7]
 1615              	.LBE47:
 475:../Src/smtc_hal/smtc_hal_mcu.c **** 
 476:../Src/smtc_hal/smtc_hal_mcu.c ****     HAL_NVIC_SetPriorityGrouping( NVIC_PRIORITYGROUP_4 );
 1616              		.loc 3 476 5
 1617 0036 0320     		movs	r0, #3
 1618 0038 FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 477:../Src/smtc_hal/smtc_hal_mcu.c **** 
 478:../Src/smtc_hal/smtc_hal_mcu.c ****     /* System interrupt init*/
 479:../Src/smtc_hal/smtc_hal_mcu.c ****     /* MemoryManagement_IRQn interrupt configuration */
 480:../Src/smtc_hal/smtc_hal_mcu.c ****     HAL_NVIC_SetPriority( MemoryManagement_IRQn, 0, 0 );
 1619              		.loc 3 480 5
 1620 003c 0022     		movs	r2, #0
 1621 003e 0021     		movs	r1, #0
 1622 0040 6FF00B00 		mvn	r0, #11
 1623 0044 FFF7FEFF 		bl	HAL_NVIC_SetPriority
ARM GAS  /tmp/ccwAxJ3w.s 			page 87


 481:../Src/smtc_hal/smtc_hal_mcu.c ****     /* BusFault_IRQn interrupt configuration */
 482:../Src/smtc_hal/smtc_hal_mcu.c ****     HAL_NVIC_SetPriority( BusFault_IRQn, 0, 0 );
 1624              		.loc 3 482 5
 1625 0048 0022     		movs	r2, #0
 1626 004a 0021     		movs	r1, #0
 1627 004c 6FF00A00 		mvn	r0, #10
 1628 0050 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 483:../Src/smtc_hal/smtc_hal_mcu.c ****     /* UsageFault_IRQn interrupt configuration */
 484:../Src/smtc_hal/smtc_hal_mcu.c ****     HAL_NVIC_SetPriority( UsageFault_IRQn, 0, 0 );
 1629              		.loc 3 484 5
 1630 0054 0022     		movs	r2, #0
 1631 0056 0021     		movs	r1, #0
 1632 0058 6FF00900 		mvn	r0, #9
 1633 005c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 485:../Src/smtc_hal/smtc_hal_mcu.c ****     /* SVCall_IRQn interrupt configuration */
 486:../Src/smtc_hal/smtc_hal_mcu.c ****     HAL_NVIC_SetPriority( SVCall_IRQn, 0, 0 );
 1634              		.loc 3 486 5
 1635 0060 0022     		movs	r2, #0
 1636 0062 0021     		movs	r1, #0
 1637 0064 6FF00400 		mvn	r0, #4
 1638 0068 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 487:../Src/smtc_hal/smtc_hal_mcu.c ****     /* DebugMonitor_IRQn interrupt configuration */
 488:../Src/smtc_hal/smtc_hal_mcu.c ****     HAL_NVIC_SetPriority( DebugMonitor_IRQn, 0, 0 );
 1639              		.loc 3 488 5
 1640 006c 0022     		movs	r2, #0
 1641 006e 0021     		movs	r1, #0
 1642 0070 6FF00300 		mvn	r0, #3
 1643 0074 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 489:../Src/smtc_hal/smtc_hal_mcu.c ****     /* PendSV_IRQn interrupt configuration */
 490:../Src/smtc_hal/smtc_hal_mcu.c ****     HAL_NVIC_SetPriority( PendSV_IRQn, 0, 0 );
 1644              		.loc 3 490 5
 1645 0078 0022     		movs	r2, #0
 1646 007a 0021     		movs	r1, #0
 1647 007c 6FF00100 		mvn	r0, #1
 1648 0080 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 491:../Src/smtc_hal/smtc_hal_mcu.c ****     /* SysTick_IRQn interrupt configuration */
 492:../Src/smtc_hal/smtc_hal_mcu.c ****     HAL_NVIC_SetPriority( SysTick_IRQn, 0, 0 );
 1649              		.loc 3 492 5
 1650 0084 0022     		movs	r2, #0
 1651 0086 0021     		movs	r1, #0
 1652 0088 4FF0FF30 		mov	r0, #-1
 1653 008c FFF7FEFF 		bl	HAL_NVIC_SetPriority
 493:../Src/smtc_hal/smtc_hal_mcu.c **** }
 1654              		.loc 3 493 1
 1655 0090 00BF     		nop
 1656 0092 0837     		adds	r7, r7, #8
 1657              	.LCFI109:
 1658              		.cfi_def_cfa_offset 8
 1659 0094 BD46     		mov	sp, r7
 1660              	.LCFI110:
 1661              		.cfi_def_cfa_register 13
 1662              		@ sp needed
 1663 0096 80BD     		pop	{r7, pc}
 1664              	.L62:
 1665              		.align	2
 1666              	.L61:
 1667 0098 00100240 		.word	1073876992
ARM GAS  /tmp/ccwAxJ3w.s 			page 88


 1668              		.cfi_endproc
 1669              	.LFE620:
 1671              		.section	.text.hal_mcu_lpm_enter_stop_mode,"ax",%progbits
 1672              		.align	1
 1673              		.syntax unified
 1674              		.thumb
 1675              		.thumb_func
 1676              		.fpu fpv4-sp-d16
 1678              	hal_mcu_lpm_enter_stop_mode:
 1679              	.LFB621:
 494:../Src/smtc_hal/smtc_hal_mcu.c **** 
 495:../Src/smtc_hal/smtc_hal_mcu.c **** /**
 496:../Src/smtc_hal/smtc_hal_mcu.c ****  * @brief Enters Low Power Stop Mode
 497:../Src/smtc_hal/smtc_hal_mcu.c ****  */
 498:../Src/smtc_hal/smtc_hal_mcu.c **** static void hal_mcu_lpm_enter_stop_mode( void )
 499:../Src/smtc_hal/smtc_hal_mcu.c **** {
 1680              		.loc 3 499 1
 1681              		.cfi_startproc
 1682              		@ args = 0, pretend = 0, frame = 8
 1683              		@ frame_needed = 1, uses_anonymous_args = 0
 1684 0000 80B5     		push	{r7, lr}
 1685              	.LCFI111:
 1686              		.cfi_def_cfa_offset 8
 1687              		.cfi_offset 7, -8
 1688              		.cfi_offset 14, -4
 1689 0002 82B0     		sub	sp, sp, #8
 1690              	.LCFI112:
 1691              		.cfi_def_cfa_offset 16
 1692 0004 00AF     		add	r7, sp, #0
 1693              	.LCFI113:
 1694              		.cfi_def_cfa_register 7
 500:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Disable IRQ while the MCU is not running on MSI */
 501:../Src/smtc_hal/smtc_hal_mcu.c ****     CRITICAL_SECTION_BEGIN( );
 1695              		.loc 3 501 5
 1696 0006 3B1D     		adds	r3, r7, #4
 1697 0008 1846     		mov	r0, r3
 1698 000a FFF7FEFF 		bl	hal_mcu_critical_section_begin
 502:../Src/smtc_hal/smtc_hal_mcu.c **** 
 503:../Src/smtc_hal/smtc_hal_mcu.c ****     if( partial_sleep_enable == true )
 1699              		.loc 3 503 30
 1700 000e 0B4B     		ldr	r3, .L66
 1701 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1702              		.loc 3 503 7
 1703 0012 002B     		cmp	r3, #0
 1704 0014 02D0     		beq	.L64
 504:../Src/smtc_hal/smtc_hal_mcu.c ****     {
 505:../Src/smtc_hal/smtc_hal_mcu.c ****         hal_mcu_deinit( );
 1705              		.loc 3 505 9
 1706 0016 FFF7FEFF 		bl	hal_mcu_deinit
 1707 001a 03E0     		b	.L65
 1708              	.L64:
 506:../Src/smtc_hal/smtc_hal_mcu.c ****     }
 507:../Src/smtc_hal/smtc_hal_mcu.c ****     else
 508:../Src/smtc_hal/smtc_hal_mcu.c ****     {
 509:../Src/smtc_hal/smtc_hal_mcu.c ****         hal_mcu_deinit_periph( );
 1709              		.loc 3 509 9
 1710 001c FFF7FEFF 		bl	hal_mcu_deinit_periph
ARM GAS  /tmp/ccwAxJ3w.s 			page 89


 510:../Src/smtc_hal/smtc_hal_mcu.c ****         hal_mcu_deinit( );
 1711              		.loc 3 510 9
 1712 0020 FFF7FEFF 		bl	hal_mcu_deinit
 1713              	.L65:
 511:../Src/smtc_hal/smtc_hal_mcu.c ****     }
 512:../Src/smtc_hal/smtc_hal_mcu.c **** 
 513:../Src/smtc_hal/smtc_hal_mcu.c ****     CRITICAL_SECTION_END( );
 1714              		.loc 3 513 5
 1715 0024 3B1D     		adds	r3, r7, #4
 1716 0026 1846     		mov	r0, r3
 1717 0028 FFF7FEFF 		bl	hal_mcu_critical_section_end
 514:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Enter Stop Mode */
 515:../Src/smtc_hal/smtc_hal_mcu.c ****     HAL_PWREx_EnterSTOP2Mode( PWR_STOPENTRY_WFI );
 1718              		.loc 3 515 5
 1719 002c 0120     		movs	r0, #1
 1720 002e FFF7FEFF 		bl	HAL_PWREx_EnterSTOP2Mode
 516:../Src/smtc_hal/smtc_hal_mcu.c **** }
 1721              		.loc 3 516 1
 1722 0032 00BF     		nop
 1723 0034 0837     		adds	r7, r7, #8
 1724              	.LCFI114:
 1725              		.cfi_def_cfa_offset 8
 1726 0036 BD46     		mov	sp, r7
 1727              	.LCFI115:
 1728              		.cfi_def_cfa_register 13
 1729              		@ sp needed
 1730 0038 80BD     		pop	{r7, pc}
 1731              	.L67:
 1732 003a 00BF     		.align	2
 1733              	.L66:
 1734 003c 00000000 		.word	partial_sleep_enable
 1735              		.cfi_endproc
 1736              	.LFE621:
 1738              		.section	.text.hal_mcu_lpm_exit_stop_mode,"ax",%progbits
 1739              		.align	1
 1740              		.syntax unified
 1741              		.thumb
 1742              		.thumb_func
 1743              		.fpu fpv4-sp-d16
 1745              	hal_mcu_lpm_exit_stop_mode:
 1746              	.LFB622:
 517:../Src/smtc_hal/smtc_hal_mcu.c **** 
 518:../Src/smtc_hal/smtc_hal_mcu.c **** /*!
 519:../Src/smtc_hal/smtc_hal_mcu.c ****  * @brief Exists Low Power Stop Mode
 520:../Src/smtc_hal/smtc_hal_mcu.c ****  */
 521:../Src/smtc_hal/smtc_hal_mcu.c **** static void hal_mcu_lpm_exit_stop_mode( void )
 522:../Src/smtc_hal/smtc_hal_mcu.c **** {
 1747              		.loc 3 522 1
 1748              		.cfi_startproc
 1749              		@ args = 0, pretend = 0, frame = 8
 1750              		@ frame_needed = 1, uses_anonymous_args = 0
 1751 0000 80B5     		push	{r7, lr}
 1752              	.LCFI116:
 1753              		.cfi_def_cfa_offset 8
 1754              		.cfi_offset 7, -8
 1755              		.cfi_offset 14, -4
 1756 0002 82B0     		sub	sp, sp, #8
ARM GAS  /tmp/ccwAxJ3w.s 			page 90


 1757              	.LCFI117:
 1758              		.cfi_def_cfa_offset 16
 1759 0004 00AF     		add	r7, sp, #0
 1760              	.LCFI118:
 1761              		.cfi_def_cfa_register 7
 523:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Disable IRQ while the MCU is not running on MSI */
 524:../Src/smtc_hal/smtc_hal_mcu.c ****     CRITICAL_SECTION_BEGIN( );
 1762              		.loc 3 524 5
 1763 0006 3B1D     		adds	r3, r7, #4
 1764 0008 1846     		mov	r0, r3
 1765 000a FFF7FEFF 		bl	hal_mcu_critical_section_begin
 525:../Src/smtc_hal/smtc_hal_mcu.c **** 
 526:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Reinitializes the MCU */
 527:../Src/smtc_hal/smtc_hal_mcu.c ****     hal_mcu_reinit( );
 1766              		.loc 3 527 5
 1767 000e FFF7FEFF 		bl	hal_mcu_reinit
 528:../Src/smtc_hal/smtc_hal_mcu.c **** 
 529:../Src/smtc_hal/smtc_hal_mcu.c ****     CRITICAL_SECTION_END( );
 1768              		.loc 3 529 5
 1769 0012 3B1D     		adds	r3, r7, #4
 1770 0014 1846     		mov	r0, r3
 1771 0016 FFF7FEFF 		bl	hal_mcu_critical_section_end
 530:../Src/smtc_hal/smtc_hal_mcu.c **** }
 1772              		.loc 3 530 1
 1773 001a 00BF     		nop
 1774 001c 0837     		adds	r7, r7, #8
 1775              	.LCFI119:
 1776              		.cfi_def_cfa_offset 8
 1777 001e BD46     		mov	sp, r7
 1778              	.LCFI120:
 1779              		.cfi_def_cfa_register 13
 1780              		@ sp needed
 1781 0020 80BD     		pop	{r7, pc}
 1782              		.cfi_endproc
 1783              	.LFE622:
 1785              		.section	.text.hal_mcu_low_power_handler,"ax",%progbits
 1786              		.align	1
 1787              		.global	hal_mcu_low_power_handler
 1788              		.syntax unified
 1789              		.thumb
 1790              		.thumb_func
 1791              		.fpu fpv4-sp-d16
 1793              	hal_mcu_low_power_handler:
 1794              	.LFB623:
 531:../Src/smtc_hal/smtc_hal_mcu.c **** 
 532:../Src/smtc_hal/smtc_hal_mcu.c **** /*!
 533:../Src/smtc_hal/smtc_hal_mcu.c ****  * @brief handler low power (TODO: put in a new smtc_hal_lpm with option)
 534:../Src/smtc_hal/smtc_hal_mcu.c ****  */
 535:../Src/smtc_hal/smtc_hal_mcu.c **** void hal_mcu_low_power_handler( void )
 536:../Src/smtc_hal/smtc_hal_mcu.c **** {
 1795              		.loc 3 536 1
 1796              		.cfi_startproc
 1797              		@ args = 0, pretend = 0, frame = 0
 1798              		@ frame_needed = 1, uses_anonymous_args = 0
 1799 0000 80B5     		push	{r7, lr}
 1800              	.LCFI121:
 1801              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccwAxJ3w.s 			page 91


 1802              		.cfi_offset 7, -8
 1803              		.cfi_offset 14, -4
 1804 0002 00AF     		add	r7, sp, #0
 1805              	.LCFI122:
 1806              		.cfi_def_cfa_register 7
 1807              	.LBB48:
 1808              	.LBB49:
 142:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1809              		.loc 2 142 3
 1810              		.syntax unified
 1811              	@ 142 "../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1812 0004 72B6     		cpsid i
 1813              	@ 0 "" 2
 143:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1814              		.loc 2 143 1
 1815              		.thumb
 1816              		.syntax unified
 1817 0006 00BF     		nop
 1818              	.LBE49:
 1819              	.LBE48:
 537:../Src/smtc_hal/smtc_hal_mcu.c **** #if( HAL_LOW_POWER_MODE == HAL_FEATURE_ON )
 538:../Src/smtc_hal/smtc_hal_mcu.c ****     __disable_irq( );
 539:../Src/smtc_hal/smtc_hal_mcu.c ****     /*!
 540:../Src/smtc_hal/smtc_hal_mcu.c ****      * If an interrupt has occurred after __disable_irq( ), it is kept pending
 541:../Src/smtc_hal/smtc_hal_mcu.c ****      * and cortex will not enter low power anyway
 542:../Src/smtc_hal/smtc_hal_mcu.c ****      */
 543:../Src/smtc_hal/smtc_hal_mcu.c **** 
 544:../Src/smtc_hal/smtc_hal_mcu.c ****     hal_mcu_lpm_enter_stop_mode( );
 1820              		.loc 3 544 5
 1821 0008 FFF7FEFF 		bl	hal_mcu_lpm_enter_stop_mode
 545:../Src/smtc_hal/smtc_hal_mcu.c ****     hal_mcu_lpm_exit_stop_mode( );
 1822              		.loc 3 545 5
 1823 000c FFF7FEFF 		bl	hal_mcu_lpm_exit_stop_mode
 1824              	.LBB50:
 1825              	.LBB51:
 131:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1826              		.loc 2 131 3
 1827              		.syntax unified
 1828              	@ 131 "../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1829 0010 62B6     		cpsie i
 1830              	@ 0 "" 2
 132:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1831              		.loc 2 132 1
 1832              		.thumb
 1833              		.syntax unified
 1834 0012 00BF     		nop
 1835              	.LBE51:
 1836              	.LBE50:
 546:../Src/smtc_hal/smtc_hal_mcu.c **** 
 547:../Src/smtc_hal/smtc_hal_mcu.c ****     __enable_irq( );
 548:../Src/smtc_hal/smtc_hal_mcu.c **** #endif
 549:../Src/smtc_hal/smtc_hal_mcu.c **** }
 1837              		.loc 3 549 1
 1838 0014 00BF     		nop
 1839 0016 80BD     		pop	{r7, pc}
 1840              		.cfi_endproc
 1841              	.LFE623:
ARM GAS  /tmp/ccwAxJ3w.s 			page 92


 1843              		.section	.text.hal_mcu_deinit,"ax",%progbits
 1844              		.align	1
 1845              		.syntax unified
 1846              		.thumb
 1847              		.thumb_func
 1848              		.fpu fpv4-sp-d16
 1850              	hal_mcu_deinit:
 1851              	.LFB624:
 550:../Src/smtc_hal/smtc_hal_mcu.c **** 
 551:../Src/smtc_hal/smtc_hal_mcu.c **** static void hal_mcu_deinit( void )
 552:../Src/smtc_hal/smtc_hal_mcu.c **** {
 1852              		.loc 3 552 1
 1853              		.cfi_startproc
 1854              		@ args = 0, pretend = 0, frame = 0
 1855              		@ frame_needed = 1, uses_anonymous_args = 0
 1856 0000 80B5     		push	{r7, lr}
 1857              	.LCFI123:
 1858              		.cfi_def_cfa_offset 8
 1859              		.cfi_offset 7, -8
 1860              		.cfi_offset 14, -4
 1861 0002 00AF     		add	r7, sp, #0
 1862              	.LCFI124:
 1863              		.cfi_def_cfa_register 7
 553:../Src/smtc_hal/smtc_hal_mcu.c ****     hal_spi_deinit( HAL_RADIO_SPI_ID );
 1864              		.loc 3 553 5
 1865 0004 0120     		movs	r0, #1
 1866 0006 FFF7FEFF 		bl	hal_spi_deinit
 554:../Src/smtc_hal/smtc_hal_mcu.c ****     lr1110_modem_board_deinit_io( &lr1110 );
 1867              		.loc 3 554 5
 1868 000a 0548     		ldr	r0, .L71
 1869 000c FFF7FEFF 		bl	lr1110_modem_board_deinit_io
 555:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Disable I2C */
 556:../Src/smtc_hal/smtc_hal_mcu.c ****     hal_i2c_deinit( HAL_I2C_ID );
 1870              		.loc 3 556 5
 1871 0010 0120     		movs	r0, #1
 1872 0012 FFF7FEFF 		bl	hal_i2c_deinit
 557:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Disable UART */
 558:../Src/smtc_hal/smtc_hal_mcu.c **** #if( HAL_USE_PRINTF_UART == HAL_FEATURE_ON )
 559:../Src/smtc_hal/smtc_hal_mcu.c ****     hal_uart_deinit( HAL_PRINTF_UART_ID );
 1873              		.loc 3 559 5
 1874 0016 0220     		movs	r0, #2
 1875 0018 FFF7FEFF 		bl	hal_uart_deinit
 560:../Src/smtc_hal/smtc_hal_mcu.c **** #endif
 561:../Src/smtc_hal/smtc_hal_mcu.c **** }
 1876              		.loc 3 561 1
 1877 001c 00BF     		nop
 1878 001e 80BD     		pop	{r7, pc}
 1879              	.L72:
 1880              		.align	2
 1881              	.L71:
 1882 0020 00000000 		.word	lr1110
 1883              		.cfi_endproc
 1884              	.LFE624:
 1886              		.section	.text.hal_mcu_reinit,"ax",%progbits
 1887              		.align	1
 1888              		.syntax unified
 1889              		.thumb
ARM GAS  /tmp/ccwAxJ3w.s 			page 93


 1890              		.thumb_func
 1891              		.fpu fpv4-sp-d16
 1893              	hal_mcu_reinit:
 1894              	.LFB625:
 562:../Src/smtc_hal/smtc_hal_mcu.c **** 
 563:../Src/smtc_hal/smtc_hal_mcu.c **** static void hal_mcu_reinit( void )
 564:../Src/smtc_hal/smtc_hal_mcu.c **** {
 1895              		.loc 3 564 1
 1896              		.cfi_startproc
 1897              		@ args = 0, pretend = 0, frame = 0
 1898              		@ frame_needed = 1, uses_anonymous_args = 0
 1899 0000 80B5     		push	{r7, lr}
 1900              	.LCFI125:
 1901              		.cfi_def_cfa_offset 8
 1902              		.cfi_offset 7, -8
 1903              		.cfi_offset 14, -4
 1904 0002 00AF     		add	r7, sp, #0
 1905              	.LCFI126:
 1906              		.cfi_def_cfa_register 7
 565:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Reconfig needed OSC and PLL */
 566:../Src/smtc_hal/smtc_hal_mcu.c ****     hal_mcu_system_clock_re_config_after_stop( );
 1907              		.loc 3 566 5
 1908 0004 FFF7FEFF 		bl	hal_mcu_system_clock_re_config_after_stop
 567:../Src/smtc_hal/smtc_hal_mcu.c **** 
 568:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Initialize I2C */
 569:../Src/smtc_hal/smtc_hal_mcu.c ****     hal_i2c_init( HAL_I2C_ID, I2C_SDA, I2C_SCL );
 1909              		.loc 3 569 5
 1910 0008 1822     		movs	r2, #24
 1911 000a 1921     		movs	r1, #25
 1912 000c 0120     		movs	r0, #1
 1913 000e FFF7FEFF 		bl	hal_i2c_init
 570:../Src/smtc_hal/smtc_hal_mcu.c **** 
 571:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Initialize UART */
 572:../Src/smtc_hal/smtc_hal_mcu.c **** #if( HAL_USE_PRINTF_UART == HAL_FEATURE_ON )
 573:../Src/smtc_hal/smtc_hal_mcu.c ****     hal_uart_init( HAL_PRINTF_UART_ID, UART_TX, UART_RX );
 1914              		.loc 3 573 5
 1915 0012 0322     		movs	r2, #3
 1916 0014 0221     		movs	r1, #2
 1917 0016 0220     		movs	r0, #2
 1918 0018 FFF7FEFF 		bl	hal_uart_init
 574:../Src/smtc_hal/smtc_hal_mcu.c **** #endif
 575:../Src/smtc_hal/smtc_hal_mcu.c **** 
 576:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Initialize SPI */
 577:../Src/smtc_hal/smtc_hal_mcu.c ****     hal_spi_init( HAL_RADIO_SPI_ID, RADIO_MOSI, RADIO_MISO, RADIO_SCLK );
 1919              		.loc 3 577 5
 1920 001c 0523     		movs	r3, #5
 1921 001e 0622     		movs	r2, #6
 1922 0020 0721     		movs	r1, #7
 1923 0022 0120     		movs	r0, #1
 1924 0024 FFF7FEFF 		bl	hal_spi_init
 578:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Init LR1110 IO */
 579:../Src/smtc_hal/smtc_hal_mcu.c ****     lr1110_modem_board_init_io( &lr1110 );
 1925              		.loc 3 579 5
 1926 0028 0248     		ldr	r0, .L74
 1927 002a FFF7FEFF 		bl	lr1110_modem_board_init_io
 580:../Src/smtc_hal/smtc_hal_mcu.c **** }
 1928              		.loc 3 580 1
ARM GAS  /tmp/ccwAxJ3w.s 			page 94


 1929 002e 00BF     		nop
 1930 0030 80BD     		pop	{r7, pc}
 1931              	.L75:
 1932 0032 00BF     		.align	2
 1933              	.L74:
 1934 0034 00000000 		.word	lr1110
 1935              		.cfi_endproc
 1936              	.LFE625:
 1938              		.section	.text.hal_mcu_system_clock_re_config_after_stop,"ax",%progbits
 1939              		.align	1
 1940              		.syntax unified
 1941              		.thumb
 1942              		.thumb_func
 1943              		.fpu fpv4-sp-d16
 1945              	hal_mcu_system_clock_re_config_after_stop:
 1946              	.LFB626:
 581:../Src/smtc_hal/smtc_hal_mcu.c **** 
 582:../Src/smtc_hal/smtc_hal_mcu.c **** static void hal_mcu_system_clock_re_config_after_stop( void )
 583:../Src/smtc_hal/smtc_hal_mcu.c **** {
 1947              		.loc 3 583 1
 1948              		.cfi_startproc
 1949              		@ args = 0, pretend = 0, frame = 232
 1950              		@ frame_needed = 1, uses_anonymous_args = 0
 1951 0000 80B5     		push	{r7, lr}
 1952              	.LCFI127:
 1953              		.cfi_def_cfa_offset 8
 1954              		.cfi_offset 7, -8
 1955              		.cfi_offset 14, -4
 1956 0002 BAB0     		sub	sp, sp, #232
 1957              	.LCFI128:
 1958              		.cfi_def_cfa_offset 240
 1959 0004 00AF     		add	r7, sp, #0
 1960              	.LCFI129:
 1961              		.cfi_def_cfa_register 7
 1962              	.LBB52:
 584:../Src/smtc_hal/smtc_hal_mcu.c ****     RCC_OscInitTypeDef       rcc_osc_init;
 585:../Src/smtc_hal/smtc_hal_mcu.c ****     RCC_ClkInitTypeDef       rcc_clk_init;
 586:../Src/smtc_hal/smtc_hal_mcu.c ****     RCC_PeriphCLKInitTypeDef periph_clk_init;
 587:../Src/smtc_hal/smtc_hal_mcu.c **** 
 588:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Configure the main internal regulator output voltage */
 589:../Src/smtc_hal/smtc_hal_mcu.c ****     __HAL_RCC_PWR_CLK_ENABLE( );
 1963              		.loc 3 589 5
 1964 0006 3D4B     		ldr	r3, .L77
 1965 0008 9B6D     		ldr	r3, [r3, #88]
 1966 000a 3C4A     		ldr	r2, .L77
 1967 000c 43F08053 		orr	r3, r3, #268435456
 1968 0010 9365     		str	r3, [r2, #88]
 1969 0012 3A4B     		ldr	r3, .L77
 1970 0014 9B6D     		ldr	r3, [r3, #88]
 1971 0016 03F08053 		and	r3, r3, #268435456
 1972 001a 7B60     		str	r3, [r7, #4]
 1973 001c 7B68     		ldr	r3, [r7, #4]
 1974              	.LBE52:
 1975              	.LBB53:
 590:../Src/smtc_hal/smtc_hal_mcu.c ****     __HAL_PWR_VOLTAGESCALING_CONFIG( PWR_REGULATOR_VOLTAGE_SCALE1 );
 1976              		.loc 3 590 5
 1977 001e 384B     		ldr	r3, .L77+4
ARM GAS  /tmp/ccwAxJ3w.s 			page 95


 1978 0020 1B68     		ldr	r3, [r3]
 1979 0022 23F4C063 		bic	r3, r3, #1536
 1980 0026 364A     		ldr	r2, .L77+4
 1981 0028 43F40073 		orr	r3, r3, #512
 1982 002c 1360     		str	r3, [r2]
 1983 002e 344B     		ldr	r3, .L77+4
 1984 0030 1B68     		ldr	r3, [r3]
 1985 0032 03F4C063 		and	r3, r3, #1536
 1986 0036 3B60     		str	r3, [r7]
 1987 0038 3B68     		ldr	r3, [r7]
 1988              	.LBE53:
 591:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Ensure that MSI is wake-up system clock */
 592:../Src/smtc_hal/smtc_hal_mcu.c ****     __HAL_RCC_WAKEUPSTOP_CLK_CONFIG( RCC_STOP_WAKEUPCLOCK_MSI );
 1989              		.loc 3 592 5
 1990 003a 304B     		ldr	r3, .L77
 1991 003c 9B68     		ldr	r3, [r3, #8]
 1992 003e 2F4A     		ldr	r2, .L77
 1993 0040 23F40043 		bic	r3, r3, #32768
 1994 0044 9360     		str	r3, [r2, #8]
 593:../Src/smtc_hal/smtc_hal_mcu.c **** 
 594:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Initializes the CPU, AHB and APB busses clocks */
 595:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_osc_init.OscillatorType      = RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_MSI;
 1995              		.loc 3 595 38
 1996 0046 1423     		movs	r3, #20
 1997 0048 C7F8A430 		str	r3, [r7, #164]
 596:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_osc_init.MSIState            = RCC_MSI_ON;
 1998              		.loc 3 596 38
 1999 004c 0123     		movs	r3, #1
 2000 004e C7F8BC30 		str	r3, [r7, #188]
 597:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_osc_init.HSEState            = RCC_HSE_OFF;
 2001              		.loc 3 597 38
 2002 0052 0023     		movs	r3, #0
 2003 0054 C7F8A830 		str	r3, [r7, #168]
 598:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_osc_init.HSIState            = RCC_HSI_OFF;
 2004              		.loc 3 598 38
 2005 0058 0023     		movs	r3, #0
 2006 005a C7F8B030 		str	r3, [r7, #176]
 599:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_osc_init.LSEState            = RCC_LSE_ON;
 2007              		.loc 3 599 38
 2008 005e 0123     		movs	r3, #1
 2009 0060 C7F8AC30 		str	r3, [r7, #172]
 600:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_osc_init.LSIState            = RCC_LSI_OFF;
 2010              		.loc 3 600 38
 2011 0064 0023     		movs	r3, #0
 2012 0066 C7F8B830 		str	r3, [r7, #184]
 601:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_osc_init.MSICalibrationValue = RCC_MSICALIBRATION_DEFAULT;
 2013              		.loc 3 601 38
 2014 006a 0023     		movs	r3, #0
 2015 006c C7F8C030 		str	r3, [r7, #192]
 602:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_osc_init.MSIClockRange       = RCC_MSIRANGE_11;
 2016              		.loc 3 602 38
 2017 0070 B023     		movs	r3, #176
 2018 0072 C7F8C430 		str	r3, [r7, #196]
 603:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_osc_init.PLL.PLLState        = RCC_PLL_ON;
 2019              		.loc 3 603 38
 2020 0076 0223     		movs	r3, #2
 2021 0078 C7F8CC30 		str	r3, [r7, #204]
ARM GAS  /tmp/ccwAxJ3w.s 			page 96


 604:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_osc_init.PLL.PLLSource       = RCC_PLLSOURCE_MSI;
 2022              		.loc 3 604 38
 2023 007c 0123     		movs	r3, #1
 2024 007e C7F8D030 		str	r3, [r7, #208]
 605:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_osc_init.PLL.PLLM            = 3;
 2025              		.loc 3 605 38
 2026 0082 0323     		movs	r3, #3
 2027 0084 C7F8D430 		str	r3, [r7, #212]
 606:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_osc_init.PLL.PLLN            = 10;
 2028              		.loc 3 606 38
 2029 0088 0A23     		movs	r3, #10
 2030 008a C7F8D830 		str	r3, [r7, #216]
 607:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_osc_init.PLL.PLLP            = RCC_PLLP_DIV7;
 2031              		.loc 3 607 38
 2032 008e 0723     		movs	r3, #7
 2033 0090 C7F8DC30 		str	r3, [r7, #220]
 608:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_osc_init.PLL.PLLQ            = RCC_PLLQ_DIV2;
 2034              		.loc 3 608 38
 2035 0094 0223     		movs	r3, #2
 2036 0096 C7F8E030 		str	r3, [r7, #224]
 609:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_osc_init.PLL.PLLR            = RCC_PLLR_DIV2;
 2037              		.loc 3 609 38
 2038 009a 0223     		movs	r3, #2
 2039 009c C7F8E430 		str	r3, [r7, #228]
 610:../Src/smtc_hal/smtc_hal_mcu.c ****     if( HAL_RCC_OscConfig( &rcc_osc_init ) != HAL_OK )
 2040              		.loc 3 610 9
 2041 00a0 07F1A403 		add	r3, r7, #164
 2042 00a4 1846     		mov	r0, r3
 2043 00a6 FFF7FEFF 		bl	HAL_RCC_OscConfig
 611:../Src/smtc_hal/smtc_hal_mcu.c ****     {
 612:../Src/smtc_hal/smtc_hal_mcu.c ****     }
 613:../Src/smtc_hal/smtc_hal_mcu.c **** 
 614:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Initializes the CPU, AHB and APB busses clocks */
 615:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_clk_init.ClockType      = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 |
 2044              		.loc 3 615 33
 2045 00aa 0F23     		movs	r3, #15
 2046 00ac C7F89030 		str	r3, [r7, #144]
 616:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_clk_init.SYSCLKSource   = RCC_SYSCLKSOURCE_PLLCLK;
 2047              		.loc 3 616 33
 2048 00b0 0323     		movs	r3, #3
 2049 00b2 C7F89430 		str	r3, [r7, #148]
 617:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_clk_init.AHBCLKDivider  = RCC_SYSCLK_DIV1;
 2050              		.loc 3 617 33
 2051 00b6 0023     		movs	r3, #0
 2052 00b8 C7F89830 		str	r3, [r7, #152]
 618:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_clk_init.APB1CLKDivider = RCC_HCLK_DIV1;
 2053              		.loc 3 618 33
 2054 00bc 0023     		movs	r3, #0
 2055 00be C7F89C30 		str	r3, [r7, #156]
 619:../Src/smtc_hal/smtc_hal_mcu.c ****     rcc_clk_init.APB2CLKDivider = RCC_HCLK_DIV1;
 2056              		.loc 3 619 33
 2057 00c2 0023     		movs	r3, #0
 2058 00c4 C7F8A030 		str	r3, [r7, #160]
 620:../Src/smtc_hal/smtc_hal_mcu.c **** 
 621:../Src/smtc_hal/smtc_hal_mcu.c ****     if( HAL_RCC_ClockConfig( &rcc_clk_init, FLASH_LATENCY_1 ) != HAL_OK )
 2059              		.loc 3 621 9
 2060 00c8 07F19003 		add	r3, r7, #144
ARM GAS  /tmp/ccwAxJ3w.s 			page 97


 2061 00cc 0121     		movs	r1, #1
 2062 00ce 1846     		mov	r0, r3
 2063 00d0 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 622:../Src/smtc_hal/smtc_hal_mcu.c ****     {
 623:../Src/smtc_hal/smtc_hal_mcu.c ****     }
 624:../Src/smtc_hal/smtc_hal_mcu.c **** 
 625:../Src/smtc_hal/smtc_hal_mcu.c ****     periph_clk_init.PeriphClockSelection = RCC_PERIPHCLK_RTC | RCC_PERIPHCLK_USART2 | RCC_PERIPHCLK
 2064              		.loc 3 625 42
 2065 00d4 0B4B     		ldr	r3, .L77+8
 2066 00d6 BB60     		str	r3, [r7, #8]
 626:../Src/smtc_hal/smtc_hal_mcu.c ****     periph_clk_init.Lptim1ClockSelection = RCC_LPTIM1CLKSOURCE_LSE;
 2067              		.loc 3 626 42
 2068 00d8 4FF44023 		mov	r3, #786432
 2069 00dc 7B66     		str	r3, [r7, #100]
 627:../Src/smtc_hal/smtc_hal_mcu.c ****     periph_clk_init.RTCClockSelection    = RCC_RTCCLKSOURCE_LSE;
 2070              		.loc 3 627 42
 2071 00de 4FF48073 		mov	r3, #256
 2072 00e2 C7F88C30 		str	r3, [r7, #140]
 628:../Src/smtc_hal/smtc_hal_mcu.c ****     periph_clk_init.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 2073              		.loc 3 628 42
 2074 00e6 0023     		movs	r3, #0
 2075 00e8 7B64     		str	r3, [r7, #68]
 629:../Src/smtc_hal/smtc_hal_mcu.c ****     if( HAL_RCCEx_PeriphCLKConfig( &periph_clk_init ) != HAL_OK )
 2076              		.loc 3 629 9
 2077 00ea 07F10803 		add	r3, r7, #8
 2078 00ee 1846     		mov	r0, r3
 2079 00f0 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 630:../Src/smtc_hal/smtc_hal_mcu.c ****     {
 631:../Src/smtc_hal/smtc_hal_mcu.c ****     }
 632:../Src/smtc_hal/smtc_hal_mcu.c **** }
 2080              		.loc 3 632 1
 2081 00f4 00BF     		nop
 2082 00f6 E837     		adds	r7, r7, #232
 2083              	.LCFI130:
 2084              		.cfi_def_cfa_offset 8
 2085 00f8 BD46     		mov	sp, r7
 2086              	.LCFI131:
 2087              		.cfi_def_cfa_register 13
 2088              		@ sp needed
 2089 00fa 80BD     		pop	{r7, pc}
 2090              	.L78:
 2091              		.align	2
 2092              	.L77:
 2093 00fc 00100240 		.word	1073876992
 2094 0100 00700040 		.word	1073770496
 2095 0104 02020200 		.word	131586
 2096              		.cfi_endproc
 2097              	.LFE626:
 2099              		.section	.text.vprint,"ax",%progbits
 2100              		.align	1
 2101              		.syntax unified
 2102              		.thumb
 2103              		.thumb_func
 2104              		.fpu fpv4-sp-d16
 2106              	vprint:
 2107              	.LFB627:
 633:../Src/smtc_hal/smtc_hal_mcu.c **** 
ARM GAS  /tmp/ccwAxJ3w.s 			page 98


 634:../Src/smtc_hal/smtc_hal_mcu.c **** #if( HAL_LOW_POWER_MODE == HAL_FEATURE_OFF )
 635:../Src/smtc_hal/smtc_hal_mcu.c **** static bool hal_mcu_no_low_power_wait( const int32_t milliseconds )
 636:../Src/smtc_hal/smtc_hal_mcu.c **** {
 637:../Src/smtc_hal/smtc_hal_mcu.c ****     uint32_t start_time = hal_rtc_get_time_ms( );
 638:../Src/smtc_hal/smtc_hal_mcu.c **** 
 639:../Src/smtc_hal/smtc_hal_mcu.c ****     while( hal_rtc_get_time_ms( ) < ( start_time + milliseconds ) )
 640:../Src/smtc_hal/smtc_hal_mcu.c ****     {
 641:../Src/smtc_hal/smtc_hal_mcu.c ****         /* interruptible wait for 100ms */
 642:../Src/smtc_hal/smtc_hal_mcu.c ****         HAL_Delay( 100 );
 643:../Src/smtc_hal/smtc_hal_mcu.c ****         if( hal_exit_wait == true )
 644:../Src/smtc_hal/smtc_hal_mcu.c ****         {
 645:../Src/smtc_hal/smtc_hal_mcu.c ****             /* stop wait/lp function and return immediatly */
 646:../Src/smtc_hal/smtc_hal_mcu.c ****             hal_exit_wait = false;
 647:../Src/smtc_hal/smtc_hal_mcu.c ****             return true;
 648:../Src/smtc_hal/smtc_hal_mcu.c ****         }
 649:../Src/smtc_hal/smtc_hal_mcu.c ****     }
 650:../Src/smtc_hal/smtc_hal_mcu.c ****     return false;
 651:../Src/smtc_hal/smtc_hal_mcu.c **** }
 652:../Src/smtc_hal/smtc_hal_mcu.c **** #endif
 653:../Src/smtc_hal/smtc_hal_mcu.c **** 
 654:../Src/smtc_hal/smtc_hal_mcu.c **** #if( HAL_DBG_TRACE == HAL_FEATURE_ON )
 655:../Src/smtc_hal/smtc_hal_mcu.c **** static void vprint( const char* fmt, va_list argp )
 656:../Src/smtc_hal/smtc_hal_mcu.c **** {
 2108              		.loc 3 656 1
 2109              		.cfi_startproc
 2110              		@ args = 0, pretend = 0, frame = 264
 2111              		@ frame_needed = 1, uses_anonymous_args = 0
 2112 0000 80B5     		push	{r7, lr}
 2113              	.LCFI132:
 2114              		.cfi_def_cfa_offset 8
 2115              		.cfi_offset 7, -8
 2116              		.cfi_offset 14, -4
 2117 0002 C2B0     		sub	sp, sp, #264
 2118              	.LCFI133:
 2119              		.cfi_def_cfa_offset 272
 2120 0004 00AF     		add	r7, sp, #0
 2121              	.LCFI134:
 2122              		.cfi_def_cfa_register 7
 2123 0006 07F58473 		add	r3, r7, #264
 2124 000a A3F58273 		sub	r3, r3, #260
 2125 000e 1860     		str	r0, [r3]
 2126 0010 07F58473 		add	r3, r7, #264
 2127 0014 A3F58473 		sub	r3, r3, #264
 2128 0018 1960     		str	r1, [r3]
 657:../Src/smtc_hal/smtc_hal_mcu.c ****     char string[HAL_PRINT_BUFFER_SIZE];
 658:../Src/smtc_hal/smtc_hal_mcu.c ****     if( 0 < vsprintf( string, fmt, argp ) )  // build string
 2129              		.loc 3 658 13
 2130 001a 07F58473 		add	r3, r7, #264
 2131 001e A3F58472 		sub	r2, r3, #264
 2132 0022 07F58473 		add	r3, r7, #264
 2133 0026 A3F58273 		sub	r3, r3, #260
 2134 002a 07F10800 		add	r0, r7, #8
 2135 002e 1268     		ldr	r2, [r2]
 2136 0030 1968     		ldr	r1, [r3]
 2137 0032 FFF7FEFF 		bl	vsprintf
 2138 0036 0346     		mov	r3, r0
 2139              		.loc 3 658 7
ARM GAS  /tmp/ccwAxJ3w.s 			page 99


 2140 0038 002B     		cmp	r3, #0
 2141 003a 0CDD     		ble	.L81
 659:../Src/smtc_hal/smtc_hal_mcu.c ****     {
 660:../Src/smtc_hal/smtc_hal_mcu.c ****         hal_uart_tx( 2, ( uint8_t* ) string, strlen( string ) );
 2142              		.loc 3 660 46
 2143 003c 07F10803 		add	r3, r7, #8
 2144 0040 1846     		mov	r0, r3
 2145 0042 FFF7FEFF 		bl	strlen
 2146 0046 0346     		mov	r3, r0
 2147              		.loc 3 660 9
 2148 0048 9AB2     		uxth	r2, r3
 2149 004a 07F10803 		add	r3, r7, #8
 2150 004e 1946     		mov	r1, r3
 2151 0050 0220     		movs	r0, #2
 2152 0052 FFF7FEFF 		bl	hal_uart_tx
 2153              	.L81:
 661:../Src/smtc_hal/smtc_hal_mcu.c ****     }
 662:../Src/smtc_hal/smtc_hal_mcu.c **** }
 2154              		.loc 3 662 1
 2155 0056 00BF     		nop
 2156 0058 07F58477 		add	r7, r7, #264
 2157              	.LCFI135:
 2158              		.cfi_def_cfa_offset 8
 2159 005c BD46     		mov	sp, r7
 2160              	.LCFI136:
 2161              		.cfi_def_cfa_register 13
 2162              		@ sp needed
 2163 005e 80BD     		pop	{r7, pc}
 2164              		.cfi_endproc
 2165              	.LFE627:
 2167              		.section	.rodata
 2168 0022 0000     		.align	2
 2169              	.LC5:
 2170 0024 1B5B303B 		.ascii	"\033[0;32m\000"
 2170      33326D00 
 2171              		.align	2
 2172              	.LC6:
 2173 002c 494E464F 		.ascii	"INFO : \000"
 2173      203A2000 
 2174              		.align	2
 2175              	.LC7:
 2176 0034 23232323 		.ascii	"###### ===== WATCHDOG RESET ==== ######\015\012\015"
 2176      2323203D 
 2176      3D3D3D3D 
 2176      20574154 
 2176      4348444F 
 2177 005e 0A00     		.ascii	"\012\000"
 2178              		.section	.text.on_soft_watchdog_event,"ax",%progbits
 2179              		.align	1
 2180              		.syntax unified
 2181              		.thumb
 2182              		.thumb_func
 2183              		.fpu fpv4-sp-d16
 2185              	on_soft_watchdog_event:
 2186              	.LFB628:
 663:../Src/smtc_hal/smtc_hal_mcu.c **** #endif
 664:../Src/smtc_hal/smtc_hal_mcu.c **** 
ARM GAS  /tmp/ccwAxJ3w.s 			page 100


 665:../Src/smtc_hal/smtc_hal_mcu.c **** static void on_soft_watchdog_event( void* context )
 666:../Src/smtc_hal/smtc_hal_mcu.c **** {
 2187              		.loc 3 666 1
 2188              		.cfi_startproc
 2189              		@ args = 0, pretend = 0, frame = 8
 2190              		@ frame_needed = 1, uses_anonymous_args = 0
 2191 0000 80B5     		push	{r7, lr}
 2192              	.LCFI137:
 2193              		.cfi_def_cfa_offset 8
 2194              		.cfi_offset 7, -8
 2195              		.cfi_offset 14, -4
 2196 0002 82B0     		sub	sp, sp, #8
 2197              	.LCFI138:
 2198              		.cfi_def_cfa_offset 16
 2199 0004 00AF     		add	r7, sp, #0
 2200              	.LCFI139:
 2201              		.cfi_def_cfa_register 7
 2202 0006 7860     		str	r0, [r7, #4]
 667:../Src/smtc_hal/smtc_hal_mcu.c ****     HAL_DBG_TRACE_INFO( "###### ===== WATCHDOG RESET ==== ######\r\n\r\n" );
 2203              		.loc 3 667 5
 2204 0008 0848     		ldr	r0, .L83
 2205 000a FFF7FEFF 		bl	hal_mcu_trace_print
 2206 000e 0848     		ldr	r0, .L83+4
 2207 0010 FFF7FEFF 		bl	hal_mcu_trace_print
 2208 0014 0748     		ldr	r0, .L83+8
 2209 0016 FFF7FEFF 		bl	hal_mcu_trace_print
 2210 001a 0748     		ldr	r0, .L83+12
 2211 001c FFF7FEFF 		bl	hal_mcu_trace_print
 668:../Src/smtc_hal/smtc_hal_mcu.c ****     /* System reset */
 669:../Src/smtc_hal/smtc_hal_mcu.c ****     hal_mcu_reset( );
 2212              		.loc 3 669 5
 2213 0020 FFF7FEFF 		bl	hal_mcu_reset
 670:../Src/smtc_hal/smtc_hal_mcu.c **** }
 2214              		.loc 3 670 1
 2215 0024 00BF     		nop
 2216 0026 0837     		adds	r7, r7, #8
 2217              	.LCFI140:
 2218              		.cfi_def_cfa_offset 8
 2219 0028 BD46     		mov	sp, r7
 2220              	.LCFI141:
 2221              		.cfi_def_cfa_register 13
 2222              		@ sp needed
 2223 002a 80BD     		pop	{r7, pc}
 2224              	.L84:
 2225              		.align	2
 2226              	.L83:
 2227 002c 24000000 		.word	.LC5
 2228 0030 2C000000 		.word	.LC6
 2229 0034 34000000 		.word	.LC7
 2230 0038 14000000 		.word	.LC3
 2231              		.cfi_endproc
 2232              	.LFE628:
 2234              		.section	.rodata
 2235              		.align	2
 2236              	.LC8:
 2237 0060 48617264 		.ascii	"HardFault_Handler\012\015\000"
 2237      4661756C 
ARM GAS  /tmp/ccwAxJ3w.s 			page 101


 2237      745F4861 
 2237      6E646C65 
 2237      720A0D00 
 2238              		.section	.text.HardFault_Handler,"ax",%progbits
 2239              		.align	1
 2240              		.global	HardFault_Handler
 2241              		.syntax unified
 2242              		.thumb
 2243              		.thumb_func
 2244              		.fpu fpv4-sp-d16
 2246              	HardFault_Handler:
 2247              	.LFB629:
 671:../Src/smtc_hal/smtc_hal_mcu.c **** 
 672:../Src/smtc_hal/smtc_hal_mcu.c **** /**
 673:../Src/smtc_hal/smtc_hal_mcu.c ****  * @brief This function handles Hard fault interrupt.
 674:../Src/smtc_hal/smtc_hal_mcu.c ****  */
 675:../Src/smtc_hal/smtc_hal_mcu.c **** void HardFault_Handler( void )
 676:../Src/smtc_hal/smtc_hal_mcu.c **** {
 2248              		.loc 3 676 1
 2249              		.cfi_startproc
 2250              		@ args = 0, pretend = 0, frame = 0
 2251              		@ frame_needed = 1, uses_anonymous_args = 0
 2252 0000 80B5     		push	{r7, lr}
 2253              	.LCFI142:
 2254              		.cfi_def_cfa_offset 8
 2255              		.cfi_offset 7, -8
 2256              		.cfi_offset 14, -4
 2257 0002 00AF     		add	r7, sp, #0
 2258              	.LCFI143:
 2259              		.cfi_def_cfa_register 7
 677:../Src/smtc_hal/smtc_hal_mcu.c ****     HAL_DBG_TRACE_ERROR( "HardFault_Handler\n\r" );
 2260              		.loc 3 677 5
 2261 0004 0748     		ldr	r0, .L86
 2262 0006 FFF7FEFF 		bl	hal_mcu_trace_print
 2263 000a 0748     		ldr	r0, .L86+4
 2264 000c FFF7FEFF 		bl	hal_mcu_trace_print
 2265 0010 0648     		ldr	r0, .L86+8
 2266 0012 FFF7FEFF 		bl	hal_mcu_trace_print
 2267 0016 0648     		ldr	r0, .L86+12
 2268 0018 FFF7FEFF 		bl	hal_mcu_trace_print
 678:../Src/smtc_hal/smtc_hal_mcu.c **** 
 679:../Src/smtc_hal/smtc_hal_mcu.c ****     /* reset the board*/
 680:../Src/smtc_hal/smtc_hal_mcu.c ****     hal_mcu_reset( );
 2269              		.loc 3 680 5
 2270 001c FFF7FEFF 		bl	hal_mcu_reset
 681:../Src/smtc_hal/smtc_hal_mcu.c **** }
 2271              		.loc 3 681 1
 2272 0020 00BF     		nop
 2273 0022 80BD     		pop	{r7, pc}
 2274              	.L87:
 2275              		.align	2
 2276              	.L86:
 2277 0024 00000000 		.word	.LC0
 2278 0028 08000000 		.word	.LC1
 2279 002c 60000000 		.word	.LC8
 2280 0030 14000000 		.word	.LC3
 2281              		.cfi_endproc
ARM GAS  /tmp/ccwAxJ3w.s 			page 102


 2282              	.LFE629:
 2284              		.section	.rodata
 2285              		.align	2
 2286              	.LC9:
 2287 0074 5056445F 		.ascii	"PVD_PVM_IRQHandler\012\015\000"
 2287      50564D5F 
 2287      49525148 
 2287      616E646C 
 2287      65720A0D 
 2288              		.section	.text.PVD_PVM_IRQHandler,"ax",%progbits
 2289              		.align	1
 2290              		.global	PVD_PVM_IRQHandler
 2291              		.syntax unified
 2292              		.thumb
 2293              		.thumb_func
 2294              		.fpu fpv4-sp-d16
 2296              	PVD_PVM_IRQHandler:
 2297              	.LFB630:
 682:../Src/smtc_hal/smtc_hal_mcu.c **** 
 683:../Src/smtc_hal/smtc_hal_mcu.c **** /*!
 684:../Src/smtc_hal/smtc_hal_mcu.c ****  * @brief  This function handles PVD interrupt request.
 685:../Src/smtc_hal/smtc_hal_mcu.c ****  */
 686:../Src/smtc_hal/smtc_hal_mcu.c **** void PVD_PVM_IRQHandler( void )
 687:../Src/smtc_hal/smtc_hal_mcu.c **** {
 2298              		.loc 3 687 1
 2299              		.cfi_startproc
 2300              		@ args = 0, pretend = 0, frame = 0
 2301              		@ frame_needed = 1, uses_anonymous_args = 0
 2302 0000 80B5     		push	{r7, lr}
 2303              	.LCFI144:
 2304              		.cfi_def_cfa_offset 8
 2305              		.cfi_offset 7, -8
 2306              		.cfi_offset 14, -4
 2307 0002 00AF     		add	r7, sp, #0
 2308              	.LCFI145:
 2309              		.cfi_def_cfa_register 7
 688:../Src/smtc_hal/smtc_hal_mcu.c ****     HAL_DBG_TRACE_ERROR( "PVD_PVM_IRQHandler\n\r" );
 2310              		.loc 3 688 5
 2311 0004 0B48     		ldr	r0, .L90
 2312 0006 FFF7FEFF 		bl	hal_mcu_trace_print
 2313 000a 0B48     		ldr	r0, .L90+4
 2314 000c FFF7FEFF 		bl	hal_mcu_trace_print
 2315 0010 0A48     		ldr	r0, .L90+8
 2316 0012 FFF7FEFF 		bl	hal_mcu_trace_print
 2317 0016 0A48     		ldr	r0, .L90+12
 2318 0018 FFF7FEFF 		bl	hal_mcu_trace_print
 689:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Loop inside the handler to prevent the Cortex from using the Flash,
 690:../Src/smtc_hal/smtc_hal_mcu.c ****        allowing the flash interface to finish any ongoing transfer. */
 691:../Src/smtc_hal/smtc_hal_mcu.c ****     while( __HAL_PWR_GET_FLAG( PWR_FLAG_PVDO ) != RESET )
 2319              		.loc 3 691 10
 2320 001c 00BF     		nop
 2321              	.L89:
 2322              		.loc 3 691 12 discriminator 1
 2323 001e 094B     		ldr	r3, .L90+16
 2324 0020 5B69     		ldr	r3, [r3, #20]
 2325 0022 03F40063 		and	r3, r3, #2048
 2326              		.loc 3 691 10 discriminator 1
ARM GAS  /tmp/ccwAxJ3w.s 			page 103


 2327 0026 002B     		cmp	r3, #0
 2328 0028 F9D1     		bne	.L89
 692:../Src/smtc_hal/smtc_hal_mcu.c ****     {
 693:../Src/smtc_hal/smtc_hal_mcu.c ****     }
 694:../Src/smtc_hal/smtc_hal_mcu.c ****     /* Then reset the board */
 695:../Src/smtc_hal/smtc_hal_mcu.c ****     hal_mcu_reset( );
 2329              		.loc 3 695 5
 2330 002a FFF7FEFF 		bl	hal_mcu_reset
 696:../Src/smtc_hal/smtc_hal_mcu.c **** }
 2331              		.loc 3 696 1
 2332 002e 00BF     		nop
 2333 0030 80BD     		pop	{r7, pc}
 2334              	.L91:
 2335 0032 00BF     		.align	2
 2336              	.L90:
 2337 0034 00000000 		.word	.LC0
 2338 0038 08000000 		.word	.LC1
 2339 003c 74000000 		.word	.LC9
 2340 0040 14000000 		.word	.LC3
 2341 0044 00700040 		.word	1073770496
 2342              		.cfi_endproc
 2343              	.LFE630:
 2345              		.section	.rodata.__func__.0,"a"
 2346              		.align	2
 2349              	__func__.0:
 2350 0000 68616C5F 		.ascii	"hal_mcu_panic\000"
 2350      6D63755F 
 2350      70616E69 
 2350      6300
 2351              		.text
 2352              	.Letext0:
 2353              		.file 4 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 2354              		.file 5 "../Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 2355              		.file 6 "../Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 2356              		.file 7 "../Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 2357              		.file 8 "../Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 2358              		.file 9 "../Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 2359              		.file 10 "../Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 2360              		.file 11 "../Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr.h"
 2361              		.file 12 "../Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_spi.h"
 2362              		.file 13 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdarg.h"
 2363              		.file 14 "../Inc/smtc_hal/smtc_hal_gpio_pin_names.h"
 2364              		.file 15 "../Inc/smtc_hal/smtc_hal_gpio.h"
 2365              		.file 16 "../Inc/smtc_hal/smtc_hal_tmr_list.h"
 2366              		.file 17 "../Inc/smtc_hal/smtc_hal_spi.h"
 2367              		.file 18 "../Src/radio/lr1110_modem/src/lr1110_modem_lorawan.h"
 2368              		.file 19 "../Src/radio/lr1110.h"
 2369              		.file 20 "<built-in>"
ARM GAS  /tmp/ccwAxJ3w.s 			page 104


DEFINED SYMBOLS
                            *ABS*:0000000000000000 smtc_hal_mcu.c
     /tmp/ccwAxJ3w.s:18     .text.__NVIC_SystemReset:0000000000000000 $t
     /tmp/ccwAxJ3w.s:25     .text.__NVIC_SystemReset:0000000000000000 __NVIC_SystemReset
     /tmp/ccwAxJ3w.s:91     .text.__NVIC_SystemReset:0000000000000024 $d
     /tmp/ccwAxJ3w.s:101    .bss.lr1110:0000000000000000 lr1110
     /tmp/ccwAxJ3w.s:98     .bss.lr1110:0000000000000000 $d
     /tmp/ccwAxJ3w.s:106    .bss.hal_exit_wait:0000000000000000 hal_exit_wait
     /tmp/ccwAxJ3w.s:107    .bss.hal_exit_wait:0000000000000000 $d
     /tmp/ccwAxJ3w.s:111    .bss.hal_lp_current_mode:0000000000000000 hal_lp_current_mode
     /tmp/ccwAxJ3w.s:112    .bss.hal_lp_current_mode:0000000000000000 $d
     /tmp/ccwAxJ3w.s:116    .bss.partial_sleep_enable:0000000000000000 partial_sleep_enable
     /tmp/ccwAxJ3w.s:117    .bss.partial_sleep_enable:0000000000000000 $d
     /tmp/ccwAxJ3w.s:119    .bss.soft_watchdog:0000000000000000 $d
     /tmp/ccwAxJ3w.s:122    .bss.soft_watchdog:0000000000000000 soft_watchdog
     /tmp/ccwAxJ3w.s:125    .text.hal_mcu_critical_section_begin:0000000000000000 $t
     /tmp/ccwAxJ3w.s:132    .text.hal_mcu_critical_section_begin:0000000000000000 hal_mcu_critical_section_begin
     /tmp/ccwAxJ3w.s:199    .text.hal_mcu_critical_section_end:0000000000000000 $t
     /tmp/ccwAxJ3w.s:206    .text.hal_mcu_critical_section_end:0000000000000000 hal_mcu_critical_section_end
     /tmp/ccwAxJ3w.s:260    .text.hal_mcu_deinit_periph:0000000000000000 $t
     /tmp/ccwAxJ3w.s:266    .text.hal_mcu_deinit_periph:0000000000000000 hal_mcu_deinit_periph
     /tmp/ccwAxJ3w.s:295    .text.hal_mcu_init:0000000000000000 $t
     /tmp/ccwAxJ3w.s:302    .text.hal_mcu_init:0000000000000000 hal_mcu_init
     /tmp/ccwAxJ3w.s:1224   .text.hal_mcu_system_clock_config:0000000000000000 hal_mcu_system_clock_config
     /tmp/ccwAxJ3w.s:1460   .text.hal_mcu_gpio_init:0000000000000000 hal_mcu_gpio_init
     /tmp/ccwAxJ3w.s:1403   .text.hal_mcu_pvd_config:0000000000000000 hal_mcu_pvd_config
     /tmp/ccwAxJ3w.s:358    .text.hal_mcu_init:0000000000000050 $d
     /tmp/ccwAxJ3w.s:363    .text.hal_mcu_disable_irq:0000000000000000 $t
     /tmp/ccwAxJ3w.s:370    .text.hal_mcu_disable_irq:0000000000000000 hal_mcu_disable_irq
     /tmp/ccwAxJ3w.s:412    .text.hal_mcu_enable_irq:0000000000000000 $t
     /tmp/ccwAxJ3w.s:419    .text.hal_mcu_enable_irq:0000000000000000 hal_mcu_enable_irq
     /tmp/ccwAxJ3w.s:461    .text.hal_mcu_reset:0000000000000000 $t
     /tmp/ccwAxJ3w.s:468    .text.hal_mcu_reset:0000000000000000 hal_mcu_reset
     /tmp/ccwAxJ3w.s:501    .rodata:0000000000000000 $d
     /tmp/ccwAxJ3w.s:517    .text.hal_mcu_panic:0000000000000000 $t
     /tmp/ccwAxJ3w.s:524    .text.hal_mcu_panic:0000000000000000 hal_mcu_panic
     /tmp/ccwAxJ3w.s:1109   .text.hal_mcu_trace_print:0000000000000000 hal_mcu_trace_print
     /tmp/ccwAxJ3w.s:579    .text.hal_mcu_panic:000000000000004c $d
     /tmp/ccwAxJ3w.s:2349   .rodata.__func__.0:0000000000000000 __func__.0
     /tmp/ccwAxJ3w.s:589    .text.hal_mcu_wait_us:0000000000000000 $t
     /tmp/ccwAxJ3w.s:596    .text.hal_mcu_wait_us:0000000000000000 hal_mcu_wait_us
     /tmp/ccwAxJ3w.s:670    .text.hal_mcu_wait_us:0000000000000048 $d
     /tmp/ccwAxJ3w.s:675    .text.hal_mcu_init_software_watchdog:0000000000000000 $t
     /tmp/ccwAxJ3w.s:682    .text.hal_mcu_init_software_watchdog:0000000000000000 hal_mcu_init_software_watchdog
     /tmp/ccwAxJ3w.s:724    .text.hal_mcu_init_software_watchdog:0000000000000028 $d
     /tmp/ccwAxJ3w.s:2185   .text.on_soft_watchdog_event:0000000000000000 on_soft_watchdog_event
     /tmp/ccwAxJ3w.s:730    .text.hal_mcu_set_software_watchdog_value:0000000000000000 $t
     /tmp/ccwAxJ3w.s:737    .text.hal_mcu_set_software_watchdog_value:0000000000000000 hal_mcu_set_software_watchdog_value
     /tmp/ccwAxJ3w.s:772    .text.hal_mcu_set_software_watchdog_value:0000000000000018 $d
     /tmp/ccwAxJ3w.s:777    .text.hal_mcu_start_software_watchdog:0000000000000000 $t
     /tmp/ccwAxJ3w.s:784    .text.hal_mcu_start_software_watchdog:0000000000000000 hal_mcu_start_software_watchdog
     /tmp/ccwAxJ3w.s:807    .text.hal_mcu_start_software_watchdog:0000000000000010 $d
     /tmp/ccwAxJ3w.s:812    .text.hal_mcu_reset_software_watchdog:0000000000000000 $t
     /tmp/ccwAxJ3w.s:819    .text.hal_mcu_reset_software_watchdog:0000000000000000 hal_mcu_reset_software_watchdog
     /tmp/ccwAxJ3w.s:842    .text.hal_mcu_reset_software_watchdog:0000000000000010 $d
     /tmp/ccwAxJ3w.s:847    .text.hal_mcu_get_vref_level:0000000000000000 $t
     /tmp/ccwAxJ3w.s:854    .text.hal_mcu_get_vref_level:0000000000000000 hal_mcu_get_vref_level
ARM GAS  /tmp/ccwAxJ3w.s 			page 105


     /tmp/ccwAxJ3w.s:885    .text.hal_mcu_get_temperature:0000000000000000 $t
     /tmp/ccwAxJ3w.s:892    .text.hal_mcu_get_temperature:0000000000000000 hal_mcu_get_temperature
     /tmp/ccwAxJ3w.s:923    .text.hal_mcu_disable_low_power_wait:0000000000000000 $t
     /tmp/ccwAxJ3w.s:930    .text.hal_mcu_disable_low_power_wait:0000000000000000 hal_mcu_disable_low_power_wait
     /tmp/ccwAxJ3w.s:966    .text.hal_mcu_disable_low_power_wait:000000000000001c $d
     /tmp/ccwAxJ3w.s:972    .text.hal_mcu_enable_low_power_wait:0000000000000000 $t
     /tmp/ccwAxJ3w.s:979    .text.hal_mcu_enable_low_power_wait:0000000000000000 hal_mcu_enable_low_power_wait
     /tmp/ccwAxJ3w.s:1015   .text.hal_mcu_enable_low_power_wait:000000000000001c $d
     /tmp/ccwAxJ3w.s:1021   .text.hal_mcu_disable_once_low_power_wait:0000000000000000 $t
     /tmp/ccwAxJ3w.s:1028   .text.hal_mcu_disable_once_low_power_wait:0000000000000000 hal_mcu_disable_once_low_power_wait
     /tmp/ccwAxJ3w.s:1064   .text.hal_mcu_disable_once_low_power_wait:000000000000001c $d
     /tmp/ccwAxJ3w.s:1070   .text.SysTick_Handler:0000000000000000 $t
     /tmp/ccwAxJ3w.s:1077   .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/ccwAxJ3w.s:1102   .text.hal_mcu_trace_print:0000000000000000 $t
     /tmp/ccwAxJ3w.s:2106   .text.vprint:0000000000000000 vprint
     /tmp/ccwAxJ3w.s:1166   .text.hal_mcu_partial_sleep_enable:0000000000000000 $t
     /tmp/ccwAxJ3w.s:1173   .text.hal_mcu_partial_sleep_enable:0000000000000000 hal_mcu_partial_sleep_enable
     /tmp/ccwAxJ3w.s:1213   .text.hal_mcu_partial_sleep_enable:000000000000001c $d
     /tmp/ccwAxJ3w.s:1218   .text.hal_mcu_system_clock_config:0000000000000000 $t
     /tmp/ccwAxJ3w.s:1389   .text.hal_mcu_system_clock_config:0000000000000124 $d
     /tmp/ccwAxJ3w.s:1397   .text.hal_mcu_pvd_config:0000000000000000 $t
     /tmp/ccwAxJ3w.s:1454   .text.hal_mcu_gpio_init:0000000000000000 $t
     /tmp/ccwAxJ3w.s:1561   .text.hal_mcu_gpio_init:0000000000000094 $d
     /tmp/ccwAxJ3w.s:1566   .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccwAxJ3w.s:1573   .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccwAxJ3w.s:1667   .text.HAL_MspInit:0000000000000098 $d
     /tmp/ccwAxJ3w.s:1672   .text.hal_mcu_lpm_enter_stop_mode:0000000000000000 $t
     /tmp/ccwAxJ3w.s:1678   .text.hal_mcu_lpm_enter_stop_mode:0000000000000000 hal_mcu_lpm_enter_stop_mode
     /tmp/ccwAxJ3w.s:1850   .text.hal_mcu_deinit:0000000000000000 hal_mcu_deinit
     /tmp/ccwAxJ3w.s:1734   .text.hal_mcu_lpm_enter_stop_mode:000000000000003c $d
     /tmp/ccwAxJ3w.s:1739   .text.hal_mcu_lpm_exit_stop_mode:0000000000000000 $t
     /tmp/ccwAxJ3w.s:1745   .text.hal_mcu_lpm_exit_stop_mode:0000000000000000 hal_mcu_lpm_exit_stop_mode
     /tmp/ccwAxJ3w.s:1893   .text.hal_mcu_reinit:0000000000000000 hal_mcu_reinit
     /tmp/ccwAxJ3w.s:1786   .text.hal_mcu_low_power_handler:0000000000000000 $t
     /tmp/ccwAxJ3w.s:1793   .text.hal_mcu_low_power_handler:0000000000000000 hal_mcu_low_power_handler
     /tmp/ccwAxJ3w.s:1844   .text.hal_mcu_deinit:0000000000000000 $t
     /tmp/ccwAxJ3w.s:1882   .text.hal_mcu_deinit:0000000000000020 $d
     /tmp/ccwAxJ3w.s:1887   .text.hal_mcu_reinit:0000000000000000 $t
     /tmp/ccwAxJ3w.s:1945   .text.hal_mcu_system_clock_re_config_after_stop:0000000000000000 hal_mcu_system_clock_re_config_after_stop
     /tmp/ccwAxJ3w.s:1934   .text.hal_mcu_reinit:0000000000000034 $d
     /tmp/ccwAxJ3w.s:1939   .text.hal_mcu_system_clock_re_config_after_stop:0000000000000000 $t
     /tmp/ccwAxJ3w.s:2093   .text.hal_mcu_system_clock_re_config_after_stop:00000000000000fc $d
     /tmp/ccwAxJ3w.s:2100   .text.vprint:0000000000000000 $t
     /tmp/ccwAxJ3w.s:2179   .text.on_soft_watchdog_event:0000000000000000 $t
     /tmp/ccwAxJ3w.s:2227   .text.on_soft_watchdog_event:000000000000002c $d
     /tmp/ccwAxJ3w.s:2239   .text.HardFault_Handler:0000000000000000 $t
     /tmp/ccwAxJ3w.s:2246   .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/ccwAxJ3w.s:2277   .text.HardFault_Handler:0000000000000024 $d
     /tmp/ccwAxJ3w.s:2289   .text.PVD_PVM_IRQHandler:0000000000000000 $t
     /tmp/ccwAxJ3w.s:2296   .text.PVD_PVM_IRQHandler:0000000000000000 PVD_PVM_IRQHandler
     /tmp/ccwAxJ3w.s:2337   .text.PVD_PVM_IRQHandler:0000000000000034 $d
     /tmp/ccwAxJ3w.s:2346   .rodata.__func__.0:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_Init
hal_tmr_init
flash_init
ARM GAS  /tmp/ccwAxJ3w.s 			page 106


hal_uart_init
hal_spi_init
lr1110_modem_board_init_io_context
lr1110_modem_board_init_io
hal_rtc_init
hal_i2c_init
timer_init
timer_set_value
timer_start
timer_reset
HAL_IncTick
HAL_SYSTICK_IRQHandler
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_PWR_ConfigPVD
HAL_PWR_EnablePVD
HAL_NVIC_EnableIRQ
HAL_DBGMCU_DisableDBGSleepMode
HAL_DBGMCU_DisableDBGStopMode
HAL_DBGMCU_DisableDBGStandbyMode
HAL_NVIC_SetPriorityGrouping
HAL_PWREx_EnterSTOP2Mode
hal_spi_deinit
lr1110_modem_board_deinit_io
hal_i2c_deinit
hal_uart_deinit
vsprintf
strlen
hal_uart_tx
