ARM GAS  /tmp/ccXuXBwl.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_hal_uart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_UART_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_UART_Init:
  27              	.LFB313:
  28              		.file 1 "../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c"
   1:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
   2:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
   3:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @file    stm32l4xx_hal_uart.c
   4:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @author  MCD Application Team
   5:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           + IO operation functions
  10:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           + Peripheral Control functions
  11:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  12:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
  13:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   @verbatim
  14:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
  15:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                         ##### How to use this driver #####
  16:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
  17:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   [..]
  18:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  19:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  20:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  21:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  22:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Enable the USARTx interface clock.
  23:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) UART pins configuration:
  24:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  25:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure these UART pins as alternate function pull-up.
  26:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  27:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  28:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  29:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  30:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) UART interrupts handling:
ARM GAS  /tmp/ccXuXBwl.s 			page 2


  31:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               -@@-  The specific UART interrupts (Transmission complete interrupt,
  32:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                 RXNE interrupt, RX/TX FIFOs related interrupts and Error Interrupts)
  33:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                 are managed using the macros __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT()
  34:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                 inside the transmit and receive processes.
  35:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  36:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
  37:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx channel.
  38:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  39:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required Tx/Rx parameters.
  40:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx channel.
  41:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  42:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  43:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  44:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Prescaler value , Hardware
  45:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         flow control and Mode (Receiver/Transmitter) in the huart handle Init structure.
  46:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  47:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) If required, program UART advanced features (TX/RX pins swap, auto Baud rate detection,...)
  48:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         in the huart handle AdvancedInit structure.
  49:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  50:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  51:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         the HAL_UART_Init() API.
  52:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  53:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  54:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  55:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  56:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART LIN (Local Interconnection Network) mode, initialize the UART registers
  57:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_LIN_Init() API.
  58:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  59:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART Multiprocessor mode, initialize the UART registers
  60:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_MultiProcessor_Init() API.
  61:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  62:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For the UART RS485 Driver Enabled mode, initialize the UART registers
  63:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         by calling the HAL_RS485Ex_Init() API.
  64:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  65:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  66:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (@) These API's (HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init(), HAL_MultiProcessor_Ini
  67:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         also configure the low level Hardware GPIO, CLOCK, CORTEX...etc) by
  68:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         calling the customized HAL_UART_MspInit() API.
  69:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  70:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ##### Callback registration #####
  71:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     ==================================
  72:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  73:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  74:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  75:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  76:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  77:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  78:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Use Function @ref HAL_UART_RegisterCallback() to register a user callback.
  79:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Function @ref HAL_UART_RegisterCallback() allows to register following callbacks:
  80:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  81:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  82:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  83:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  84:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  85:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  86:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  87:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
ARM GAS  /tmp/ccXuXBwl.s 			page 3


  88:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
  89:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
  90:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
  91:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  92:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  93:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
  94:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and a pointer to the user callback function.
  95:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
  96:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
  97:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Use function @ref HAL_UART_UnRegisterCallback() to reset a callback to the default
  98:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     weak (surcharged) function.
  99:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     @ref HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 100:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and the Callback ID.
 101:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This function allows to reset following callbacks:
 102:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
 103:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
 104:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
 105:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 106:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 107:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 108:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 109:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 110:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) WakeupCallback            : Wakeup Callback.
 111:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) RxFifoFullCallback        : Rx Fifo Full Callback.
 112:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) TxFifoEmptyCallback       : Tx Fifo Empty Callback.
 113:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 114:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 115:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 116:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 117:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     By default, after the @ref HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 118:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 119:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     examples @ref HAL_UART_TxCpltCallback(), @ref HAL_UART_RxHalfCpltCallback().
 120:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 121:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the @ref HAL_UART_Init()
 122:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and @ref HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 123:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the @ref HAL_UART_Init() and @ref HAL_UART_DeInit()
 124:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 125:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 126:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 127:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 128:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 129:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 130:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 131:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 132:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     using @ref HAL_UART_RegisterCallback() before calling @ref HAL_UART_DeInit()
 133:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     or @ref HAL_UART_Init() function.
 134:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 135:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 136:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 137:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     not defined, the callback registration feature is not available
 138:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 139:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 140:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 141:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   @endverbatim
 142:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
 143:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @attention
 144:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
ARM GAS  /tmp/ccXuXBwl.s 			page 4


 145:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 146:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * All rights reserved.</center></h2>
 147:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
 148:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 149:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * the "License"; You may not use this file except in compliance with the
 150:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * License. You may obtain a copy of the License at:
 151:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 152:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
 153:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ******************************************************************************
 154:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 155:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 156:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 157:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #include "stm32l4xx_hal.h"
 158:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 159:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @addtogroup STM32L4xx_HAL_Driver
 160:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 161:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 162:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 163:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART UART
 164:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief HAL UART module driver
 165:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 166:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 167:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 168:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 169:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 170:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 171:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 172:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Private_Constants UART Private Constants
 173:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 174:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 175:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 176:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 177:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8| \
 178:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR1_FIFOEN ))                      /*!< UART or USART C
 179:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 180:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR1_FIELDS  ((uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | \
 181:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8 )) /*!< UART or
 182:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 183:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 184:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 185:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT| \
 186:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                       USART_CR3_TXFTCFG | USART_CR3_RXFTCFG ))  /*!< UART or USART 
 187:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 188:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define USART_CR3_FIELDS  ((uint32_t)(USART_CR3_RTSE | USART_CR3_CTSE | USART_CR3_ONEBIT))  /*!< UA
 189:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 190:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 191:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define LPUART_BRR_MIN  0x00000300U  /* LPUART BRR minimum authorized value */
 192:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define LPUART_BRR_MAX  0x000FFFFFU  /* LPUART BRR maximum authorized value */
 193:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 194:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define UART_BRR_MIN    0x10U        /* UART BRR minimum authorized value */
 195:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #define UART_BRR_MAX    0x0000FFFFU  /* UART BRR maximum authorized value */
 196:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 197:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 198:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
 199:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 200:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 201:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private macros ------------------------------------------------------------*/
ARM GAS  /tmp/ccXuXBwl.s 			page 5


 202:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 203:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 204:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions
 205:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 206:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 207:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 208:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 209:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 210:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 211:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 212:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 213:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 214:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 215:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 216:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 217:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 218:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 219:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart);
 220:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart);
 221:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 222:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 223:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 224:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 225:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 226:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart);
 227:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart);
 228:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 229:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart);
 230:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart);
 231:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 232:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 233:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
 234:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 235:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 236:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /* Exported functions --------------------------------------------------------*/
 237:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 238:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 239:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 240:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 241:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 242:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
 243:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 244:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
 245:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
 246:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** ===============================================================================
 247:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 248:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
 249:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 250:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 251:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in asynchronous mode.
 252:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) For the asynchronous mode the parameters below can be configured:
 253:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Baud Rate
 254:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Word Length
 255:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Stop Bit
 256:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 257:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 258:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Hardware flow control
ARM GAS  /tmp/ccXuXBwl.s 			page 6


 259:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 260:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) Over Sampling Method
 261:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) One-Bit Sampling Method
 262:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) For the asynchronous mode, the following advanced features can be configured as well:
 263:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) TX and/or RX pin level inversion
 264:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) data logical level inversion
 265:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) RX and TX pins swap
 266:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) RX overrun detection disabling
 267:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) DMA disabling on RX error
 268:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) MSB first on communication line
 269:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (++) auto Baud rate detection
 270:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
 271:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init()and HAL_MultiProcessor_Init()API
 272:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, UART LIN mode
 273:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and UART multiprocessor mode configuration procedures (details for the procedures
 274:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     are available in reference manual).
 275:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 276:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
 277:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 278:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   Depending on the frame length defined by the M1 and M0 bits (7-bit,
 279:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   8-bit or 9-bit), the possible UART formats are listed in the
 280:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   following table.
 281:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 282:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   Table 1. UART frame format.
 283:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 284:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |  M1 bit |  M0 bit |  PCE bit  |             UART frame                |
 285:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 286:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    0    |    0      |    | SB |    8 bit data   | STB |     |
 287:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 288:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 289:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 290:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    1    |    0      |    | SB |    9 bit data   | STB |     |
 291:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 292:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    0    |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 293:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 294:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    1    |    0    |    0      |    | SB |    7 bit data   | STB |     |
 295:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |---------|---------|-----------|---------------------------------------|
 296:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     |    1    |    0    |    1      |    | SB | 6 bit data | PB | STB |     |
 297:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     +-----------------------------------------------------------------------+
 298:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 299:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
 300:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 301:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 302:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 303:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the UART mode according to the specified
 304:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 305:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 306:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 307:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 308:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 309:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
  29              		.loc 1 309 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
ARM GAS  /tmp/ccXuXBwl.s 			page 7


  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 310:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 311:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
  45              		.loc 1 311 6
  46 0008 7B68     		ldr	r3, [r7, #4]
  47 000a 002B     		cmp	r3, #0
  48 000c 01D1     		bne	.L2
 312:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 313:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
  49              		.loc 1 313 12
  50 000e 0123     		movs	r3, #1
  51 0010 40E0     		b	.L3
  52              	.L2:
 314:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 315:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 316:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 317:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 318:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check the parameters */
 319:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 320:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 321:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 322:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 323:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check the parameters */
 324:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 325:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 326:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 327:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
  53              		.loc 1 327 12
  54 0012 7B68     		ldr	r3, [r7, #4]
  55 0014 5B6F     		ldr	r3, [r3, #116]
  56              		.loc 1 327 6
  57 0016 002B     		cmp	r3, #0
  58 0018 06D1     		bne	.L4
 328:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 329:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 330:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  59              		.loc 1 330 17
  60 001a 7B68     		ldr	r3, [r7, #4]
  61 001c 0022     		movs	r2, #0
  62 001e 83F87020 		strb	r2, [r3, #112]
 331:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 332:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 333:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 334:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 335:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 336:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 337:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 338:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
ARM GAS  /tmp/ccXuXBwl.s 			page 8


 339:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 340:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 341:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 342:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 343:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 344:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
  63              		.loc 1 344 5
  64 0022 7868     		ldr	r0, [r7, #4]
  65 0024 FFF7FEFF 		bl	HAL_UART_MspInit
  66              	.L4:
 345:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 346:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 347:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 348:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
  67              		.loc 1 348 17
  68 0028 7B68     		ldr	r3, [r7, #4]
  69 002a 2422     		movs	r2, #36
  70 002c 5A67     		str	r2, [r3, #116]
 349:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 350:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  71              		.loc 1 350 3
  72 002e 7B68     		ldr	r3, [r7, #4]
  73 0030 1B68     		ldr	r3, [r3]
  74 0032 1A68     		ldr	r2, [r3]
  75 0034 7B68     		ldr	r3, [r7, #4]
  76 0036 1B68     		ldr	r3, [r3]
  77 0038 22F00102 		bic	r2, r2, #1
  78 003c 1A60     		str	r2, [r3]
 351:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 352:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 353:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
  79              		.loc 1 353 7
  80 003e 7868     		ldr	r0, [r7, #4]
  81 0040 FFF7FEFF 		bl	UART_SetConfig
  82 0044 0346     		mov	r3, r0
  83              		.loc 1 353 6
  84 0046 012B     		cmp	r3, #1
  85 0048 01D1     		bne	.L5
 354:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 355:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
  86              		.loc 1 355 12
  87 004a 0123     		movs	r3, #1
  88 004c 22E0     		b	.L3
  89              	.L5:
 356:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 357:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 358:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
  90              		.loc 1 358 26
  91 004e 7B68     		ldr	r3, [r7, #4]
  92 0050 5B6A     		ldr	r3, [r3, #36]
  93              		.loc 1 358 6
  94 0052 002B     		cmp	r3, #0
  95 0054 02D0     		beq	.L6
 359:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 360:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
  96              		.loc 1 360 5
  97 0056 7868     		ldr	r0, [r7, #4]
ARM GAS  /tmp/ccXuXBwl.s 			page 9


  98 0058 FFF7FEFF 		bl	UART_AdvFeatureConfig
  99              	.L6:
 361:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 362:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 363:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 364:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 365:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 366:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 100              		.loc 1 366 3
 101 005c 7B68     		ldr	r3, [r7, #4]
 102 005e 1B68     		ldr	r3, [r3]
 103 0060 5A68     		ldr	r2, [r3, #4]
 104 0062 7B68     		ldr	r3, [r7, #4]
 105 0064 1B68     		ldr	r3, [r3]
 106 0066 22F49042 		bic	r2, r2, #18432
 107 006a 5A60     		str	r2, [r3, #4]
 367:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 108              		.loc 1 367 3
 109 006c 7B68     		ldr	r3, [r7, #4]
 110 006e 1B68     		ldr	r3, [r3]
 111 0070 9A68     		ldr	r2, [r3, #8]
 112 0072 7B68     		ldr	r3, [r7, #4]
 113 0074 1B68     		ldr	r3, [r3]
 114 0076 22F02A02 		bic	r2, r2, #42
 115 007a 9A60     		str	r2, [r3, #8]
 368:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 369:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 116              		.loc 1 369 3
 117 007c 7B68     		ldr	r3, [r7, #4]
 118 007e 1B68     		ldr	r3, [r3]
 119 0080 1A68     		ldr	r2, [r3]
 120 0082 7B68     		ldr	r3, [r7, #4]
 121 0084 1B68     		ldr	r3, [r3]
 122 0086 42F00102 		orr	r2, r2, #1
 123 008a 1A60     		str	r2, [r3]
 370:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 371:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 372:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 124              		.loc 1 372 11
 125 008c 7868     		ldr	r0, [r7, #4]
 126 008e FFF7FEFF 		bl	UART_CheckIdleState
 127 0092 0346     		mov	r3, r0
 128              	.L3:
 373:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 129              		.loc 1 373 1
 130 0094 1846     		mov	r0, r3
 131 0096 0837     		adds	r7, r7, #8
 132              	.LCFI3:
 133              		.cfi_def_cfa_offset 8
 134 0098 BD46     		mov	sp, r7
 135              	.LCFI4:
 136              		.cfi_def_cfa_register 13
 137              		@ sp needed
 138 009a 80BD     		pop	{r7, pc}
 139              		.cfi_endproc
 140              	.LFE313:
 142              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
ARM GAS  /tmp/ccXuXBwl.s 			page 10


 143              		.align	1
 144              		.global	HAL_HalfDuplex_Init
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv4-sp-d16
 150              	HAL_HalfDuplex_Init:
 151              	.LFB314:
 374:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 375:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 376:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the half-duplex mode according to the specified
 377:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 378:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 379:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 380:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 381:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 382:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 152              		.loc 1 382 1
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 8
 155              		@ frame_needed = 1, uses_anonymous_args = 0
 156 0000 80B5     		push	{r7, lr}
 157              	.LCFI5:
 158              		.cfi_def_cfa_offset 8
 159              		.cfi_offset 7, -8
 160              		.cfi_offset 14, -4
 161 0002 82B0     		sub	sp, sp, #8
 162              	.LCFI6:
 163              		.cfi_def_cfa_offset 16
 164 0004 00AF     		add	r7, sp, #0
 165              	.LCFI7:
 166              		.cfi_def_cfa_register 7
 167 0006 7860     		str	r0, [r7, #4]
 383:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 384:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 168              		.loc 1 384 6
 169 0008 7B68     		ldr	r3, [r7, #4]
 170 000a 002B     		cmp	r3, #0
 171 000c 01D1     		bne	.L8
 385:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 386:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 172              		.loc 1 386 12
 173 000e 0123     		movs	r3, #1
 174 0010 48E0     		b	.L9
 175              	.L8:
 387:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 388:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 389:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check UART instance */
 390:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 391:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 392:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 176              		.loc 1 392 12
 177 0012 7B68     		ldr	r3, [r7, #4]
 178 0014 5B6F     		ldr	r3, [r3, #116]
 179              		.loc 1 392 6
 180 0016 002B     		cmp	r3, #0
 181 0018 06D1     		bne	.L10
ARM GAS  /tmp/ccXuXBwl.s 			page 11


 393:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 394:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 395:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 182              		.loc 1 395 17
 183 001a 7B68     		ldr	r3, [r7, #4]
 184 001c 0022     		movs	r2, #0
 185 001e 83F87020 		strb	r2, [r3, #112]
 396:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 397:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 398:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 399:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 400:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 401:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 402:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 403:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 404:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 405:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 406:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 407:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 408:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 409:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 186              		.loc 1 409 5
 187 0022 7868     		ldr	r0, [r7, #4]
 188 0024 FFF7FEFF 		bl	HAL_UART_MspInit
 189              	.L10:
 410:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 411:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 412:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 413:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 190              		.loc 1 413 17
 191 0028 7B68     		ldr	r3, [r7, #4]
 192 002a 2422     		movs	r2, #36
 193 002c 5A67     		str	r2, [r3, #116]
 414:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 415:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 194              		.loc 1 415 3
 195 002e 7B68     		ldr	r3, [r7, #4]
 196 0030 1B68     		ldr	r3, [r3]
 197 0032 1A68     		ldr	r2, [r3]
 198 0034 7B68     		ldr	r3, [r7, #4]
 199 0036 1B68     		ldr	r3, [r3]
 200 0038 22F00102 		bic	r2, r2, #1
 201 003c 1A60     		str	r2, [r3]
 416:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 417:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 418:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 202              		.loc 1 418 7
 203 003e 7868     		ldr	r0, [r7, #4]
 204 0040 FFF7FEFF 		bl	UART_SetConfig
 205 0044 0346     		mov	r3, r0
 206              		.loc 1 418 6
 207 0046 012B     		cmp	r3, #1
 208 0048 01D1     		bne	.L11
 419:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 420:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 209              		.loc 1 420 12
 210 004a 0123     		movs	r3, #1
ARM GAS  /tmp/ccXuXBwl.s 			page 12


 211 004c 2AE0     		b	.L9
 212              	.L11:
 421:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 422:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 423:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 213              		.loc 1 423 26
 214 004e 7B68     		ldr	r3, [r7, #4]
 215 0050 5B6A     		ldr	r3, [r3, #36]
 216              		.loc 1 423 6
 217 0052 002B     		cmp	r3, #0
 218 0054 02D0     		beq	.L12
 424:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 425:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 219              		.loc 1 425 5
 220 0056 7868     		ldr	r0, [r7, #4]
 221 0058 FFF7FEFF 		bl	UART_AdvFeatureConfig
 222              	.L12:
 426:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 427:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 428:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 429:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 430:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 431:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 223              		.loc 1 431 3
 224 005c 7B68     		ldr	r3, [r7, #4]
 225 005e 1B68     		ldr	r3, [r3]
 226 0060 5A68     		ldr	r2, [r3, #4]
 227 0062 7B68     		ldr	r3, [r7, #4]
 228 0064 1B68     		ldr	r3, [r3]
 229 0066 22F49042 		bic	r2, r2, #18432
 230 006a 5A60     		str	r2, [r3, #4]
 432:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 231              		.loc 1 432 3
 232 006c 7B68     		ldr	r3, [r7, #4]
 233 006e 1B68     		ldr	r3, [r3]
 234 0070 9A68     		ldr	r2, [r3, #8]
 235 0072 7B68     		ldr	r3, [r7, #4]
 236 0074 1B68     		ldr	r3, [r3]
 237 0076 22F02202 		bic	r2, r2, #34
 238 007a 9A60     		str	r2, [r3, #8]
 433:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 434:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 435:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
 239              		.loc 1 435 3
 240 007c 7B68     		ldr	r3, [r7, #4]
 241 007e 1B68     		ldr	r3, [r3]
 242 0080 9A68     		ldr	r2, [r3, #8]
 243 0082 7B68     		ldr	r3, [r7, #4]
 244 0084 1B68     		ldr	r3, [r3]
 245 0086 42F00802 		orr	r2, r2, #8
 246 008a 9A60     		str	r2, [r3, #8]
 436:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 437:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 247              		.loc 1 437 3
 248 008c 7B68     		ldr	r3, [r7, #4]
 249 008e 1B68     		ldr	r3, [r3]
 250 0090 1A68     		ldr	r2, [r3]
ARM GAS  /tmp/ccXuXBwl.s 			page 13


 251 0092 7B68     		ldr	r3, [r7, #4]
 252 0094 1B68     		ldr	r3, [r3]
 253 0096 42F00102 		orr	r2, r2, #1
 254 009a 1A60     		str	r2, [r3]
 438:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 439:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 440:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 255              		.loc 1 440 11
 256 009c 7868     		ldr	r0, [r7, #4]
 257 009e FFF7FEFF 		bl	UART_CheckIdleState
 258 00a2 0346     		mov	r3, r0
 259              	.L9:
 441:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 260              		.loc 1 441 1
 261 00a4 1846     		mov	r0, r3
 262 00a6 0837     		adds	r7, r7, #8
 263              	.LCFI8:
 264              		.cfi_def_cfa_offset 8
 265 00a8 BD46     		mov	sp, r7
 266              	.LCFI9:
 267              		.cfi_def_cfa_register 13
 268              		@ sp needed
 269 00aa 80BD     		pop	{r7, pc}
 270              		.cfi_endproc
 271              	.LFE314:
 273              		.section	.text.HAL_LIN_Init,"ax",%progbits
 274              		.align	1
 275              		.global	HAL_LIN_Init
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 279              		.fpu fpv4-sp-d16
 281              	HAL_LIN_Init:
 282              	.LFB315:
 442:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 443:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 444:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 445:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the LIN mode according to the specified
 446:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and creates the associated handle.
 447:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart             UART handle.
 448:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param BreakDetectLength Specifies the LIN break detection length.
 449:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 450:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_10B 10-bit break detection
 451:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_LINBREAKDETECTLENGTH_11B 11-bit break detection
 452:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 453:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 454:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 455:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 283              		.loc 1 455 1
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 8
 286              		@ frame_needed = 1, uses_anonymous_args = 0
 287 0000 80B5     		push	{r7, lr}
 288              	.LCFI10:
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 7, -8
 291              		.cfi_offset 14, -4
ARM GAS  /tmp/ccXuXBwl.s 			page 14


 292 0002 82B0     		sub	sp, sp, #8
 293              	.LCFI11:
 294              		.cfi_def_cfa_offset 16
 295 0004 00AF     		add	r7, sp, #0
 296              	.LCFI12:
 297              		.cfi_def_cfa_register 7
 298 0006 7860     		str	r0, [r7, #4]
 299 0008 3960     		str	r1, [r7]
 456:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 457:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 300              		.loc 1 457 6
 301 000a 7B68     		ldr	r3, [r7, #4]
 302 000c 002B     		cmp	r3, #0
 303 000e 01D1     		bne	.L14
 458:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 459:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 304              		.loc 1 459 12
 305 0010 0123     		movs	r3, #1
 306 0012 5FE0     		b	.L15
 307              	.L14:
 460:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 461:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 462:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the LIN UART instance */
 463:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 464:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 465:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 466:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 467:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* LIN mode limited to 16-bit oversampling only */
 468:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 308              		.loc 1 468 18
 309 0014 7B68     		ldr	r3, [r7, #4]
 310 0016 DB69     		ldr	r3, [r3, #28]
 311              		.loc 1 468 6
 312 0018 B3F5004F 		cmp	r3, #32768
 313 001c 01D1     		bne	.L16
 469:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 470:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 314              		.loc 1 470 12
 315 001e 0123     		movs	r3, #1
 316 0020 58E0     		b	.L15
 317              	.L16:
 471:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 472:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* LIN mode limited to 8-bit data length */
 473:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->Init.WordLength != UART_WORDLENGTH_8B)
 318              		.loc 1 473 18
 319 0022 7B68     		ldr	r3, [r7, #4]
 320 0024 9B68     		ldr	r3, [r3, #8]
 321              		.loc 1 473 6
 322 0026 002B     		cmp	r3, #0
 323 0028 01D0     		beq	.L17
 474:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 475:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 324              		.loc 1 475 12
 325 002a 0123     		movs	r3, #1
 326 002c 52E0     		b	.L15
 327              	.L17:
 476:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
ARM GAS  /tmp/ccXuXBwl.s 			page 15


 477:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 478:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 328              		.loc 1 478 12
 329 002e 7B68     		ldr	r3, [r7, #4]
 330 0030 5B6F     		ldr	r3, [r3, #116]
 331              		.loc 1 478 6
 332 0032 002B     		cmp	r3, #0
 333 0034 06D1     		bne	.L18
 479:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 480:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 481:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 334              		.loc 1 481 17
 335 0036 7B68     		ldr	r3, [r7, #4]
 336 0038 0022     		movs	r2, #0
 337 003a 83F87020 		strb	r2, [r3, #112]
 482:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 483:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 484:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 485:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 486:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 487:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 488:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 489:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 490:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 491:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 492:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 493:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 494:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 495:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 338              		.loc 1 495 5
 339 003e 7868     		ldr	r0, [r7, #4]
 340 0040 FFF7FEFF 		bl	HAL_UART_MspInit
 341              	.L18:
 496:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 497:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 498:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 499:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 342              		.loc 1 499 17
 343 0044 7B68     		ldr	r3, [r7, #4]
 344 0046 2422     		movs	r2, #36
 345 0048 5A67     		str	r2, [r3, #116]
 500:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 501:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 346              		.loc 1 501 3
 347 004a 7B68     		ldr	r3, [r7, #4]
 348 004c 1B68     		ldr	r3, [r3]
 349 004e 1A68     		ldr	r2, [r3]
 350 0050 7B68     		ldr	r3, [r7, #4]
 351 0052 1B68     		ldr	r3, [r3]
 352 0054 22F00102 		bic	r2, r2, #1
 353 0058 1A60     		str	r2, [r3]
 502:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 503:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 504:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 354              		.loc 1 504 7
 355 005a 7868     		ldr	r0, [r7, #4]
 356 005c FFF7FEFF 		bl	UART_SetConfig
ARM GAS  /tmp/ccXuXBwl.s 			page 16


 357 0060 0346     		mov	r3, r0
 358              		.loc 1 504 6
 359 0062 012B     		cmp	r3, #1
 360 0064 01D1     		bne	.L19
 505:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 506:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 361              		.loc 1 506 12
 362 0066 0123     		movs	r3, #1
 363 0068 34E0     		b	.L15
 364              	.L19:
 507:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 508:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 509:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 365              		.loc 1 509 26
 366 006a 7B68     		ldr	r3, [r7, #4]
 367 006c 5B6A     		ldr	r3, [r3, #36]
 368              		.loc 1 509 6
 369 006e 002B     		cmp	r3, #0
 370 0070 02D0     		beq	.L20
 510:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 511:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 371              		.loc 1 511 5
 372 0072 7868     		ldr	r0, [r7, #4]
 373 0074 FFF7FEFF 		bl	UART_AdvFeatureConfig
 374              	.L20:
 512:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 513:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 514:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 515:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 516:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN and IREN bits in the USART_CR3 register.*/
 517:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_CLKEN);
 375              		.loc 1 517 3
 376 0078 7B68     		ldr	r3, [r7, #4]
 377 007a 1B68     		ldr	r3, [r3]
 378 007c 5A68     		ldr	r2, [r3, #4]
 379 007e 7B68     		ldr	r3, [r7, #4]
 380 0080 1B68     		ldr	r3, [r3]
 381 0082 22F40062 		bic	r2, r2, #2048
 382 0086 5A60     		str	r2, [r3, #4]
 518:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 383              		.loc 1 518 3
 384 0088 7B68     		ldr	r3, [r7, #4]
 385 008a 1B68     		ldr	r3, [r3]
 386 008c 9A68     		ldr	r2, [r3, #8]
 387 008e 7B68     		ldr	r3, [r7, #4]
 388 0090 1B68     		ldr	r3, [r3]
 389 0092 22F02A02 		bic	r2, r2, #42
 390 0096 9A60     		str	r2, [r3, #8]
 519:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 520:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 521:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 391              		.loc 1 521 3
 392 0098 7B68     		ldr	r3, [r7, #4]
 393 009a 1B68     		ldr	r3, [r3]
 394 009c 5A68     		ldr	r2, [r3, #4]
 395 009e 7B68     		ldr	r3, [r7, #4]
 396 00a0 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccXuXBwl.s 			page 17


 397 00a2 42F48042 		orr	r2, r2, #16384
 398 00a6 5A60     		str	r2, [r3, #4]
 522:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 523:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 524:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_LBDL, BreakDetectLength);
 399              		.loc 1 524 3
 400 00a8 7B68     		ldr	r3, [r7, #4]
 401 00aa 1B68     		ldr	r3, [r3]
 402 00ac 5B68     		ldr	r3, [r3, #4]
 403 00ae 23F02001 		bic	r1, r3, #32
 404 00b2 7B68     		ldr	r3, [r7, #4]
 405 00b4 1B68     		ldr	r3, [r3]
 406 00b6 3A68     		ldr	r2, [r7]
 407 00b8 0A43     		orrs	r2, r2, r1
 408 00ba 5A60     		str	r2, [r3, #4]
 525:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 526:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 409              		.loc 1 526 3
 410 00bc 7B68     		ldr	r3, [r7, #4]
 411 00be 1B68     		ldr	r3, [r3]
 412 00c0 1A68     		ldr	r2, [r3]
 413 00c2 7B68     		ldr	r3, [r7, #4]
 414 00c4 1B68     		ldr	r3, [r3]
 415 00c6 42F00102 		orr	r2, r2, #1
 416 00ca 1A60     		str	r2, [r3]
 527:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 528:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 529:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 417              		.loc 1 529 11
 418 00cc 7868     		ldr	r0, [r7, #4]
 419 00ce FFF7FEFF 		bl	UART_CheckIdleState
 420 00d2 0346     		mov	r3, r0
 421              	.L15:
 530:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 422              		.loc 1 530 1
 423 00d4 1846     		mov	r0, r3
 424 00d6 0837     		adds	r7, r7, #8
 425              	.LCFI13:
 426              		.cfi_def_cfa_offset 8
 427 00d8 BD46     		mov	sp, r7
 428              	.LCFI14:
 429              		.cfi_def_cfa_register 13
 430              		@ sp needed
 431 00da 80BD     		pop	{r7, pc}
 432              		.cfi_endproc
 433              	.LFE315:
 435              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 436              		.align	1
 437              		.global	HAL_MultiProcessor_Init
 438              		.syntax unified
 439              		.thumb
 440              		.thumb_func
 441              		.fpu fpv4-sp-d16
 443              	HAL_MultiProcessor_Init:
 444              	.LFB316:
 531:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 532:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccXuXBwl.s 			page 18


 533:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 534:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the multiprocessor mode according to the specified
 535:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        parameters in the UART_InitTypeDef and initialize the associated handle.
 536:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart        UART handle.
 537:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Address      UART node address (4-, 6-, 7- or 8-bit long).
 538:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param WakeUpMethod Specifies the UART wakeup method.
 539:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        This parameter can be one of the following values:
 540:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_IDLELINE WakeUp by an idle line detection
 541:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *          @arg @ref UART_WAKEUPMETHOD_ADDRESSMARK WakeUp by an address mark
 542:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note  If the user resorts to idle line detection wake up, the Address parameter
 543:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        is useless and ignored by the initialization function.
 544:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note  If the user resorts to address mark wake up, the address length detection
 545:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        is configured by default to 4 bits only. For the UART to be able to
 546:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        manage 6-, 7- or 8-bit long addresses detection, the API
 547:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        HAL_MultiProcessorEx_AddressLength_Set() must be called after
 548:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *        HAL_MultiProcessor_Init().
 549:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 550:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 551:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 552:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 445              		.loc 1 552 1
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 16
 448              		@ frame_needed = 1, uses_anonymous_args = 0
 449 0000 80B5     		push	{r7, lr}
 450              	.LCFI15:
 451              		.cfi_def_cfa_offset 8
 452              		.cfi_offset 7, -8
 453              		.cfi_offset 14, -4
 454 0002 84B0     		sub	sp, sp, #16
 455              	.LCFI16:
 456              		.cfi_def_cfa_offset 24
 457 0004 00AF     		add	r7, sp, #0
 458              	.LCFI17:
 459              		.cfi_def_cfa_register 7
 460 0006 F860     		str	r0, [r7, #12]
 461 0008 0B46     		mov	r3, r1
 462 000a 7A60     		str	r2, [r7, #4]
 463 000c FB72     		strb	r3, [r7, #11]
 553:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 554:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 464              		.loc 1 554 6
 465 000e FB68     		ldr	r3, [r7, #12]
 466 0010 002B     		cmp	r3, #0
 467 0012 01D1     		bne	.L22
 555:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 556:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 468              		.loc 1 556 12
 469 0014 0123     		movs	r3, #1
 470 0016 59E0     		b	.L23
 471              	.L22:
 557:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 558:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 559:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the wake up method parameter */
 560:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 561:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 562:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
ARM GAS  /tmp/ccXuXBwl.s 			page 19


 472              		.loc 1 562 12
 473 0018 FB68     		ldr	r3, [r7, #12]
 474 001a 5B6F     		ldr	r3, [r3, #116]
 475              		.loc 1 562 6
 476 001c 002B     		cmp	r3, #0
 477 001e 06D1     		bne	.L24
 563:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 564:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 565:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 478              		.loc 1 565 17
 479 0020 FB68     		ldr	r3, [r7, #12]
 480 0022 0022     		movs	r2, #0
 481 0024 83F87020 		strb	r2, [r3, #112]
 566:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 567:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 568:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 569:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 570:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 571:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 572:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 573:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 574:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 575:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware */
 576:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 577:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 578:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 579:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 482              		.loc 1 579 5
 483 0028 F868     		ldr	r0, [r7, #12]
 484 002a FFF7FEFF 		bl	HAL_UART_MspInit
 485              	.L24:
 580:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 581:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 582:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 583:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 486              		.loc 1 583 17
 487 002e FB68     		ldr	r3, [r7, #12]
 488 0030 2422     		movs	r2, #36
 489 0032 5A67     		str	r2, [r3, #116]
 584:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 585:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 490              		.loc 1 585 3
 491 0034 FB68     		ldr	r3, [r7, #12]
 492 0036 1B68     		ldr	r3, [r3]
 493 0038 1A68     		ldr	r2, [r3]
 494 003a FB68     		ldr	r3, [r7, #12]
 495 003c 1B68     		ldr	r3, [r3]
 496 003e 22F00102 		bic	r2, r2, #1
 497 0042 1A60     		str	r2, [r3]
 586:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 587:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 588:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_SetConfig(huart) == HAL_ERROR)
 498              		.loc 1 588 7
 499 0044 F868     		ldr	r0, [r7, #12]
 500 0046 FFF7FEFF 		bl	UART_SetConfig
 501 004a 0346     		mov	r3, r0
 502              		.loc 1 588 6
ARM GAS  /tmp/ccXuXBwl.s 			page 20


 503 004c 012B     		cmp	r3, #1
 504 004e 01D1     		bne	.L25
 589:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 590:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 505              		.loc 1 590 12
 506 0050 0123     		movs	r3, #1
 507 0052 3BE0     		b	.L23
 508              	.L25:
 591:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 592:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 593:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 509              		.loc 1 593 26
 510 0054 FB68     		ldr	r3, [r7, #12]
 511 0056 5B6A     		ldr	r3, [r3, #36]
 512              		.loc 1 593 6
 513 0058 002B     		cmp	r3, #0
 514 005a 02D0     		beq	.L26
 594:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 595:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_AdvFeatureConfig(huart);
 515              		.loc 1 595 5
 516 005c F868     		ldr	r0, [r7, #12]
 517 005e FFF7FEFF 		bl	UART_AdvFeatureConfig
 518              	.L26:
 596:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 597:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 598:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* In multiprocessor mode, the following bits must be kept cleared:
 599:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - LINEN and CLKEN bits in the USART_CR2 register,
 600:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   - SCEN, HDSEL and IREN  bits in the USART_CR3 register. */
 601:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 519              		.loc 1 601 3
 520 0062 FB68     		ldr	r3, [r7, #12]
 521 0064 1B68     		ldr	r3, [r3]
 522 0066 5A68     		ldr	r2, [r3, #4]
 523 0068 FB68     		ldr	r3, [r7, #12]
 524 006a 1B68     		ldr	r3, [r3]
 525 006c 22F49042 		bic	r2, r2, #18432
 526 0070 5A60     		str	r2, [r3, #4]
 602:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 527              		.loc 1 602 3
 528 0072 FB68     		ldr	r3, [r7, #12]
 529 0074 1B68     		ldr	r3, [r3]
 530 0076 9A68     		ldr	r2, [r3, #8]
 531 0078 FB68     		ldr	r3, [r7, #12]
 532 007a 1B68     		ldr	r3, [r3]
 533 007c 22F02A02 		bic	r2, r2, #42
 534 0080 9A60     		str	r2, [r3, #8]
 603:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 604:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (WakeUpMethod == UART_WAKEUPMETHOD_ADDRESSMARK)
 535              		.loc 1 604 6
 536 0082 7B68     		ldr	r3, [r7, #4]
 537 0084 B3F5006F 		cmp	r3, #2048
 538 0088 0AD1     		bne	.L27
 605:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 606:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* If address mark wake up method is chosen, set the USART address node */
 607:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ADD, ((uint32_t)Address << UART_CR2_ADDRESS_LSB_POS)
 539              		.loc 1 607 5
 540 008a FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccXuXBwl.s 			page 21


 541 008c 1B68     		ldr	r3, [r3]
 542 008e 5B68     		ldr	r3, [r3, #4]
 543 0090 23F07F41 		bic	r1, r3, #-16777216
 544 0094 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 545 0096 1A06     		lsls	r2, r3, #24
 546 0098 FB68     		ldr	r3, [r7, #12]
 547 009a 1B68     		ldr	r3, [r3]
 548 009c 0A43     		orrs	r2, r2, r1
 549 009e 5A60     		str	r2, [r3, #4]
 550              	.L27:
 608:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 609:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 610:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 611:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_WAKE, WakeUpMethod);
 551              		.loc 1 611 3
 552 00a0 FB68     		ldr	r3, [r7, #12]
 553 00a2 1B68     		ldr	r3, [r3]
 554 00a4 1B68     		ldr	r3, [r3]
 555 00a6 23F40061 		bic	r1, r3, #2048
 556 00aa FB68     		ldr	r3, [r7, #12]
 557 00ac 1B68     		ldr	r3, [r3]
 558 00ae 7A68     		ldr	r2, [r7, #4]
 559 00b0 0A43     		orrs	r2, r2, r1
 560 00b2 1A60     		str	r2, [r3]
 612:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 613:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 561              		.loc 1 613 3
 562 00b4 FB68     		ldr	r3, [r7, #12]
 563 00b6 1B68     		ldr	r3, [r3]
 564 00b8 1A68     		ldr	r2, [r3]
 565 00ba FB68     		ldr	r3, [r7, #12]
 566 00bc 1B68     		ldr	r3, [r3]
 567 00be 42F00102 		orr	r2, r2, #1
 568 00c2 1A60     		str	r2, [r3]
 614:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 615:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
 616:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 569              		.loc 1 616 11
 570 00c4 F868     		ldr	r0, [r7, #12]
 571 00c6 FFF7FEFF 		bl	UART_CheckIdleState
 572 00ca 0346     		mov	r3, r0
 573              	.L23:
 617:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 574              		.loc 1 617 1
 575 00cc 1846     		mov	r0, r3
 576 00ce 1037     		adds	r7, r7, #16
 577              	.LCFI18:
 578              		.cfi_def_cfa_offset 8
 579 00d0 BD46     		mov	sp, r7
 580              	.LCFI19:
 581              		.cfi_def_cfa_register 13
 582              		@ sp needed
 583 00d2 80BD     		pop	{r7, pc}
 584              		.cfi_endproc
 585              	.LFE316:
 587              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 588              		.align	1
ARM GAS  /tmp/ccXuXBwl.s 			page 22


 589              		.global	HAL_UART_DeInit
 590              		.syntax unified
 591              		.thumb
 592              		.thumb_func
 593              		.fpu fpv4-sp-d16
 595              	HAL_UART_DeInit:
 596              	.LFB317:
 618:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 619:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 620:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 621:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DeInitialize the UART peripheral.
 622:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 623:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 624:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 625:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 626:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 597              		.loc 1 626 1
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 8
 600              		@ frame_needed = 1, uses_anonymous_args = 0
 601 0000 80B5     		push	{r7, lr}
 602              	.LCFI20:
 603              		.cfi_def_cfa_offset 8
 604              		.cfi_offset 7, -8
 605              		.cfi_offset 14, -4
 606 0002 82B0     		sub	sp, sp, #8
 607              	.LCFI21:
 608              		.cfi_def_cfa_offset 16
 609 0004 00AF     		add	r7, sp, #0
 610              	.LCFI22:
 611              		.cfi_def_cfa_register 7
 612 0006 7860     		str	r0, [r7, #4]
 627:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the UART handle allocation */
 628:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart == NULL)
 613              		.loc 1 628 6
 614 0008 7B68     		ldr	r3, [r7, #4]
 615 000a 002B     		cmp	r3, #0
 616 000c 01D1     		bne	.L29
 629:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 630:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 617              		.loc 1 630 12
 618 000e 0123     		movs	r3, #1
 619 0010 27E0     		b	.L30
 620              	.L29:
 631:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 632:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 633:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
 634:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
 635:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 636:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 621              		.loc 1 636 17
 622 0012 7B68     		ldr	r3, [r7, #4]
 623 0014 2422     		movs	r2, #36
 624 0016 5A67     		str	r2, [r3, #116]
 637:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 638:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 625              		.loc 1 638 3
ARM GAS  /tmp/ccXuXBwl.s 			page 23


 626 0018 7B68     		ldr	r3, [r7, #4]
 627 001a 1B68     		ldr	r3, [r3]
 628 001c 1A68     		ldr	r2, [r3]
 629 001e 7B68     		ldr	r3, [r7, #4]
 630 0020 1B68     		ldr	r3, [r3]
 631 0022 22F00102 		bic	r2, r2, #1
 632 0026 1A60     		str	r2, [r3]
 639:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 640:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR1 = 0x0U;
 633              		.loc 1 640 8
 634 0028 7B68     		ldr	r3, [r7, #4]
 635 002a 1B68     		ldr	r3, [r3]
 636              		.loc 1 640 24
 637 002c 0022     		movs	r2, #0
 638 002e 1A60     		str	r2, [r3]
 641:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR2 = 0x0U;
 639              		.loc 1 641 8
 640 0030 7B68     		ldr	r3, [r7, #4]
 641 0032 1B68     		ldr	r3, [r3]
 642              		.loc 1 641 24
 643 0034 0022     		movs	r2, #0
 644 0036 5A60     		str	r2, [r3, #4]
 642:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->Instance->CR3 = 0x0U;
 645              		.loc 1 642 8
 646 0038 7B68     		ldr	r3, [r7, #4]
 647 003a 1B68     		ldr	r3, [r3]
 648              		.loc 1 642 24
 649 003c 0022     		movs	r2, #0
 650 003e 9A60     		str	r2, [r3, #8]
 643:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 644:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 645:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 646:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 647:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 648:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 649:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DeInit the low level hardware */
 650:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 651:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
 652:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DeInit the low level hardware */
 653:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 651              		.loc 1 653 3
 652 0040 7868     		ldr	r0, [r7, #4]
 653 0042 FFF7FEFF 		bl	HAL_UART_MspDeInit
 654:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 655:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 656:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 654              		.loc 1 656 20
 655 0046 7B68     		ldr	r3, [r7, #4]
 656 0048 0022     		movs	r2, #0
 657 004a DA67     		str	r2, [r3, #124]
 657:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 658              		.loc 1 657 17
 659 004c 7B68     		ldr	r3, [r7, #4]
 660 004e 0022     		movs	r2, #0
 661 0050 5A67     		str	r2, [r3, #116]
 658:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 662              		.loc 1 658 18
ARM GAS  /tmp/ccXuXBwl.s 			page 24


 663 0052 7B68     		ldr	r3, [r7, #4]
 664 0054 0022     		movs	r2, #0
 665 0056 9A67     		str	r2, [r3, #120]
 659:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 660:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 666              		.loc 1 660 3
 667 0058 7B68     		ldr	r3, [r7, #4]
 668 005a 0022     		movs	r2, #0
 669 005c 83F87020 		strb	r2, [r3, #112]
 661:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 662:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 670              		.loc 1 662 10
 671 0060 0023     		movs	r3, #0
 672              	.L30:
 663:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 673              		.loc 1 663 1
 674 0062 1846     		mov	r0, r3
 675 0064 0837     		adds	r7, r7, #8
 676              	.LCFI23:
 677              		.cfi_def_cfa_offset 8
 678 0066 BD46     		mov	sp, r7
 679              	.LCFI24:
 680              		.cfi_def_cfa_register 13
 681              		@ sp needed
 682 0068 80BD     		pop	{r7, pc}
 683              		.cfi_endproc
 684              	.LFE317:
 686              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 687              		.align	1
 688              		.weak	HAL_UART_MspInit
 689              		.syntax unified
 690              		.thumb
 691              		.thumb_func
 692              		.fpu fpv4-sp-d16
 694              	HAL_UART_MspInit:
 695              	.LFB318:
 664:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 665:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 666:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Initialize the UART MSP.
 667:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 668:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
 669:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 670:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 671:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 696              		.loc 1 671 1
 697              		.cfi_startproc
 698              		@ args = 0, pretend = 0, frame = 8
 699              		@ frame_needed = 1, uses_anonymous_args = 0
 700              		@ link register save eliminated.
 701 0000 80B4     		push	{r7}
 702              	.LCFI25:
 703              		.cfi_def_cfa_offset 4
 704              		.cfi_offset 7, -4
 705 0002 83B0     		sub	sp, sp, #12
 706              	.LCFI26:
 707              		.cfi_def_cfa_offset 16
 708 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccXuXBwl.s 			page 25


 709              	.LCFI27:
 710              		.cfi_def_cfa_register 7
 711 0006 7860     		str	r0, [r7, #4]
 672:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 673:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
 674:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 675:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 676:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_MspInit can be implemented in the user file
 677:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
 678:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 712              		.loc 1 678 1
 713 0008 00BF     		nop
 714 000a 0C37     		adds	r7, r7, #12
 715              	.LCFI28:
 716              		.cfi_def_cfa_offset 4
 717 000c BD46     		mov	sp, r7
 718              	.LCFI29:
 719              		.cfi_def_cfa_register 13
 720              		@ sp needed
 721 000e 5DF8047B 		ldr	r7, [sp], #4
 722              	.LCFI30:
 723              		.cfi_restore 7
 724              		.cfi_def_cfa_offset 0
 725 0012 7047     		bx	lr
 726              		.cfi_endproc
 727              	.LFE318:
 729              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 730              		.align	1
 731              		.weak	HAL_UART_MspDeInit
 732              		.syntax unified
 733              		.thumb
 734              		.thumb_func
 735              		.fpu fpv4-sp-d16
 737              	HAL_UART_MspDeInit:
 738              	.LFB319:
 679:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 680:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 681:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DeInitialize the UART MSP.
 682:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
 683:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
 684:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 685:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 686:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 739              		.loc 1 686 1
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 8
 742              		@ frame_needed = 1, uses_anonymous_args = 0
 743              		@ link register save eliminated.
 744 0000 80B4     		push	{r7}
 745              	.LCFI31:
 746              		.cfi_def_cfa_offset 4
 747              		.cfi_offset 7, -4
 748 0002 83B0     		sub	sp, sp, #12
 749              	.LCFI32:
 750              		.cfi_def_cfa_offset 16
 751 0004 00AF     		add	r7, sp, #0
 752              	.LCFI33:
ARM GAS  /tmp/ccXuXBwl.s 			page 26


 753              		.cfi_def_cfa_register 7
 754 0006 7860     		str	r0, [r7, #4]
 687:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 688:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
 689:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 690:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 691:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_MspDeInit can be implemented in the user file
 692:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
 693:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 755              		.loc 1 693 1
 756 0008 00BF     		nop
 757 000a 0C37     		adds	r7, r7, #12
 758              	.LCFI34:
 759              		.cfi_def_cfa_offset 4
 760 000c BD46     		mov	sp, r7
 761              	.LCFI35:
 762              		.cfi_def_cfa_register 13
 763              		@ sp needed
 764 000e 5DF8047B 		ldr	r7, [sp], #4
 765              	.LCFI36:
 766              		.cfi_restore 7
 767              		.cfi_def_cfa_offset 0
 768 0012 7047     		bx	lr
 769              		.cfi_endproc
 770              	.LFE319:
 772              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 773              		.align	1
 774              		.global	HAL_UART_Transmit
 775              		.syntax unified
 776              		.thumb
 777              		.thumb_func
 778              		.fpu fpv4-sp-d16
 780              	HAL_UART_Transmit:
 781              	.LFB320:
 694:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 695:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 696:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 697:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Register a User UART Callback
 698:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 699:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart uart handle
 700:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 701:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 702:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 703:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 704:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 705:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 706:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 707:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 708:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 709:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 710:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 711:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 712:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 713:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 714:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 715:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
 716:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
ARM GAS  /tmp/ccXuXBwl.s 			page 27


 717:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 718:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 719:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 720:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 721:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 722:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 723:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (pCallback == NULL)
 724:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 725:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 726:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 727:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_ERROR;
 728:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 729:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 730:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 731:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 732:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 733:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 734:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 735:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 736:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 737:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 738:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 739:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 740:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 741:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 742:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 743:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 744:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 745:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 746:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 747:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 748:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 749:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 750:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 751:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 752:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 753:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 754:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 755:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 756:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 757:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 758:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 759:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 760:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 761:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 762:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 763:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 764:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 765:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 766:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 767:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 768:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 769:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->WakeupCallback = pCallback;
 770:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 771:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 772:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 773:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
ARM GAS  /tmp/ccXuXBwl.s 			page 28


 774:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxFifoFullCallback = pCallback;
 775:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 776:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 777:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 778:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxFifoEmptyCallback = pCallback;
 779:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 780:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 781:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 782:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 783:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 784:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 785:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 786:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 787:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 788:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 789:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 790:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 791:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 792:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 793:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 794:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 795:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 796:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 797:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 798:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 799:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 800:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 801:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 802:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 803:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 804:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 805:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 806:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 807:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 808:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 809:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 810:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 811:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 812:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 813:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 814:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 815:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 816:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 817:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 818:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 819:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 820:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     status =  HAL_ERROR;
 821:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 822:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 823:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 824:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 825:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return status;
 826:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 827:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 828:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 829:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 830:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
ARM GAS  /tmp/ccXuXBwl.s 			page 29


 831:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart uart handle
 832:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 833:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 834:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 835:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 836:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 837:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 838:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 839:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 840:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 841:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 842:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_WAKEUP_CB_ID Wakeup Callback ID
 843:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_FIFO_FULL_CB_ID Rx Fifo Full Callback ID
 844:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_FIFO_EMPTY_CB_ID Tx Fifo Empty Callback ID
 845:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 846:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 847:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
 848:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 849:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 850:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 851:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 852:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 853:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 854:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 855:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 856:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 857:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 858:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 859:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 860:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 861:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 862:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 863:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 864:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 865:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 866:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 867:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 868:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 869:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 870:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 871:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 872:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 873:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 874:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 875:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 876:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 877:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 878:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 879:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 880:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 881:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 882:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 883:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 884:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 885:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 886:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 887:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
ARM GAS  /tmp/ccXuXBwl.s 			page 30


 888:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 889:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 890:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 891:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_WAKEUP_CB_ID :
 892:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->WakeupCallback = HAL_UARTEx_WakeupCallback;                     /* Legacy weak Wakeu
 893:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 894:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 895:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
 896:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_RX_FIFO_FULL_CB_ID :
 897:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxFifoFullCallback = HAL_UARTEx_RxFifoFullCallback;             /* Legacy weak RxFif
 898:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 899:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 900:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_TX_FIFO_EMPTY_CB_ID :
 901:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxFifoEmptyCallback = HAL_UARTEx_TxFifoEmptyCallback;           /* Legacy weak TxFif
 902:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 903:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 904:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
 905:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 906:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 907:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 908:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 909:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 910:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 911:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 912:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 913:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 914:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 915:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 916:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 917:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 918:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 919:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 920:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 921:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 922:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (CallbackID)
 923:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 924:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 925:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 926:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 927:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 928:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 929:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 930:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 931:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 932:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default :
 933:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 934:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 935:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         status =  HAL_ERROR;
 936:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 937:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 938:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 939:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
 940:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 941:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 942:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 943:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     status =  HAL_ERROR;
 944:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
ARM GAS  /tmp/ccXuXBwl.s 			page 31


 945:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 946:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 947:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 948:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return status;
 949:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 950:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 951:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 952:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
 953:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
 954:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
 955:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 956:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
 957:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief UART Transmit/Receive functions
 958:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
 959:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
 960:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
 961:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                       ##### IO operation functions #####
 962:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
 963:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
 964:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     and Half duplex data transfers.
 965:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 966:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) There are two mode of transfer:
 967:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
 968:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
 969:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            after finishing transfer.
 970:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
 971:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            or DMA, These API's return the HAL status.
 972:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The end of the data processing will be indicated through the
 973:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
 974:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            using DMA mode.
 975:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
 976:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            will be executed respectively at the end of the transmit or Receive process
 977:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
 978:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 979:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Blocking mode API's are :
 980:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit()
 981:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive()
 982:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 983:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
 984:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
 985:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
 986:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
 987:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 988:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
 989:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
 990:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
 991:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
 992:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
 993:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
 994:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 995:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
 996:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
 997:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
 998:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
 999:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
1000:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
1001:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccXuXBwl.s 			page 32


1002:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
1003:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Abort()
1004:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
1005:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
1006:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
1007:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
1008:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
1009:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1010:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
1011:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1012:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1013:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
1014:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1015:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1016:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         Errors are handled as follows :
1017:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1018:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
1019:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1020:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
1021:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1022:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1023:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1024:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
1025:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1026:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1027:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1028:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1029:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
1030:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
1031:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1032:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1033:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1034:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in blocking mode.
1035:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note When FIFO mode is enabled, writing a data in the TDR register adds one
1036:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       data to the TXFIFO. Write operations to the TDR register are performed
1037:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       when TXFNF flag is set. From hardware perspective, TXFNF flag and
1038:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       TXE are mapped on the same bit-field.
1039:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart   UART handle.
1040:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData   Pointer to data buffer.
1041:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size    Amount of data to be sent.
1042:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Timeout Timeout duration.
1043:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1044:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1045:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1046:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 782              		.loc 1 1046 1
 783              		.cfi_startproc
 784              		@ args = 0, pretend = 0, frame = 32
 785              		@ frame_needed = 1, uses_anonymous_args = 0
 786 0000 80B5     		push	{r7, lr}
 787              	.LCFI37:
 788              		.cfi_def_cfa_offset 8
 789              		.cfi_offset 7, -8
 790              		.cfi_offset 14, -4
 791 0002 8AB0     		sub	sp, sp, #40
 792              	.LCFI38:
 793              		.cfi_def_cfa_offset 48
ARM GAS  /tmp/ccXuXBwl.s 			page 33


 794 0004 02AF     		add	r7, sp, #8
 795              	.LCFI39:
 796              		.cfi_def_cfa 7, 40
 797 0006 F860     		str	r0, [r7, #12]
 798 0008 B960     		str	r1, [r7, #8]
 799 000a 3B60     		str	r3, [r7]
 800 000c 1346     		mov	r3, r2	@ movhi
 801 000e FB80     		strh	r3, [r7, #6]	@ movhi
1047:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1048:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *pdata16bits;
1049:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart;
1050:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1051:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1052:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 802              		.loc 1 1052 12
 803 0010 FB68     		ldr	r3, [r7, #12]
 804 0012 5B6F     		ldr	r3, [r3, #116]
 805              		.loc 1 1052 6
 806 0014 202B     		cmp	r3, #32
 807 0016 40F08180 		bne	.L34
1053:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1054:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 808              		.loc 1 1054 8
 809 001a BB68     		ldr	r3, [r7, #8]
 810 001c 002B     		cmp	r3, #0
 811 001e 02D0     		beq	.L35
 812              		.loc 1 1054 25 discriminator 1
 813 0020 FB88     		ldrh	r3, [r7, #6]
 814 0022 002B     		cmp	r3, #0
 815 0024 01D1     		bne	.L36
 816              	.L35:
1055:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1056:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return  HAL_ERROR;
 817              		.loc 1 1056 15
 818 0026 0123     		movs	r3, #1
 819 0028 79E0     		b	.L37
 820              	.L36:
1057:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1058:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1059:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 821              		.loc 1 1059 5
 822 002a FB68     		ldr	r3, [r7, #12]
 823 002c 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 824 0030 012B     		cmp	r3, #1
 825 0032 01D1     		bne	.L38
 826              		.loc 1 1059 5 is_stmt 0 discriminator 1
 827 0034 0223     		movs	r3, #2
 828 0036 72E0     		b	.L37
 829              	.L38:
 830              		.loc 1 1059 5 discriminator 2
 831 0038 FB68     		ldr	r3, [r7, #12]
 832 003a 0122     		movs	r2, #1
 833 003c 83F87020 		strb	r2, [r3, #112]
1060:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1061:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 834              		.loc 1 1061 22 is_stmt 1 discriminator 2
 835 0040 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccXuXBwl.s 			page 34


 836 0042 0022     		movs	r2, #0
 837 0044 DA67     		str	r2, [r3, #124]
1062:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 838              		.loc 1 1062 19 discriminator 2
 839 0046 FB68     		ldr	r3, [r7, #12]
 840 0048 2122     		movs	r2, #33
 841 004a 5A67     		str	r2, [r3, #116]
1063:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1064:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1065:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 842              		.loc 1 1065 17 discriminator 2
 843 004c FFF7FEFF 		bl	HAL_GetTick
 844 0050 7861     		str	r0, [r7, #20]
1066:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1067:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 845              		.loc 1 1067 24 discriminator 2
 846 0052 FB68     		ldr	r3, [r7, #12]
 847 0054 FA88     		ldrh	r2, [r7, #6]	@ movhi
 848 0056 A3F85020 		strh	r2, [r3, #80]	@ movhi
1068:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 849              		.loc 1 1068 24 discriminator 2
 850 005a FB68     		ldr	r3, [r7, #12]
 851 005c FA88     		ldrh	r2, [r7, #6]	@ movhi
 852 005e A3F85220 		strh	r2, [r3, #82]	@ movhi
1069:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1070:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1071:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 853              		.loc 1 1071 21 discriminator 2
 854 0062 FB68     		ldr	r3, [r7, #12]
 855 0064 9B68     		ldr	r3, [r3, #8]
 856              		.loc 1 1071 8 discriminator 2
 857 0066 B3F5805F 		cmp	r3, #4096
 858 006a 08D1     		bne	.L39
 859              		.loc 1 1071 71 discriminator 1
 860 006c FB68     		ldr	r3, [r7, #12]
 861 006e 1B69     		ldr	r3, [r3, #16]
 862              		.loc 1 1071 56 discriminator 1
 863 0070 002B     		cmp	r3, #0
 864 0072 04D1     		bne	.L39
1072:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1073:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata8bits  = NULL;
 865              		.loc 1 1073 19
 866 0074 0023     		movs	r3, #0
 867 0076 FB61     		str	r3, [r7, #28]
1074:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 868              		.loc 1 1074 19
 869 0078 BB68     		ldr	r3, [r7, #8]
 870 007a BB61     		str	r3, [r7, #24]
 871 007c 03E0     		b	.L40
 872              	.L39:
1075:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1076:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1077:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1078:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata8bits  = pData;
 873              		.loc 1 1078 19
 874 007e BB68     		ldr	r3, [r7, #8]
 875 0080 FB61     		str	r3, [r7, #28]
ARM GAS  /tmp/ccXuXBwl.s 			page 35


1079:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata16bits = NULL;
 876              		.loc 1 1079 19
 877 0082 0023     		movs	r3, #0
 878 0084 BB61     		str	r3, [r7, #24]
 879              	.L40:
1080:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1081:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1082:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
 880              		.loc 1 1082 11
 881 0086 2DE0     		b	.L41
 882              	.L45:
1083:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1084:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 883              		.loc 1 1084 11
 884 0088 3B68     		ldr	r3, [r7]
 885 008a 0093     		str	r3, [sp]
 886 008c 7B69     		ldr	r3, [r7, #20]
 887 008e 0022     		movs	r2, #0
 888 0090 8021     		movs	r1, #128
 889 0092 F868     		ldr	r0, [r7, #12]
 890 0094 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 891 0098 0346     		mov	r3, r0
 892              		.loc 1 1084 10
 893 009a 002B     		cmp	r3, #0
 894 009c 01D0     		beq	.L42
1085:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1086:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
 895              		.loc 1 1086 16
 896 009e 0323     		movs	r3, #3
 897 00a0 3DE0     		b	.L37
 898              	.L42:
1087:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1088:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (pdata8bits == NULL)
 899              		.loc 1 1088 10
 900 00a2 FB69     		ldr	r3, [r7, #28]
 901 00a4 002B     		cmp	r3, #0
 902 00a6 0BD1     		bne	.L43
1089:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1090:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 903              		.loc 1 1090 43
 904 00a8 BB69     		ldr	r3, [r7, #24]
 905 00aa 1A88     		ldrh	r2, [r3]
 906              		.loc 1 1090 14
 907 00ac FB68     		ldr	r3, [r7, #12]
 908 00ae 1B68     		ldr	r3, [r3]
 909              		.loc 1 1090 32
 910 00b0 C2F30802 		ubfx	r2, r2, #0, #9
 911 00b4 92B2     		uxth	r2, r2
 912              		.loc 1 1090 30
 913 00b6 1A85     		strh	r2, [r3, #40]	@ movhi
1091:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata16bits++;
 914              		.loc 1 1091 20
 915 00b8 BB69     		ldr	r3, [r7, #24]
 916 00ba 0233     		adds	r3, r3, #2
 917 00bc BB61     		str	r3, [r7, #24]
 918 00be 08E0     		b	.L44
 919              	.L43:
ARM GAS  /tmp/ccXuXBwl.s 			page 36


1092:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1093:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1094:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1095:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 920              		.loc 1 1095 42
 921 00c0 FB69     		ldr	r3, [r7, #28]
 922 00c2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 923              		.loc 1 1095 14
 924 00c4 FB68     		ldr	r3, [r7, #12]
 925 00c6 1B68     		ldr	r3, [r3]
 926              		.loc 1 1095 32
 927 00c8 92B2     		uxth	r2, r2
 928              		.loc 1 1095 30
 929 00ca 1A85     		strh	r2, [r3, #40]	@ movhi
1096:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata8bits++;
 930              		.loc 1 1096 19
 931 00cc FB69     		ldr	r3, [r7, #28]
 932 00ce 0133     		adds	r3, r3, #1
 933 00d0 FB61     		str	r3, [r7, #28]
 934              	.L44:
1097:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1098:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 935              		.loc 1 1098 12
 936 00d2 FB68     		ldr	r3, [r7, #12]
 937 00d4 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 938 00d8 9BB2     		uxth	r3, r3
 939              		.loc 1 1098 25
 940 00da 013B     		subs	r3, r3, #1
 941 00dc 9AB2     		uxth	r2, r3
 942 00de FB68     		ldr	r3, [r7, #12]
 943 00e0 A3F85220 		strh	r2, [r3, #82]	@ movhi
 944              	.L41:
1082:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 945              		.loc 1 1082 17
 946 00e4 FB68     		ldr	r3, [r7, #12]
 947 00e6 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 948 00ea 9BB2     		uxth	r3, r3
1082:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 949              		.loc 1 1082 11
 950 00ec 002B     		cmp	r3, #0
 951 00ee CBD1     		bne	.L45
1099:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1100:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1101:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 952              		.loc 1 1101 9
 953 00f0 3B68     		ldr	r3, [r7]
 954 00f2 0093     		str	r3, [sp]
 955 00f4 7B69     		ldr	r3, [r7, #20]
 956 00f6 0022     		movs	r2, #0
 957 00f8 4021     		movs	r1, #64
 958 00fa F868     		ldr	r0, [r7, #12]
 959 00fc FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 960 0100 0346     		mov	r3, r0
 961              		.loc 1 1101 8
 962 0102 002B     		cmp	r3, #0
 963 0104 01D0     		beq	.L46
1102:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
ARM GAS  /tmp/ccXuXBwl.s 			page 37


1103:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
 964              		.loc 1 1103 14
 965 0106 0323     		movs	r3, #3
 966 0108 09E0     		b	.L37
 967              	.L46:
1104:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1105:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1106:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1107:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 968              		.loc 1 1107 19
 969 010a FB68     		ldr	r3, [r7, #12]
 970 010c 2022     		movs	r2, #32
 971 010e 5A67     		str	r2, [r3, #116]
1108:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1109:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 972              		.loc 1 1109 5
 973 0110 FB68     		ldr	r3, [r7, #12]
 974 0112 0022     		movs	r2, #0
 975 0114 83F87020 		strb	r2, [r3, #112]
1110:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1111:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
 976              		.loc 1 1111 12
 977 0118 0023     		movs	r3, #0
 978 011a 00E0     		b	.L37
 979              	.L34:
1112:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1113:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1114:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1115:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 980              		.loc 1 1115 12
 981 011c 0223     		movs	r3, #2
 982              	.L37:
1116:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1117:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 983              		.loc 1 1117 1
 984 011e 1846     		mov	r0, r3
 985 0120 2037     		adds	r7, r7, #32
 986              	.LCFI40:
 987              		.cfi_def_cfa_offset 8
 988 0122 BD46     		mov	sp, r7
 989              	.LCFI41:
 990              		.cfi_def_cfa_register 13
 991              		@ sp needed
 992 0124 80BD     		pop	{r7, pc}
 993              		.cfi_endproc
 994              	.LFE320:
 996              		.section	.text.HAL_UART_Receive,"ax",%progbits
 997              		.align	1
 998              		.global	HAL_UART_Receive
 999              		.syntax unified
 1000              		.thumb
 1001              		.thumb_func
 1002              		.fpu fpv4-sp-d16
 1004              	HAL_UART_Receive:
 1005              	.LFB321:
1118:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1119:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
ARM GAS  /tmp/ccXuXBwl.s 			page 38


1120:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode.
1121:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note When FIFO mode is enabled, the RXFNE flag is set as long as the RXFIFO
1122:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       is not empty. Read operations from the RDR register are performed when
1123:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       RXFNE flag is set. From hardware perspective, RXFNE flag and
1124:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *       RXNE are mapped on the same bit-field.
1125:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart   UART handle.
1126:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData   Pointer to data buffer.
1127:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size    Amount of data to be received.
1128:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Timeout Timeout duration.
1129:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1130:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1131:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1132:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1006              		.loc 1 1132 1
 1007              		.cfi_startproc
 1008              		@ args = 0, pretend = 0, frame = 32
 1009              		@ frame_needed = 1, uses_anonymous_args = 0
 1010 0000 80B5     		push	{r7, lr}
 1011              	.LCFI42:
 1012              		.cfi_def_cfa_offset 8
 1013              		.cfi_offset 7, -8
 1014              		.cfi_offset 14, -4
 1015 0002 8AB0     		sub	sp, sp, #40
 1016              	.LCFI43:
 1017              		.cfi_def_cfa_offset 48
 1018 0004 02AF     		add	r7, sp, #8
 1019              	.LCFI44:
 1020              		.cfi_def_cfa 7, 40
 1021 0006 F860     		str	r0, [r7, #12]
 1022 0008 B960     		str	r1, [r7, #8]
 1023 000a 3B60     		str	r3, [r7]
 1024 000c 1346     		mov	r3, r2	@ movhi
 1025 000e FB80     		strh	r3, [r7, #6]	@ movhi
1133:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1134:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *pdata16bits;
1135:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask;
1136:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart;
1137:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1138:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1139:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1026              		.loc 1 1139 12
 1027 0010 FB68     		ldr	r3, [r7, #12]
 1028 0012 9B6F     		ldr	r3, [r3, #120]
 1029              		.loc 1 1139 6
 1030 0014 202B     		cmp	r3, #32
 1031 0016 40F0BB80 		bne	.L48
1140:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1141:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1032              		.loc 1 1141 8
 1033 001a BB68     		ldr	r3, [r7, #8]
 1034 001c 002B     		cmp	r3, #0
 1035 001e 02D0     		beq	.L49
 1036              		.loc 1 1141 25 discriminator 1
 1037 0020 FB88     		ldrh	r3, [r7, #6]
 1038 0022 002B     		cmp	r3, #0
 1039 0024 01D1     		bne	.L50
 1040              	.L49:
ARM GAS  /tmp/ccXuXBwl.s 			page 39


1142:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1143:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return  HAL_ERROR;
 1041              		.loc 1 1143 15
 1042 0026 0123     		movs	r3, #1
 1043 0028 B3E0     		b	.L51
 1044              	.L50:
1144:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1145:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1146:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1045              		.loc 1 1146 5
 1046 002a FB68     		ldr	r3, [r7, #12]
 1047 002c 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 1048 0030 012B     		cmp	r3, #1
 1049 0032 01D1     		bne	.L52
 1050              		.loc 1 1146 5 is_stmt 0 discriminator 1
 1051 0034 0223     		movs	r3, #2
 1052 0036 ACE0     		b	.L51
 1053              	.L52:
 1054              		.loc 1 1146 5 discriminator 2
 1055 0038 FB68     		ldr	r3, [r7, #12]
 1056 003a 0122     		movs	r2, #1
 1057 003c 83F87020 		strb	r2, [r3, #112]
1147:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1148:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1058              		.loc 1 1148 22 is_stmt 1 discriminator 2
 1059 0040 FB68     		ldr	r3, [r7, #12]
 1060 0042 0022     		movs	r2, #0
 1061 0044 DA67     		str	r2, [r3, #124]
1149:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1062              		.loc 1 1149 20 discriminator 2
 1063 0046 FB68     		ldr	r3, [r7, #12]
 1064 0048 2222     		movs	r2, #34
 1065 004a 9A67     		str	r2, [r3, #120]
1150:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1151:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Init tickstart for timeout managment*/
1152:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 1066              		.loc 1 1152 17 discriminator 2
 1067 004c FFF7FEFF 		bl	HAL_GetTick
 1068 0050 7861     		str	r0, [r7, #20]
1153:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1154:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize  = Size;
 1069              		.loc 1 1154 24 discriminator 2
 1070 0052 FB68     		ldr	r3, [r7, #12]
 1071 0054 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1072 0056 A3F85820 		strh	r2, [r3, #88]	@ movhi
1155:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1073              		.loc 1 1155 24 discriminator 2
 1074 005a FB68     		ldr	r3, [r7, #12]
 1075 005c FA88     		ldrh	r2, [r7, #6]	@ movhi
 1076 005e A3F85A20 		strh	r2, [r3, #90]	@ movhi
1156:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1157:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1158:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 1077              		.loc 1 1158 5 discriminator 2
 1078 0062 FB68     		ldr	r3, [r7, #12]
 1079 0064 9B68     		ldr	r3, [r3, #8]
 1080 0066 B3F5805F 		cmp	r3, #4096
ARM GAS  /tmp/ccXuXBwl.s 			page 40


 1081 006a 0ED1     		bne	.L53
 1082              		.loc 1 1158 5 is_stmt 0 discriminator 1
 1083 006c FB68     		ldr	r3, [r7, #12]
 1084 006e 1B69     		ldr	r3, [r3, #16]
 1085 0070 002B     		cmp	r3, #0
 1086 0072 05D1     		bne	.L54
 1087              		.loc 1 1158 5 discriminator 3
 1088 0074 FB68     		ldr	r3, [r7, #12]
 1089 0076 40F2FF12 		movw	r2, #511
 1090 007a A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1091 007e 2DE0     		b	.L55
 1092              	.L54:
 1093              		.loc 1 1158 5 discriminator 4
 1094 0080 FB68     		ldr	r3, [r7, #12]
 1095 0082 FF22     		movs	r2, #255
 1096 0084 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1097 0088 28E0     		b	.L55
 1098              	.L53:
 1099              		.loc 1 1158 5 discriminator 2
 1100 008a FB68     		ldr	r3, [r7, #12]
 1101 008c 9B68     		ldr	r3, [r3, #8]
 1102 008e 002B     		cmp	r3, #0
 1103 0090 0DD1     		bne	.L56
 1104              		.loc 1 1158 5 discriminator 5
 1105 0092 FB68     		ldr	r3, [r7, #12]
 1106 0094 1B69     		ldr	r3, [r3, #16]
 1107 0096 002B     		cmp	r3, #0
 1108 0098 04D1     		bne	.L57
 1109              		.loc 1 1158 5 discriminator 7
 1110 009a FB68     		ldr	r3, [r7, #12]
 1111 009c FF22     		movs	r2, #255
 1112 009e A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1113 00a2 1BE0     		b	.L55
 1114              	.L57:
 1115              		.loc 1 1158 5 discriminator 8
 1116 00a4 FB68     		ldr	r3, [r7, #12]
 1117 00a6 7F22     		movs	r2, #127
 1118 00a8 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1119 00ac 16E0     		b	.L55
 1120              	.L56:
 1121              		.loc 1 1158 5 discriminator 6
 1122 00ae FB68     		ldr	r3, [r7, #12]
 1123 00b0 9B68     		ldr	r3, [r3, #8]
 1124 00b2 B3F1805F 		cmp	r3, #268435456
 1125 00b6 0DD1     		bne	.L58
 1126              		.loc 1 1158 5 discriminator 9
 1127 00b8 FB68     		ldr	r3, [r7, #12]
 1128 00ba 1B69     		ldr	r3, [r3, #16]
 1129 00bc 002B     		cmp	r3, #0
 1130 00be 04D1     		bne	.L59
 1131              		.loc 1 1158 5 discriminator 11
 1132 00c0 FB68     		ldr	r3, [r7, #12]
 1133 00c2 7F22     		movs	r2, #127
 1134 00c4 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1135 00c8 08E0     		b	.L55
 1136              	.L59:
 1137              		.loc 1 1158 5 discriminator 12
ARM GAS  /tmp/ccXuXBwl.s 			page 41


 1138 00ca FB68     		ldr	r3, [r7, #12]
 1139 00cc 3F22     		movs	r2, #63
 1140 00ce A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1141 00d2 03E0     		b	.L55
 1142              	.L58:
 1143              		.loc 1 1158 5 discriminator 10
 1144 00d4 FB68     		ldr	r3, [r7, #12]
 1145 00d6 0022     		movs	r2, #0
 1146 00d8 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1147              	.L55:
1159:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhMask = huart->Mask;
 1148              		.loc 1 1159 12 is_stmt 1
 1149 00dc FB68     		ldr	r3, [r7, #12]
 1150 00de B3F85C30 		ldrh	r3, [r3, #92]	@ movhi
 1151 00e2 7B82     		strh	r3, [r7, #18]	@ movhi
1160:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1161:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1162:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1152              		.loc 1 1162 21
 1153 00e4 FB68     		ldr	r3, [r7, #12]
 1154 00e6 9B68     		ldr	r3, [r3, #8]
 1155              		.loc 1 1162 8
 1156 00e8 B3F5805F 		cmp	r3, #4096
 1157 00ec 08D1     		bne	.L60
 1158              		.loc 1 1162 71 discriminator 1
 1159 00ee FB68     		ldr	r3, [r7, #12]
 1160 00f0 1B69     		ldr	r3, [r3, #16]
 1161              		.loc 1 1162 56 discriminator 1
 1162 00f2 002B     		cmp	r3, #0
 1163 00f4 04D1     		bne	.L60
1163:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1164:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata8bits  = NULL;
 1164              		.loc 1 1164 19
 1165 00f6 0023     		movs	r3, #0
 1166 00f8 FB61     		str	r3, [r7, #28]
1165:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 1167              		.loc 1 1165 19
 1168 00fa BB68     		ldr	r3, [r7, #8]
 1169 00fc BB61     		str	r3, [r7, #24]
 1170 00fe 03E0     		b	.L61
 1171              	.L60:
1166:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1167:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1168:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1169:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata8bits  = pData;
 1172              		.loc 1 1169 19
 1173 0100 BB68     		ldr	r3, [r7, #8]
 1174 0102 FB61     		str	r3, [r7, #28]
1170:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       pdata16bits = NULL;
 1175              		.loc 1 1170 19
 1176 0104 0023     		movs	r3, #0
 1177 0106 BB61     		str	r3, [r7, #24]
 1178              	.L61:
1171:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1172:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1173:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* as long as data have to be received */
1174:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
ARM GAS  /tmp/ccXuXBwl.s 			page 42


 1179              		.loc 1 1174 11
 1180 0108 33E0     		b	.L62
 1181              	.L66:
1175:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1176:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1182              		.loc 1 1176 11
 1183 010a 3B68     		ldr	r3, [r7]
 1184 010c 0093     		str	r3, [sp]
 1185 010e 7B69     		ldr	r3, [r7, #20]
 1186 0110 0022     		movs	r2, #0
 1187 0112 2021     		movs	r1, #32
 1188 0114 F868     		ldr	r0, [r7, #12]
 1189 0116 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1190 011a 0346     		mov	r3, r0
 1191              		.loc 1 1176 10
 1192 011c 002B     		cmp	r3, #0
 1193 011e 01D0     		beq	.L63
1177:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1178:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
 1194              		.loc 1 1178 16
 1195 0120 0323     		movs	r3, #3
 1196 0122 36E0     		b	.L51
 1197              	.L63:
1179:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1180:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (pdata8bits == NULL)
 1198              		.loc 1 1180 10
 1199 0124 FB69     		ldr	r3, [r7, #28]
 1200 0126 002B     		cmp	r3, #0
 1201 0128 0CD1     		bne	.L64
1181:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1182:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->RDR & uhMask);
 1202              		.loc 1 1182 40
 1203 012a FB68     		ldr	r3, [r7, #12]
 1204 012c 1B68     		ldr	r3, [r3]
 1205              		.loc 1 1182 50
 1206 012e 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 1207 0130 9AB2     		uxth	r2, r3
 1208              		.loc 1 1182 24
 1209 0132 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1210 0134 1340     		ands	r3, r3, r2
 1211 0136 9AB2     		uxth	r2, r3
 1212              		.loc 1 1182 22
 1213 0138 BB69     		ldr	r3, [r7, #24]
 1214 013a 1A80     		strh	r2, [r3]	@ movhi
1183:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata16bits++;
 1215              		.loc 1 1183 20
 1216 013c BB69     		ldr	r3, [r7, #24]
 1217 013e 0233     		adds	r3, r3, #2
 1218 0140 BB61     		str	r3, [r7, #24]
 1219 0142 0DE0     		b	.L65
 1220              	.L64:
1184:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1185:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1186:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1187:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->RDR & (uint8_t)uhMask);
 1221              		.loc 1 1187 38
 1222 0144 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccXuXBwl.s 			page 43


 1223 0146 1B68     		ldr	r3, [r3]
 1224              		.loc 1 1187 48
 1225 0148 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 1226 014a 9BB2     		uxth	r3, r3
 1227              		.loc 1 1187 23
 1228 014c DAB2     		uxtb	r2, r3
 1229              		.loc 1 1187 56
 1230 014e 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 1231 0150 DBB2     		uxtb	r3, r3
 1232              		.loc 1 1187 23
 1233 0152 1340     		ands	r3, r3, r2
 1234 0154 DAB2     		uxtb	r2, r3
 1235              		.loc 1 1187 21
 1236 0156 FB69     		ldr	r3, [r7, #28]
 1237 0158 1A70     		strb	r2, [r3]
1188:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         pdata8bits++;
 1238              		.loc 1 1188 19
 1239 015a FB69     		ldr	r3, [r7, #28]
 1240 015c 0133     		adds	r3, r3, #1
 1241 015e FB61     		str	r3, [r7, #28]
 1242              	.L65:
1189:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1190:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxXferCount--;
 1243              		.loc 1 1190 12
 1244 0160 FB68     		ldr	r3, [r7, #12]
 1245 0162 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 1246 0166 9BB2     		uxth	r3, r3
 1247              		.loc 1 1190 25
 1248 0168 013B     		subs	r3, r3, #1
 1249 016a 9AB2     		uxth	r2, r3
 1250 016c FB68     		ldr	r3, [r7, #12]
 1251 016e A3F85A20 		strh	r2, [r3, #90]	@ movhi
 1252              	.L62:
1174:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1253              		.loc 1 1174 17
 1254 0172 FB68     		ldr	r3, [r7, #12]
 1255 0174 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 1256 0178 9BB2     		uxth	r3, r3
1174:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
 1257              		.loc 1 1174 11
 1258 017a 002B     		cmp	r3, #0
 1259 017c C5D1     		bne	.L66
1191:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1192:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1193:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1194:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1260              		.loc 1 1194 20
 1261 017e FB68     		ldr	r3, [r7, #12]
 1262 0180 2022     		movs	r2, #32
 1263 0182 9A67     		str	r2, [r3, #120]
1195:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1196:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1264              		.loc 1 1196 5
 1265 0184 FB68     		ldr	r3, [r7, #12]
 1266 0186 0022     		movs	r2, #0
 1267 0188 83F87020 		strb	r2, [r3, #112]
1197:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccXuXBwl.s 			page 44


1198:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
 1268              		.loc 1 1198 12
 1269 018c 0023     		movs	r3, #0
 1270 018e 00E0     		b	.L51
 1271              	.L48:
1199:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1200:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1201:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1202:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 1272              		.loc 1 1202 12
 1273 0190 0223     		movs	r3, #2
 1274              	.L51:
1203:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1204:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1275              		.loc 1 1204 1
 1276 0192 1846     		mov	r0, r3
 1277 0194 2037     		adds	r7, r7, #32
 1278              	.LCFI45:
 1279              		.cfi_def_cfa_offset 8
 1280 0196 BD46     		mov	sp, r7
 1281              	.LCFI46:
 1282              		.cfi_def_cfa_register 13
 1283              		@ sp needed
 1284 0198 80BD     		pop	{r7, pc}
 1285              		.cfi_endproc
 1286              	.LFE321:
 1288              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1289              		.align	1
 1290              		.global	HAL_UART_Transmit_IT
 1291              		.syntax unified
 1292              		.thumb
 1293              		.thumb_func
 1294              		.fpu fpv4-sp-d16
 1296              	HAL_UART_Transmit_IT:
 1297              	.LFB322:
1205:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1206:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1207:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in interrupt mode.
1208:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1209:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer.
1210:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data to be sent.
1211:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1212:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1213:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1214:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1298              		.loc 1 1214 1
 1299              		.cfi_startproc
 1300              		@ args = 0, pretend = 0, frame = 16
 1301              		@ frame_needed = 1, uses_anonymous_args = 0
 1302              		@ link register save eliminated.
 1303 0000 80B4     		push	{r7}
 1304              	.LCFI47:
 1305              		.cfi_def_cfa_offset 4
 1306              		.cfi_offset 7, -4
 1307 0002 85B0     		sub	sp, sp, #20
 1308              	.LCFI48:
 1309              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccXuXBwl.s 			page 45


 1310 0004 00AF     		add	r7, sp, #0
 1311              	.LCFI49:
 1312              		.cfi_def_cfa_register 7
 1313 0006 F860     		str	r0, [r7, #12]
 1314 0008 B960     		str	r1, [r7, #8]
 1315 000a 1346     		mov	r3, r2
 1316 000c FB80     		strh	r3, [r7, #6]	@ movhi
1215:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1216:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1317              		.loc 1 1216 12
 1318 000e FB68     		ldr	r3, [r7, #12]
 1319 0010 5B6F     		ldr	r3, [r3, #116]
 1320              		.loc 1 1216 6
 1321 0012 202B     		cmp	r3, #32
 1322 0014 44D1     		bne	.L68
1217:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1218:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1323              		.loc 1 1218 8
 1324 0016 BB68     		ldr	r3, [r7, #8]
 1325 0018 002B     		cmp	r3, #0
 1326 001a 02D0     		beq	.L69
 1327              		.loc 1 1218 25 discriminator 1
 1328 001c FB88     		ldrh	r3, [r7, #6]
 1329 001e 002B     		cmp	r3, #0
 1330 0020 01D1     		bne	.L70
 1331              	.L69:
1219:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1220:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
 1332              		.loc 1 1220 14
 1333 0022 0123     		movs	r3, #1
 1334 0024 3DE0     		b	.L71
 1335              	.L70:
1221:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1222:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1223:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1336              		.loc 1 1223 5
 1337 0026 FB68     		ldr	r3, [r7, #12]
 1338 0028 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 1339 002c 012B     		cmp	r3, #1
 1340 002e 01D1     		bne	.L72
 1341              		.loc 1 1223 5 is_stmt 0 discriminator 1
 1342 0030 0223     		movs	r3, #2
 1343 0032 36E0     		b	.L71
 1344              	.L72:
 1345              		.loc 1 1223 5 discriminator 2
 1346 0034 FB68     		ldr	r3, [r7, #12]
 1347 0036 0122     		movs	r2, #1
 1348 0038 83F87020 		strb	r2, [r3, #112]
1224:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1225:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
 1349              		.loc 1 1225 24 is_stmt 1 discriminator 2
 1350 003c FB68     		ldr	r3, [r7, #12]
 1351 003e BA68     		ldr	r2, [r7, #8]
 1352 0040 DA64     		str	r2, [r3, #76]
1226:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 1353              		.loc 1 1226 24 discriminator 2
 1354 0042 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccXuXBwl.s 			page 46


 1355 0044 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1356 0046 A3F85020 		strh	r2, [r3, #80]	@ movhi
1227:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1357              		.loc 1 1227 24 discriminator 2
 1358 004a FB68     		ldr	r3, [r7, #12]
 1359 004c FA88     		ldrh	r2, [r7, #6]	@ movhi
 1360 004e A3F85220 		strh	r2, [r3, #82]	@ movhi
1228:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR       = NULL;
 1361              		.loc 1 1228 24 discriminator 2
 1362 0052 FB68     		ldr	r3, [r7, #12]
 1363 0054 0022     		movs	r2, #0
 1364 0056 5A66     		str	r2, [r3, #100]
1229:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1230:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1365              		.loc 1 1230 22 discriminator 2
 1366 0058 FB68     		ldr	r3, [r7, #12]
 1367 005a 0022     		movs	r2, #0
 1368 005c DA67     		str	r2, [r3, #124]
1231:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1369              		.loc 1 1231 19 discriminator 2
 1370 005e FB68     		ldr	r3, [r7, #12]
 1371 0060 2122     		movs	r2, #33
 1372 0062 5A67     		str	r2, [r3, #116]
1232:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1233:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1234:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Configure Tx interrupt processing */
1235:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1236:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1237:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1238:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1239:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1240:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT_FIFOEN;
1241:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1242:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1243:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1244:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT_FIFOEN;
1245:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1246:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1247:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1248:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1249:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the TX FIFO threshold interrupt */
1250:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1251:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1252:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1253:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1254:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Tx ISR function pointer according to the data word length */
1255:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1256:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1257:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_16BIT;
1258:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1259:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1260:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1261:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxISR = UART_TxISR_8BIT;
1262:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1263:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1264:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1265:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccXuXBwl.s 			page 47


1266:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the Transmit Data Register Empty interrupt */
1267:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
1268:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1269:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1270:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the Tx ISR function pointer according to the data word length */
1271:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1373              		.loc 1 1271 21 discriminator 2
 1374 0064 FB68     		ldr	r3, [r7, #12]
 1375 0066 9B68     		ldr	r3, [r3, #8]
 1376              		.loc 1 1271 8 discriminator 2
 1377 0068 B3F5805F 		cmp	r3, #4096
 1378 006c 07D1     		bne	.L73
 1379              		.loc 1 1271 71 discriminator 1
 1380 006e FB68     		ldr	r3, [r7, #12]
 1381 0070 1B69     		ldr	r3, [r3, #16]
 1382              		.loc 1 1271 56 discriminator 1
 1383 0072 002B     		cmp	r3, #0
 1384 0074 03D1     		bne	.L73
1272:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1273:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxISR = UART_TxISR_16BIT;
 1385              		.loc 1 1273 20
 1386 0076 FB68     		ldr	r3, [r7, #12]
 1387 0078 0D4A     		ldr	r2, .L75
 1388 007a 5A66     		str	r2, [r3, #100]
 1389 007c 02E0     		b	.L74
 1390              	.L73:
1274:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1275:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1276:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1277:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxISR = UART_TxISR_8BIT;
 1391              		.loc 1 1277 20
 1392 007e FB68     		ldr	r3, [r7, #12]
 1393 0080 0C4A     		ldr	r2, .L75+4
 1394 0082 5A66     		str	r2, [r3, #100]
 1395              	.L74:
1278:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1279:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1280:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1396              		.loc 1 1280 5
 1397 0084 FB68     		ldr	r3, [r7, #12]
 1398 0086 0022     		movs	r2, #0
 1399 0088 83F87020 		strb	r2, [r3, #112]
1281:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1282:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the Transmit Data Register Empty interrupt */
1283:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 1400              		.loc 1 1283 5
 1401 008c FB68     		ldr	r3, [r7, #12]
 1402 008e 1B68     		ldr	r3, [r3]
 1403 0090 1A68     		ldr	r2, [r3]
 1404 0092 FB68     		ldr	r3, [r7, #12]
 1405 0094 1B68     		ldr	r3, [r3]
 1406 0096 42F08002 		orr	r2, r2, #128
 1407 009a 1A60     		str	r2, [r3]
1284:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1285:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1286:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
 1408              		.loc 1 1286 12
ARM GAS  /tmp/ccXuXBwl.s 			page 48


 1409 009c 0023     		movs	r3, #0
 1410 009e 00E0     		b	.L71
 1411              	.L68:
1287:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1288:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1289:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1290:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 1412              		.loc 1 1290 12
 1413 00a0 0223     		movs	r3, #2
 1414              	.L71:
1291:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1292:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1415              		.loc 1 1292 1
 1416 00a2 1846     		mov	r0, r3
 1417 00a4 1437     		adds	r7, r7, #20
 1418              	.LCFI50:
 1419              		.cfi_def_cfa_offset 4
 1420 00a6 BD46     		mov	sp, r7
 1421              	.LCFI51:
 1422              		.cfi_def_cfa_register 13
 1423              		@ sp needed
 1424 00a8 5DF8047B 		ldr	r7, [sp], #4
 1425              	.LCFI52:
 1426              		.cfi_restore 7
 1427              		.cfi_def_cfa_offset 0
 1428 00ac 7047     		bx	lr
 1429              	.L76:
 1430 00ae 00BF     		.align	2
 1431              	.L75:
 1432 00b0 00000000 		.word	UART_TxISR_16BIT
 1433 00b4 00000000 		.word	UART_TxISR_8BIT
 1434              		.cfi_endproc
 1435              	.LFE322:
 1437              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1438              		.align	1
 1439              		.global	HAL_UART_Receive_IT
 1440              		.syntax unified
 1441              		.thumb
 1442              		.thumb_func
 1443              		.fpu fpv4-sp-d16
 1445              	HAL_UART_Receive_IT:
 1446              	.LFB323:
1293:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1294:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1295:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode.
1296:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1297:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer.
1298:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data to be received.
1299:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1300:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1301:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1302:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1447              		.loc 1 1302 1
 1448              		.cfi_startproc
 1449              		@ args = 0, pretend = 0, frame = 16
 1450              		@ frame_needed = 1, uses_anonymous_args = 0
 1451              		@ link register save eliminated.
ARM GAS  /tmp/ccXuXBwl.s 			page 49


 1452 0000 80B4     		push	{r7}
 1453              	.LCFI53:
 1454              		.cfi_def_cfa_offset 4
 1455              		.cfi_offset 7, -4
 1456 0002 85B0     		sub	sp, sp, #20
 1457              	.LCFI54:
 1458              		.cfi_def_cfa_offset 24
 1459 0004 00AF     		add	r7, sp, #0
 1460              	.LCFI55:
 1461              		.cfi_def_cfa_register 7
 1462 0006 F860     		str	r0, [r7, #12]
 1463 0008 B960     		str	r1, [r7, #8]
 1464 000a 1346     		mov	r3, r2
 1465 000c FB80     		strh	r3, [r7, #6]	@ movhi
1303:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1304:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1466              		.loc 1 1304 12
 1467 000e FB68     		ldr	r3, [r7, #12]
 1468 0010 9B6F     		ldr	r3, [r3, #120]
 1469              		.loc 1 1304 6
 1470 0012 202B     		cmp	r3, #32
 1471 0014 40F08A80 		bne	.L78
1305:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1306:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1472              		.loc 1 1306 8
 1473 0018 BB68     		ldr	r3, [r7, #8]
 1474 001a 002B     		cmp	r3, #0
 1475 001c 02D0     		beq	.L79
 1476              		.loc 1 1306 25 discriminator 1
 1477 001e FB88     		ldrh	r3, [r7, #6]
 1478 0020 002B     		cmp	r3, #0
 1479 0022 01D1     		bne	.L80
 1480              	.L79:
1307:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1308:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
 1481              		.loc 1 1308 14
 1482 0024 0123     		movs	r3, #1
 1483 0026 82E0     		b	.L81
 1484              	.L80:
1309:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1310:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1311:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1485              		.loc 1 1311 5
 1486 0028 FB68     		ldr	r3, [r7, #12]
 1487 002a 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 1488 002e 012B     		cmp	r3, #1
 1489 0030 01D1     		bne	.L82
 1490              		.loc 1 1311 5 is_stmt 0 discriminator 1
 1491 0032 0223     		movs	r3, #2
 1492 0034 7BE0     		b	.L81
 1493              	.L82:
 1494              		.loc 1 1311 5 discriminator 2
 1495 0036 FB68     		ldr	r3, [r7, #12]
 1496 0038 0122     		movs	r2, #1
 1497 003a 83F87020 		strb	r2, [r3, #112]
1312:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1313:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr  = pData;
ARM GAS  /tmp/ccXuXBwl.s 			page 50


 1498              		.loc 1 1313 24 is_stmt 1 discriminator 2
 1499 003e FB68     		ldr	r3, [r7, #12]
 1500 0040 BA68     		ldr	r2, [r7, #8]
 1501 0042 5A65     		str	r2, [r3, #84]
1314:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize  = Size;
 1502              		.loc 1 1314 24 discriminator 2
 1503 0044 FB68     		ldr	r3, [r7, #12]
 1504 0046 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1505 0048 A3F85820 		strh	r2, [r3, #88]	@ movhi
1315:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = Size;
 1506              		.loc 1 1315 24 discriminator 2
 1507 004c FB68     		ldr	r3, [r7, #12]
 1508 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1509 0050 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1316:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxISR       = NULL;
 1510              		.loc 1 1316 24 discriminator 2
 1511 0054 FB68     		ldr	r3, [r7, #12]
 1512 0056 0022     		movs	r2, #0
 1513 0058 1A66     		str	r2, [r3, #96]
1317:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1318:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Computation of UART mask to apply to RDR register */
1319:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_MASK_COMPUTATION(huart);
 1514              		.loc 1 1319 5 discriminator 2
 1515 005a FB68     		ldr	r3, [r7, #12]
 1516 005c 9B68     		ldr	r3, [r3, #8]
 1517 005e B3F5805F 		cmp	r3, #4096
 1518 0062 0ED1     		bne	.L83
 1519              		.loc 1 1319 5 is_stmt 0 discriminator 1
 1520 0064 FB68     		ldr	r3, [r7, #12]
 1521 0066 1B69     		ldr	r3, [r3, #16]
 1522 0068 002B     		cmp	r3, #0
 1523 006a 05D1     		bne	.L84
 1524              		.loc 1 1319 5 discriminator 3
 1525 006c FB68     		ldr	r3, [r7, #12]
 1526 006e 40F2FF12 		movw	r2, #511
 1527 0072 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1528 0076 2DE0     		b	.L85
 1529              	.L84:
 1530              		.loc 1 1319 5 discriminator 4
 1531 0078 FB68     		ldr	r3, [r7, #12]
 1532 007a FF22     		movs	r2, #255
 1533 007c A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1534 0080 28E0     		b	.L85
 1535              	.L83:
 1536              		.loc 1 1319 5 discriminator 2
 1537 0082 FB68     		ldr	r3, [r7, #12]
 1538 0084 9B68     		ldr	r3, [r3, #8]
 1539 0086 002B     		cmp	r3, #0
 1540 0088 0DD1     		bne	.L86
 1541              		.loc 1 1319 5 discriminator 5
 1542 008a FB68     		ldr	r3, [r7, #12]
 1543 008c 1B69     		ldr	r3, [r3, #16]
 1544 008e 002B     		cmp	r3, #0
 1545 0090 04D1     		bne	.L87
 1546              		.loc 1 1319 5 discriminator 7
 1547 0092 FB68     		ldr	r3, [r7, #12]
 1548 0094 FF22     		movs	r2, #255
ARM GAS  /tmp/ccXuXBwl.s 			page 51


 1549 0096 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1550 009a 1BE0     		b	.L85
 1551              	.L87:
 1552              		.loc 1 1319 5 discriminator 8
 1553 009c FB68     		ldr	r3, [r7, #12]
 1554 009e 7F22     		movs	r2, #127
 1555 00a0 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1556 00a4 16E0     		b	.L85
 1557              	.L86:
 1558              		.loc 1 1319 5 discriminator 6
 1559 00a6 FB68     		ldr	r3, [r7, #12]
 1560 00a8 9B68     		ldr	r3, [r3, #8]
 1561 00aa B3F1805F 		cmp	r3, #268435456
 1562 00ae 0DD1     		bne	.L88
 1563              		.loc 1 1319 5 discriminator 9
 1564 00b0 FB68     		ldr	r3, [r7, #12]
 1565 00b2 1B69     		ldr	r3, [r3, #16]
 1566 00b4 002B     		cmp	r3, #0
 1567 00b6 04D1     		bne	.L89
 1568              		.loc 1 1319 5 discriminator 11
 1569 00b8 FB68     		ldr	r3, [r7, #12]
 1570 00ba 7F22     		movs	r2, #127
 1571 00bc A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1572 00c0 08E0     		b	.L85
 1573              	.L89:
 1574              		.loc 1 1319 5 discriminator 12
 1575 00c2 FB68     		ldr	r3, [r7, #12]
 1576 00c4 3F22     		movs	r2, #63
 1577 00c6 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1578 00ca 03E0     		b	.L85
 1579              	.L88:
 1580              		.loc 1 1319 5 discriminator 10
 1581 00cc FB68     		ldr	r3, [r7, #12]
 1582 00ce 0022     		movs	r2, #0
 1583 00d0 A3F85C20 		strh	r2, [r3, #92]	@ movhi
 1584              	.L85:
1320:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1321:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1585              		.loc 1 1321 22 is_stmt 1
 1586 00d4 FB68     		ldr	r3, [r7, #12]
 1587 00d6 0022     		movs	r2, #0
 1588 00d8 DA67     		str	r2, [r3, #124]
1322:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1589              		.loc 1 1322 20
 1590 00da FB68     		ldr	r3, [r7, #12]
 1591 00dc 2222     		movs	r2, #34
 1592 00de 9A67     		str	r2, [r3, #120]
1323:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1324:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1325:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1593              		.loc 1 1325 5
 1594 00e0 FB68     		ldr	r3, [r7, #12]
 1595 00e2 1B68     		ldr	r3, [r3]
 1596 00e4 9A68     		ldr	r2, [r3, #8]
 1597 00e6 FB68     		ldr	r3, [r7, #12]
 1598 00e8 1B68     		ldr	r3, [r3]
 1599 00ea 42F00102 		orr	r2, r2, #1
ARM GAS  /tmp/ccXuXBwl.s 			page 52


 1600 00ee 9A60     		str	r2, [r3, #8]
1326:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1327:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1328:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Configure Rx interrupt processing*/
1329:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->FifoMode == UART_FIFOMODE_ENABLE) && (Size >= huart->NbRxDataToProcess))
1330:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1331:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Rx ISR function pointer according to the data word length */
1332:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1333:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1334:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_16BIT_FIFOEN;
1335:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1336:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1337:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1338:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_8BIT_FIFOEN;
1339:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1340:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1341:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1342:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1343:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Parity Error interrupt and RX FIFO Threshold interrupt */
1344:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
1345:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR3, USART_CR3_RXFTIE);
1346:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1347:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1348:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1349:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the Rx ISR function pointer according to the data word length */
1350:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE
1351:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1352:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_16BIT;
1353:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1354:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1355:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1356:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR = UART_RxISR_8BIT;
1357:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1358:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1359:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UNLOCK(huart);
1360:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1361:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
1362:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE);
1363:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1364:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1365:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set the Rx ISR function pointer according to the data word length */
1366:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 1601              		.loc 1 1366 21
 1602 00f0 FB68     		ldr	r3, [r7, #12]
 1603 00f2 9B68     		ldr	r3, [r3, #8]
 1604              		.loc 1 1366 8
 1605 00f4 B3F5805F 		cmp	r3, #4096
 1606 00f8 07D1     		bne	.L90
 1607              		.loc 1 1366 71 discriminator 1
 1608 00fa FB68     		ldr	r3, [r7, #12]
 1609 00fc 1B69     		ldr	r3, [r3, #16]
 1610              		.loc 1 1366 56 discriminator 1
 1611 00fe 002B     		cmp	r3, #0
 1612 0100 03D1     		bne	.L90
1367:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1368:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_16BIT;
 1613              		.loc 1 1368 20
ARM GAS  /tmp/ccXuXBwl.s 			page 53


 1614 0102 FB68     		ldr	r3, [r7, #12]
 1615 0104 0D4A     		ldr	r2, .L92
 1616 0106 1A66     		str	r2, [r3, #96]
 1617 0108 02E0     		b	.L91
 1618              	.L90:
1369:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1370:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1371:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1372:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = UART_RxISR_8BIT;
 1619              		.loc 1 1372 20
 1620 010a FB68     		ldr	r3, [r7, #12]
 1621 010c 0C4A     		ldr	r2, .L92+4
 1622 010e 1A66     		str	r2, [r3, #96]
 1623              	.L91:
1373:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1374:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1375:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1624              		.loc 1 1375 5
 1625 0110 FB68     		ldr	r3, [r7, #12]
 1626 0112 0022     		movs	r2, #0
 1627 0114 83F87020 		strb	r2, [r3, #112]
1376:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1377:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Parity Error interrupt and Data Register Not Empty interrupt */
1378:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE | USART_CR1_RXNEIE);
 1628              		.loc 1 1378 5
 1629 0118 FB68     		ldr	r3, [r7, #12]
 1630 011a 1B68     		ldr	r3, [r3]
 1631 011c 1A68     		ldr	r2, [r3]
 1632 011e FB68     		ldr	r3, [r7, #12]
 1633 0120 1B68     		ldr	r3, [r3]
 1634 0122 42F49072 		orr	r2, r2, #288
 1635 0126 1A60     		str	r2, [r3]
1379:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1380:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1381:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
 1636              		.loc 1 1381 12
 1637 0128 0023     		movs	r3, #0
 1638 012a 00E0     		b	.L81
 1639              	.L78:
1382:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1383:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1384:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1385:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 1640              		.loc 1 1385 12
 1641 012c 0223     		movs	r3, #2
 1642              	.L81:
1386:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1387:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1643              		.loc 1 1387 1
 1644 012e 1846     		mov	r0, r3
 1645 0130 1437     		adds	r7, r7, #20
 1646              	.LCFI56:
 1647              		.cfi_def_cfa_offset 4
 1648 0132 BD46     		mov	sp, r7
 1649              	.LCFI57:
 1650              		.cfi_def_cfa_register 13
 1651              		@ sp needed
ARM GAS  /tmp/ccXuXBwl.s 			page 54


 1652 0134 5DF8047B 		ldr	r7, [sp], #4
 1653              	.LCFI58:
 1654              		.cfi_restore 7
 1655              		.cfi_def_cfa_offset 0
 1656 0138 7047     		bx	lr
 1657              	.L93:
 1658 013a 00BF     		.align	2
 1659              	.L92:
 1660 013c 00000000 		.word	UART_RxISR_16BIT
 1661 0140 00000000 		.word	UART_RxISR_8BIT
 1662              		.cfi_endproc
 1663              	.LFE323:
 1665              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1666              		.align	1
 1667              		.global	HAL_UART_Transmit_DMA
 1668              		.syntax unified
 1669              		.thumb
 1670              		.thumb_func
 1671              		.fpu fpv4-sp-d16
 1673              	HAL_UART_Transmit_DMA:
 1674              	.LFB324:
1388:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1389:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1390:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Send an amount of data in DMA mode.
1391:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1392:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer.
1393:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data to be sent.
1394:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1395:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1396:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1397:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1675              		.loc 1 1397 1
 1676              		.cfi_startproc
 1677              		@ args = 0, pretend = 0, frame = 16
 1678              		@ frame_needed = 1, uses_anonymous_args = 0
 1679 0000 80B5     		push	{r7, lr}
 1680              	.LCFI59:
 1681              		.cfi_def_cfa_offset 8
 1682              		.cfi_offset 7, -8
 1683              		.cfi_offset 14, -4
 1684 0002 84B0     		sub	sp, sp, #16
 1685              	.LCFI60:
 1686              		.cfi_def_cfa_offset 24
 1687 0004 00AF     		add	r7, sp, #0
 1688              	.LCFI61:
 1689              		.cfi_def_cfa_register 7
 1690 0006 F860     		str	r0, [r7, #12]
 1691 0008 B960     		str	r1, [r7, #8]
 1692 000a 1346     		mov	r3, r2
 1693 000c FB80     		strh	r3, [r7, #6]	@ movhi
1398:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1399:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1694              		.loc 1 1399 12
 1695 000e FB68     		ldr	r3, [r7, #12]
 1696 0010 5B6F     		ldr	r3, [r3, #116]
 1697              		.loc 1 1399 6
 1698 0012 202B     		cmp	r3, #32
ARM GAS  /tmp/ccXuXBwl.s 			page 55


 1699 0014 64D1     		bne	.L95
1400:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1401:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1700              		.loc 1 1401 8
 1701 0016 BB68     		ldr	r3, [r7, #8]
 1702 0018 002B     		cmp	r3, #0
 1703 001a 02D0     		beq	.L96
 1704              		.loc 1 1401 25 discriminator 1
 1705 001c FB88     		ldrh	r3, [r7, #6]
 1706 001e 002B     		cmp	r3, #0
 1707 0020 01D1     		bne	.L97
 1708              	.L96:
1402:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1403:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
 1709              		.loc 1 1403 14
 1710 0022 0123     		movs	r3, #1
 1711 0024 5DE0     		b	.L98
 1712              	.L97:
1404:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1405:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1406:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1713              		.loc 1 1406 5
 1714 0026 FB68     		ldr	r3, [r7, #12]
 1715 0028 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 1716 002c 012B     		cmp	r3, #1
 1717 002e 01D1     		bne	.L99
 1718              		.loc 1 1406 5 is_stmt 0 discriminator 1
 1719 0030 0223     		movs	r3, #2
 1720 0032 56E0     		b	.L98
 1721              	.L99:
 1722              		.loc 1 1406 5 discriminator 2
 1723 0034 FB68     		ldr	r3, [r7, #12]
 1724 0036 0122     		movs	r2, #1
 1725 0038 83F87020 		strb	r2, [r3, #112]
1407:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1408:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pTxBuffPtr  = pData;
 1726              		.loc 1 1408 24 is_stmt 1 discriminator 2
 1727 003c FB68     		ldr	r3, [r7, #12]
 1728 003e BA68     		ldr	r2, [r7, #8]
 1729 0040 DA64     		str	r2, [r3, #76]
1409:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferSize  = Size;
 1730              		.loc 1 1409 24 discriminator 2
 1731 0042 FB68     		ldr	r3, [r7, #12]
 1732 0044 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1733 0046 A3F85020 		strh	r2, [r3, #80]	@ movhi
1410:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1734              		.loc 1 1410 24 discriminator 2
 1735 004a FB68     		ldr	r3, [r7, #12]
 1736 004c FA88     		ldrh	r2, [r7, #6]	@ movhi
 1737 004e A3F85220 		strh	r2, [r3, #82]	@ movhi
1411:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1412:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1738              		.loc 1 1412 22 discriminator 2
 1739 0052 FB68     		ldr	r3, [r7, #12]
 1740 0054 0022     		movs	r2, #0
 1741 0056 DA67     		str	r2, [r3, #124]
1413:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
ARM GAS  /tmp/ccXuXBwl.s 			page 56


 1742              		.loc 1 1413 19 discriminator 2
 1743 0058 FB68     		ldr	r3, [r7, #12]
 1744 005a 2122     		movs	r2, #33
 1745 005c 5A67     		str	r2, [r3, #116]
1414:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1415:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 1746              		.loc 1 1415 14 discriminator 2
 1747 005e FB68     		ldr	r3, [r7, #12]
 1748 0060 9B6E     		ldr	r3, [r3, #104]
 1749              		.loc 1 1415 8 discriminator 2
 1750 0062 002B     		cmp	r3, #0
 1751 0064 2AD0     		beq	.L100
1416:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1417:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1418:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 1752              		.loc 1 1418 12
 1753 0066 FB68     		ldr	r3, [r7, #12]
 1754 0068 9B6E     		ldr	r3, [r3, #104]
 1755              		.loc 1 1418 39
 1756 006a 204A     		ldr	r2, .L101
 1757 006c DA62     		str	r2, [r3, #44]
1419:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1420:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1421:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 1758              		.loc 1 1421 12
 1759 006e FB68     		ldr	r3, [r7, #12]
 1760 0070 9B6E     		ldr	r3, [r3, #104]
 1761              		.loc 1 1421 43
 1762 0072 1F4A     		ldr	r2, .L101+4
 1763 0074 1A63     		str	r2, [r3, #48]
1422:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1423:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the DMA error callback */
1424:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferErrorCallback = UART_DMAError;
 1764              		.loc 1 1424 12
 1765 0076 FB68     		ldr	r3, [r7, #12]
 1766 0078 9B6E     		ldr	r3, [r3, #104]
 1767              		.loc 1 1424 40
 1768 007a 1E4A     		ldr	r2, .L101+8
 1769 007c 5A63     		str	r2, [r3, #52]
1425:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1426:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the DMA abort callback */
1427:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 1770              		.loc 1 1427 12
 1771 007e FB68     		ldr	r3, [r7, #12]
 1772 0080 9B6E     		ldr	r3, [r3, #104]
 1773              		.loc 1 1427 40
 1774 0082 0022     		movs	r2, #0
 1775 0084 9A63     		str	r2, [r3, #56]
1428:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1429:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART transmit DMA channel */
1430:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmatx, (uint32_t)huart->pTxBuffPtr, (uint32_t)&huart->Instance->
 1776              		.loc 1 1430 11
 1777 0086 FB68     		ldr	r3, [r7, #12]
 1778 0088 986E     		ldr	r0, [r3, #104]
 1779              		.loc 1 1430 58
 1780 008a FB68     		ldr	r3, [r7, #12]
 1781 008c DB6C     		ldr	r3, [r3, #76]
ARM GAS  /tmp/ccXuXBwl.s 			page 57


 1782              		.loc 1 1430 11
 1783 008e 1946     		mov	r1, r3
 1784              		.loc 1 1430 88
 1785 0090 FB68     		ldr	r3, [r7, #12]
 1786 0092 1B68     		ldr	r3, [r3]
 1787              		.loc 1 1430 82
 1788 0094 2833     		adds	r3, r3, #40
 1789              		.loc 1 1430 11
 1790 0096 1A46     		mov	r2, r3
 1791 0098 FB88     		ldrh	r3, [r7, #6]
 1792 009a FFF7FEFF 		bl	HAL_DMA_Start_IT
 1793 009e 0346     		mov	r3, r0
 1794              		.loc 1 1430 10
 1795 00a0 002B     		cmp	r3, #0
 1796 00a2 0BD0     		beq	.L100
1431:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1432:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Set error code to DMA */
1433:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
 1797              		.loc 1 1433 26
 1798 00a4 FB68     		ldr	r3, [r7, #12]
 1799 00a6 1022     		movs	r2, #16
 1800 00a8 DA67     		str	r2, [r3, #124]
1434:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1435:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 1801              		.loc 1 1435 9
 1802 00aa FB68     		ldr	r3, [r7, #12]
 1803 00ac 0022     		movs	r2, #0
 1804 00ae 83F87020 		strb	r2, [r3, #112]
1436:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1437:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Restore huart->gState to ready */
1438:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 1805              		.loc 1 1438 23
 1806 00b2 FB68     		ldr	r3, [r7, #12]
 1807 00b4 2022     		movs	r2, #32
 1808 00b6 5A67     		str	r2, [r3, #116]
1439:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1440:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_ERROR;
 1809              		.loc 1 1440 16
 1810 00b8 0123     		movs	r3, #1
 1811 00ba 12E0     		b	.L98
 1812              	.L100:
1441:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1442:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1443:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the TC flag in the ICR register */
1444:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_TCF);
 1813              		.loc 1 1444 5
 1814 00bc FB68     		ldr	r3, [r7, #12]
 1815 00be 1B68     		ldr	r3, [r3]
 1816 00c0 4022     		movs	r2, #64
 1817 00c2 1A62     		str	r2, [r3, #32]
1445:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1446:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1818              		.loc 1 1446 5
 1819 00c4 FB68     		ldr	r3, [r7, #12]
 1820 00c6 0022     		movs	r2, #0
 1821 00c8 83F87020 		strb	r2, [r3, #112]
1447:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccXuXBwl.s 			page 58


1448:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1449:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in the UART CR3 register */
1450:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1822              		.loc 1 1450 5
 1823 00cc FB68     		ldr	r3, [r7, #12]
 1824 00ce 1B68     		ldr	r3, [r3]
 1825 00d0 9A68     		ldr	r2, [r3, #8]
 1826 00d2 FB68     		ldr	r3, [r7, #12]
 1827 00d4 1B68     		ldr	r3, [r3]
 1828 00d6 42F08002 		orr	r2, r2, #128
 1829 00da 9A60     		str	r2, [r3, #8]
1451:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1452:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
 1830              		.loc 1 1452 12
 1831 00dc 0023     		movs	r3, #0
 1832 00de 00E0     		b	.L98
 1833              	.L95:
1453:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1454:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1455:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1456:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 1834              		.loc 1 1456 12
 1835 00e0 0223     		movs	r3, #2
 1836              	.L98:
1457:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1458:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 1837              		.loc 1 1458 1
 1838 00e2 1846     		mov	r0, r3
 1839 00e4 1037     		adds	r7, r7, #16
 1840              	.LCFI62:
 1841              		.cfi_def_cfa_offset 8
 1842 00e6 BD46     		mov	sp, r7
 1843              	.LCFI63:
 1844              		.cfi_def_cfa_register 13
 1845              		@ sp needed
 1846 00e8 80BD     		pop	{r7, pc}
 1847              	.L102:
 1848 00ea 00BF     		.align	2
 1849              	.L101:
 1850 00ec 00000000 		.word	UART_DMATransmitCplt
 1851 00f0 00000000 		.word	UART_DMATxHalfCplt
 1852 00f4 00000000 		.word	UART_DMAError
 1853              		.cfi_endproc
 1854              	.LFE324:
 1856              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1857              		.align	1
 1858              		.global	HAL_UART_Receive_DMA
 1859              		.syntax unified
 1860              		.thumb
 1861              		.thumb_func
 1862              		.fpu fpv4-sp-d16
 1864              	HAL_UART_Receive_DMA:
 1865              	.LFB325:
1459:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1460:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1461:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode.
1462:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
ARM GAS  /tmp/ccXuXBwl.s 			page 59


1463:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         the parity bit (MSB position).
1464:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1465:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param pData Pointer to data buffer.
1466:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Size  Amount of data to be received.
1467:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1468:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1469:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1470:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 1866              		.loc 1 1470 1
 1867              		.cfi_startproc
 1868              		@ args = 0, pretend = 0, frame = 16
 1869              		@ frame_needed = 1, uses_anonymous_args = 0
 1870 0000 80B5     		push	{r7, lr}
 1871              	.LCFI64:
 1872              		.cfi_def_cfa_offset 8
 1873              		.cfi_offset 7, -8
 1874              		.cfi_offset 14, -4
 1875 0002 84B0     		sub	sp, sp, #16
 1876              	.LCFI65:
 1877              		.cfi_def_cfa_offset 24
 1878 0004 00AF     		add	r7, sp, #0
 1879              	.LCFI66:
 1880              		.cfi_def_cfa_register 7
 1881 0006 F860     		str	r0, [r7, #12]
 1882 0008 B960     		str	r1, [r7, #8]
 1883 000a 1346     		mov	r3, r2
 1884 000c FB80     		strh	r3, [r7, #6]	@ movhi
1471:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1472:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1885              		.loc 1 1472 12
 1886 000e FB68     		ldr	r3, [r7, #12]
 1887 0010 9B6F     		ldr	r3, [r3, #120]
 1888              		.loc 1 1472 6
 1889 0012 202B     		cmp	r3, #32
 1890 0014 6CD1     		bne	.L104
1473:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1474:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1891              		.loc 1 1474 8
 1892 0016 BB68     		ldr	r3, [r7, #8]
 1893 0018 002B     		cmp	r3, #0
 1894 001a 02D0     		beq	.L105
 1895              		.loc 1 1474 25 discriminator 1
 1896 001c FB88     		ldrh	r3, [r7, #6]
 1897 001e 002B     		cmp	r3, #0
 1898 0020 01D1     		bne	.L106
 1899              	.L105:
1475:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1476:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_ERROR;
 1900              		.loc 1 1476 14
 1901 0022 0123     		movs	r3, #1
 1902 0024 65E0     		b	.L107
 1903              	.L106:
1477:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1478:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1479:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1904              		.loc 1 1479 5
 1905 0026 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccXuXBwl.s 			page 60


 1906 0028 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 1907 002c 012B     		cmp	r3, #1
 1908 002e 01D1     		bne	.L108
 1909              		.loc 1 1479 5 is_stmt 0 discriminator 1
 1910 0030 0223     		movs	r3, #2
 1911 0032 5EE0     		b	.L107
 1912              	.L108:
 1913              		.loc 1 1479 5 discriminator 2
 1914 0034 FB68     		ldr	r3, [r7, #12]
 1915 0036 0122     		movs	r2, #1
 1916 0038 83F87020 		strb	r2, [r3, #112]
1480:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1481:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr = pData;
 1917              		.loc 1 1481 23 is_stmt 1 discriminator 2
 1918 003c FB68     		ldr	r3, [r7, #12]
 1919 003e BA68     		ldr	r2, [r7, #8]
 1920 0040 5A65     		str	r2, [r3, #84]
1482:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferSize = Size;
 1921              		.loc 1 1482 23 discriminator 2
 1922 0042 FB68     		ldr	r3, [r7, #12]
 1923 0044 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1924 0046 A3F85820 		strh	r2, [r3, #88]	@ movhi
1483:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1484:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1925              		.loc 1 1484 22 discriminator 2
 1926 004a FB68     		ldr	r3, [r7, #12]
 1927 004c 0022     		movs	r2, #0
 1928 004e DA67     		str	r2, [r3, #124]
1485:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 1929              		.loc 1 1485 20 discriminator 2
 1930 0050 FB68     		ldr	r3, [r7, #12]
 1931 0052 2222     		movs	r2, #34
 1932 0054 9A67     		str	r2, [r3, #120]
1486:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1487:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 1933              		.loc 1 1487 14 discriminator 2
 1934 0056 FB68     		ldr	r3, [r7, #12]
 1935 0058 DB6E     		ldr	r3, [r3, #108]
 1936              		.loc 1 1487 8 discriminator 2
 1937 005a 002B     		cmp	r3, #0
 1938 005c 2AD0     		beq	.L109
1488:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1489:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA transfer complete callback */
1490:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 1939              		.loc 1 1490 12
 1940 005e FB68     		ldr	r3, [r7, #12]
 1941 0060 DB6E     		ldr	r3, [r3, #108]
 1942              		.loc 1 1490 39
 1943 0062 264A     		ldr	r2, .L110
 1944 0064 DA62     		str	r2, [r3, #44]
1491:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1492:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Half transfer complete callback */
1493:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 1945              		.loc 1 1493 12
 1946 0066 FB68     		ldr	r3, [r7, #12]
 1947 0068 DB6E     		ldr	r3, [r3, #108]
 1948              		.loc 1 1493 43
ARM GAS  /tmp/ccXuXBwl.s 			page 61


 1949 006a 254A     		ldr	r2, .L110+4
 1950 006c 1A63     		str	r2, [r3, #48]
1494:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1495:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the DMA error callback */
1496:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferErrorCallback = UART_DMAError;
 1951              		.loc 1 1496 12
 1952 006e FB68     		ldr	r3, [r7, #12]
 1953 0070 DB6E     		ldr	r3, [r3, #108]
 1954              		.loc 1 1496 40
 1955 0072 244A     		ldr	r2, .L110+8
 1956 0074 5A63     		str	r2, [r3, #52]
1497:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1498:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the DMA abort callback */
1499:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 1957              		.loc 1 1499 12
 1958 0076 FB68     		ldr	r3, [r7, #12]
 1959 0078 DB6E     		ldr	r3, [r3, #108]
 1960              		.loc 1 1499 40
 1961 007a 0022     		movs	r2, #0
 1962 007c 9A63     		str	r2, [r3, #56]
1500:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1501:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the DMA channel */
1502:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->RDR, (uint32_t)huart->pRxBuff
 1963              		.loc 1 1502 11
 1964 007e FB68     		ldr	r3, [r7, #12]
 1965 0080 D86E     		ldr	r0, [r3, #108]
 1966              		.loc 1 1502 59
 1967 0082 FB68     		ldr	r3, [r7, #12]
 1968 0084 1B68     		ldr	r3, [r3]
 1969              		.loc 1 1502 53
 1970 0086 2433     		adds	r3, r3, #36
 1971              		.loc 1 1502 11
 1972 0088 1946     		mov	r1, r3
 1973              		.loc 1 1502 91
 1974 008a FB68     		ldr	r3, [r7, #12]
 1975 008c 5B6D     		ldr	r3, [r3, #84]
 1976              		.loc 1 1502 11
 1977 008e 1A46     		mov	r2, r3
 1978 0090 FB88     		ldrh	r3, [r7, #6]
 1979 0092 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1980 0096 0346     		mov	r3, r0
 1981              		.loc 1 1502 10
 1982 0098 002B     		cmp	r3, #0
 1983 009a 0BD0     		beq	.L109
1503:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1504:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Set error code to DMA */
1505:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_DMA;
 1984              		.loc 1 1505 26
 1985 009c FB68     		ldr	r3, [r7, #12]
 1986 009e 1022     		movs	r2, #16
 1987 00a0 DA67     		str	r2, [r3, #124]
1506:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1507:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 1988              		.loc 1 1507 9
 1989 00a2 FB68     		ldr	r3, [r7, #12]
 1990 00a4 0022     		movs	r2, #0
 1991 00a6 83F87020 		strb	r2, [r3, #112]
ARM GAS  /tmp/ccXuXBwl.s 			page 62


1508:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1509:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Restore huart->gState to ready */
1510:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 1992              		.loc 1 1510 23
 1993 00aa FB68     		ldr	r3, [r7, #12]
 1994 00ac 2022     		movs	r2, #32
 1995 00ae 5A67     		str	r2, [r3, #116]
1511:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1512:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_ERROR;
 1996              		.loc 1 1512 16
 1997 00b0 0123     		movs	r3, #1
 1998 00b2 1EE0     		b	.L107
 1999              	.L109:
1513:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1514:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1515:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 2000              		.loc 1 1515 5
 2001 00b4 FB68     		ldr	r3, [r7, #12]
 2002 00b6 0022     		movs	r2, #0
 2003 00b8 83F87020 		strb	r2, [r3, #112]
1516:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1517:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Parity Error Interrupt */
1518:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2004              		.loc 1 1518 5
 2005 00bc FB68     		ldr	r3, [r7, #12]
 2006 00be 1B68     		ldr	r3, [r3]
 2007 00c0 1A68     		ldr	r2, [r3]
 2008 00c2 FB68     		ldr	r3, [r7, #12]
 2009 00c4 1B68     		ldr	r3, [r3]
 2010 00c6 42F48072 		orr	r2, r2, #256
 2011 00ca 1A60     		str	r2, [r3]
1519:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1520:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
1521:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2012              		.loc 1 1521 5
 2013 00cc FB68     		ldr	r3, [r7, #12]
 2014 00ce 1B68     		ldr	r3, [r3]
 2015 00d0 9A68     		ldr	r2, [r3, #8]
 2016 00d2 FB68     		ldr	r3, [r7, #12]
 2017 00d4 1B68     		ldr	r3, [r3]
 2018 00d6 42F00102 		orr	r2, r2, #1
 2019 00da 9A60     		str	r2, [r3, #8]
1522:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1523:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the DMA transfer for the receiver request by setting the DMAR bit
1524:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     in the UART CR3 register */
1525:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2020              		.loc 1 1525 5
 2021 00dc FB68     		ldr	r3, [r7, #12]
 2022 00de 1B68     		ldr	r3, [r3]
 2023 00e0 9A68     		ldr	r2, [r3, #8]
 2024 00e2 FB68     		ldr	r3, [r7, #12]
 2025 00e4 1B68     		ldr	r3, [r3]
 2026 00e6 42F04002 		orr	r2, r2, #64
 2027 00ea 9A60     		str	r2, [r3, #8]
1526:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1527:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_OK;
 2028              		.loc 1 1527 12
ARM GAS  /tmp/ccXuXBwl.s 			page 63


 2029 00ec 0023     		movs	r3, #0
 2030 00ee 00E0     		b	.L107
 2031              	.L104:
1528:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1529:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
1530:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1531:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return HAL_BUSY;
 2032              		.loc 1 1531 12
 2033 00f0 0223     		movs	r3, #2
 2034              	.L107:
1532:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1533:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2035              		.loc 1 1533 1
 2036 00f2 1846     		mov	r0, r3
 2037 00f4 1037     		adds	r7, r7, #16
 2038              	.LCFI67:
 2039              		.cfi_def_cfa_offset 8
 2040 00f6 BD46     		mov	sp, r7
 2041              	.LCFI68:
 2042              		.cfi_def_cfa_register 13
 2043              		@ sp needed
 2044 00f8 80BD     		pop	{r7, pc}
 2045              	.L111:
 2046 00fa 00BF     		.align	2
 2047              	.L110:
 2048 00fc 00000000 		.word	UART_DMAReceiveCplt
 2049 0100 00000000 		.word	UART_DMARxHalfCplt
 2050 0104 00000000 		.word	UART_DMAError
 2051              		.cfi_endproc
 2052              	.LFE325:
 2054              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 2055              		.align	1
 2056              		.global	HAL_UART_DMAPause
 2057              		.syntax unified
 2058              		.thumb
 2059              		.thumb_func
 2060              		.fpu fpv4-sp-d16
 2062              	HAL_UART_DMAPause:
 2063              	.LFB326:
1534:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1535:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1536:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Pause the DMA Transfer.
1537:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1538:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1539:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1540:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1541:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2064              		.loc 1 1541 1
 2065              		.cfi_startproc
 2066              		@ args = 0, pretend = 0, frame = 16
 2067              		@ frame_needed = 1, uses_anonymous_args = 0
 2068              		@ link register save eliminated.
 2069 0000 80B4     		push	{r7}
 2070              	.LCFI69:
 2071              		.cfi_def_cfa_offset 4
 2072              		.cfi_offset 7, -4
 2073 0002 85B0     		sub	sp, sp, #20
ARM GAS  /tmp/ccXuXBwl.s 			page 64


 2074              	.LCFI70:
 2075              		.cfi_def_cfa_offset 24
 2076 0004 00AF     		add	r7, sp, #0
 2077              	.LCFI71:
 2078              		.cfi_def_cfa_register 7
 2079 0006 7860     		str	r0, [r7, #4]
1542:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 2080              		.loc 1 1542 31
 2081 0008 7B68     		ldr	r3, [r7, #4]
 2082 000a 5B6F     		ldr	r3, [r3, #116]
 2083 000c FB60     		str	r3, [r7, #12]
1543:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2084              		.loc 1 1543 31
 2085 000e 7B68     		ldr	r3, [r7, #4]
 2086 0010 9B6F     		ldr	r3, [r3, #120]
 2087 0012 BB60     		str	r3, [r7, #8]
1544:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1545:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 2088              		.loc 1 1545 3
 2089 0014 7B68     		ldr	r3, [r7, #4]
 2090 0016 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 2091 001a 012B     		cmp	r3, #1
 2092 001c 01D1     		bne	.L113
 2093              		.loc 1 1545 3 is_stmt 0 discriminator 1
 2094 001e 0223     		movs	r3, #2
 2095 0020 3CE0     		b	.L114
 2096              	.L113:
 2097              		.loc 1 1545 3 discriminator 2
 2098 0022 7B68     		ldr	r3, [r7, #4]
 2099 0024 0122     		movs	r2, #1
 2100 0026 83F87020 		strb	r2, [r3, #112]
1546:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1547:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 2101              		.loc 1 1547 8 is_stmt 1 discriminator 2
 2102 002a 7B68     		ldr	r3, [r7, #4]
 2103 002c 1B68     		ldr	r3, [r3]
 2104 002e 9B68     		ldr	r3, [r3, #8]
 2105 0030 03F08003 		and	r3, r3, #128
 2106              		.loc 1 1547 6 discriminator 2
 2107 0034 802B     		cmp	r3, #128
 2108 0036 0AD1     		bne	.L115
 2109              		.loc 1 1547 62 discriminator 1
 2110 0038 FB68     		ldr	r3, [r7, #12]
 2111 003a 212B     		cmp	r3, #33
 2112 003c 07D1     		bne	.L115
1548:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1549:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1550:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1551:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2113              		.loc 1 1551 5
 2114 003e 7B68     		ldr	r3, [r7, #4]
 2115 0040 1B68     		ldr	r3, [r3]
 2116 0042 9A68     		ldr	r2, [r3, #8]
 2117 0044 7B68     		ldr	r3, [r7, #4]
 2118 0046 1B68     		ldr	r3, [r3]
 2119 0048 22F08002 		bic	r2, r2, #128
 2120 004c 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/ccXuXBwl.s 			page 65


 2121              	.L115:
1552:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1553:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 2122              		.loc 1 1553 8
 2123 004e 7B68     		ldr	r3, [r7, #4]
 2124 0050 1B68     		ldr	r3, [r3]
 2125 0052 9B68     		ldr	r3, [r3, #8]
 2126 0054 03F04003 		and	r3, r3, #64
 2127              		.loc 1 1553 6
 2128 0058 402B     		cmp	r3, #64
 2129 005a 1AD1     		bne	.L116
 2130              		.loc 1 1553 62 discriminator 1
 2131 005c BB68     		ldr	r3, [r7, #8]
 2132 005e 222B     		cmp	r3, #34
 2133 0060 17D1     		bne	.L116
1554:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1555:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1556:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
1557:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2134              		.loc 1 1557 5
 2135 0062 7B68     		ldr	r3, [r7, #4]
 2136 0064 1B68     		ldr	r3, [r3]
 2137 0066 1A68     		ldr	r2, [r3]
 2138 0068 7B68     		ldr	r3, [r7, #4]
 2139 006a 1B68     		ldr	r3, [r3]
 2140 006c 22F48072 		bic	r2, r2, #256
 2141 0070 1A60     		str	r2, [r3]
1558:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2142              		.loc 1 1558 5
 2143 0072 7B68     		ldr	r3, [r7, #4]
 2144 0074 1B68     		ldr	r3, [r3]
 2145 0076 9A68     		ldr	r2, [r3, #8]
 2146 0078 7B68     		ldr	r3, [r7, #4]
 2147 007a 1B68     		ldr	r3, [r3]
 2148 007c 22F00102 		bic	r2, r2, #1
 2149 0080 9A60     		str	r2, [r3, #8]
1559:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1560:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1561:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2150              		.loc 1 1561 5
 2151 0082 7B68     		ldr	r3, [r7, #4]
 2152 0084 1B68     		ldr	r3, [r3]
 2153 0086 9A68     		ldr	r2, [r3, #8]
 2154 0088 7B68     		ldr	r3, [r7, #4]
 2155 008a 1B68     		ldr	r3, [r3]
 2156 008c 22F04002 		bic	r2, r2, #64
 2157 0090 9A60     		str	r2, [r3, #8]
 2158              	.L116:
1562:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1563:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1564:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2159              		.loc 1 1564 3
 2160 0092 7B68     		ldr	r3, [r7, #4]
 2161 0094 0022     		movs	r2, #0
 2162 0096 83F87020 		strb	r2, [r3, #112]
1565:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1566:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
ARM GAS  /tmp/ccXuXBwl.s 			page 66


 2163              		.loc 1 1566 10
 2164 009a 0023     		movs	r3, #0
 2165              	.L114:
1567:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2166              		.loc 1 1567 1
 2167 009c 1846     		mov	r0, r3
 2168 009e 1437     		adds	r7, r7, #20
 2169              	.LCFI72:
 2170              		.cfi_def_cfa_offset 4
 2171 00a0 BD46     		mov	sp, r7
 2172              	.LCFI73:
 2173              		.cfi_def_cfa_register 13
 2174              		@ sp needed
 2175 00a2 5DF8047B 		ldr	r7, [sp], #4
 2176              	.LCFI74:
 2177              		.cfi_restore 7
 2178              		.cfi_def_cfa_offset 0
 2179 00a6 7047     		bx	lr
 2180              		.cfi_endproc
 2181              	.LFE326:
 2183              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 2184              		.align	1
 2185              		.global	HAL_UART_DMAResume
 2186              		.syntax unified
 2187              		.thumb
 2188              		.thumb_func
 2189              		.fpu fpv4-sp-d16
 2191              	HAL_UART_DMAResume:
 2192              	.LFB327:
1568:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1569:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1570:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Resume the DMA Transfer.
1571:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1572:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1573:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1574:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1575:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2193              		.loc 1 1575 1
 2194              		.cfi_startproc
 2195              		@ args = 0, pretend = 0, frame = 8
 2196              		@ frame_needed = 1, uses_anonymous_args = 0
 2197              		@ link register save eliminated.
 2198 0000 80B4     		push	{r7}
 2199              	.LCFI75:
 2200              		.cfi_def_cfa_offset 4
 2201              		.cfi_offset 7, -4
 2202 0002 83B0     		sub	sp, sp, #12
 2203              	.LCFI76:
 2204              		.cfi_def_cfa_offset 16
 2205 0004 00AF     		add	r7, sp, #0
 2206              	.LCFI77:
 2207              		.cfi_def_cfa_register 7
 2208 0006 7860     		str	r0, [r7, #4]
1576:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 2209              		.loc 1 1576 3
 2210 0008 7B68     		ldr	r3, [r7, #4]
 2211 000a 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
ARM GAS  /tmp/ccXuXBwl.s 			page 67


 2212 000e 012B     		cmp	r3, #1
 2213 0010 01D1     		bne	.L118
 2214              		.loc 1 1576 3 is_stmt 0 discriminator 1
 2215 0012 0223     		movs	r3, #2
 2216 0014 34E0     		b	.L119
 2217              	.L118:
 2218              		.loc 1 1576 3 discriminator 2
 2219 0016 7B68     		ldr	r3, [r7, #4]
 2220 0018 0122     		movs	r2, #1
 2221 001a 83F87020 		strb	r2, [r3, #112]
1577:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1578:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 2222              		.loc 1 1578 12 is_stmt 1 discriminator 2
 2223 001e 7B68     		ldr	r3, [r7, #4]
 2224 0020 5B6F     		ldr	r3, [r3, #116]
 2225              		.loc 1 1578 6 discriminator 2
 2226 0022 212B     		cmp	r3, #33
 2227 0024 07D1     		bne	.L120
1579:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1580:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1581:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2228              		.loc 1 1581 5
 2229 0026 7B68     		ldr	r3, [r7, #4]
 2230 0028 1B68     		ldr	r3, [r3]
 2231 002a 9A68     		ldr	r2, [r3, #8]
 2232 002c 7B68     		ldr	r3, [r7, #4]
 2233 002e 1B68     		ldr	r3, [r3]
 2234 0030 42F08002 		orr	r2, r2, #128
 2235 0034 9A60     		str	r2, [r3, #8]
 2236              	.L120:
1582:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1583:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2237              		.loc 1 1583 12
 2238 0036 7B68     		ldr	r3, [r7, #4]
 2239 0038 9B6F     		ldr	r3, [r3, #120]
 2240              		.loc 1 1583 6
 2241 003a 222B     		cmp	r3, #34
 2242 003c 1BD1     		bne	.L121
1584:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1585:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer */
1586:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 2243              		.loc 1 1586 5
 2244 003e 7B68     		ldr	r3, [r7, #4]
 2245 0040 1B68     		ldr	r3, [r3]
 2246 0042 0822     		movs	r2, #8
 2247 0044 1A62     		str	r2, [r3, #32]
1587:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1588:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reenable PE and ERR (Frame error, noise error, overrun error) interrupts */
1589:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2248              		.loc 1 1589 5
 2249 0046 7B68     		ldr	r3, [r7, #4]
 2250 0048 1B68     		ldr	r3, [r3]
 2251 004a 1A68     		ldr	r2, [r3]
 2252 004c 7B68     		ldr	r3, [r7, #4]
 2253 004e 1B68     		ldr	r3, [r3]
 2254 0050 42F48072 		orr	r2, r2, #256
 2255 0054 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccXuXBwl.s 			page 68


1590:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2256              		.loc 1 1590 5
 2257 0056 7B68     		ldr	r3, [r7, #4]
 2258 0058 1B68     		ldr	r3, [r3]
 2259 005a 9A68     		ldr	r2, [r3, #8]
 2260 005c 7B68     		ldr	r3, [r7, #4]
 2261 005e 1B68     		ldr	r3, [r3]
 2262 0060 42F00102 		orr	r2, r2, #1
 2263 0064 9A60     		str	r2, [r3, #8]
1591:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1592:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1593:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2264              		.loc 1 1593 5
 2265 0066 7B68     		ldr	r3, [r7, #4]
 2266 0068 1B68     		ldr	r3, [r3]
 2267 006a 9A68     		ldr	r2, [r3, #8]
 2268 006c 7B68     		ldr	r3, [r7, #4]
 2269 006e 1B68     		ldr	r3, [r3]
 2270 0070 42F04002 		orr	r2, r2, #64
 2271 0074 9A60     		str	r2, [r3, #8]
 2272              	.L121:
1594:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1595:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1596:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2273              		.loc 1 1596 3
 2274 0076 7B68     		ldr	r3, [r7, #4]
 2275 0078 0022     		movs	r2, #0
 2276 007a 83F87020 		strb	r2, [r3, #112]
1597:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1598:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 2277              		.loc 1 1598 10
 2278 007e 0023     		movs	r3, #0
 2279              	.L119:
1599:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2280              		.loc 1 1599 1
 2281 0080 1846     		mov	r0, r3
 2282 0082 0C37     		adds	r7, r7, #12
 2283              	.LCFI78:
 2284              		.cfi_def_cfa_offset 4
 2285 0084 BD46     		mov	sp, r7
 2286              	.LCFI79:
 2287              		.cfi_def_cfa_register 13
 2288              		@ sp needed
 2289 0086 5DF8047B 		ldr	r7, [sp], #4
 2290              	.LCFI80:
 2291              		.cfi_restore 7
 2292              		.cfi_def_cfa_offset 0
 2293 008a 7047     		bx	lr
 2294              		.cfi_endproc
 2295              	.LFE327:
 2297              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2298              		.align	1
 2299              		.global	HAL_UART_DMAStop
 2300              		.syntax unified
 2301              		.thumb
 2302              		.thumb_func
 2303              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccXuXBwl.s 			page 69


 2305              	HAL_UART_DMAStop:
 2306              	.LFB328:
1600:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1601:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1602:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Stop the DMA Transfer.
1603:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
1604:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1605:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1606:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1607:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2307              		.loc 1 1607 1
 2308              		.cfi_startproc
 2309              		@ args = 0, pretend = 0, frame = 16
 2310              		@ frame_needed = 1, uses_anonymous_args = 0
 2311 0000 80B5     		push	{r7, lr}
 2312              	.LCFI81:
 2313              		.cfi_def_cfa_offset 8
 2314              		.cfi_offset 7, -8
 2315              		.cfi_offset 14, -4
 2316 0002 84B0     		sub	sp, sp, #16
 2317              	.LCFI82:
 2318              		.cfi_def_cfa_offset 24
 2319 0004 00AF     		add	r7, sp, #0
 2320              	.LCFI83:
 2321              		.cfi_def_cfa_register 7
 2322 0006 7860     		str	r0, [r7, #4]
1608:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1609:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1610:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      HAL_UART_TxHalfCpltCallback / HAL_UART_RxHalfCpltCallback:
1611:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      indeed, when HAL_DMA_Abort() API is called, the DMA TX/RX Transfer or Half Transfer complete
1612:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      interrupt is generated if the DMA transfer interruption occurs at the middle or at the end of
1613:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      the stream and the corresponding call back is executed. */
1614:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1615:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 2323              		.loc 1 1615 31
 2324 0008 7B68     		ldr	r3, [r7, #4]
 2325 000a 5B6F     		ldr	r3, [r3, #116]
 2326 000c FB60     		str	r3, [r7, #12]
1616:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 2327              		.loc 1 1616 31
 2328 000e 7B68     		ldr	r3, [r7, #4]
 2329 0010 9B6F     		ldr	r3, [r3, #120]
 2330 0012 BB60     		str	r3, [r7, #8]
1617:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1618:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1619:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 2331              		.loc 1 1619 8
 2332 0014 7B68     		ldr	r3, [r7, #4]
 2333 0016 1B68     		ldr	r3, [r3]
 2334 0018 9B68     		ldr	r3, [r3, #8]
 2335 001a 03F08003 		and	r3, r3, #128
 2336              		.loc 1 1619 6
 2337 001e 802B     		cmp	r3, #128
 2338 0020 26D1     		bne	.L123
 2339              		.loc 1 1619 62 discriminator 1
 2340 0022 FB68     		ldr	r3, [r7, #12]
 2341 0024 212B     		cmp	r3, #33
ARM GAS  /tmp/ccXuXBwl.s 			page 70


 2342 0026 23D1     		bne	.L123
1620:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
1621:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1622:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2343              		.loc 1 1622 5
 2344 0028 7B68     		ldr	r3, [r7, #4]
 2345 002a 1B68     		ldr	r3, [r3]
 2346 002c 9A68     		ldr	r2, [r3, #8]
 2347 002e 7B68     		ldr	r3, [r7, #4]
 2348 0030 1B68     		ldr	r3, [r3]
 2349 0032 22F08002 		bic	r2, r2, #128
 2350 0036 9A60     		str	r2, [r3, #8]
1623:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1624:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel */
1625:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2351              		.loc 1 1625 14
 2352 0038 7B68     		ldr	r3, [r7, #4]
 2353 003a 9B6E     		ldr	r3, [r3, #104]
 2354              		.loc 1 1625 8
 2355 003c 002B     		cmp	r3, #0
 2356 003e 14D0     		beq	.L124
1626:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1627:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2357              		.loc 1 1627 11
 2358 0040 7B68     		ldr	r3, [r7, #4]
 2359 0042 9B6E     		ldr	r3, [r3, #104]
 2360 0044 1846     		mov	r0, r3
 2361 0046 FFF7FEFF 		bl	HAL_DMA_Abort
 2362 004a 0346     		mov	r3, r0
 2363              		.loc 1 1627 10
 2364 004c 002B     		cmp	r3, #0
 2365 004e 0CD0     		beq	.L124
1628:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1629:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2366              		.loc 1 1629 13
 2367 0050 7B68     		ldr	r3, [r7, #4]
 2368 0052 9B6E     		ldr	r3, [r3, #104]
 2369 0054 1846     		mov	r0, r3
 2370 0056 FFF7FEFF 		bl	HAL_DMA_GetError
 2371 005a 0346     		mov	r3, r0
 2372              		.loc 1 1629 12
 2373 005c 202B     		cmp	r3, #32
 2374 005e 04D1     		bne	.L124
1630:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1631:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1632:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2375              		.loc 1 1632 28
 2376 0060 7B68     		ldr	r3, [r7, #4]
 2377 0062 1022     		movs	r2, #16
 2378 0064 DA67     		str	r2, [r3, #124]
1633:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1634:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2379              		.loc 1 1634 18
 2380 0066 0323     		movs	r3, #3
 2381 0068 31E0     		b	.L125
 2382              	.L124:
1635:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
ARM GAS  /tmp/ccXuXBwl.s 			page 71


1636:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1637:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1638:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1639:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2383              		.loc 1 1639 5
 2384 006a 7868     		ldr	r0, [r7, #4]
 2385 006c FFF7FEFF 		bl	UART_EndTxTransfer
 2386              	.L123:
1640:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1641:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1642:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1643:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 2387              		.loc 1 1643 8
 2388 0070 7B68     		ldr	r3, [r7, #4]
 2389 0072 1B68     		ldr	r3, [r3]
 2390 0074 9B68     		ldr	r3, [r3, #8]
 2391 0076 03F04003 		and	r3, r3, #64
 2392              		.loc 1 1643 6
 2393 007a 402B     		cmp	r3, #64
 2394 007c 26D1     		bne	.L126
 2395              		.loc 1 1643 62 discriminator 1
 2396 007e BB68     		ldr	r3, [r7, #8]
 2397 0080 222B     		cmp	r3, #34
 2398 0082 23D1     		bne	.L126
1644:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
1645:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1646:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2399              		.loc 1 1646 5
 2400 0084 7B68     		ldr	r3, [r7, #4]
 2401 0086 1B68     		ldr	r3, [r3]
 2402 0088 9A68     		ldr	r2, [r3, #8]
 2403 008a 7B68     		ldr	r3, [r7, #4]
 2404 008c 1B68     		ldr	r3, [r3]
 2405 008e 22F04002 		bic	r2, r2, #64
 2406 0092 9A60     		str	r2, [r3, #8]
1647:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1648:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel */
1649:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2407              		.loc 1 1649 14
 2408 0094 7B68     		ldr	r3, [r7, #4]
 2409 0096 DB6E     		ldr	r3, [r3, #108]
 2410              		.loc 1 1649 8
 2411 0098 002B     		cmp	r3, #0
 2412 009a 14D0     		beq	.L127
1650:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1651:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2413              		.loc 1 1651 11
 2414 009c 7B68     		ldr	r3, [r7, #4]
 2415 009e DB6E     		ldr	r3, [r3, #108]
 2416 00a0 1846     		mov	r0, r3
 2417 00a2 FFF7FEFF 		bl	HAL_DMA_Abort
 2418 00a6 0346     		mov	r3, r0
 2419              		.loc 1 1651 10
 2420 00a8 002B     		cmp	r3, #0
 2421 00aa 0CD0     		beq	.L127
1652:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1653:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
ARM GAS  /tmp/ccXuXBwl.s 			page 72


 2422              		.loc 1 1653 13
 2423 00ac 7B68     		ldr	r3, [r7, #4]
 2424 00ae DB6E     		ldr	r3, [r3, #108]
 2425 00b0 1846     		mov	r0, r3
 2426 00b2 FFF7FEFF 		bl	HAL_DMA_GetError
 2427 00b6 0346     		mov	r3, r0
 2428              		.loc 1 1653 12
 2429 00b8 202B     		cmp	r3, #32
 2430 00ba 04D1     		bne	.L127
1654:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1655:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1656:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2431              		.loc 1 1656 28
 2432 00bc 7B68     		ldr	r3, [r7, #4]
 2433 00be 1022     		movs	r2, #16
 2434 00c0 DA67     		str	r2, [r3, #124]
1657:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1658:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2435              		.loc 1 1658 18
 2436 00c2 0323     		movs	r3, #3
 2437 00c4 03E0     		b	.L125
 2438              	.L127:
1659:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1660:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1661:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1662:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1663:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2439              		.loc 1 1663 5
 2440 00c6 7868     		ldr	r0, [r7, #4]
 2441 00c8 FFF7FEFF 		bl	UART_EndRxTransfer
 2442              	.L126:
1664:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1665:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1666:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 2443              		.loc 1 1666 10
 2444 00cc 0023     		movs	r3, #0
 2445              	.L125:
1667:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2446              		.loc 1 1667 1
 2447 00ce 1846     		mov	r0, r3
 2448 00d0 1037     		adds	r7, r7, #16
 2449              	.LCFI84:
 2450              		.cfi_def_cfa_offset 8
 2451 00d2 BD46     		mov	sp, r7
 2452              	.LCFI85:
 2453              		.cfi_def_cfa_register 13
 2454              		@ sp needed
 2455 00d4 80BD     		pop	{r7, pc}
 2456              		.cfi_endproc
 2457              	.LFE328:
 2459              		.section	.text.HAL_UART_Abort,"ax",%progbits
 2460              		.align	1
 2461              		.global	HAL_UART_Abort
 2462              		.syntax unified
 2463              		.thumb
 2464              		.thumb_func
 2465              		.fpu fpv4-sp-d16
ARM GAS  /tmp/ccXuXBwl.s 			page 73


 2467              	HAL_UART_Abort:
 2468              	.LFB329:
1668:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1669:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1670:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1671:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1672:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1673:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1674:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1675:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1676:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1677:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1678:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1679:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1680:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1681:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1682:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2469              		.loc 1 1682 1
 2470              		.cfi_startproc
 2471              		@ args = 0, pretend = 0, frame = 8
 2472              		@ frame_needed = 1, uses_anonymous_args = 0
 2473 0000 80B5     		push	{r7, lr}
 2474              	.LCFI86:
 2475              		.cfi_def_cfa_offset 8
 2476              		.cfi_offset 7, -8
 2477              		.cfi_offset 14, -4
 2478 0002 82B0     		sub	sp, sp, #8
 2479              	.LCFI87:
 2480              		.cfi_def_cfa_offset 16
 2481 0004 00AF     		add	r7, sp, #0
 2482              	.LCFI88:
 2483              		.cfi_def_cfa_register 7
 2484 0006 7860     		str	r0, [r7, #4]
1683:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1684:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXE, TC, RXNE, PE, RXFT, TXFT and ERR (Frame error, noise error, overrun error) interr
1685:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEIE_TXFN
1686:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE);
1687:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1688:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1689:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 2485              		.loc 1 1689 3
 2486 0008 7B68     		ldr	r3, [r7, #4]
 2487 000a 1B68     		ldr	r3, [r3]
 2488 000c 1A68     		ldr	r2, [r3]
 2489 000e 7B68     		ldr	r3, [r7, #4]
 2490 0010 1B68     		ldr	r3, [r3]
 2491 0012 22F4F072 		bic	r2, r2, #480
 2492 0016 1A60     		str	r2, [r3]
1690:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2493              		.loc 1 1690 3
 2494 0018 7B68     		ldr	r3, [r7, #4]
 2495 001a 1B68     		ldr	r3, [r3]
 2496 001c 9A68     		ldr	r2, [r3, #8]
 2497 001e 7B68     		ldr	r3, [r7, #4]
 2498 0020 1B68     		ldr	r3, [r3]
 2499 0022 22F00102 		bic	r2, r2, #1
 2500 0026 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/ccXuXBwl.s 			page 74


1691:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1692:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1693:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1694:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2501              		.loc 1 1694 7
 2502 0028 7B68     		ldr	r3, [r7, #4]
 2503 002a 1B68     		ldr	r3, [r3]
 2504 002c 9B68     		ldr	r3, [r3, #8]
 2505 002e 03F08003 		and	r3, r3, #128
 2506              		.loc 1 1694 6
 2507 0032 802B     		cmp	r3, #128
 2508 0034 24D1     		bne	.L129
1695:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1696:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2509              		.loc 1 1696 5
 2510 0036 7B68     		ldr	r3, [r7, #4]
 2511 0038 1B68     		ldr	r3, [r3]
 2512 003a 9A68     		ldr	r2, [r3, #8]
 2513 003c 7B68     		ldr	r3, [r7, #4]
 2514 003e 1B68     		ldr	r3, [r3]
 2515 0040 22F08002 		bic	r2, r2, #128
 2516 0044 9A60     		str	r2, [r3, #8]
1697:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1698:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1699:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2517              		.loc 1 1699 14
 2518 0046 7B68     		ldr	r3, [r7, #4]
 2519 0048 9B6E     		ldr	r3, [r3, #104]
 2520              		.loc 1 1699 8
 2521 004a 002B     		cmp	r3, #0
 2522 004c 18D0     		beq	.L129
1700:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1701:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1702:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1703:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2523              		.loc 1 1703 12
 2524 004e 7B68     		ldr	r3, [r7, #4]
 2525 0050 9B6E     		ldr	r3, [r3, #104]
 2526              		.loc 1 1703 40
 2527 0052 0022     		movs	r2, #0
 2528 0054 9A63     		str	r2, [r3, #56]
1704:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1705:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2529              		.loc 1 1705 11
 2530 0056 7B68     		ldr	r3, [r7, #4]
 2531 0058 9B6E     		ldr	r3, [r3, #104]
 2532 005a 1846     		mov	r0, r3
 2533 005c FFF7FEFF 		bl	HAL_DMA_Abort
 2534 0060 0346     		mov	r3, r0
 2535              		.loc 1 1705 10
 2536 0062 002B     		cmp	r3, #0
 2537 0064 0CD0     		beq	.L129
1706:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1707:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2538              		.loc 1 1707 13
 2539 0066 7B68     		ldr	r3, [r7, #4]
 2540 0068 9B6E     		ldr	r3, [r3, #104]
ARM GAS  /tmp/ccXuXBwl.s 			page 75


 2541 006a 1846     		mov	r0, r3
 2542 006c FFF7FEFF 		bl	HAL_DMA_GetError
 2543 0070 0346     		mov	r3, r0
 2544              		.loc 1 1707 12
 2545 0072 202B     		cmp	r3, #32
 2546 0074 04D1     		bne	.L129
1708:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1709:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1710:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2547              		.loc 1 1710 28
 2548 0076 7B68     		ldr	r3, [r7, #4]
 2549 0078 1022     		movs	r2, #16
 2550 007a DA67     		str	r2, [r3, #124]
1711:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1712:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2551              		.loc 1 1712 18
 2552 007c 0323     		movs	r3, #3
 2553 007e 4BE0     		b	.L130
 2554              	.L129:
1713:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1714:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1715:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1716:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1717:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1718:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1719:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2555              		.loc 1 1719 7
 2556 0080 7B68     		ldr	r3, [r7, #4]
 2557 0082 1B68     		ldr	r3, [r3]
 2558 0084 9B68     		ldr	r3, [r3, #8]
 2559 0086 03F04003 		and	r3, r3, #64
 2560              		.loc 1 1719 6
 2561 008a 402B     		cmp	r3, #64
 2562 008c 24D1     		bne	.L131
1720:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1721:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2563              		.loc 1 1721 5
 2564 008e 7B68     		ldr	r3, [r7, #4]
 2565 0090 1B68     		ldr	r3, [r3]
 2566 0092 9A68     		ldr	r2, [r3, #8]
 2567 0094 7B68     		ldr	r3, [r7, #4]
 2568 0096 1B68     		ldr	r3, [r3]
 2569 0098 22F04002 		bic	r2, r2, #64
 2570 009c 9A60     		str	r2, [r3, #8]
1722:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1723:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1724:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2571              		.loc 1 1724 14
 2572 009e 7B68     		ldr	r3, [r7, #4]
 2573 00a0 DB6E     		ldr	r3, [r3, #108]
 2574              		.loc 1 1724 8
 2575 00a2 002B     		cmp	r3, #0
 2576 00a4 18D0     		beq	.L131
1725:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1726:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1727:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1728:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
ARM GAS  /tmp/ccXuXBwl.s 			page 76


 2577              		.loc 1 1728 12
 2578 00a6 7B68     		ldr	r3, [r7, #4]
 2579 00a8 DB6E     		ldr	r3, [r3, #108]
 2580              		.loc 1 1728 40
 2581 00aa 0022     		movs	r2, #0
 2582 00ac 9A63     		str	r2, [r3, #56]
1729:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1730:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2583              		.loc 1 1730 11
 2584 00ae 7B68     		ldr	r3, [r7, #4]
 2585 00b0 DB6E     		ldr	r3, [r3, #108]
 2586 00b2 1846     		mov	r0, r3
 2587 00b4 FFF7FEFF 		bl	HAL_DMA_Abort
 2588 00b8 0346     		mov	r3, r0
 2589              		.loc 1 1730 10
 2590 00ba 002B     		cmp	r3, #0
 2591 00bc 0CD0     		beq	.L131
1731:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1732:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 2592              		.loc 1 1732 13
 2593 00be 7B68     		ldr	r3, [r7, #4]
 2594 00c0 DB6E     		ldr	r3, [r3, #108]
 2595 00c2 1846     		mov	r0, r3
 2596 00c4 FFF7FEFF 		bl	HAL_DMA_GetError
 2597 00c8 0346     		mov	r3, r0
 2598              		.loc 1 1732 12
 2599 00ca 202B     		cmp	r3, #32
 2600 00cc 04D1     		bne	.L131
1733:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1734:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1735:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2601              		.loc 1 1735 28
 2602 00ce 7B68     		ldr	r3, [r7, #4]
 2603 00d0 1022     		movs	r2, #16
 2604 00d2 DA67     		str	r2, [r3, #124]
1736:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1737:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2605              		.loc 1 1737 18
 2606 00d4 0323     		movs	r3, #3
 2607 00d6 1FE0     		b	.L130
 2608              	.L131:
1738:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1739:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1740:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1741:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1742:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1743:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1744:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2609              		.loc 1 1744 22
 2610 00d8 7B68     		ldr	r3, [r7, #4]
 2611 00da 0022     		movs	r2, #0
 2612 00dc A3F85220 		strh	r2, [r3, #82]	@ movhi
1745:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2613              		.loc 1 1745 22
 2614 00e0 7B68     		ldr	r3, [r7, #4]
 2615 00e2 0022     		movs	r2, #0
 2616 00e4 A3F85A20 		strh	r2, [r3, #90]	@ movhi
ARM GAS  /tmp/ccXuXBwl.s 			page 77


1746:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1747:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1748:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 2617              		.loc 1 1748 3
 2618 00e8 7B68     		ldr	r3, [r7, #4]
 2619 00ea 1B68     		ldr	r3, [r3]
 2620 00ec 0F22     		movs	r2, #15
 2621 00ee 1A62     		str	r2, [r3, #32]
1749:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1750:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1751:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1752:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1753:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1754:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1755:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1756:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1757:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1758:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
1759:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2622              		.loc 1 1759 3
 2623 00f0 7B68     		ldr	r3, [r7, #4]
 2624 00f2 1B68     		ldr	r3, [r3]
 2625 00f4 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2626 00f6 9AB2     		uxth	r2, r3
 2627 00f8 7B68     		ldr	r3, [r7, #4]
 2628 00fa 1B68     		ldr	r3, [r3]
 2629 00fc 42F00802 		orr	r2, r2, #8
 2630 0100 92B2     		uxth	r2, r2
 2631 0102 1A83     		strh	r2, [r3, #24]	@ movhi
1760:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1761:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
1762:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 2632              		.loc 1 1762 18
 2633 0104 7B68     		ldr	r3, [r7, #4]
 2634 0106 2022     		movs	r2, #32
 2635 0108 5A67     		str	r2, [r3, #116]
1763:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2636              		.loc 1 1763 18
 2637 010a 7B68     		ldr	r3, [r7, #4]
 2638 010c 2022     		movs	r2, #32
 2639 010e 9A67     		str	r2, [r3, #120]
1764:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1765:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 2640              		.loc 1 1765 20
 2641 0110 7B68     		ldr	r3, [r7, #4]
 2642 0112 0022     		movs	r2, #0
 2643 0114 DA67     		str	r2, [r3, #124]
1766:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1767:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 2644              		.loc 1 1767 10
 2645 0116 0023     		movs	r3, #0
 2646              	.L130:
1768:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2647              		.loc 1 1768 1
 2648 0118 1846     		mov	r0, r3
 2649 011a 0837     		adds	r7, r7, #8
 2650              	.LCFI89:
ARM GAS  /tmp/ccXuXBwl.s 			page 78


 2651              		.cfi_def_cfa_offset 8
 2652 011c BD46     		mov	sp, r7
 2653              	.LCFI90:
 2654              		.cfi_def_cfa_register 13
 2655              		@ sp needed
 2656 011e 80BD     		pop	{r7, pc}
 2657              		.cfi_endproc
 2658              	.LFE329:
 2660              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 2661              		.align	1
 2662              		.global	HAL_UART_AbortTransmit
 2663              		.syntax unified
 2664              		.thumb
 2665              		.thumb_func
 2666              		.fpu fpv4-sp-d16
 2668              	HAL_UART_AbortTransmit:
 2669              	.LFB330:
1769:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1770:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1771:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1772:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1773:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1774:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1775:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1776:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1777:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1778:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1779:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1780:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1781:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1782:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1783:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2670              		.loc 1 1783 1
 2671              		.cfi_startproc
 2672              		@ args = 0, pretend = 0, frame = 8
 2673              		@ frame_needed = 1, uses_anonymous_args = 0
 2674 0000 80B5     		push	{r7, lr}
 2675              	.LCFI91:
 2676              		.cfi_def_cfa_offset 8
 2677              		.cfi_offset 7, -8
 2678              		.cfi_offset 14, -4
 2679 0002 82B0     		sub	sp, sp, #8
 2680              	.LCFI92:
 2681              		.cfi_def_cfa_offset 16
 2682 0004 00AF     		add	r7, sp, #0
 2683              	.LCFI93:
 2684              		.cfi_def_cfa_register 7
 2685 0006 7860     		str	r0, [r7, #4]
1784:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1785:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TCIE, TXEIE and TXFTIE interrupts */
1786:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
1787:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
1788:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1789:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1790:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 2686              		.loc 1 1790 3
 2687 0008 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccXuXBwl.s 			page 79


 2688 000a 1B68     		ldr	r3, [r3]
 2689 000c 1A68     		ldr	r2, [r3]
 2690 000e 7B68     		ldr	r3, [r7, #4]
 2691 0010 1B68     		ldr	r3, [r3]
 2692 0012 22F0C002 		bic	r2, r2, #192
 2693 0016 1A60     		str	r2, [r3]
1791:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1792:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1793:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1794:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2694              		.loc 1 1794 7
 2695 0018 7B68     		ldr	r3, [r7, #4]
 2696 001a 1B68     		ldr	r3, [r3]
 2697 001c 9B68     		ldr	r3, [r3, #8]
 2698 001e 03F08003 		and	r3, r3, #128
 2699              		.loc 1 1794 6
 2700 0022 802B     		cmp	r3, #128
 2701 0024 24D1     		bne	.L133
1795:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1796:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2702              		.loc 1 1796 5
 2703 0026 7B68     		ldr	r3, [r7, #4]
 2704 0028 1B68     		ldr	r3, [r3]
 2705 002a 9A68     		ldr	r2, [r3, #8]
 2706 002c 7B68     		ldr	r3, [r7, #4]
 2707 002e 1B68     		ldr	r3, [r3]
 2708 0030 22F08002 		bic	r2, r2, #128
 2709 0034 9A60     		str	r2, [r3, #8]
1797:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1798:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use blocking DMA Abort API (no callback) */
1799:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2710              		.loc 1 1799 14
 2711 0036 7B68     		ldr	r3, [r7, #4]
 2712 0038 9B6E     		ldr	r3, [r3, #104]
 2713              		.loc 1 1799 8
 2714 003a 002B     		cmp	r3, #0
 2715 003c 18D0     		beq	.L133
1800:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1801:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1802:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1803:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2716              		.loc 1 1803 12
 2717 003e 7B68     		ldr	r3, [r7, #4]
 2718 0040 9B6E     		ldr	r3, [r3, #104]
 2719              		.loc 1 1803 40
 2720 0042 0022     		movs	r2, #0
 2721 0044 9A63     		str	r2, [r3, #56]
1804:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1805:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 2722              		.loc 1 1805 11
 2723 0046 7B68     		ldr	r3, [r7, #4]
 2724 0048 9B6E     		ldr	r3, [r3, #104]
 2725 004a 1846     		mov	r0, r3
 2726 004c FFF7FEFF 		bl	HAL_DMA_Abort
 2727 0050 0346     		mov	r3, r0
 2728              		.loc 1 1805 10
 2729 0052 002B     		cmp	r3, #0
ARM GAS  /tmp/ccXuXBwl.s 			page 80


 2730 0054 0CD0     		beq	.L133
1806:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1807:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 2731              		.loc 1 1807 13
 2732 0056 7B68     		ldr	r3, [r7, #4]
 2733 0058 9B6E     		ldr	r3, [r3, #104]
 2734 005a 1846     		mov	r0, r3
 2735 005c FFF7FEFF 		bl	HAL_DMA_GetError
 2736 0060 0346     		mov	r3, r0
 2737              		.loc 1 1807 12
 2738 0062 202B     		cmp	r3, #32
 2739 0064 04D1     		bne	.L133
1808:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1809:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1810:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2740              		.loc 1 1810 28
 2741 0066 7B68     		ldr	r3, [r7, #4]
 2742 0068 1022     		movs	r2, #16
 2743 006a DA67     		str	r2, [r3, #124]
1811:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1812:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2744              		.loc 1 1812 18
 2745 006c 0323     		movs	r3, #3
 2746 006e 07E0     		b	.L134
 2747              	.L133:
1813:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1814:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1815:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1816:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1817:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1818:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1819:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 2748              		.loc 1 1819 22
 2749 0070 7B68     		ldr	r3, [r7, #4]
 2750 0072 0022     		movs	r2, #0
 2751 0074 A3F85220 		strh	r2, [r3, #82]	@ movhi
1820:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1821:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1822:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
1823:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
1824:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1825:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
1826:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1827:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1828:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1829:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1830:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 2752              		.loc 1 1830 17
 2753 0078 7B68     		ldr	r3, [r7, #4]
 2754 007a 2022     		movs	r2, #32
 2755 007c 5A67     		str	r2, [r3, #116]
1831:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1832:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 2756              		.loc 1 1832 10
 2757 007e 0023     		movs	r3, #0
 2758              	.L134:
1833:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
ARM GAS  /tmp/ccXuXBwl.s 			page 81


 2759              		.loc 1 1833 1
 2760 0080 1846     		mov	r0, r3
 2761 0082 0837     		adds	r7, r7, #8
 2762              	.LCFI94:
 2763              		.cfi_def_cfa_offset 8
 2764 0084 BD46     		mov	sp, r7
 2765              	.LCFI95:
 2766              		.cfi_def_cfa_register 13
 2767              		@ sp needed
 2768 0086 80BD     		pop	{r7, pc}
 2769              		.cfi_endproc
 2770              	.LFE330:
 2772              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 2773              		.align	1
 2774              		.global	HAL_UART_AbortReceive
 2775              		.syntax unified
 2776              		.thumb
 2777              		.thumb_func
 2778              		.fpu fpv4-sp-d16
 2780              	HAL_UART_AbortReceive:
 2781              	.LFB331:
1834:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1835:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1836:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1837:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1838:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1839:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1840:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1841:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1842:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1843:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
1844:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1845:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1846:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1847:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
1848:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2782              		.loc 1 1848 1
 2783              		.cfi_startproc
 2784              		@ args = 0, pretend = 0, frame = 8
 2785              		@ frame_needed = 1, uses_anonymous_args = 0
 2786 0000 80B5     		push	{r7, lr}
 2787              	.LCFI96:
 2788              		.cfi_def_cfa_offset 8
 2789              		.cfi_offset 7, -8
 2790              		.cfi_offset 14, -4
 2791 0002 82B0     		sub	sp, sp, #8
 2792              	.LCFI97:
 2793              		.cfi_def_cfa_offset 16
 2794 0004 00AF     		add	r7, sp, #0
 2795              	.LCFI98:
 2796              		.cfi_def_cfa_register 7
 2797 0006 7860     		str	r0, [r7, #4]
1849:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1850:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable PEIE, EIE, RXNEIE and RXFTIE interrupts */
1851:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
1852:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE | USART_CR3_RXFTIE);
1853:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
ARM GAS  /tmp/ccXuXBwl.s 			page 82


1854:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1855:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 2798              		.loc 1 1855 3
 2799 0008 7B68     		ldr	r3, [r7, #4]
 2800 000a 1B68     		ldr	r3, [r3]
 2801 000c 1A68     		ldr	r2, [r3]
 2802 000e 7B68     		ldr	r3, [r7, #4]
 2803 0010 1B68     		ldr	r3, [r3]
 2804 0012 22F49072 		bic	r2, r2, #288
 2805 0016 1A60     		str	r2, [r3]
1856:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2806              		.loc 1 1856 3
 2807 0018 7B68     		ldr	r3, [r7, #4]
 2808 001a 1B68     		ldr	r3, [r3]
 2809 001c 9A68     		ldr	r2, [r3, #8]
 2810 001e 7B68     		ldr	r3, [r7, #4]
 2811 0020 1B68     		ldr	r3, [r3]
 2812 0022 22F00102 		bic	r2, r2, #1
 2813 0026 9A60     		str	r2, [r3, #8]
1857:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1858:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1859:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1860:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2814              		.loc 1 1860 7
 2815 0028 7B68     		ldr	r3, [r7, #4]
 2816 002a 1B68     		ldr	r3, [r3]
 2817 002c 9B68     		ldr	r3, [r3, #8]
 2818 002e 03F04003 		and	r3, r3, #64
 2819              		.loc 1 1860 6
 2820 0032 402B     		cmp	r3, #64
 2821 0034 24D1     		bne	.L136
1861:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1862:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2822              		.loc 1 1862 5
 2823 0036 7B68     		ldr	r3, [r7, #4]
 2824 0038 1B68     		ldr	r3, [r3]
 2825 003a 9A68     		ldr	r2, [r3, #8]
 2826 003c 7B68     		ldr	r3, [r7, #4]
 2827 003e 1B68     		ldr	r3, [r3]
 2828 0040 22F04002 		bic	r2, r2, #64
 2829 0044 9A60     		str	r2, [r3, #8]
1863:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1864:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use blocking DMA Abort API (no callback) */
1865:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2830              		.loc 1 1865 14
 2831 0046 7B68     		ldr	r3, [r7, #4]
 2832 0048 DB6E     		ldr	r3, [r3, #108]
 2833              		.loc 1 1865 8
 2834 004a 002B     		cmp	r3, #0
 2835 004c 18D0     		beq	.L136
1866:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1867:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1868:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1869:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 2836              		.loc 1 1869 12
 2837 004e 7B68     		ldr	r3, [r7, #4]
 2838 0050 DB6E     		ldr	r3, [r3, #108]
ARM GAS  /tmp/ccXuXBwl.s 			page 83


 2839              		.loc 1 1869 40
 2840 0052 0022     		movs	r2, #0
 2841 0054 9A63     		str	r2, [r3, #56]
1870:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1871:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 2842              		.loc 1 1871 11
 2843 0056 7B68     		ldr	r3, [r7, #4]
 2844 0058 DB6E     		ldr	r3, [r3, #108]
 2845 005a 1846     		mov	r0, r3
 2846 005c FFF7FEFF 		bl	HAL_DMA_Abort
 2847 0060 0346     		mov	r3, r0
 2848              		.loc 1 1871 10
 2849 0062 002B     		cmp	r3, #0
 2850 0064 0CD0     		beq	.L136
1872:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1873:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 2851              		.loc 1 1873 13
 2852 0066 7B68     		ldr	r3, [r7, #4]
 2853 0068 DB6E     		ldr	r3, [r3, #108]
 2854 006a 1846     		mov	r0, r3
 2855 006c FFF7FEFF 		bl	HAL_DMA_GetError
 2856 0070 0346     		mov	r3, r0
 2857              		.loc 1 1873 12
 2858 0072 202B     		cmp	r3, #32
 2859 0074 04D1     		bne	.L136
1874:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
1875:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Set error code to DMA */
1876:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 2860              		.loc 1 1876 28
 2861 0076 7B68     		ldr	r3, [r7, #4]
 2862 0078 1022     		movs	r2, #16
 2863 007a DA67     		str	r2, [r3, #124]
1877:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1878:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2864              		.loc 1 1878 18
 2865 007c 0323     		movs	r3, #3
 2866 007e 15E0     		b	.L137
 2867              	.L136:
1879:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
1880:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1881:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1882:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1883:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1884:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset Rx transfer counter */
1885:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 2868              		.loc 1 1885 22
 2869 0080 7B68     		ldr	r3, [r7, #4]
 2870 0082 0022     		movs	r2, #0
 2871 0084 A3F85A20 		strh	r2, [r3, #90]	@ movhi
1886:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1887:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
1888:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 2872              		.loc 1 1888 3
 2873 0088 7B68     		ldr	r3, [r7, #4]
 2874 008a 1B68     		ldr	r3, [r3]
 2875 008c 0F22     		movs	r2, #15
 2876 008e 1A62     		str	r2, [r3, #32]
ARM GAS  /tmp/ccXuXBwl.s 			page 84


1889:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1890:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
1891:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 2877              		.loc 1 1891 3
 2878 0090 7B68     		ldr	r3, [r7, #4]
 2879 0092 1B68     		ldr	r3, [r3]
 2880 0094 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 2881 0096 9AB2     		uxth	r2, r3
 2882 0098 7B68     		ldr	r3, [r7, #4]
 2883 009a 1B68     		ldr	r3, [r3]
 2884 009c 42F00802 		orr	r2, r2, #8
 2885 00a0 92B2     		uxth	r2, r2
 2886 00a2 1A83     		strh	r2, [r3, #24]	@ movhi
1892:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1893:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
1894:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 2887              		.loc 1 1894 18
 2888 00a4 7B68     		ldr	r3, [r7, #4]
 2889 00a6 2022     		movs	r2, #32
 2890 00a8 9A67     		str	r2, [r3, #120]
1895:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1896:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 2891              		.loc 1 1896 10
 2892 00aa 0023     		movs	r3, #0
 2893              	.L137:
1897:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 2894              		.loc 1 1897 1
 2895 00ac 1846     		mov	r0, r3
 2896 00ae 0837     		adds	r7, r7, #8
 2897              	.LCFI99:
 2898              		.cfi_def_cfa_offset 8
 2899 00b0 BD46     		mov	sp, r7
 2900              	.LCFI100:
 2901              		.cfi_def_cfa_register 13
 2902              		@ sp needed
 2903 00b2 80BD     		pop	{r7, pc}
 2904              		.cfi_endproc
 2905              	.LFE331:
 2907              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 2908              		.align	1
 2909              		.global	HAL_UART_Abort_IT
 2910              		.syntax unified
 2911              		.thumb
 2912              		.thumb_func
 2913              		.fpu fpv4-sp-d16
 2915              	HAL_UART_Abort_IT:
 2916              	.LFB332:
1898:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1899:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
1900:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
1901:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
1902:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1903:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
1904:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1905:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1906:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
1907:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
ARM GAS  /tmp/ccXuXBwl.s 			page 85


1908:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
1909:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
1910:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
1911:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
1912:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
1913:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
1914:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 2917              		.loc 1 1914 1
 2918              		.cfi_startproc
 2919              		@ args = 0, pretend = 0, frame = 16
 2920              		@ frame_needed = 1, uses_anonymous_args = 0
 2921 0000 80B5     		push	{r7, lr}
 2922              	.LCFI101:
 2923              		.cfi_def_cfa_offset 8
 2924              		.cfi_offset 7, -8
 2925              		.cfi_offset 14, -4
 2926 0002 84B0     		sub	sp, sp, #16
 2927              	.LCFI102:
 2928              		.cfi_def_cfa_offset 24
 2929 0004 00AF     		add	r7, sp, #0
 2930              	.LCFI103:
 2931              		.cfi_def_cfa_register 7
 2932 0006 7860     		str	r0, [r7, #4]
1915:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t abortcplt = 1U;
 2933              		.loc 1 1915 12
 2934 0008 0123     		movs	r3, #1
 2935 000a FB60     		str	r3, [r7, #12]
1916:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1917:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable interrupts */
1918:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
1919:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_TCIE | USART_CR1_RXNEIE_RXFNEIE | USA
1920:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE | USART_CR3_TXFTIE));
1921:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
1922:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USART_CR1_
 2936              		.loc 1 1922 3
 2937 000c 7B68     		ldr	r3, [r7, #4]
 2938 000e 1B68     		ldr	r3, [r3]
 2939 0010 1A68     		ldr	r2, [r3]
 2940 0012 7B68     		ldr	r3, [r7, #4]
 2941 0014 1B68     		ldr	r3, [r3]
 2942 0016 22F4F072 		bic	r2, r2, #480
 2943 001a 1A60     		str	r2, [r3]
1923:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2944              		.loc 1 1923 3
 2945 001c 7B68     		ldr	r3, [r7, #4]
 2946 001e 1B68     		ldr	r3, [r3]
 2947 0020 9A68     		ldr	r2, [r3, #8]
 2948 0022 7B68     		ldr	r3, [r7, #4]
 2949 0024 1B68     		ldr	r3, [r3]
 2950 0026 22F00102 		bic	r2, r2, #1
 2951 002a 9A60     		str	r2, [r3, #8]
1924:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
1925:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1926:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
1927:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      before any call to DMA Abort functions */
1928:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
1929:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
ARM GAS  /tmp/ccXuXBwl.s 			page 86


 2952              		.loc 1 1929 12
 2953 002c 7B68     		ldr	r3, [r7, #4]
 2954 002e 9B6E     		ldr	r3, [r3, #104]
 2955              		.loc 1 1929 6
 2956 0030 002B     		cmp	r3, #0
 2957 0032 0FD0     		beq	.L139
1930:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1931:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
1932:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        Otherwise, set it to NULL */
1933:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 2958              		.loc 1 1933 9
 2959 0034 7B68     		ldr	r3, [r7, #4]
 2960 0036 1B68     		ldr	r3, [r3]
 2961 0038 9B68     		ldr	r3, [r3, #8]
 2962 003a 03F08003 		and	r3, r3, #128
 2963              		.loc 1 1933 8
 2964 003e 802B     		cmp	r3, #128
 2965 0040 04D1     		bne	.L140
1934:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1935:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
 2966              		.loc 1 1935 12
 2967 0042 7B68     		ldr	r3, [r7, #4]
 2968 0044 9B6E     		ldr	r3, [r3, #104]
 2969              		.loc 1 1935 40
 2970 0046 484A     		ldr	r2, .L149
 2971 0048 9A63     		str	r2, [r3, #56]
 2972 004a 03E0     		b	.L139
 2973              	.L140:
1936:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1937:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1938:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1939:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 2974              		.loc 1 1939 12
 2975 004c 7B68     		ldr	r3, [r7, #4]
 2976 004e 9B6E     		ldr	r3, [r3, #104]
 2977              		.loc 1 1939 40
 2978 0050 0022     		movs	r2, #0
 2979 0052 9A63     		str	r2, [r3, #56]
 2980              	.L139:
1940:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1941:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1942:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
1943:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 2981              		.loc 1 1943 12
 2982 0054 7B68     		ldr	r3, [r7, #4]
 2983 0056 DB6E     		ldr	r3, [r3, #108]
 2984              		.loc 1 1943 6
 2985 0058 002B     		cmp	r3, #0
 2986 005a 0FD0     		beq	.L141
1944:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1945:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
1946:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        Otherwise, set it to NULL */
1947:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 2987              		.loc 1 1947 9
 2988 005c 7B68     		ldr	r3, [r7, #4]
 2989 005e 1B68     		ldr	r3, [r3]
 2990 0060 9B68     		ldr	r3, [r3, #8]
ARM GAS  /tmp/ccXuXBwl.s 			page 87


 2991 0062 03F04003 		and	r3, r3, #64
 2992              		.loc 1 1947 8
 2993 0066 402B     		cmp	r3, #64
 2994 0068 04D1     		bne	.L142
1948:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1949:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
 2995              		.loc 1 1949 12
 2996 006a 7B68     		ldr	r3, [r7, #4]
 2997 006c DB6E     		ldr	r3, [r3, #108]
 2998              		.loc 1 1949 40
 2999 006e 3F4A     		ldr	r2, .L149+4
 3000 0070 9A63     		str	r2, [r3, #56]
 3001 0072 03E0     		b	.L141
 3002              	.L142:
1950:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1951:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
1952:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1953:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 3003              		.loc 1 1953 12
 3004 0074 7B68     		ldr	r3, [r7, #4]
 3005 0076 DB6E     		ldr	r3, [r3, #108]
 3006              		.loc 1 1953 40
 3007 0078 0022     		movs	r2, #0
 3008 007a 9A63     		str	r2, [r3, #56]
 3009              	.L141:
1954:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1955:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1956:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1957:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1958:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3010              		.loc 1 1958 7
 3011 007c 7B68     		ldr	r3, [r7, #4]
 3012 007e 1B68     		ldr	r3, [r3]
 3013 0080 9B68     		ldr	r3, [r3, #8]
 3014 0082 03F08003 		and	r3, r3, #128
 3015              		.loc 1 1958 6
 3016 0086 802B     		cmp	r3, #128
 3017 0088 1AD1     		bne	.L143
1959:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1960:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
1961:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3018              		.loc 1 1961 5
 3019 008a 7B68     		ldr	r3, [r7, #4]
 3020 008c 1B68     		ldr	r3, [r3]
 3021 008e 9A68     		ldr	r2, [r3, #8]
 3022 0090 7B68     		ldr	r3, [r7, #4]
 3023 0092 1B68     		ldr	r3, [r3]
 3024 0094 22F08002 		bic	r2, r2, #128
 3025 0098 9A60     		str	r2, [r3, #8]
1962:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1963:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
1964:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3026              		.loc 1 1964 14
 3027 009a 7B68     		ldr	r3, [r7, #4]
 3028 009c 9B6E     		ldr	r3, [r3, #104]
 3029              		.loc 1 1964 8
 3030 009e 002B     		cmp	r3, #0
ARM GAS  /tmp/ccXuXBwl.s 			page 88


 3031 00a0 0ED0     		beq	.L143
1965:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1966:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
1967:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1968:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1969:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA TX */
1970:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 3032              		.loc 1 1970 11
 3033 00a2 7B68     		ldr	r3, [r7, #4]
 3034 00a4 9B6E     		ldr	r3, [r3, #104]
 3035 00a6 1846     		mov	r0, r3
 3036 00a8 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3037 00ac 0346     		mov	r3, r0
 3038              		.loc 1 1970 10
 3039 00ae 002B     		cmp	r3, #0
 3040 00b0 04D0     		beq	.L144
1971:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1972:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
 3041              		.loc 1 1972 14
 3042 00b2 7B68     		ldr	r3, [r7, #4]
 3043 00b4 9B6E     		ldr	r3, [r3, #104]
 3044              		.loc 1 1972 42
 3045 00b6 0022     		movs	r2, #0
 3046 00b8 9A63     		str	r2, [r3, #56]
 3047 00ba 01E0     		b	.L143
 3048              	.L144:
1973:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1974:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1975:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1976:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 0U;
 3049              		.loc 1 1976 19
 3050 00bc 0023     		movs	r3, #0
 3051 00be FB60     		str	r3, [r7, #12]
 3052              	.L143:
1977:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1978:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
1979:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
1980:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1981:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1982:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3053              		.loc 1 1982 7
 3054 00c0 7B68     		ldr	r3, [r7, #4]
 3055 00c2 1B68     		ldr	r3, [r3]
 3056 00c4 9B68     		ldr	r3, [r3, #8]
 3057 00c6 03F04003 		and	r3, r3, #64
 3058              		.loc 1 1982 6
 3059 00ca 402B     		cmp	r3, #64
 3060 00cc 1CD1     		bne	.L145
1983:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
1984:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3061              		.loc 1 1984 5
 3062 00ce 7B68     		ldr	r3, [r7, #4]
 3063 00d0 1B68     		ldr	r3, [r3]
 3064 00d2 9A68     		ldr	r2, [r3, #8]
 3065 00d4 7B68     		ldr	r3, [r7, #4]
 3066 00d6 1B68     		ldr	r3, [r3]
 3067 00d8 22F04002 		bic	r2, r2, #64
ARM GAS  /tmp/ccXuXBwl.s 			page 89


 3068 00dc 9A60     		str	r2, [r3, #8]
1985:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1986:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
1987:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3069              		.loc 1 1987 14
 3070 00de 7B68     		ldr	r3, [r7, #4]
 3071 00e0 DB6E     		ldr	r3, [r3, #108]
 3072              		.loc 1 1987 8
 3073 00e2 002B     		cmp	r3, #0
 3074 00e4 10D0     		beq	.L145
1988:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
1989:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
1990:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
1991:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
1992:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA RX */
1993:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3075              		.loc 1 1993 11
 3076 00e6 7B68     		ldr	r3, [r7, #4]
 3077 00e8 DB6E     		ldr	r3, [r3, #108]
 3078 00ea 1846     		mov	r0, r3
 3079 00ec FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3080 00f0 0346     		mov	r3, r0
 3081              		.loc 1 1993 10
 3082 00f2 002B     		cmp	r3, #0
 3083 00f4 06D0     		beq	.L146
1994:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
1995:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
 3084              		.loc 1 1995 14
 3085 00f6 7B68     		ldr	r3, [r7, #4]
 3086 00f8 DB6E     		ldr	r3, [r3, #108]
 3087              		.loc 1 1995 42
 3088 00fa 0022     		movs	r2, #0
 3089 00fc 9A63     		str	r2, [r3, #56]
1996:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 1U;
 3090              		.loc 1 1996 19
 3091 00fe 0123     		movs	r3, #1
 3092 0100 FB60     		str	r3, [r7, #12]
 3093 0102 01E0     		b	.L145
 3094              	.L146:
1997:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
1998:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
1999:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2000:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         abortcplt = 0U;
 3095              		.loc 1 2000 19
 3096 0104 0023     		movs	r3, #0
 3097 0106 FB60     		str	r3, [r7, #12]
 3098              	.L145:
2001:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2002:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2003:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2004:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2005:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
2006:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (abortcplt == 1U)
 3099              		.loc 1 2006 6
 3100 0108 FB68     		ldr	r3, [r7, #12]
 3101 010a 012B     		cmp	r3, #1
 3102 010c 27D1     		bne	.L147
ARM GAS  /tmp/ccXuXBwl.s 			page 90


2007:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2008:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
2009:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
 3103              		.loc 1 2009 24
 3104 010e 7B68     		ldr	r3, [r7, #4]
 3105 0110 0022     		movs	r2, #0
 3106 0112 A3F85220 		strh	r2, [r3, #82]	@ movhi
2010:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 3107              		.loc 1 2010 24
 3108 0116 7B68     		ldr	r3, [r7, #4]
 3109 0118 0022     		movs	r2, #0
 3110 011a A3F85A20 		strh	r2, [r3, #90]	@ movhi
2011:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2012:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear ISR function pointers */
2013:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxISR = NULL;
 3111              		.loc 1 2013 18
 3112 011e 7B68     		ldr	r3, [r7, #4]
 3113 0120 0022     		movs	r2, #0
 3114 0122 1A66     		str	r2, [r3, #96]
2014:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR = NULL;
 3115              		.loc 1 2014 18
 3116 0124 7B68     		ldr	r3, [r7, #4]
 3117 0126 0022     		movs	r2, #0
 3118 0128 5A66     		str	r2, [r3, #100]
2015:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2016:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset errorCode */
2017:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 3119              		.loc 1 2017 22
 3120 012a 7B68     		ldr	r3, [r7, #4]
 3121 012c 0022     		movs	r2, #0
 3122 012e DA67     		str	r2, [r3, #124]
2018:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2019:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2020:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
 3123              		.loc 1 2020 5
 3124 0130 7B68     		ldr	r3, [r7, #4]
 3125 0132 1B68     		ldr	r3, [r3]
 3126 0134 0F22     		movs	r2, #15
 3127 0136 1A62     		str	r2, [r3, #32]
2021:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2022:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2023:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
2024:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
2025:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2026:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
2027:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2028:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2029:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2030:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Discard the received data */
2031:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 3128              		.loc 1 2031 5
 3129 0138 7B68     		ldr	r3, [r7, #4]
 3130 013a 1B68     		ldr	r3, [r3]
 3131 013c 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3132 013e 9AB2     		uxth	r2, r3
 3133 0140 7B68     		ldr	r3, [r7, #4]
 3134 0142 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccXuXBwl.s 			page 91


 3135 0144 42F00802 		orr	r2, r2, #8
 3136 0148 92B2     		uxth	r2, r2
 3137 014a 1A83     		strh	r2, [r3, #24]	@ movhi
2032:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2033:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
2034:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
 3138              		.loc 1 2034 20
 3139 014c 7B68     		ldr	r3, [r7, #4]
 3140 014e 2022     		movs	r2, #32
 3141 0150 5A67     		str	r2, [r3, #116]
2035:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3142              		.loc 1 2035 20
 3143 0152 7B68     		ldr	r3, [r7, #4]
 3144 0154 2022     		movs	r2, #32
 3145 0156 9A67     		str	r2, [r3, #120]
2036:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2037:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2038:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2039:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Abort complete callback */
2040:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
2041:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2042:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
2043:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
 3146              		.loc 1 2043 5
 3147 0158 7868     		ldr	r0, [r7, #4]
 3148 015a FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 3149              	.L147:
2044:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2045:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2046:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2047:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 3150              		.loc 1 2047 10
 3151 015e 0023     		movs	r3, #0
2048:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3152              		.loc 1 2048 1
 3153 0160 1846     		mov	r0, r3
 3154 0162 1037     		adds	r7, r7, #16
 3155              	.LCFI104:
 3156              		.cfi_def_cfa_offset 8
 3157 0164 BD46     		mov	sp, r7
 3158              	.LCFI105:
 3159              		.cfi_def_cfa_register 13
 3160              		@ sp needed
 3161 0166 80BD     		pop	{r7, pc}
 3162              	.L150:
 3163              		.align	2
 3164              	.L149:
 3165 0168 00000000 		.word	UART_DMATxAbortCallback
 3166 016c 00000000 		.word	UART_DMARxAbortCallback
 3167              		.cfi_endproc
 3168              	.LFE332:
 3170              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 3171              		.align	1
 3172              		.global	HAL_UART_AbortTransmit_IT
 3173              		.syntax unified
 3174              		.thumb
 3175              		.thumb_func
ARM GAS  /tmp/ccXuXBwl.s 			page 92


 3176              		.fpu fpv4-sp-d16
 3178              	HAL_UART_AbortTransmit_IT:
 3179              	.LFB333:
2049:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2050:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2051:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
2052:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2053:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
2054:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
2055:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
2056:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2057:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2058:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
2059:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2060:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2061:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2062:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2063:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2064:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2065:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3180              		.loc 1 2065 1
 3181              		.cfi_startproc
 3182              		@ args = 0, pretend = 0, frame = 8
 3183              		@ frame_needed = 1, uses_anonymous_args = 0
 3184 0000 80B5     		push	{r7, lr}
 3185              	.LCFI106:
 3186              		.cfi_def_cfa_offset 8
 3187              		.cfi_offset 7, -8
 3188              		.cfi_offset 14, -4
 3189 0002 82B0     		sub	sp, sp, #8
 3190              	.LCFI107:
 3191              		.cfi_def_cfa_offset 16
 3192 0004 00AF     		add	r7, sp, #0
 3193              	.LCFI108:
 3194              		.cfi_def_cfa_register 7
 3195 0006 7860     		str	r0, [r7, #4]
2066:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable interrupts */
2067:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2068:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TCIE | USART_CR1_TXEIE_TXFNFIE));
2069:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
2070:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2071:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 3196              		.loc 1 2071 3
 3197 0008 7B68     		ldr	r3, [r7, #4]
 3198 000a 1B68     		ldr	r3, [r3]
 3199 000c 1A68     		ldr	r2, [r3]
 3200 000e 7B68     		ldr	r3, [r7, #4]
 3201 0010 1B68     		ldr	r3, [r3]
 3202 0012 22F0C002 		bic	r2, r2, #192
 3203 0016 1A60     		str	r2, [r3]
2072:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2073:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2074:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2075:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3204              		.loc 1 2075 7
 3205 0018 7B68     		ldr	r3, [r7, #4]
 3206 001a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccXuXBwl.s 			page 93


 3207 001c 9B68     		ldr	r3, [r3, #8]
 3208 001e 03F08003 		and	r3, r3, #128
 3209              		.loc 1 2075 6
 3210 0022 802B     		cmp	r3, #128
 3211 0024 2DD1     		bne	.L152
2076:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2077:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3212              		.loc 1 2077 5
 3213 0026 7B68     		ldr	r3, [r7, #4]
 3214 0028 1B68     		ldr	r3, [r3]
 3215 002a 9A68     		ldr	r2, [r3, #8]
 3216 002c 7B68     		ldr	r3, [r7, #4]
 3217 002e 1B68     		ldr	r3, [r3]
 3218 0030 22F08002 		bic	r2, r2, #128
 3219 0034 9A60     		str	r2, [r3, #8]
2078:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2079:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Tx channel : use non blocking DMA Abort API (callback) */
2080:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3220              		.loc 1 2080 14
 3221 0036 7B68     		ldr	r3, [r7, #4]
 3222 0038 9B6E     		ldr	r3, [r3, #104]
 3223              		.loc 1 2080 8
 3224 003a 002B     		cmp	r3, #0
 3225 003c 13D0     		beq	.L153
2081:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2082:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2083:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2084:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
 3226              		.loc 1 2084 12
 3227 003e 7B68     		ldr	r3, [r7, #4]
 3228 0040 9B6E     		ldr	r3, [r3, #104]
 3229              		.loc 1 2084 40
 3230 0042 194A     		ldr	r2, .L156
 3231 0044 9A63     		str	r2, [r3, #56]
2085:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2086:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA TX */
2087:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 3232              		.loc 1 2087 11
 3233 0046 7B68     		ldr	r3, [r7, #4]
 3234 0048 9B6E     		ldr	r3, [r3, #104]
 3235 004a 1846     		mov	r0, r3
 3236 004c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3237 0050 0346     		mov	r3, r0
 3238              		.loc 1 2087 10
 3239 0052 002B     		cmp	r3, #0
 3240 0054 22D0     		beq	.L154
2088:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2089:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
2090:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
 3241              		.loc 1 2090 14
 3242 0056 7B68     		ldr	r3, [r7, #4]
 3243 0058 9B6E     		ldr	r3, [r3, #104]
 3244              		.loc 1 2090 22
 3245 005a 9B6B     		ldr	r3, [r3, #56]
 3246              		.loc 1 2090 47
 3247 005c 7A68     		ldr	r2, [r7, #4]
 3248 005e 926E     		ldr	r2, [r2, #104]
ARM GAS  /tmp/ccXuXBwl.s 			page 94


 3249              		.loc 1 2090 9
 3250 0060 1046     		mov	r0, r2
 3251 0062 9847     		blx	r3
 3252              	.LVL0:
 3253 0064 1AE0     		b	.L154
 3254              	.L153:
2091:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2092:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2093:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2094:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2095:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Reset Tx transfer counter */
2096:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount = 0U;
 3255              		.loc 1 2096 26
 3256 0066 7B68     		ldr	r3, [r7, #4]
 3257 0068 0022     		movs	r2, #0
 3258 006a A3F85220 		strh	r2, [r3, #82]	@ movhi
2097:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2098:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear TxISR function pointers */
2099:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxISR = NULL;
 3259              		.loc 1 2099 20
 3260 006e 7B68     		ldr	r3, [r7, #4]
 3261 0070 0022     		movs	r2, #0
 3262 0072 5A66     		str	r2, [r3, #100]
2100:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2101:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2102:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 3263              		.loc 1 2102 21
 3264 0074 7B68     		ldr	r3, [r7, #4]
 3265 0076 2022     		movs	r2, #32
 3266 0078 5A67     		str	r2, [r3, #116]
2103:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2104:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2105:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2106:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2107:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2108:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2109:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2110:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
 3267              		.loc 1 2110 7
 3268 007a 7868     		ldr	r0, [r7, #4]
 3269 007c FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3270 0080 0CE0     		b	.L154
 3271              	.L152:
2111:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2112:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2113:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2114:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2115:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2116:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset Tx transfer counter */
2117:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
 3272              		.loc 1 2117 24
 3273 0082 7B68     		ldr	r3, [r7, #4]
 3274 0084 0022     		movs	r2, #0
 3275 0086 A3F85220 		strh	r2, [r3, #82]	@ movhi
2118:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2119:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear TxISR function pointers */
2120:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxISR = NULL;
ARM GAS  /tmp/ccXuXBwl.s 			page 95


 3276              		.loc 1 2120 18
 3277 008a 7B68     		ldr	r3, [r7, #4]
 3278 008c 0022     		movs	r2, #0
 3279 008e 5A66     		str	r2, [r3, #100]
2121:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2122:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2123:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Flush the whole TX FIFO (if needed) */
2124:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->FifoMode == UART_FIFOMODE_ENABLE)
2125:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2126:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
2127:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2128:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2129:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2130:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2131:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 3280              		.loc 1 2131 19
 3281 0090 7B68     		ldr	r3, [r7, #4]
 3282 0092 2022     		movs	r2, #32
 3283 0094 5A67     		str	r2, [r3, #116]
2132:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2133:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2134:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2135:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2136:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2137:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2138:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2139:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
 3284              		.loc 1 2139 5
 3285 0096 7868     		ldr	r0, [r7, #4]
 3286 0098 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 3287              	.L154:
2140:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2141:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2142:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2143:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 3288              		.loc 1 2143 10
 3289 009c 0023     		movs	r3, #0
2144:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3290              		.loc 1 2144 1
 3291 009e 1846     		mov	r0, r3
 3292 00a0 0837     		adds	r7, r7, #8
 3293              	.LCFI109:
 3294              		.cfi_def_cfa_offset 8
 3295 00a2 BD46     		mov	sp, r7
 3296              	.LCFI110:
 3297              		.cfi_def_cfa_register 13
 3298              		@ sp needed
 3299 00a4 80BD     		pop	{r7, pc}
 3300              	.L157:
 3301 00a6 00BF     		.align	2
 3302              	.L156:
 3303 00a8 00000000 		.word	UART_DMATxOnlyAbortCallback
 3304              		.cfi_endproc
 3305              	.LFE333:
 3307              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 3308              		.align	1
 3309              		.global	HAL_UART_AbortReceive_IT
ARM GAS  /tmp/ccXuXBwl.s 			page 96


 3310              		.syntax unified
 3311              		.thumb
 3312              		.thumb_func
 3313              		.fpu fpv4-sp-d16
 3315              	HAL_UART_AbortReceive_IT:
 3316              	.LFB334:
2145:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2146:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2147:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2148:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2149:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2150:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         This procedure performs following operations :
2151:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2152:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2153:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2154:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - Set handle State to READY
2155:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2156:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2157:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2158:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2159:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2160:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2161:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3317              		.loc 1 2161 1
 3318              		.cfi_startproc
 3319              		@ args = 0, pretend = 0, frame = 8
 3320              		@ frame_needed = 1, uses_anonymous_args = 0
 3321 0000 80B5     		push	{r7, lr}
 3322              	.LCFI111:
 3323              		.cfi_def_cfa_offset 8
 3324              		.cfi_offset 7, -8
 3325              		.cfi_offset 14, -4
 3326 0002 82B0     		sub	sp, sp, #8
 3327              	.LCFI112:
 3328              		.cfi_def_cfa_offset 16
 3329 0004 00AF     		add	r7, sp, #0
 3330              	.LCFI113:
 3331              		.cfi_def_cfa_register 7
 3332 0006 7860     		str	r0, [r7, #4]
2162:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2163:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2164:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_PEIE | USART_CR1_RXNEIE_RXFNEIE));
2165:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
2166:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2167:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 3333              		.loc 1 2167 3
 3334 0008 7B68     		ldr	r3, [r7, #4]
 3335 000a 1B68     		ldr	r3, [r3]
 3336 000c 1A68     		ldr	r2, [r3]
 3337 000e 7B68     		ldr	r3, [r7, #4]
 3338 0010 1B68     		ldr	r3, [r3]
 3339 0012 22F49072 		bic	r2, r2, #288
 3340 0016 1A60     		str	r2, [r3]
2168:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3341              		.loc 1 2168 3
 3342 0018 7B68     		ldr	r3, [r7, #4]
 3343 001a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccXuXBwl.s 			page 97


 3344 001c 9A68     		ldr	r2, [r3, #8]
 3345 001e 7B68     		ldr	r3, [r7, #4]
 3346 0020 1B68     		ldr	r3, [r3]
 3347 0022 22F00102 		bic	r2, r2, #1
 3348 0026 9A60     		str	r2, [r3, #8]
2169:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2170:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2171:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2172:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3349              		.loc 1 2172 7
 3350 0028 7B68     		ldr	r3, [r7, #4]
 3351 002a 1B68     		ldr	r3, [r3]
 3352 002c 9B68     		ldr	r3, [r3, #8]
 3353 002e 03F04003 		and	r3, r3, #64
 3354              		.loc 1 2172 6
 3355 0032 402B     		cmp	r3, #64
 3356 0034 3BD1     		bne	.L159
2173:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2174:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3357              		.loc 1 2174 5
 3358 0036 7B68     		ldr	r3, [r7, #4]
 3359 0038 1B68     		ldr	r3, [r3]
 3360 003a 9A68     		ldr	r2, [r3, #8]
 3361 003c 7B68     		ldr	r3, [r7, #4]
 3362 003e 1B68     		ldr	r3, [r3]
 3363 0040 22F04002 		bic	r2, r2, #64
 3364 0044 9A60     		str	r2, [r3, #8]
2175:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2176:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Abort the UART DMA Rx channel : use non blocking DMA Abort API (callback) */
2177:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3365              		.loc 1 2177 14
 3366 0046 7B68     		ldr	r3, [r7, #4]
 3367 0048 DB6E     		ldr	r3, [r3, #108]
 3368              		.loc 1 2177 8
 3369 004a 002B     		cmp	r3, #0
 3370 004c 13D0     		beq	.L160
2178:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2179:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2180:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2181:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
 3371              		.loc 1 2181 12
 3372 004e 7B68     		ldr	r3, [r7, #4]
 3373 0050 DB6E     		ldr	r3, [r3, #108]
 3374              		.loc 1 2181 40
 3375 0052 224A     		ldr	r2, .L163
 3376 0054 9A63     		str	r2, [r3, #56]
2182:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2183:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Abort DMA RX */
2184:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3377              		.loc 1 2184 11
 3378 0056 7B68     		ldr	r3, [r7, #4]
 3379 0058 DB6E     		ldr	r3, [r3, #108]
 3380 005a 1846     		mov	r0, r3
 3381 005c FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3382 0060 0346     		mov	r3, r0
 3383              		.loc 1 2184 10
 3384 0062 002B     		cmp	r3, #0
ARM GAS  /tmp/ccXuXBwl.s 			page 98


 3385 0064 34D0     		beq	.L161
2185:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2186:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2187:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
 3386              		.loc 1 2187 14
 3387 0066 7B68     		ldr	r3, [r7, #4]
 3388 0068 DB6E     		ldr	r3, [r3, #108]
 3389              		.loc 1 2187 22
 3390 006a 9B6B     		ldr	r3, [r3, #56]
 3391              		.loc 1 2187 47
 3392 006c 7A68     		ldr	r2, [r7, #4]
 3393 006e D26E     		ldr	r2, [r2, #108]
 3394              		.loc 1 2187 9
 3395 0070 1046     		mov	r0, r2
 3396 0072 9847     		blx	r3
 3397              	.LVL1:
 3398 0074 2CE0     		b	.L161
 3399              	.L160:
2188:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2189:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2190:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
2191:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2192:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Reset Rx transfer counter */
2193:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxXferCount = 0U;
 3400              		.loc 1 2193 26
 3401 0076 7B68     		ldr	r3, [r7, #4]
 3402 0078 0022     		movs	r2, #0
 3403 007a A3F85A20 		strh	r2, [r3, #90]	@ movhi
2194:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2195:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
2196:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pRxBuffPtr = NULL;
 3404              		.loc 1 2196 25
 3405 007e 7B68     		ldr	r3, [r7, #4]
 3406 0080 0022     		movs	r2, #0
 3407 0082 5A65     		str	r2, [r3, #84]
2197:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2198:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear the Error flags in the ICR register */
2199:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_F
 3408              		.loc 1 2199 7
 3409 0084 7B68     		ldr	r3, [r7, #4]
 3410 0086 1B68     		ldr	r3, [r3]
 3411 0088 0F22     		movs	r2, #15
 3412 008a 1A62     		str	r2, [r3, #32]
2200:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2201:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Discard the received data */
2202:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 3413              		.loc 1 2202 7
 3414 008c 7B68     		ldr	r3, [r7, #4]
 3415 008e 1B68     		ldr	r3, [r3]
 3416 0090 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 3417 0092 9AB2     		uxth	r2, r3
 3418 0094 7B68     		ldr	r3, [r7, #4]
 3419 0096 1B68     		ldr	r3, [r3]
 3420 0098 42F00802 		orr	r2, r2, #8
 3421 009c 92B2     		uxth	r2, r2
 3422 009e 1A83     		strh	r2, [r3, #24]	@ movhi
2203:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccXuXBwl.s 			page 99


2204:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2205:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 3423              		.loc 1 2205 22
 3424 00a0 7B68     		ldr	r3, [r7, #4]
 3425 00a2 2022     		movs	r2, #32
 3426 00a4 9A67     		str	r2, [r3, #120]
2206:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2207:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2208:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2209:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2210:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2211:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2212:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
2213:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
 3427              		.loc 1 2213 7
 3428 00a6 7868     		ldr	r0, [r7, #4]
 3429 00a8 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3430 00ac 10E0     		b	.L161
 3431              	.L159:
2214:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2215:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2216:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2217:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2218:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2219:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Reset Rx transfer counter */
2220:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 3432              		.loc 1 2220 24
 3433 00ae 7B68     		ldr	r3, [r7, #4]
 3434 00b0 0022     		movs	r2, #0
 3435 00b2 A3F85A20 		strh	r2, [r3, #90]	@ movhi
2221:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2222:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear RxISR function pointer */
2223:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr = NULL;
 3436              		.loc 1 2223 23
 3437 00b6 7B68     		ldr	r3, [r7, #4]
 3438 00b8 0022     		movs	r2, #0
 3439 00ba 5A65     		str	r2, [r3, #84]
2224:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2225:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear the Error flags in the ICR register */
2226:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF
 3440              		.loc 1 2226 5
 3441 00bc 7B68     		ldr	r3, [r7, #4]
 3442 00be 1B68     		ldr	r3, [r3]
 3443 00c0 0F22     		movs	r2, #15
 3444 00c2 1A62     		str	r2, [r3, #32]
2227:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2228:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2229:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 3445              		.loc 1 2229 20
 3446 00c4 7B68     		ldr	r3, [r7, #4]
 3447 00c6 2022     		movs	r2, #32
 3448 00c8 9A67     		str	r2, [r3, #120]
2230:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2231:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2232:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2233:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2234:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
ARM GAS  /tmp/ccXuXBwl.s 			page 100


2235:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2236:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2237:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
 3449              		.loc 1 2237 5
 3450 00ca 7868     		ldr	r0, [r7, #4]
 3451 00cc FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 3452              	.L161:
2238:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2239:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2240:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2241:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 3453              		.loc 1 2241 10
 3454 00d0 0023     		movs	r3, #0
2242:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3455              		.loc 1 2242 1
 3456 00d2 1846     		mov	r0, r3
 3457 00d4 0837     		adds	r7, r7, #8
 3458              	.LCFI114:
 3459              		.cfi_def_cfa_offset 8
 3460 00d6 BD46     		mov	sp, r7
 3461              	.LCFI115:
 3462              		.cfi_def_cfa_register 13
 3463              		@ sp needed
 3464 00d8 80BD     		pop	{r7, pc}
 3465              	.L164:
 3466 00da 00BF     		.align	2
 3467              	.L163:
 3468 00dc 00000000 		.word	UART_DMARxOnlyAbortCallback
 3469              		.cfi_endproc
 3470              	.LFE334:
 3472              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 3473              		.align	1
 3474              		.global	HAL_UART_IRQHandler
 3475              		.syntax unified
 3476              		.thumb
 3477              		.thumb_func
 3478              		.fpu fpv4-sp-d16
 3480              	HAL_UART_IRQHandler:
 3481              	.LFB335:
2243:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2244:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2245:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Handle UART interrupt request.
2246:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2247:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2248:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2249:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2250:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3482              		.loc 1 2250 1
 3483              		.cfi_startproc
 3484              		@ args = 0, pretend = 0, frame = 32
 3485              		@ frame_needed = 1, uses_anonymous_args = 0
 3486 0000 80B5     		push	{r7, lr}
 3487              	.LCFI116:
 3488              		.cfi_def_cfa_offset 8
 3489              		.cfi_offset 7, -8
 3490              		.cfi_offset 14, -4
 3491 0002 88B0     		sub	sp, sp, #32
ARM GAS  /tmp/ccXuXBwl.s 			page 101


 3492              	.LCFI117:
 3493              		.cfi_def_cfa_offset 40
 3494 0004 00AF     		add	r7, sp, #0
 3495              	.LCFI118:
 3496              		.cfi_def_cfa_register 7
 3497 0006 7860     		str	r0, [r7, #4]
2251:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->ISR);
 3498              		.loc 1 2251 25
 3499 0008 7B68     		ldr	r3, [r7, #4]
 3500 000a 1B68     		ldr	r3, [r3]
 3501              		.loc 1 2251 12
 3502 000c DB69     		ldr	r3, [r3, #28]
 3503 000e FB61     		str	r3, [r7, #28]
2252:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 3504              		.loc 1 2252 25
 3505 0010 7B68     		ldr	r3, [r7, #4]
 3506 0012 1B68     		ldr	r3, [r3]
 3507              		.loc 1 2252 12
 3508 0014 1B68     		ldr	r3, [r3]
 3509 0016 BB61     		str	r3, [r7, #24]
2253:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 3510              		.loc 1 2253 25
 3511 0018 7B68     		ldr	r3, [r7, #4]
 3512 001a 1B68     		ldr	r3, [r3]
 3513              		.loc 1 2253 12
 3514 001c 9B68     		ldr	r3, [r3, #8]
 3515 001e 7B61     		str	r3, [r7, #20]
2254:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2255:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t errorflags;
2256:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t errorcode;
2257:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2258:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If no error occurs */
2259:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_ISR_PE | USART_ISR_FE | USART_ISR_ORE | USART_ISR_NE));
 3516              		.loc 1 2259 14
 3517 0020 FB69     		ldr	r3, [r7, #28]
 3518 0022 03F00F03 		and	r3, r3, #15
 3519 0026 3B61     		str	r3, [r7, #16]
2260:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (errorflags == 0U)
 3520              		.loc 1 2260 6
 3521 0028 3B69     		ldr	r3, [r7, #16]
 3522 002a 002B     		cmp	r3, #0
 3523 002c 13D1     		bne	.L166
2261:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2262:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART in mode Receiver ---------------------------------------------------*/
2263:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2264:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
2265:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
2266:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             || ((cr3its & USART_CR3_RXFTIE) != 0U)))
2267:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2268:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_RXNE) != 0U)
 3524              		.loc 1 2268 20
 3525 002e FB69     		ldr	r3, [r7, #28]
 3526 0030 03F02003 		and	r3, r3, #32
 3527              		.loc 1 2268 8
 3528 0034 002B     		cmp	r3, #0
 3529 0036 0ED0     		beq	.L166
2269:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && ((cr1its & USART_CR1_RXNEIE) != 0U))
ARM GAS  /tmp/ccXuXBwl.s 			page 102


 3530              		.loc 1 2269 21
 3531 0038 BB69     		ldr	r3, [r7, #24]
 3532 003a 03F02003 		and	r3, r3, #32
 3533              		.loc 1 2269 9
 3534 003e 002B     		cmp	r3, #0
 3535 0040 09D0     		beq	.L166
2270:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2271:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2272:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (huart->RxISR != NULL)
 3536              		.loc 1 2272 16
 3537 0042 7B68     		ldr	r3, [r7, #4]
 3538 0044 1B6E     		ldr	r3, [r3, #96]
 3539              		.loc 1 2272 10
 3540 0046 002B     		cmp	r3, #0
 3541 0048 00F0FE80 		beq	.L186
2273:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2274:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxISR(huart);
 3542              		.loc 1 2274 14
 3543 004c 7B68     		ldr	r3, [r7, #4]
 3544 004e 1B6E     		ldr	r3, [r3, #96]
 3545              		.loc 1 2274 9
 3546 0050 7868     		ldr	r0, [r7, #4]
 3547 0052 9847     		blx	r3
 3548              	.LVL2:
2275:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2276:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
 3549              		.loc 1 2276 7
 3550 0054 F8E0     		b	.L186
 3551              	.L166:
2277:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2278:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2279:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2280:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* If some errors occur */
2281:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2282:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((errorflags != 0U)
2283:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && ((((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)
2284:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            || ((cr1its & (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE)) != 0U))))
2285:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2286:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((errorflags != 0U)
 3552              		.loc 1 2286 6
 3553 0056 3B69     		ldr	r3, [r7, #16]
 3554 0058 002B     		cmp	r3, #0
 3555 005a 00F0C180 		beq	.L169
2287:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && (((cr3its & USART_CR3_EIE) != 0U)
 3556              		.loc 1 2287 20
 3557 005e 7B69     		ldr	r3, [r7, #20]
 3558 0060 03F00103 		and	r3, r3, #1
 3559              		.loc 1 2287 7
 3560 0064 002B     		cmp	r3, #0
 3561 0066 05D1     		bne	.L170
2288:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != 0U)))
 3562              		.loc 1 2288 23
 3563 0068 BB69     		ldr	r3, [r7, #24]
 3564 006a 03F49073 		and	r3, r3, #288
 3565              		.loc 1 2288 11
 3566 006e 002B     		cmp	r3, #0
 3567 0070 00F0B680 		beq	.L169
ARM GAS  /tmp/ccXuXBwl.s 			page 103


 3568              	.L170:
2289:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2290:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2291:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART parity error interrupt occurred -------------------------------------*/
2292:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_PE) != 0U) && ((cr1its & USART_CR1_PEIE) != 0U))
 3569              		.loc 1 2292 20
 3570 0074 FB69     		ldr	r3, [r7, #28]
 3571 0076 03F00103 		and	r3, r3, #1
 3572              		.loc 1 2292 8
 3573 007a 002B     		cmp	r3, #0
 3574 007c 0ED0     		beq	.L171
 3575              		.loc 1 2292 55 discriminator 1
 3576 007e BB69     		ldr	r3, [r7, #24]
 3577 0080 03F48073 		and	r3, r3, #256
 3578              		.loc 1 2292 43 discriminator 1
 3579 0084 002B     		cmp	r3, #0
 3580 0086 09D0     		beq	.L171
2293:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2294:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_PEF);
 3581              		.loc 1 2294 7
 3582 0088 7B68     		ldr	r3, [r7, #4]
 3583 008a 1B68     		ldr	r3, [r3]
 3584 008c 0122     		movs	r2, #1
 3585 008e 1A62     		str	r2, [r3, #32]
2295:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2296:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 3586              		.loc 1 2296 24
 3587 0090 7B68     		ldr	r3, [r7, #4]
 3588 0092 DB6F     		ldr	r3, [r3, #124]
 3589 0094 43F00102 		orr	r2, r3, #1
 3590 0098 7B68     		ldr	r3, [r7, #4]
 3591 009a DA67     		str	r2, [r3, #124]
 3592              	.L171:
2297:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2298:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2299:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART frame error interrupt occurred --------------------------------------*/
2300:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_FE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 3593              		.loc 1 2300 20
 3594 009c FB69     		ldr	r3, [r7, #28]
 3595 009e 03F00203 		and	r3, r3, #2
 3596              		.loc 1 2300 8
 3597 00a2 002B     		cmp	r3, #0
 3598 00a4 0ED0     		beq	.L172
 3599              		.loc 1 2300 55 discriminator 1
 3600 00a6 7B69     		ldr	r3, [r7, #20]
 3601 00a8 03F00103 		and	r3, r3, #1
 3602              		.loc 1 2300 43 discriminator 1
 3603 00ac 002B     		cmp	r3, #0
 3604 00ae 09D0     		beq	.L172
2301:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2302:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_FEF);
 3605              		.loc 1 2302 7
 3606 00b0 7B68     		ldr	r3, [r7, #4]
 3607 00b2 1B68     		ldr	r3, [r3]
 3608 00b4 0222     		movs	r2, #2
 3609 00b6 1A62     		str	r2, [r3, #32]
2303:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccXuXBwl.s 			page 104


2304:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
 3610              		.loc 1 2304 24
 3611 00b8 7B68     		ldr	r3, [r7, #4]
 3612 00ba DB6F     		ldr	r3, [r3, #124]
 3613 00bc 43F00402 		orr	r2, r3, #4
 3614 00c0 7B68     		ldr	r3, [r7, #4]
 3615 00c2 DA67     		str	r2, [r3, #124]
 3616              	.L172:
2305:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2306:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2307:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART noise error interrupt occurred --------------------------------------*/
2308:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_NE) != 0U) && ((cr3its & USART_CR3_EIE) != 0U))
 3617              		.loc 1 2308 20
 3618 00c4 FB69     		ldr	r3, [r7, #28]
 3619 00c6 03F00403 		and	r3, r3, #4
 3620              		.loc 1 2308 8
 3621 00ca 002B     		cmp	r3, #0
 3622 00cc 0ED0     		beq	.L173
 3623              		.loc 1 2308 55 discriminator 1
 3624 00ce 7B69     		ldr	r3, [r7, #20]
 3625 00d0 03F00103 		and	r3, r3, #1
 3626              		.loc 1 2308 43 discriminator 1
 3627 00d4 002B     		cmp	r3, #0
 3628 00d6 09D0     		beq	.L173
2309:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2310:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_NEF);
 3629              		.loc 1 2310 7
 3630 00d8 7B68     		ldr	r3, [r7, #4]
 3631 00da 1B68     		ldr	r3, [r3]
 3632 00dc 0422     		movs	r2, #4
 3633 00de 1A62     		str	r2, [r3, #32]
2311:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2312:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
 3634              		.loc 1 2312 24
 3635 00e0 7B68     		ldr	r3, [r7, #4]
 3636 00e2 DB6F     		ldr	r3, [r3, #124]
 3637 00e4 43F00202 		orr	r2, r3, #2
 3638 00e8 7B68     		ldr	r3, [r7, #4]
 3639 00ea DA67     		str	r2, [r3, #124]
 3640              	.L173:
2313:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2314:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2315:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred -----------------------------------------*/
2316:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2317:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
2318:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U) ||
2319:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ((cr3its & (USART_CR3_RXFTIE | USART_CR3_EIE)) != 0U)))
2320:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2321:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (((isrflags & USART_ISR_ORE) != 0U)
 3641              		.loc 1 2321 20
 3642 00ec FB69     		ldr	r3, [r7, #28]
 3643 00ee 03F00803 		and	r3, r3, #8
 3644              		.loc 1 2321 8
 3645 00f2 002B     		cmp	r3, #0
 3646 00f4 13D0     		beq	.L174
2322:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 3647              		.loc 1 2322 22
ARM GAS  /tmp/ccXuXBwl.s 			page 105


 3648 00f6 BB69     		ldr	r3, [r7, #24]
 3649 00f8 03F02003 		and	r3, r3, #32
 3650              		.loc 1 2322 9
 3651 00fc 002B     		cmp	r3, #0
 3652 00fe 04D1     		bne	.L175
2323:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ((cr3its & USART_CR3_EIE) != 0U)))
 3653              		.loc 1 2323 22 discriminator 1
 3654 0100 7B69     		ldr	r3, [r7, #20]
 3655 0102 03F00103 		and	r3, r3, #1
2322:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         && (((cr1its & USART_CR1_RXNEIE) != 0U) ||
 3656              		.loc 1 2322 49 discriminator 1
 3657 0106 002B     		cmp	r3, #0
 3658 0108 09D0     		beq	.L174
 3659              	.L175:
2324:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2325:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2326:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF);
 3660              		.loc 1 2326 7
 3661 010a 7B68     		ldr	r3, [r7, #4]
 3662 010c 1B68     		ldr	r3, [r3]
 3663 010e 0822     		movs	r2, #8
 3664 0110 1A62     		str	r2, [r3, #32]
2327:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2328:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 3665              		.loc 1 2328 24
 3666 0112 7B68     		ldr	r3, [r7, #4]
 3667 0114 DB6F     		ldr	r3, [r3, #124]
 3668 0116 43F00802 		orr	r2, r3, #8
 3669 011a 7B68     		ldr	r3, [r7, #4]
 3670 011c DA67     		str	r2, [r3, #124]
 3671              	.L174:
2329:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2330:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2331:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
2332:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 3672              		.loc 1 2332 14
 3673 011e 7B68     		ldr	r3, [r7, #4]
 3674 0120 DB6F     		ldr	r3, [r3, #124]
 3675              		.loc 1 2332 8
 3676 0122 002B     		cmp	r3, #0
 3677 0124 00F09280 		beq	.L187
2333:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2334:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* UART in mode Receiver ---------------------------------------------------*/
2335:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2336:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE_RXFNE) != 0U)
2337:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           && (((cr1its & USART_CR1_RXNEIE_RXFNEIE) != 0U)
2338:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               || ((cr3its & USART_CR3_RXFTIE) != 0U)))
2339:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2340:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (((isrflags & USART_ISR_RXNE) != 0U)
 3678              		.loc 1 2340 22
 3679 0128 FB69     		ldr	r3, [r7, #28]
 3680 012a 03F02003 		and	r3, r3, #32
 3681              		.loc 1 2340 10
 3682 012e 002B     		cmp	r3, #0
 3683 0130 0CD0     		beq	.L177
2341:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           && ((cr1its & USART_CR1_RXNEIE) != 0U))
 3684              		.loc 1 2341 23
ARM GAS  /tmp/ccXuXBwl.s 			page 106


 3685 0132 BB69     		ldr	r3, [r7, #24]
 3686 0134 03F02003 		and	r3, r3, #32
 3687              		.loc 1 2341 11
 3688 0138 002B     		cmp	r3, #0
 3689 013a 07D0     		beq	.L177
2342:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2343:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2344:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (huart->RxISR != NULL)
 3690              		.loc 1 2344 18
 3691 013c 7B68     		ldr	r3, [r7, #4]
 3692 013e 1B6E     		ldr	r3, [r3, #96]
 3693              		.loc 1 2344 12
 3694 0140 002B     		cmp	r3, #0
 3695 0142 03D0     		beq	.L177
2345:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2346:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->RxISR(huart);
 3696              		.loc 1 2346 16
 3697 0144 7B68     		ldr	r3, [r7, #4]
 3698 0146 1B6E     		ldr	r3, [r3, #96]
 3699              		.loc 1 2346 11
 3700 0148 7868     		ldr	r0, [r7, #4]
 3701 014a 9847     		blx	r3
 3702              	.LVL3:
 3703              	.L177:
2347:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2348:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2349:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2350:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
2351:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****          consider error as blocking */
2352:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       errorcode = huart->ErrorCode;
 3704              		.loc 1 2352 17
 3705 014c 7B68     		ldr	r3, [r7, #4]
 3706 014e DB6F     		ldr	r3, [r3, #124]
 3707 0150 FB60     		str	r3, [r7, #12]
2353:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 3708              		.loc 1 2353 12
 3709 0152 7B68     		ldr	r3, [r7, #4]
 3710 0154 1B68     		ldr	r3, [r3]
 3711 0156 9B68     		ldr	r3, [r3, #8]
 3712 0158 03F04003 		and	r3, r3, #64
 3713              		.loc 1 2353 10
 3714 015c 402B     		cmp	r3, #64
 3715 015e 04D0     		beq	.L178
2354:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ((errorcode & HAL_UART_ERROR_ORE) != 0U))
 3716              		.loc 1 2354 23 discriminator 1
 3717 0160 FB68     		ldr	r3, [r7, #12]
 3718 0162 03F00803 		and	r3, r3, #8
2353:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) ||
 3719              		.loc 1 2353 66 discriminator 1
 3720 0166 002B     		cmp	r3, #0
 3721 0168 31D0     		beq	.L179
 3722              	.L178:
2355:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2356:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2357:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2358:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2359:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
ARM GAS  /tmp/ccXuXBwl.s 			page 107


 3723              		.loc 1 2359 9
 3724 016a 7868     		ldr	r0, [r7, #4]
 3725 016c FFF7FEFF 		bl	UART_EndRxTransfer
2360:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2361:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2362:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3726              		.loc 1 2362 13
 3727 0170 7B68     		ldr	r3, [r7, #4]
 3728 0172 1B68     		ldr	r3, [r3]
 3729 0174 9B68     		ldr	r3, [r3, #8]
 3730 0176 03F04003 		and	r3, r3, #64
 3731              		.loc 1 2362 12
 3732 017a 402B     		cmp	r3, #64
 3733 017c 23D1     		bne	.L180
2363:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2364:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3734              		.loc 1 2364 11
 3735 017e 7B68     		ldr	r3, [r7, #4]
 3736 0180 1B68     		ldr	r3, [r3]
 3737 0182 9A68     		ldr	r2, [r3, #8]
 3738 0184 7B68     		ldr	r3, [r7, #4]
 3739 0186 1B68     		ldr	r3, [r3]
 3740 0188 22F04002 		bic	r2, r2, #64
 3741 018c 9A60     		str	r2, [r3, #8]
2365:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2366:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Abort the UART DMA Rx channel */
2367:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           if (huart->hdmarx != NULL)
 3742              		.loc 1 2367 20
 3743 018e 7B68     		ldr	r3, [r7, #4]
 3744 0190 DB6E     		ldr	r3, [r3, #108]
 3745              		.loc 1 2367 14
 3746 0192 002B     		cmp	r3, #0
 3747 0194 13D0     		beq	.L181
2368:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           {
2369:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2370:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2371:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 3748              		.loc 1 2371 18
 3749 0196 7B68     		ldr	r3, [r7, #4]
 3750 0198 DB6E     		ldr	r3, [r3, #108]
 3751              		.loc 1 2371 46
 3752 019a 2F4A     		ldr	r2, .L190
 3753 019c 9A63     		str	r2, [r3, #56]
2372:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2373:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /* Abort DMA RX */
2374:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 3754              		.loc 1 2374 17
 3755 019e 7B68     		ldr	r3, [r7, #4]
 3756 01a0 DB6E     		ldr	r3, [r3, #108]
 3757 01a2 1846     		mov	r0, r3
 3758 01a4 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 3759 01a8 0346     		mov	r3, r0
 3760              		.loc 1 2374 16
 3761 01aa 002B     		cmp	r3, #0
 3762 01ac 16D0     		beq	.L188
2375:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             {
2376:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
ARM GAS  /tmp/ccXuXBwl.s 			page 108


2377:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
 3763              		.loc 1 2377 20
 3764 01ae 7B68     		ldr	r3, [r7, #4]
 3765 01b0 DB6E     		ldr	r3, [r3, #108]
 3766              		.loc 1 2377 28
 3767 01b2 9B6B     		ldr	r3, [r3, #56]
 3768              		.loc 1 2377 53
 3769 01b4 7A68     		ldr	r2, [r7, #4]
 3770 01b6 D26E     		ldr	r2, [r2, #108]
 3771              		.loc 1 2377 15
 3772 01b8 1046     		mov	r0, r2
 3773 01ba 9847     		blx	r3
 3774              	.LVL4:
2362:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 3775              		.loc 1 2362 12
 3776 01bc 0EE0     		b	.L188
 3777              	.L181:
2378:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             }
2379:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           }
2380:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           else
2381:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           {
2382:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /* Call user error callback */
2383:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2384:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /*Call registered error callback*/
2385:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             huart->ErrorCallback(huart);
2386:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2387:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             /*Call legacy weak error callback*/
2388:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
 3778              		.loc 1 2388 13
 3779 01be 7868     		ldr	r0, [r7, #4]
 3780 01c0 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2362:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 3781              		.loc 1 2362 12
 3782 01c4 0AE0     		b	.L188
 3783              	.L180:
2389:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2390:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2391:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           }
2392:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
2393:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         else
2394:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2395:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /* Call user error callback */
2396:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2397:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /*Call registered error callback*/
2398:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->ErrorCallback(huart);
2399:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2400:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           /*Call legacy weak error callback*/
2401:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 3784              		.loc 1 2401 11
 3785 01c6 7868     		ldr	r0, [r7, #4]
 3786 01c8 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2362:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 3787              		.loc 1 2362 12
 3788 01cc 06E0     		b	.L188
 3789              	.L179:
2402:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2403:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
ARM GAS  /tmp/ccXuXBwl.s 			page 109


2404:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2405:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
2406:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2407:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2408:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            Error is notified to user through user error callback */
2409:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2410:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call registered error callback*/
2411:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCallback(huart);
2412:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2413:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /*Call legacy weak error callback*/
2414:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
 3790              		.loc 1 2414 9
 3791 01ce 7868     		ldr	r0, [r7, #4]
 3792 01d0 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2415:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2416:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 3793              		.loc 1 2416 26
 3794 01d4 7B68     		ldr	r3, [r7, #4]
 3795 01d6 0022     		movs	r2, #0
 3796 01d8 DA67     		str	r2, [r3, #124]
2417:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2418:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2419:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
 3797              		.loc 1 2419 5
 3798 01da 37E0     		b	.L187
 3799              	.L188:
2362:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
 3800              		.loc 1 2362 12
 3801 01dc 00BF     		nop
 3802              		.loc 1 2419 5
 3803 01de 35E0     		b	.L187
 3804              	.L169:
2420:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2421:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   } /* End if some error occurs */
2422:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2423:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART wakeup from Stop mode interrupt occurred ---------------------------*/
2424:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_WUF) != 0U) && ((cr3its & USART_CR3_WUFIE) != 0U))
 3805              		.loc 1 2424 18
 3806 01e0 FB69     		ldr	r3, [r7, #28]
 3807 01e2 03F48013 		and	r3, r3, #1048576
 3808              		.loc 1 2424 6
 3809 01e6 002B     		cmp	r3, #0
 3810 01e8 0DD0     		beq	.L183
 3811              		.loc 1 2424 54 discriminator 1
 3812 01ea 7B69     		ldr	r3, [r7, #20]
 3813 01ec 03F48003 		and	r3, r3, #4194304
 3814              		.loc 1 2424 42 discriminator 1
 3815 01f0 002B     		cmp	r3, #0
 3816 01f2 08D0     		beq	.L183
2425:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2426:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_WUF);
 3817              		.loc 1 2426 5
 3818 01f4 7B68     		ldr	r3, [r7, #4]
 3819 01f6 1B68     		ldr	r3, [r3]
 3820 01f8 4FF48012 		mov	r2, #1048576
 3821 01fc 1A62     		str	r2, [r3, #32]
2427:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccXuXBwl.s 			page 110


2428:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* UART Rx state is not reset as a reception process might be ongoing.
2429:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        If UART handle state fields need to be reset to READY, this could be done in Wakeup callback
2430:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2431:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2432:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Wakeup Callback */
2433:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->WakeupCallback(huart);
2434:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2435:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Wakeup Callback */
2436:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_WakeupCallback(huart);
 3822              		.loc 1 2436 5
 3823 01fe 7868     		ldr	r0, [r7, #4]
 3824 0200 FFF7FEFF 		bl	HAL_UARTEx_WakeupCallback
2437:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2438:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
 3825              		.loc 1 2438 5
 3826 0204 25E0     		b	.L165
 3827              	.L183:
2439:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2440:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2441:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2442:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2443:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE_TXFNF) != 0U)
2444:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && (((cr1its & USART_CR1_TXEIE_TXFNFIE) != 0U)
2445:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           || ((cr3its & USART_CR3_TXFTIE) != 0U)))
2446:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2447:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXE) != 0U)
 3828              		.loc 1 2447 18
 3829 0206 FB69     		ldr	r3, [r7, #28]
 3830 0208 03F08003 		and	r3, r3, #128
 3831              		.loc 1 2447 6
 3832 020c 002B     		cmp	r3, #0
 3833 020e 0DD0     		beq	.L184
2448:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       && ((cr1its & USART_CR1_TXEIE) != 0U))
 3834              		.loc 1 2448 19
 3835 0210 BB69     		ldr	r3, [r7, #24]
 3836 0212 03F08003 		and	r3, r3, #128
 3837              		.loc 1 2448 7
 3838 0216 002B     		cmp	r3, #0
 3839 0218 08D0     		beq	.L184
2449:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2450:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2451:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->TxISR != NULL)
 3840              		.loc 1 2451 14
 3841 021a 7B68     		ldr	r3, [r7, #4]
 3842 021c 5B6E     		ldr	r3, [r3, #100]
 3843              		.loc 1 2451 8
 3844 021e 002B     		cmp	r3, #0
 3845 0220 16D0     		beq	.L189
2452:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2453:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxISR(huart);
 3846              		.loc 1 2453 12
 3847 0222 7B68     		ldr	r3, [r7, #4]
 3848 0224 5B6E     		ldr	r3, [r3, #100]
 3849              		.loc 1 2453 7
 3850 0226 7868     		ldr	r0, [r7, #4]
 3851 0228 9847     		blx	r3
 3852              	.LVL5:
ARM GAS  /tmp/ccXuXBwl.s 			page 111


2454:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2455:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
 3853              		.loc 1 2455 5
 3854 022a 11E0     		b	.L189
 3855              	.L184:
2456:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2457:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2458:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART in mode Transmitter (transmission end) -----------------------------*/
2459:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TC) != 0U) && ((cr1its & USART_CR1_TCIE) != 0U))
 3856              		.loc 1 2459 18
 3857 022c FB69     		ldr	r3, [r7, #28]
 3858 022e 03F04003 		and	r3, r3, #64
 3859              		.loc 1 2459 6
 3860 0232 002B     		cmp	r3, #0
 3861 0234 0DD0     		beq	.L165
 3862              		.loc 1 2459 53 discriminator 1
 3863 0236 BB69     		ldr	r3, [r7, #24]
 3864 0238 03F04003 		and	r3, r3, #64
 3865              		.loc 1 2459 41 discriminator 1
 3866 023c 002B     		cmp	r3, #0
 3867 023e 08D0     		beq	.L165
2460:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2461:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 3868              		.loc 1 2461 5
 3869 0240 7868     		ldr	r0, [r7, #4]
 3870 0242 FFF7FEFF 		bl	UART_EndTransmit_IT
2462:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
 3871              		.loc 1 2462 5
 3872 0246 04E0     		b	.L165
 3873              	.L186:
2276:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 3874              		.loc 1 2276 7
 3875 0248 00BF     		nop
 3876 024a 02E0     		b	.L165
 3877              	.L187:
2419:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
 3878              		.loc 1 2419 5
 3879 024c 00BF     		nop
 3880 024e 00E0     		b	.L165
 3881              	.L189:
2455:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 3882              		.loc 1 2455 5
 3883 0250 00BF     		nop
 3884              	.L165:
2463:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2464:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2465:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2466:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART TX Fifo Empty occurred ----------------------------------------------*/
2467:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_TXFE) != 0U) && ((cr1its & USART_CR1_TXFEIE) != 0U))
2468:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2469:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2470:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Tx Fifo Empty Callback */
2471:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxFifoEmptyCallback(huart);
2472:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2473:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Tx Fifo Empty Callback */
2474:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_TxFifoEmptyCallback(huart);
2475:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
ARM GAS  /tmp/ccXuXBwl.s 			page 112


2476:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2477:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2478:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2479:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* UART RX Fifo Full occurred ----------------------------------------------*/
2480:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (((isrflags & USART_ISR_RXFF) != 0U) && ((cr1its & USART_CR1_RXFFIE) != 0U))
2481:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2482:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2483:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call registered Rx Fifo Full Callback */
2484:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxFifoFullCallback(huart);
2485:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2486:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Call legacy weak Rx Fifo Full Callback */
2487:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UARTEx_RxFifoFullCallback(huart);
2488:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2489:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     return;
2490:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2491:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2492:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3885              		.loc 1 2492 1
 3886 0252 2037     		adds	r7, r7, #32
 3887              	.LCFI119:
 3888              		.cfi_def_cfa_offset 8
 3889 0254 BD46     		mov	sp, r7
 3890              	.LCFI120:
 3891              		.cfi_def_cfa_register 13
 3892              		@ sp needed
 3893 0256 80BD     		pop	{r7, pc}
 3894              	.L191:
 3895              		.align	2
 3896              	.L190:
 3897 0258 00000000 		.word	UART_DMAAbortOnError
 3898              		.cfi_endproc
 3899              	.LFE335:
 3901              		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 3902              		.align	1
 3903              		.weak	HAL_UART_TxCpltCallback
 3904              		.syntax unified
 3905              		.thumb
 3906              		.thumb_func
 3907              		.fpu fpv4-sp-d16
 3909              	HAL_UART_TxCpltCallback:
 3910              	.LFB336:
2493:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2494:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2495:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Tx Transfer completed callback.
2496:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2497:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2498:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2499:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2500:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3911              		.loc 1 2500 1
 3912              		.cfi_startproc
 3913              		@ args = 0, pretend = 0, frame = 8
 3914              		@ frame_needed = 1, uses_anonymous_args = 0
 3915              		@ link register save eliminated.
 3916 0000 80B4     		push	{r7}
 3917              	.LCFI121:
 3918              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccXuXBwl.s 			page 113


 3919              		.cfi_offset 7, -4
 3920 0002 83B0     		sub	sp, sp, #12
 3921              	.LCFI122:
 3922              		.cfi_def_cfa_offset 16
 3923 0004 00AF     		add	r7, sp, #0
 3924              	.LCFI123:
 3925              		.cfi_def_cfa_register 7
 3926 0006 7860     		str	r0, [r7, #4]
2501:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2502:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2503:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2504:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2505:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_TxCpltCallback can be implemented in the user file.
2506:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2507:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3927              		.loc 1 2507 1
 3928 0008 00BF     		nop
 3929 000a 0C37     		adds	r7, r7, #12
 3930              	.LCFI124:
 3931              		.cfi_def_cfa_offset 4
 3932 000c BD46     		mov	sp, r7
 3933              	.LCFI125:
 3934              		.cfi_def_cfa_register 13
 3935              		@ sp needed
 3936 000e 5DF8047B 		ldr	r7, [sp], #4
 3937              	.LCFI126:
 3938              		.cfi_restore 7
 3939              		.cfi_def_cfa_offset 0
 3940 0012 7047     		bx	lr
 3941              		.cfi_endproc
 3942              	.LFE336:
 3944              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 3945              		.align	1
 3946              		.weak	HAL_UART_TxHalfCpltCallback
 3947              		.syntax unified
 3948              		.thumb
 3949              		.thumb_func
 3950              		.fpu fpv4-sp-d16
 3952              	HAL_UART_TxHalfCpltCallback:
 3953              	.LFB337:
2508:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2509:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2510:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callback.
2511:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2512:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2513:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2514:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2515:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3954              		.loc 1 2515 1
 3955              		.cfi_startproc
 3956              		@ args = 0, pretend = 0, frame = 8
 3957              		@ frame_needed = 1, uses_anonymous_args = 0
 3958              		@ link register save eliminated.
 3959 0000 80B4     		push	{r7}
 3960              	.LCFI127:
 3961              		.cfi_def_cfa_offset 4
 3962              		.cfi_offset 7, -4
ARM GAS  /tmp/ccXuXBwl.s 			page 114


 3963 0002 83B0     		sub	sp, sp, #12
 3964              	.LCFI128:
 3965              		.cfi_def_cfa_offset 16
 3966 0004 00AF     		add	r7, sp, #0
 3967              	.LCFI129:
 3968              		.cfi_def_cfa_register 7
 3969 0006 7860     		str	r0, [r7, #4]
2516:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2517:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2518:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2519:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2520:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback can be implemented in the user file.
2521:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2522:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 3970              		.loc 1 2522 1
 3971 0008 00BF     		nop
 3972 000a 0C37     		adds	r7, r7, #12
 3973              	.LCFI130:
 3974              		.cfi_def_cfa_offset 4
 3975 000c BD46     		mov	sp, r7
 3976              	.LCFI131:
 3977              		.cfi_def_cfa_register 13
 3978              		@ sp needed
 3979 000e 5DF8047B 		ldr	r7, [sp], #4
 3980              	.LCFI132:
 3981              		.cfi_restore 7
 3982              		.cfi_def_cfa_offset 0
 3983 0012 7047     		bx	lr
 3984              		.cfi_endproc
 3985              	.LFE337:
 3987              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 3988              		.align	1
 3989              		.weak	HAL_UART_RxCpltCallback
 3990              		.syntax unified
 3991              		.thumb
 3992              		.thumb_func
 3993              		.fpu fpv4-sp-d16
 3995              	HAL_UART_RxCpltCallback:
 3996              	.LFB338:
2523:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2524:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2525:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Rx Transfer completed callback.
2526:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2527:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2528:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2529:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2530:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 3997              		.loc 1 2530 1
 3998              		.cfi_startproc
 3999              		@ args = 0, pretend = 0, frame = 8
 4000              		@ frame_needed = 1, uses_anonymous_args = 0
 4001              		@ link register save eliminated.
 4002 0000 80B4     		push	{r7}
 4003              	.LCFI133:
 4004              		.cfi_def_cfa_offset 4
 4005              		.cfi_offset 7, -4
 4006 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccXuXBwl.s 			page 115


 4007              	.LCFI134:
 4008              		.cfi_def_cfa_offset 16
 4009 0004 00AF     		add	r7, sp, #0
 4010              	.LCFI135:
 4011              		.cfi_def_cfa_register 7
 4012 0006 7860     		str	r0, [r7, #4]
2531:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2532:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2533:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2534:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2535:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_RxCpltCallback can be implemented in the user file.
2536:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2537:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4013              		.loc 1 2537 1
 4014 0008 00BF     		nop
 4015 000a 0C37     		adds	r7, r7, #12
 4016              	.LCFI136:
 4017              		.cfi_def_cfa_offset 4
 4018 000c BD46     		mov	sp, r7
 4019              	.LCFI137:
 4020              		.cfi_def_cfa_register 13
 4021              		@ sp needed
 4022 000e 5DF8047B 		ldr	r7, [sp], #4
 4023              	.LCFI138:
 4024              		.cfi_restore 7
 4025              		.cfi_def_cfa_offset 0
 4026 0012 7047     		bx	lr
 4027              		.cfi_endproc
 4028              	.LFE338:
 4030              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 4031              		.align	1
 4032              		.weak	HAL_UART_RxHalfCpltCallback
 4033              		.syntax unified
 4034              		.thumb
 4035              		.thumb_func
 4036              		.fpu fpv4-sp-d16
 4038              	HAL_UART_RxHalfCpltCallback:
 4039              	.LFB339:
2538:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2539:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2540:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callback.
2541:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2542:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2543:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2544:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2545:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4040              		.loc 1 2545 1
 4041              		.cfi_startproc
 4042              		@ args = 0, pretend = 0, frame = 8
 4043              		@ frame_needed = 1, uses_anonymous_args = 0
 4044              		@ link register save eliminated.
 4045 0000 80B4     		push	{r7}
 4046              	.LCFI139:
 4047              		.cfi_def_cfa_offset 4
 4048              		.cfi_offset 7, -4
 4049 0002 83B0     		sub	sp, sp, #12
 4050              	.LCFI140:
ARM GAS  /tmp/ccXuXBwl.s 			page 116


 4051              		.cfi_def_cfa_offset 16
 4052 0004 00AF     		add	r7, sp, #0
 4053              	.LCFI141:
 4054              		.cfi_def_cfa_register 7
 4055 0006 7860     		str	r0, [r7, #4]
2546:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2547:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2548:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2549:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2550:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback can be implemented in the user file.
2551:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2552:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4056              		.loc 1 2552 1
 4057 0008 00BF     		nop
 4058 000a 0C37     		adds	r7, r7, #12
 4059              	.LCFI142:
 4060              		.cfi_def_cfa_offset 4
 4061 000c BD46     		mov	sp, r7
 4062              	.LCFI143:
 4063              		.cfi_def_cfa_register 13
 4064              		@ sp needed
 4065 000e 5DF8047B 		ldr	r7, [sp], #4
 4066              	.LCFI144:
 4067              		.cfi_restore 7
 4068              		.cfi_def_cfa_offset 0
 4069 0012 7047     		bx	lr
 4070              		.cfi_endproc
 4071              	.LFE339:
 4073              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 4074              		.align	1
 4075              		.weak	HAL_UART_ErrorCallback
 4076              		.syntax unified
 4077              		.thumb
 4078              		.thumb_func
 4079              		.fpu fpv4-sp-d16
 4081              	HAL_UART_ErrorCallback:
 4082              	.LFB340:
2553:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2554:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2555:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART error callback.
2556:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2557:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2558:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2559:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2560:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4083              		.loc 1 2560 1
 4084              		.cfi_startproc
 4085              		@ args = 0, pretend = 0, frame = 8
 4086              		@ frame_needed = 1, uses_anonymous_args = 0
 4087              		@ link register save eliminated.
 4088 0000 80B4     		push	{r7}
 4089              	.LCFI145:
 4090              		.cfi_def_cfa_offset 4
 4091              		.cfi_offset 7, -4
 4092 0002 83B0     		sub	sp, sp, #12
 4093              	.LCFI146:
 4094              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccXuXBwl.s 			page 117


 4095 0004 00AF     		add	r7, sp, #0
 4096              	.LCFI147:
 4097              		.cfi_def_cfa_register 7
 4098 0006 7860     		str	r0, [r7, #4]
2561:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2562:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2563:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2564:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2565:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_ErrorCallback can be implemented in the user file.
2566:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2567:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4099              		.loc 1 2567 1
 4100 0008 00BF     		nop
 4101 000a 0C37     		adds	r7, r7, #12
 4102              	.LCFI148:
 4103              		.cfi_def_cfa_offset 4
 4104 000c BD46     		mov	sp, r7
 4105              	.LCFI149:
 4106              		.cfi_def_cfa_register 13
 4107              		@ sp needed
 4108 000e 5DF8047B 		ldr	r7, [sp], #4
 4109              	.LCFI150:
 4110              		.cfi_restore 7
 4111              		.cfi_def_cfa_offset 0
 4112 0012 7047     		bx	lr
 4113              		.cfi_endproc
 4114              	.LFE340:
 4116              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 4117              		.align	1
 4118              		.weak	HAL_UART_AbortCpltCallback
 4119              		.syntax unified
 4120              		.thumb
 4121              		.thumb_func
 4122              		.fpu fpv4-sp-d16
 4124              	HAL_UART_AbortCpltCallback:
 4125              	.LFB341:
2568:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2569:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2570:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2571:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2572:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2573:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2574:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2575:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4126              		.loc 1 2575 1
 4127              		.cfi_startproc
 4128              		@ args = 0, pretend = 0, frame = 8
 4129              		@ frame_needed = 1, uses_anonymous_args = 0
 4130              		@ link register save eliminated.
 4131 0000 80B4     		push	{r7}
 4132              	.LCFI151:
 4133              		.cfi_def_cfa_offset 4
 4134              		.cfi_offset 7, -4
 4135 0002 83B0     		sub	sp, sp, #12
 4136              	.LCFI152:
 4137              		.cfi_def_cfa_offset 16
 4138 0004 00AF     		add	r7, sp, #0
ARM GAS  /tmp/ccXuXBwl.s 			page 118


 4139              	.LCFI153:
 4140              		.cfi_def_cfa_register 7
 4141 0006 7860     		str	r0, [r7, #4]
2576:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2577:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2578:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2579:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2580:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2581:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2582:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4142              		.loc 1 2582 1
 4143 0008 00BF     		nop
 4144 000a 0C37     		adds	r7, r7, #12
 4145              	.LCFI154:
 4146              		.cfi_def_cfa_offset 4
 4147 000c BD46     		mov	sp, r7
 4148              	.LCFI155:
 4149              		.cfi_def_cfa_register 13
 4150              		@ sp needed
 4151 000e 5DF8047B 		ldr	r7, [sp], #4
 4152              	.LCFI156:
 4153              		.cfi_restore 7
 4154              		.cfi_def_cfa_offset 0
 4155 0012 7047     		bx	lr
 4156              		.cfi_endproc
 4157              	.LFE341:
 4159              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 4160              		.align	1
 4161              		.weak	HAL_UART_AbortTransmitCpltCallback
 4162              		.syntax unified
 4163              		.thumb
 4164              		.thumb_func
 4165              		.fpu fpv4-sp-d16
 4167              	HAL_UART_AbortTransmitCpltCallback:
 4168              	.LFB342:
2583:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2584:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2585:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2586:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2587:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2588:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2589:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
2590:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4169              		.loc 1 2590 1
 4170              		.cfi_startproc
 4171              		@ args = 0, pretend = 0, frame = 8
 4172              		@ frame_needed = 1, uses_anonymous_args = 0
 4173              		@ link register save eliminated.
 4174 0000 80B4     		push	{r7}
 4175              	.LCFI157:
 4176              		.cfi_def_cfa_offset 4
 4177              		.cfi_offset 7, -4
 4178 0002 83B0     		sub	sp, sp, #12
 4179              	.LCFI158:
 4180              		.cfi_def_cfa_offset 16
 4181 0004 00AF     		add	r7, sp, #0
 4182              	.LCFI159:
ARM GAS  /tmp/ccXuXBwl.s 			page 119


 4183              		.cfi_def_cfa_register 7
 4184 0006 7860     		str	r0, [r7, #4]
2591:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2592:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2593:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2594:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2595:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2596:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2597:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4185              		.loc 1 2597 1
 4186 0008 00BF     		nop
 4187 000a 0C37     		adds	r7, r7, #12
 4188              	.LCFI160:
 4189              		.cfi_def_cfa_offset 4
 4190 000c BD46     		mov	sp, r7
 4191              	.LCFI161:
 4192              		.cfi_def_cfa_register 13
 4193              		@ sp needed
 4194 000e 5DF8047B 		ldr	r7, [sp], #4
 4195              	.LCFI162:
 4196              		.cfi_restore 7
 4197              		.cfi_def_cfa_offset 0
 4198 0012 7047     		bx	lr
 4199              		.cfi_endproc
 4200              	.LFE342:
 4202              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 4203              		.align	1
 4204              		.weak	HAL_UART_AbortReceiveCpltCallback
 4205              		.syntax unified
 4206              		.thumb
 4207              		.thumb_func
 4208              		.fpu fpv4-sp-d16
 4210              	HAL_UART_AbortReceiveCpltCallback:
 4211              	.LFB343:
2598:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2599:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2600:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2601:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2602:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2603:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2604:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2605:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4212              		.loc 1 2605 1
 4213              		.cfi_startproc
 4214              		@ args = 0, pretend = 0, frame = 8
 4215              		@ frame_needed = 1, uses_anonymous_args = 0
 4216              		@ link register save eliminated.
 4217 0000 80B4     		push	{r7}
 4218              	.LCFI163:
 4219              		.cfi_def_cfa_offset 4
 4220              		.cfi_offset 7, -4
 4221 0002 83B0     		sub	sp, sp, #12
 4222              	.LCFI164:
 4223              		.cfi_def_cfa_offset 16
 4224 0004 00AF     		add	r7, sp, #0
 4225              	.LCFI165:
 4226              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccXuXBwl.s 			page 120


 4227 0006 7860     		str	r0, [r7, #4]
2606:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2607:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UNUSED(huart);
2608:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2609:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2610:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2611:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****    */
2612:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4228              		.loc 1 2612 1
 4229 0008 00BF     		nop
 4230 000a 0C37     		adds	r7, r7, #12
 4231              	.LCFI166:
 4232              		.cfi_def_cfa_offset 4
 4233 000c BD46     		mov	sp, r7
 4234              	.LCFI167:
 4235              		.cfi_def_cfa_register 13
 4236              		@ sp needed
 4237 000e 5DF8047B 		ldr	r7, [sp], #4
 4238              	.LCFI168:
 4239              		.cfi_restore 7
 4240              		.cfi_def_cfa_offset 0
 4241 0012 7047     		bx	lr
 4242              		.cfi_endproc
 4243              	.LFE343:
 4245              		.section	.text.HAL_MultiProcessor_EnableMuteMode,"ax",%progbits
 4246              		.align	1
 4247              		.global	HAL_MultiProcessor_EnableMuteMode
 4248              		.syntax unified
 4249              		.thumb
 4250              		.thumb_func
 4251              		.fpu fpv4-sp-d16
 4253              	HAL_MultiProcessor_EnableMuteMode:
 4254              	.LFB344:
2613:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2614:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2615:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
2616:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2617:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2618:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2619:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  @brief   UART control functions
2620:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
2621:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
2622:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
2623:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2624:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****  ===============================================================================
2625:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
2626:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART.
2627:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnableMuteMode() API enables mute mode
2628:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_DisableMuteMode() API disables mute mode
2629:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_MultiProcessor_EnterMuteMode() API enters mute mode
2630:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_SetConfig() API configures the UART peripheral
2631:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_AdvFeatureConfig() API optionally configures the UART advanced features
2632:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) UART_CheckIdleState() API ensures that TEACK and/or REACK are set after initialization
2633:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableTransmitter() API disables receiver and enables transmitter
2634:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_HalfDuplex_EnableReceiver() API disables transmitter and enables receiver
2635:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****      (+) HAL_LIN_SendBreak() API transmits the break characters
2636:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
ARM GAS  /tmp/ccXuXBwl.s 			page 121


2637:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
2638:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2639:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2640:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2641:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable UART in mute mode (does not mean UART enters mute mode;
2642:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         to enter mute mode, HAL_MultiProcessor_EnterMuteMode() API must be called).
2643:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2644:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2645:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2646:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnableMuteMode(UART_HandleTypeDef *huart)
2647:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4255              		.loc 1 2647 1
 4256              		.cfi_startproc
 4257              		@ args = 0, pretend = 0, frame = 8
 4258              		@ frame_needed = 1, uses_anonymous_args = 0
 4259 0000 80B5     		push	{r7, lr}
 4260              	.LCFI169:
 4261              		.cfi_def_cfa_offset 8
 4262              		.cfi_offset 7, -8
 4263              		.cfi_offset 14, -4
 4264 0002 82B0     		sub	sp, sp, #8
 4265              	.LCFI170:
 4266              		.cfi_def_cfa_offset 16
 4267 0004 00AF     		add	r7, sp, #0
 4268              	.LCFI171:
 4269              		.cfi_def_cfa_register 7
 4270 0006 7860     		str	r0, [r7, #4]
2648:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4271              		.loc 1 2648 3
 4272 0008 7B68     		ldr	r3, [r7, #4]
 4273 000a 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 4274 000e 012B     		cmp	r3, #1
 4275 0010 01D1     		bne	.L201
 4276              		.loc 1 2648 3 is_stmt 0 discriminator 1
 4277 0012 0223     		movs	r3, #2
 4278 0014 15E0     		b	.L202
 4279              	.L201:
 4280              		.loc 1 2648 3 discriminator 2
 4281 0016 7B68     		ldr	r3, [r7, #4]
 4282 0018 0122     		movs	r2, #1
 4283 001a 83F87020 		strb	r2, [r3, #112]
2649:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2650:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4284              		.loc 1 2650 17 is_stmt 1 discriminator 2
 4285 001e 7B68     		ldr	r3, [r7, #4]
 4286 0020 2422     		movs	r2, #36
 4287 0022 5A67     		str	r2, [r3, #116]
2651:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2652:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable USART mute mode by setting the MME bit in the CR1 register */
2653:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_MME);
 4288              		.loc 1 2653 3 discriminator 2
 4289 0024 7B68     		ldr	r3, [r7, #4]
 4290 0026 1B68     		ldr	r3, [r3]
 4291 0028 1A68     		ldr	r2, [r3]
 4292 002a 7B68     		ldr	r3, [r7, #4]
 4293 002c 1B68     		ldr	r3, [r3]
 4294 002e 42F40052 		orr	r2, r2, #8192
ARM GAS  /tmp/ccXuXBwl.s 			page 122


 4295 0032 1A60     		str	r2, [r3]
2654:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2655:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4296              		.loc 1 2655 17 discriminator 2
 4297 0034 7B68     		ldr	r3, [r7, #4]
 4298 0036 2022     		movs	r2, #32
 4299 0038 5A67     		str	r2, [r3, #116]
2656:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2657:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 4300              		.loc 1 2657 11 discriminator 2
 4301 003a 7868     		ldr	r0, [r7, #4]
 4302 003c FFF7FEFF 		bl	UART_CheckIdleState
 4303 0040 0346     		mov	r3, r0
 4304              	.L202:
2658:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4305              		.loc 1 2658 1
 4306 0042 1846     		mov	r0, r3
 4307 0044 0837     		adds	r7, r7, #8
 4308              	.LCFI172:
 4309              		.cfi_def_cfa_offset 8
 4310 0046 BD46     		mov	sp, r7
 4311              	.LCFI173:
 4312              		.cfi_def_cfa_register 13
 4313              		@ sp needed
 4314 0048 80BD     		pop	{r7, pc}
 4315              		.cfi_endproc
 4316              	.LFE344:
 4318              		.section	.text.HAL_MultiProcessor_DisableMuteMode,"ax",%progbits
 4319              		.align	1
 4320              		.global	HAL_MultiProcessor_DisableMuteMode
 4321              		.syntax unified
 4322              		.thumb
 4323              		.thumb_func
 4324              		.fpu fpv4-sp-d16
 4326              	HAL_MultiProcessor_DisableMuteMode:
 4327              	.LFB345:
2659:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2660:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2661:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Disable UART mute mode (does not mean the UART actually exits mute mode
2662:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         as it may not have been in mute mode at this very moment).
2663:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2664:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2665:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2666:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_DisableMuteMode(UART_HandleTypeDef *huart)
2667:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4328              		.loc 1 2667 1
 4329              		.cfi_startproc
 4330              		@ args = 0, pretend = 0, frame = 8
 4331              		@ frame_needed = 1, uses_anonymous_args = 0
 4332 0000 80B5     		push	{r7, lr}
 4333              	.LCFI174:
 4334              		.cfi_def_cfa_offset 8
 4335              		.cfi_offset 7, -8
 4336              		.cfi_offset 14, -4
 4337 0002 82B0     		sub	sp, sp, #8
 4338              	.LCFI175:
 4339              		.cfi_def_cfa_offset 16
ARM GAS  /tmp/ccXuXBwl.s 			page 123


 4340 0004 00AF     		add	r7, sp, #0
 4341              	.LCFI176:
 4342              		.cfi_def_cfa_register 7
 4343 0006 7860     		str	r0, [r7, #4]
2668:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4344              		.loc 1 2668 3
 4345 0008 7B68     		ldr	r3, [r7, #4]
 4346 000a 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 4347 000e 012B     		cmp	r3, #1
 4348 0010 01D1     		bne	.L204
 4349              		.loc 1 2668 3 is_stmt 0 discriminator 1
 4350 0012 0223     		movs	r3, #2
 4351 0014 15E0     		b	.L205
 4352              	.L204:
 4353              		.loc 1 2668 3 discriminator 2
 4354 0016 7B68     		ldr	r3, [r7, #4]
 4355 0018 0122     		movs	r2, #1
 4356 001a 83F87020 		strb	r2, [r3, #112]
2669:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2670:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4357              		.loc 1 2670 17 is_stmt 1 discriminator 2
 4358 001e 7B68     		ldr	r3, [r7, #4]
 4359 0020 2422     		movs	r2, #36
 4360 0022 5A67     		str	r2, [r3, #116]
2671:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2672:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable USART mute mode by clearing the MME bit in the CR1 register */
2673:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_MME);
 4361              		.loc 1 2673 3 discriminator 2
 4362 0024 7B68     		ldr	r3, [r7, #4]
 4363 0026 1B68     		ldr	r3, [r3]
 4364 0028 1A68     		ldr	r2, [r3]
 4365 002a 7B68     		ldr	r3, [r7, #4]
 4366 002c 1B68     		ldr	r3, [r3]
 4367 002e 22F40052 		bic	r2, r2, #8192
 4368 0032 1A60     		str	r2, [r3]
2674:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2675:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4369              		.loc 1 2675 17 discriminator 2
 4370 0034 7B68     		ldr	r3, [r7, #4]
 4371 0036 2022     		movs	r2, #32
 4372 0038 5A67     		str	r2, [r3, #116]
2676:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2677:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (UART_CheckIdleState(huart));
 4373              		.loc 1 2677 11 discriminator 2
 4374 003a 7868     		ldr	r0, [r7, #4]
 4375 003c FFF7FEFF 		bl	UART_CheckIdleState
 4376 0040 0346     		mov	r3, r0
 4377              	.L205:
2678:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4378              		.loc 1 2678 1
 4379 0042 1846     		mov	r0, r3
 4380 0044 0837     		adds	r7, r7, #8
 4381              	.LCFI177:
 4382              		.cfi_def_cfa_offset 8
 4383 0046 BD46     		mov	sp, r7
 4384              	.LCFI178:
 4385              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccXuXBwl.s 			page 124


 4386              		@ sp needed
 4387 0048 80BD     		pop	{r7, pc}
 4388              		.cfi_endproc
 4389              	.LFE345:
 4391              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 4392              		.align	1
 4393              		.global	HAL_MultiProcessor_EnterMuteMode
 4394              		.syntax unified
 4395              		.thumb
 4396              		.thumb_func
 4397              		.fpu fpv4-sp-d16
 4399              	HAL_MultiProcessor_EnterMuteMode:
 4400              	.LFB346:
2679:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2680:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2681:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Enter UART mute mode (means UART actually enters mute mode).
2682:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note  To exit from mute mode, HAL_MultiProcessor_DisableMuteMode() API must be called.
2683:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2684:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
2685:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2686:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2687:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4401              		.loc 1 2687 1
 4402              		.cfi_startproc
 4403              		@ args = 0, pretend = 0, frame = 8
 4404              		@ frame_needed = 1, uses_anonymous_args = 0
 4405              		@ link register save eliminated.
 4406 0000 80B4     		push	{r7}
 4407              	.LCFI179:
 4408              		.cfi_def_cfa_offset 4
 4409              		.cfi_offset 7, -4
 4410 0002 83B0     		sub	sp, sp, #12
 4411              	.LCFI180:
 4412              		.cfi_def_cfa_offset 16
 4413 0004 00AF     		add	r7, sp, #0
 4414              	.LCFI181:
 4415              		.cfi_def_cfa_register 7
 4416 0006 7860     		str	r0, [r7, #4]
2688:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_MUTE_MODE_REQUEST);
 4417              		.loc 1 2688 3
 4418 0008 7B68     		ldr	r3, [r7, #4]
 4419 000a 1B68     		ldr	r3, [r3]
 4420 000c 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 4421 000e 9AB2     		uxth	r2, r3
 4422 0010 7B68     		ldr	r3, [r7, #4]
 4423 0012 1B68     		ldr	r3, [r3]
 4424 0014 42F00402 		orr	r2, r2, #4
 4425 0018 92B2     		uxth	r2, r2
 4426 001a 1A83     		strh	r2, [r3, #24]	@ movhi
2689:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4427              		.loc 1 2689 1
 4428 001c 00BF     		nop
 4429 001e 0C37     		adds	r7, r7, #12
 4430              	.LCFI182:
 4431              		.cfi_def_cfa_offset 4
 4432 0020 BD46     		mov	sp, r7
 4433              	.LCFI183:
ARM GAS  /tmp/ccXuXBwl.s 			page 125


 4434              		.cfi_def_cfa_register 13
 4435              		@ sp needed
 4436 0022 5DF8047B 		ldr	r7, [sp], #4
 4437              	.LCFI184:
 4438              		.cfi_restore 7
 4439              		.cfi_def_cfa_offset 0
 4440 0026 7047     		bx	lr
 4441              		.cfi_endproc
 4442              	.LFE346:
 4444              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 4445              		.align	1
 4446              		.global	HAL_HalfDuplex_EnableTransmitter
 4447              		.syntax unified
 4448              		.thumb
 4449              		.thumb_func
 4450              		.fpu fpv4-sp-d16
 4452              	HAL_HalfDuplex_EnableTransmitter:
 4453              	.LFB347:
2690:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2691:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2692:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable the UART transmitter and disable the UART receiver.
2693:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2694:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2695:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2696:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2697:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4454              		.loc 1 2697 1
 4455              		.cfi_startproc
 4456              		@ args = 0, pretend = 0, frame = 8
 4457              		@ frame_needed = 1, uses_anonymous_args = 0
 4458              		@ link register save eliminated.
 4459 0000 80B4     		push	{r7}
 4460              	.LCFI185:
 4461              		.cfi_def_cfa_offset 4
 4462              		.cfi_offset 7, -4
 4463 0002 83B0     		sub	sp, sp, #12
 4464              	.LCFI186:
 4465              		.cfi_def_cfa_offset 16
 4466 0004 00AF     		add	r7, sp, #0
 4467              	.LCFI187:
 4468              		.cfi_def_cfa_register 7
 4469 0006 7860     		str	r0, [r7, #4]
2698:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4470              		.loc 1 2698 3
 4471 0008 7B68     		ldr	r3, [r7, #4]
 4472 000a 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 4473 000e 012B     		cmp	r3, #1
 4474 0010 01D1     		bne	.L208
 4475              		.loc 1 2698 3 is_stmt 0 discriminator 1
 4476 0012 0223     		movs	r3, #2
 4477 0014 1EE0     		b	.L209
 4478              	.L208:
 4479              		.loc 1 2698 3 discriminator 2
 4480 0016 7B68     		ldr	r3, [r7, #4]
 4481 0018 0122     		movs	r2, #1
 4482 001a 83F87020 		strb	r2, [r3, #112]
2699:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
ARM GAS  /tmp/ccXuXBwl.s 			page 126


 4483              		.loc 1 2699 17 is_stmt 1 discriminator 2
 4484 001e 7B68     		ldr	r3, [r7, #4]
 4485 0020 2422     		movs	r2, #36
 4486 0022 5A67     		str	r2, [r3, #116]
2700:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2701:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear TE and RE bits */
2702:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 4487              		.loc 1 2702 3 discriminator 2
 4488 0024 7B68     		ldr	r3, [r7, #4]
 4489 0026 1B68     		ldr	r3, [r3]
 4490 0028 1A68     		ldr	r2, [r3]
 4491 002a 7B68     		ldr	r3, [r7, #4]
 4492 002c 1B68     		ldr	r3, [r3]
 4493 002e 22F00C02 		bic	r2, r2, #12
 4494 0032 1A60     		str	r2, [r3]
2703:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2704:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2705:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_TE);
 4495              		.loc 1 2705 3 discriminator 2
 4496 0034 7B68     		ldr	r3, [r7, #4]
 4497 0036 1B68     		ldr	r3, [r3]
 4498 0038 1A68     		ldr	r2, [r3]
 4499 003a 7B68     		ldr	r3, [r7, #4]
 4500 003c 1B68     		ldr	r3, [r3]
 4501 003e 42F00802 		orr	r2, r2, #8
 4502 0042 1A60     		str	r2, [r3]
2706:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2707:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4503              		.loc 1 2707 17 discriminator 2
 4504 0044 7B68     		ldr	r3, [r7, #4]
 4505 0046 2022     		movs	r2, #32
 4506 0048 5A67     		str	r2, [r3, #116]
2708:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2709:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4507              		.loc 1 2709 3 discriminator 2
 4508 004a 7B68     		ldr	r3, [r7, #4]
 4509 004c 0022     		movs	r2, #0
 4510 004e 83F87020 		strb	r2, [r3, #112]
2710:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2711:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 4511              		.loc 1 2711 10 discriminator 2
 4512 0052 0023     		movs	r3, #0
 4513              	.L209:
2712:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4514              		.loc 1 2712 1
 4515 0054 1846     		mov	r0, r3
 4516 0056 0C37     		adds	r7, r7, #12
 4517              	.LCFI188:
 4518              		.cfi_def_cfa_offset 4
 4519 0058 BD46     		mov	sp, r7
 4520              	.LCFI189:
 4521              		.cfi_def_cfa_register 13
 4522              		@ sp needed
 4523 005a 5DF8047B 		ldr	r7, [sp], #4
 4524              	.LCFI190:
 4525              		.cfi_restore 7
 4526              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccXuXBwl.s 			page 127


 4527 005e 7047     		bx	lr
 4528              		.cfi_endproc
 4529              	.LFE347:
 4531              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 4532              		.align	1
 4533              		.global	HAL_HalfDuplex_EnableReceiver
 4534              		.syntax unified
 4535              		.thumb
 4536              		.thumb_func
 4537              		.fpu fpv4-sp-d16
 4539              	HAL_HalfDuplex_EnableReceiver:
 4540              	.LFB348:
2713:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2714:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2715:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Enable the UART receiver and disable the UART transmitter.
2716:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2717:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status.
2718:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2719:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2720:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4541              		.loc 1 2720 1
 4542              		.cfi_startproc
 4543              		@ args = 0, pretend = 0, frame = 8
 4544              		@ frame_needed = 1, uses_anonymous_args = 0
 4545              		@ link register save eliminated.
 4546 0000 80B4     		push	{r7}
 4547              	.LCFI191:
 4548              		.cfi_def_cfa_offset 4
 4549              		.cfi_offset 7, -4
 4550 0002 83B0     		sub	sp, sp, #12
 4551              	.LCFI192:
 4552              		.cfi_def_cfa_offset 16
 4553 0004 00AF     		add	r7, sp, #0
 4554              	.LCFI193:
 4555              		.cfi_def_cfa_register 7
 4556 0006 7860     		str	r0, [r7, #4]
2721:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4557              		.loc 1 2721 3
 4558 0008 7B68     		ldr	r3, [r7, #4]
 4559 000a 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 4560 000e 012B     		cmp	r3, #1
 4561 0010 01D1     		bne	.L211
 4562              		.loc 1 2721 3 is_stmt 0 discriminator 1
 4563 0012 0223     		movs	r3, #2
 4564 0014 1EE0     		b	.L212
 4565              	.L211:
 4566              		.loc 1 2721 3 discriminator 2
 4567 0016 7B68     		ldr	r3, [r7, #4]
 4568 0018 0122     		movs	r2, #1
 4569 001a 83F87020 		strb	r2, [r3, #112]
2722:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4570              		.loc 1 2722 17 is_stmt 1 discriminator 2
 4571 001e 7B68     		ldr	r3, [r7, #4]
 4572 0020 2422     		movs	r2, #36
 4573 0022 5A67     		str	r2, [r3, #116]
2723:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2724:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear TE and RE bits */
ARM GAS  /tmp/ccXuXBwl.s 			page 128


2725:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TE | USART_CR1_RE));
 4574              		.loc 1 2725 3 discriminator 2
 4575 0024 7B68     		ldr	r3, [r7, #4]
 4576 0026 1B68     		ldr	r3, [r3]
 4577 0028 1A68     		ldr	r2, [r3]
 4578 002a 7B68     		ldr	r3, [r7, #4]
 4579 002c 1B68     		ldr	r3, [r3]
 4580 002e 22F00C02 		bic	r2, r2, #12
 4581 0032 1A60     		str	r2, [r3]
2726:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2727:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2728:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, USART_CR1_RE);
 4582              		.loc 1 2728 3 discriminator 2
 4583 0034 7B68     		ldr	r3, [r7, #4]
 4584 0036 1B68     		ldr	r3, [r3]
 4585 0038 1A68     		ldr	r2, [r3]
 4586 003a 7B68     		ldr	r3, [r7, #4]
 4587 003c 1B68     		ldr	r3, [r3]
 4588 003e 42F00402 		orr	r2, r2, #4
 4589 0042 1A60     		str	r2, [r3]
2729:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2730:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4590              		.loc 1 2730 17 discriminator 2
 4591 0044 7B68     		ldr	r3, [r7, #4]
 4592 0046 2022     		movs	r2, #32
 4593 0048 5A67     		str	r2, [r3, #116]
2731:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2732:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4594              		.loc 1 2732 3 discriminator 2
 4595 004a 7B68     		ldr	r3, [r7, #4]
 4596 004c 0022     		movs	r2, #0
 4597 004e 83F87020 		strb	r2, [r3, #112]
2733:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2734:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 4598              		.loc 1 2734 10 discriminator 2
 4599 0052 0023     		movs	r3, #0
 4600              	.L212:
2735:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4601              		.loc 1 2735 1
 4602 0054 1846     		mov	r0, r3
 4603 0056 0C37     		adds	r7, r7, #12
 4604              	.LCFI194:
 4605              		.cfi_def_cfa_offset 4
 4606 0058 BD46     		mov	sp, r7
 4607              	.LCFI195:
 4608              		.cfi_def_cfa_register 13
 4609              		@ sp needed
 4610 005a 5DF8047B 		ldr	r7, [sp], #4
 4611              	.LCFI196:
 4612              		.cfi_restore 7
 4613              		.cfi_def_cfa_offset 0
 4614 005e 7047     		bx	lr
 4615              		.cfi_endproc
 4616              	.LFE348:
 4618              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 4619              		.align	1
 4620              		.global	HAL_LIN_SendBreak
ARM GAS  /tmp/ccXuXBwl.s 			page 129


 4621              		.syntax unified
 4622              		.thumb
 4623              		.thumb_func
 4624              		.fpu fpv4-sp-d16
 4626              	HAL_LIN_SendBreak:
 4627              	.LFB349:
2736:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2737:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2738:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2739:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Transmit break characters.
2740:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2741:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2742:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2743:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2744:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4628              		.loc 1 2744 1
 4629              		.cfi_startproc
 4630              		@ args = 0, pretend = 0, frame = 8
 4631              		@ frame_needed = 1, uses_anonymous_args = 0
 4632              		@ link register save eliminated.
 4633 0000 80B4     		push	{r7}
 4634              	.LCFI197:
 4635              		.cfi_def_cfa_offset 4
 4636              		.cfi_offset 7, -4
 4637 0002 83B0     		sub	sp, sp, #12
 4638              	.LCFI198:
 4639              		.cfi_def_cfa_offset 16
 4640 0004 00AF     		add	r7, sp, #0
 4641              	.LCFI199:
 4642              		.cfi_def_cfa_register 7
 4643 0006 7860     		str	r0, [r7, #4]
2745:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
2746:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
2747:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2748:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_LOCK(huart);
 4644              		.loc 1 2748 3
 4645 0008 7B68     		ldr	r3, [r7, #4]
 4646 000a 93F87030 		ldrb	r3, [r3, #112]	@ zero_extendqisi2
 4647 000e 012B     		cmp	r3, #1
 4648 0010 01D1     		bne	.L214
 4649              		.loc 1 2748 3 is_stmt 0 discriminator 1
 4650 0012 0223     		movs	r3, #2
 4651 0014 18E0     		b	.L215
 4652              	.L214:
 4653              		.loc 1 2748 3 discriminator 2
 4654 0016 7B68     		ldr	r3, [r7, #4]
 4655 0018 0122     		movs	r2, #1
 4656 001a 83F87020 		strb	r2, [r3, #112]
2749:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2750:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 4657              		.loc 1 2750 17 is_stmt 1 discriminator 2
 4658 001e 7B68     		ldr	r3, [r7, #4]
 4659 0020 2422     		movs	r2, #36
 4660 0022 5A67     		str	r2, [r3, #116]
2751:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2752:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Send break characters */
2753:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_SENDBREAK_REQUEST);
ARM GAS  /tmp/ccXuXBwl.s 			page 130


 4661              		.loc 1 2753 3 discriminator 2
 4662 0024 7B68     		ldr	r3, [r7, #4]
 4663 0026 1B68     		ldr	r3, [r3]
 4664 0028 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 4665 002a 9AB2     		uxth	r2, r3
 4666 002c 7B68     		ldr	r3, [r7, #4]
 4667 002e 1B68     		ldr	r3, [r3]
 4668 0030 42F00202 		orr	r2, r2, #2
 4669 0034 92B2     		uxth	r2, r2
 4670 0036 1A83     		strh	r2, [r3, #24]	@ movhi
2754:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2755:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 4671              		.loc 1 2755 17 discriminator 2
 4672 0038 7B68     		ldr	r3, [r7, #4]
 4673 003a 2022     		movs	r2, #32
 4674 003c 5A67     		str	r2, [r3, #116]
2756:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2757:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 4675              		.loc 1 2757 3 discriminator 2
 4676 003e 7B68     		ldr	r3, [r7, #4]
 4677 0040 0022     		movs	r2, #0
 4678 0042 83F87020 		strb	r2, [r3, #112]
2758:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2759:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 4679              		.loc 1 2759 10 discriminator 2
 4680 0046 0023     		movs	r3, #0
 4681              	.L215:
2760:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4682              		.loc 1 2760 1
 4683 0048 1846     		mov	r0, r3
 4684 004a 0C37     		adds	r7, r7, #12
 4685              	.LCFI200:
 4686              		.cfi_def_cfa_offset 4
 4687 004c BD46     		mov	sp, r7
 4688              	.LCFI201:
 4689              		.cfi_def_cfa_register 13
 4690              		@ sp needed
 4691 004e 5DF8047B 		ldr	r7, [sp], #4
 4692              	.LCFI202:
 4693              		.cfi_restore 7
 4694              		.cfi_def_cfa_offset 0
 4695 0052 7047     		bx	lr
 4696              		.cfi_endproc
 4697              	.LFE349:
 4699              		.section	.text.HAL_UART_GetState,"ax",%progbits
 4700              		.align	1
 4701              		.global	HAL_UART_GetState
 4702              		.syntax unified
 4703              		.thumb
 4704              		.thumb_func
 4705              		.fpu fpv4-sp-d16
 4707              	HAL_UART_GetState:
 4708              	.LFB350:
2761:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2762:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2763:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
2764:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
ARM GAS  /tmp/ccXuXBwl.s 			page 131


2765:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2766:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Error functions
2767:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  @brief   UART Peripheral State functions
2768:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *
2769:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @verbatim
2770:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ==============================================================================
2771:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ##### Peripheral State and Error functions #####
2772:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   ==============================================================================
2773:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     [..]
2774:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     This subsection provides functions allowing to :
2775:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) Return the UART handle state.
2776:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (+) Return the UART handle error code
2777:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2778:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** @endverbatim
2779:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
2780:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2781:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2782:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2783:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Return the UART handle state.
2784:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2785:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *               the configuration information for the specified UART.
2786:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL state
2787:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2788:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2789:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4709              		.loc 1 2789 1
 4710              		.cfi_startproc
 4711              		@ args = 0, pretend = 0, frame = 16
 4712              		@ frame_needed = 1, uses_anonymous_args = 0
 4713              		@ link register save eliminated.
 4714 0000 80B4     		push	{r7}
 4715              	.LCFI203:
 4716              		.cfi_def_cfa_offset 4
 4717              		.cfi_offset 7, -4
 4718 0002 85B0     		sub	sp, sp, #20
 4719              	.LCFI204:
 4720              		.cfi_def_cfa_offset 24
 4721 0004 00AF     		add	r7, sp, #0
 4722              	.LCFI205:
 4723              		.cfi_def_cfa_register 7
 4724 0006 7860     		str	r0, [r7, #4]
2790:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t temp1;
2791:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t temp2;
2792:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   temp1 = huart->gState;
 4725              		.loc 1 2792 9
 4726 0008 7B68     		ldr	r3, [r7, #4]
 4727 000a 5B6F     		ldr	r3, [r3, #116]
 4728 000c FB60     		str	r3, [r7, #12]
2793:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   temp2 = huart->RxState;
 4729              		.loc 1 2793 9
 4730 000e 7B68     		ldr	r3, [r7, #4]
 4731 0010 9B6F     		ldr	r3, [r3, #120]
 4732 0012 BB60     		str	r3, [r7, #8]
2794:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2795:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 4733              		.loc 1 2795 10
 4734 0014 FA68     		ldr	r2, [r7, #12]
ARM GAS  /tmp/ccXuXBwl.s 			page 132


 4735 0016 BB68     		ldr	r3, [r7, #8]
 4736 0018 1343     		orrs	r3, r3, r2
2796:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4737              		.loc 1 2796 1
 4738 001a 1846     		mov	r0, r3
 4739 001c 1437     		adds	r7, r7, #20
 4740              	.LCFI206:
 4741              		.cfi_def_cfa_offset 4
 4742 001e BD46     		mov	sp, r7
 4743              	.LCFI207:
 4744              		.cfi_def_cfa_register 13
 4745              		@ sp needed
 4746 0020 5DF8047B 		ldr	r7, [sp], #4
 4747              	.LCFI208:
 4748              		.cfi_restore 7
 4749              		.cfi_def_cfa_offset 0
 4750 0024 7047     		bx	lr
 4751              		.cfi_endproc
 4752              	.LFE350:
 4754              		.section	.text.HAL_UART_GetError,"ax",%progbits
 4755              		.align	1
 4756              		.global	HAL_UART_GetError
 4757              		.syntax unified
 4758              		.thumb
 4759              		.thumb_func
 4760              		.fpu fpv4-sp-d16
 4762              	HAL_UART_GetError:
 4763              	.LFB351:
2797:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2798:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2799:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Return the UART handle error code.
2800:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2801:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *               the configuration information for the specified UART.
2802:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval UART Error Code
2803:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2804:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2805:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4764              		.loc 1 2805 1
 4765              		.cfi_startproc
 4766              		@ args = 0, pretend = 0, frame = 8
 4767              		@ frame_needed = 1, uses_anonymous_args = 0
 4768              		@ link register save eliminated.
 4769 0000 80B4     		push	{r7}
 4770              	.LCFI209:
 4771              		.cfi_def_cfa_offset 4
 4772              		.cfi_offset 7, -4
 4773 0002 83B0     		sub	sp, sp, #12
 4774              	.LCFI210:
 4775              		.cfi_def_cfa_offset 16
 4776 0004 00AF     		add	r7, sp, #0
 4777              	.LCFI211:
 4778              		.cfi_def_cfa_register 7
 4779 0006 7860     		str	r0, [r7, #4]
2806:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return huart->ErrorCode;
 4780              		.loc 1 2806 15
 4781 0008 7B68     		ldr	r3, [r7, #4]
 4782 000a DB6F     		ldr	r3, [r3, #124]
ARM GAS  /tmp/ccXuXBwl.s 			page 133


2807:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 4783              		.loc 1 2807 1
 4784 000c 1846     		mov	r0, r3
 4785 000e 0C37     		adds	r7, r7, #12
 4786              	.LCFI212:
 4787              		.cfi_def_cfa_offset 4
 4788 0010 BD46     		mov	sp, r7
 4789              	.LCFI213:
 4790              		.cfi_def_cfa_register 13
 4791              		@ sp needed
 4792 0012 5DF8047B 		ldr	r7, [sp], #4
 4793              	.LCFI214:
 4794              		.cfi_restore 7
 4795              		.cfi_def_cfa_offset 0
 4796 0016 7047     		bx	lr
 4797              		.cfi_endproc
 4798              	.LFE351:
 4800              		.global	__aeabi_uldivmod
 4801              		.section	.text.UART_SetConfig,"ax",%progbits
 4802              		.align	1
 4803              		.global	UART_SetConfig
 4804              		.syntax unified
 4805              		.thumb
 4806              		.thumb_func
 4807              		.fpu fpv4-sp-d16
 4809              	UART_SetConfig:
 4810              	.LFB352:
2808:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2809:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
2810:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2811:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2812:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2813:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @}
2814:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2815:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2816:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2817:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @{
2818:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2819:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2820:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2821:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2822:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
2823:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval none
2824:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2825:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2826:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2827:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
2828:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Init the UART Callback settings */
2829:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2830:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2831:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2832:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2833:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2834:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2835:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2836:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2837:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->WakeupCallback            = HAL_UARTEx_WakeupCallback;          /* Legacy weak WakeupCallb
ARM GAS  /tmp/ccXuXBwl.s 			page 134


2838:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2839:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxFifoFullCallback        = HAL_UARTEx_RxFifoFullCallback;      /* Legacy weak RxFifoFullC
2840:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxFifoEmptyCallback       = HAL_UARTEx_TxFifoEmptyCallback;     /* Legacy weak TxFifoEmpty
2841:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2842:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2843:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
2844:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2845:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2846:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
2847:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Configure the UART peripheral.
2848:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
2849:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
2850:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
2851:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
2852:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 4811              		.loc 1 2852 1
 4812              		.cfi_startproc
 4813              		@ args = 0, pretend = 0, frame = 120
 4814              		@ frame_needed = 1, uses_anonymous_args = 0
 4815 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 4816              	.LCFI215:
 4817              		.cfi_def_cfa_offset 32
 4818              		.cfi_offset 4, -32
 4819              		.cfi_offset 5, -28
 4820              		.cfi_offset 7, -24
 4821              		.cfi_offset 8, -20
 4822              		.cfi_offset 9, -16
 4823              		.cfi_offset 10, -12
 4824              		.cfi_offset 11, -8
 4825              		.cfi_offset 14, -4
 4826 0004 9EB0     		sub	sp, sp, #120
 4827              	.LCFI216:
 4828              		.cfi_def_cfa_offset 152
 4829 0006 00AF     		add	r7, sp, #0
 4830              	.LCFI217:
 4831              		.cfi_def_cfa_register 7
 4832 0008 F865     		str	r0, [r7, #92]
2853:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tmpreg;
2854:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t brrtemp;
2855:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_ClockSourceTypeDef clocksource;
2856:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t usartdiv                   = 0x00000000U;
 4833              		.loc 1 2856 12
 4834 000a 0023     		movs	r3, #0
 4835 000c FB66     		str	r3, [r7, #108]
2857:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_StatusTypeDef ret               = HAL_OK;
 4836              		.loc 1 2857 21
 4837 000e 0023     		movs	r3, #0
 4838 0010 87F86B30 		strb	r3, [r7, #107]
2858:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 4839              		.loc 1 2858 12
 4840 0014 0023     		movs	r3, #0
 4841 0016 7B66     		str	r3, [r7, #100]
2859:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2860:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check the parameters */
2861:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
2862:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
2863:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
ARM GAS  /tmp/ccXuXBwl.s 			page 135


2864:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2865:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_LPUART_STOPBITS(huart->Init.StopBits));
2866:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2867:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
2868:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2869:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
2870:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ONE_BIT_SAMPLE(huart->Init.OneBitSampling));
2871:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2872:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2873:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
2874:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
2875:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
2876:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
2877:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2878:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_PRESCALER(huart->Init.ClockPrescaler));
2879:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
2880:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2881:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2882:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear M, PCE, PS, TE, RE and OVER8 bits and configure
2883:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  the UART Word Length, Parity, Mode and oversampling:
2884:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set the M bits according to huart->Init.WordLength value
2885:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set PCE and PS bits according to huart->Init.Parity value
2886:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set TE and RE bits according to huart->Init.Mode value
2887:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *  set OVER8 bit according to huart->Init.OverSampling value */
2888:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 4842              		.loc 1 2888 33
 4843 0018 FB6D     		ldr	r3, [r7, #92]
 4844 001a 9A68     		ldr	r2, [r3, #8]
 4845              		.loc 1 2888 58
 4846 001c FB6D     		ldr	r3, [r7, #92]
 4847 001e 1B69     		ldr	r3, [r3, #16]
 4848              		.loc 1 2888 45
 4849 0020 1A43     		orrs	r2, r2, r3
 4850              		.loc 1 2888 79
 4851 0022 FB6D     		ldr	r3, [r7, #92]
 4852 0024 5B69     		ldr	r3, [r3, #20]
 4853              		.loc 1 2888 66
 4854 0026 1A43     		orrs	r2, r2, r3
 4855              		.loc 1 2888 98
 4856 0028 FB6D     		ldr	r3, [r7, #92]
 4857 002a DB69     		ldr	r3, [r3, #28]
 4858              		.loc 1 2888 10
 4859 002c 1343     		orrs	r3, r3, r2
 4860 002e 7B67     		str	r3, [r7, #116]
2889:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
2890:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tmpreg |= (uint32_t)huart->FifoMode;
2891:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
2892:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 4861              		.loc 1 2892 3
 4862 0030 FB6D     		ldr	r3, [r7, #92]
 4863 0032 1B68     		ldr	r3, [r3]
 4864 0034 1B68     		ldr	r3, [r3]
 4865 0036 A449     		ldr	r1, .L308
 4866 0038 1940     		ands	r1, r1, r3
 4867 003a FB6D     		ldr	r3, [r7, #92]
 4868 003c 1A68     		ldr	r2, [r3]
 4869 003e 7B6F     		ldr	r3, [r7, #116]
ARM GAS  /tmp/ccXuXBwl.s 			page 136


 4870 0040 0B43     		orrs	r3, r3, r1
 4871 0042 1360     		str	r3, [r2]
2893:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2894:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
2895:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits according
2896:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * to huart->Init.StopBits value */
2897:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 4872              		.loc 1 2897 3
 4873 0044 FB6D     		ldr	r3, [r7, #92]
 4874 0046 1B68     		ldr	r3, [r3]
 4875 0048 5B68     		ldr	r3, [r3, #4]
 4876 004a 23F44050 		bic	r0, r3, #12288
 4877 004e FB6D     		ldr	r3, [r7, #92]
 4878 0050 D968     		ldr	r1, [r3, #12]
 4879 0052 FB6D     		ldr	r3, [r7, #92]
 4880 0054 1A68     		ldr	r2, [r3]
 4881 0056 40EA0103 		orr	r3, r0, r1
 4882 005a 5360     		str	r3, [r2, #4]
2898:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2899:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
2900:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Configure
2901:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * - UART HardWare Flow Control: set CTSE and RTSE bits according
2902:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *   to huart->Init.HwFlowCtl value
2903:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * - one-bit sampling method versus three samples' majority rule according
2904:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *   to huart->Init.OneBitSampling (not applicable to LPUART) */
2905:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 4883              		.loc 1 2905 10
 4884 005c FB6D     		ldr	r3, [r7, #92]
 4885 005e 9B69     		ldr	r3, [r3, #24]
 4886 0060 7B67     		str	r3, [r7, #116]
2906:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2907:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (!(UART_INSTANCE_LOWPOWER(huart)))
 4887              		.loc 1 2907 9
 4888 0062 FB6D     		ldr	r3, [r7, #92]
 4889 0064 1A68     		ldr	r2, [r3]
 4890              		.loc 1 2907 6
 4891 0066 994B     		ldr	r3, .L308+4
 4892 0068 9A42     		cmp	r2, r3
 4893 006a 04D0     		beq	.L221
2908:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2909:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tmpreg |= huart->Init.OneBitSampling;
 4894              		.loc 1 2909 26
 4895 006c FB6D     		ldr	r3, [r7, #92]
 4896 006e 1A6A     		ldr	r2, [r3, #32]
 4897              		.loc 1 2909 12
 4898 0070 7B6F     		ldr	r3, [r7, #116]
 4899 0072 1343     		orrs	r3, r3, r2
 4900 0074 7B67     		str	r3, [r7, #116]
 4901              	.L221:
2910:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
2911:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 4902              		.loc 1 2911 3
 4903 0076 FB6D     		ldr	r3, [r7, #92]
 4904 0078 1B68     		ldr	r3, [r3]
 4905 007a 9B68     		ldr	r3, [r3, #8]
 4906 007c 23F43061 		bic	r1, r3, #2816
 4907 0080 FB6D     		ldr	r3, [r7, #92]
ARM GAS  /tmp/ccXuXBwl.s 			page 137


 4908 0082 1A68     		ldr	r2, [r3]
 4909 0084 7B6F     		ldr	r3, [r7, #116]
 4910 0086 0B43     		orrs	r3, r3, r1
 4911 0088 9360     		str	r3, [r2, #8]
2912:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2913:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2914:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART PRESC Configuration -----------------------*/
2915:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Configure
2916:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * - UART Clock Prescaler : set PRESCALER according to huart->Init.ClockPrescaler value */
2917:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->PRESC, USART_PRESC_PRESCALER, huart->Init.ClockPrescaler);
2918:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
2919:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2920:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration -----------------------*/
2921:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_GETCLOCKSOURCE(huart, clocksource);
 4912              		.loc 1 2921 3
 4913 008a FB6D     		ldr	r3, [r7, #92]
 4914 008c 1A68     		ldr	r2, [r3]
 4915 008e 904B     		ldr	r3, .L308+8
 4916 0090 9A42     		cmp	r2, r3
 4917 0092 25D1     		bne	.L222
 4918              		.loc 1 2921 3 is_stmt 0 discriminator 1
 4919 0094 8F4B     		ldr	r3, .L308+12
 4920 0096 D3F88830 		ldr	r3, [r3, #136]
 4921 009a 03F00303 		and	r3, r3, #3
 4922 009e 032B     		cmp	r3, #3
 4923 00a0 1AD8     		bhi	.L223
 4924 00a2 01A2     		adr	r2, .L225
 4925 00a4 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4926              		.p2align 2
 4927              	.L225:
 4928 00a8 B9000000 		.word	.L228+1
 4929 00ac C9000000 		.word	.L227+1
 4930 00b0 C1000000 		.word	.L226+1
 4931 00b4 D1000000 		.word	.L224+1
 4932              		.p2align 1
 4933              	.L228:
 4934              		.loc 1 2921 3 discriminator 4
 4935 00b8 0123     		movs	r3, #1
 4936 00ba 87F87330 		strb	r3, [r7, #115]
 4937 00be 16E1     		b	.L230
 4938              	.L226:
 4939              		.loc 1 2921 3 discriminator 6
 4940 00c0 0223     		movs	r3, #2
 4941 00c2 87F87330 		strb	r3, [r7, #115]
 4942 00c6 12E1     		b	.L230
 4943              	.L227:
 4944              		.loc 1 2921 3 discriminator 5
 4945 00c8 0423     		movs	r3, #4
 4946 00ca 87F87330 		strb	r3, [r7, #115]
 4947 00ce 0EE1     		b	.L230
 4948              	.L224:
 4949              		.loc 1 2921 3 discriminator 7
 4950 00d0 0823     		movs	r3, #8
 4951 00d2 87F87330 		strb	r3, [r7, #115]
 4952 00d6 0AE1     		b	.L230
 4953              	.L223:
 4954              		.loc 1 2921 3 discriminator 3
ARM GAS  /tmp/ccXuXBwl.s 			page 138


 4955 00d8 1023     		movs	r3, #16
 4956 00da 87F87330 		strb	r3, [r7, #115]
 4957 00de 06E1     		b	.L230
 4958              	.L222:
 4959              		.loc 1 2921 3 discriminator 2
 4960 00e0 FB6D     		ldr	r3, [r7, #92]
 4961 00e2 1A68     		ldr	r2, [r3]
 4962 00e4 7C4B     		ldr	r3, .L308+16
 4963 00e6 9A42     		cmp	r2, r3
 4964 00e8 38D1     		bne	.L231
 4965              		.loc 1 2921 3 discriminator 13
 4966 00ea 7A4B     		ldr	r3, .L308+12
 4967 00ec D3F88830 		ldr	r3, [r3, #136]
 4968 00f0 03F00C03 		and	r3, r3, #12
 4969 00f4 0C2B     		cmp	r3, #12
 4970 00f6 2DD8     		bhi	.L232
 4971 00f8 01A2     		adr	r2, .L234
 4972 00fa 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 4973 00fe 00BF     		.p2align 2
 4974              	.L234:
 4975 0100 35010000 		.word	.L237+1
 4976 0104 55010000 		.word	.L232+1
 4977 0108 55010000 		.word	.L232+1
 4978 010c 55010000 		.word	.L232+1
 4979 0110 45010000 		.word	.L236+1
 4980 0114 55010000 		.word	.L232+1
 4981 0118 55010000 		.word	.L232+1
 4982 011c 55010000 		.word	.L232+1
 4983 0120 3D010000 		.word	.L235+1
 4984 0124 55010000 		.word	.L232+1
 4985 0128 55010000 		.word	.L232+1
 4986 012c 55010000 		.word	.L232+1
 4987 0130 4D010000 		.word	.L233+1
 4988              		.p2align 1
 4989              	.L237:
 4990              		.loc 1 2921 3 discriminator 16
 4991 0134 0023     		movs	r3, #0
 4992 0136 87F87330 		strb	r3, [r7, #115]
 4993 013a D8E0     		b	.L230
 4994              	.L235:
 4995              		.loc 1 2921 3 discriminator 18
 4996 013c 0223     		movs	r3, #2
 4997 013e 87F87330 		strb	r3, [r7, #115]
 4998 0142 D4E0     		b	.L230
 4999              	.L236:
 5000              		.loc 1 2921 3 discriminator 17
 5001 0144 0423     		movs	r3, #4
 5002 0146 87F87330 		strb	r3, [r7, #115]
 5003 014a D0E0     		b	.L230
 5004              	.L233:
 5005              		.loc 1 2921 3 discriminator 19
 5006 014c 0823     		movs	r3, #8
 5007 014e 87F87330 		strb	r3, [r7, #115]
 5008 0152 CCE0     		b	.L230
 5009              	.L232:
 5010              		.loc 1 2921 3 discriminator 15
 5011 0154 1023     		movs	r3, #16
ARM GAS  /tmp/ccXuXBwl.s 			page 139


 5012 0156 87F87330 		strb	r3, [r7, #115]
 5013 015a C8E0     		b	.L230
 5014              	.L231:
 5015              		.loc 1 2921 3 discriminator 14
 5016 015c FB6D     		ldr	r3, [r7, #92]
 5017 015e 1A68     		ldr	r2, [r3]
 5018 0160 5E4B     		ldr	r3, .L308+20
 5019 0162 9A42     		cmp	r2, r3
 5020 0164 25D1     		bne	.L239
 5021              		.loc 1 2921 3 discriminator 25
 5022 0166 5B4B     		ldr	r3, .L308+12
 5023 0168 D3F88830 		ldr	r3, [r3, #136]
 5024 016c 03F03003 		and	r3, r3, #48
 5025 0170 302B     		cmp	r3, #48
 5026 0172 16D0     		beq	.L240
 5027              		.loc 1 2921 3
 5028 0174 302B     		cmp	r3, #48
 5029 0176 18D8     		bhi	.L241
 5030 0178 202B     		cmp	r3, #32
 5031 017a 0AD0     		beq	.L242
 5032 017c 202B     		cmp	r3, #32
 5033 017e 14D8     		bhi	.L241
 5034 0180 002B     		cmp	r3, #0
 5035 0182 02D0     		beq	.L243
 5036 0184 102B     		cmp	r3, #16
 5037 0186 08D0     		beq	.L244
 5038 0188 0FE0     		b	.L241
 5039              	.L243:
 5040              		.loc 1 2921 3 discriminator 28
 5041 018a 0023     		movs	r3, #0
 5042 018c 87F87330 		strb	r3, [r7, #115]
 5043 0190 ADE0     		b	.L230
 5044              	.L242:
 5045              		.loc 1 2921 3 discriminator 30
 5046 0192 0223     		movs	r3, #2
 5047 0194 87F87330 		strb	r3, [r7, #115]
 5048 0198 A9E0     		b	.L230
 5049              	.L244:
 5050              		.loc 1 2921 3 discriminator 29
 5051 019a 0423     		movs	r3, #4
 5052 019c 87F87330 		strb	r3, [r7, #115]
 5053 01a0 A5E0     		b	.L230
 5054              	.L240:
 5055              		.loc 1 2921 3 discriminator 31
 5056 01a2 0823     		movs	r3, #8
 5057 01a4 87F87330 		strb	r3, [r7, #115]
 5058 01a8 A1E0     		b	.L230
 5059              	.L241:
 5060              		.loc 1 2921 3 discriminator 27
 5061 01aa 1023     		movs	r3, #16
 5062 01ac 87F87330 		strb	r3, [r7, #115]
 5063 01b0 9DE0     		b	.L230
 5064              	.L239:
 5065              		.loc 1 2921 3 discriminator 26
 5066 01b2 FB6D     		ldr	r3, [r7, #92]
 5067 01b4 1A68     		ldr	r2, [r3]
 5068 01b6 4A4B     		ldr	r3, .L308+24
ARM GAS  /tmp/ccXuXBwl.s 			page 140


 5069 01b8 9A42     		cmp	r2, r3
 5070 01ba 25D1     		bne	.L246
 5071              		.loc 1 2921 3 discriminator 37
 5072 01bc 454B     		ldr	r3, .L308+12
 5073 01be D3F88830 		ldr	r3, [r3, #136]
 5074 01c2 03F0C003 		and	r3, r3, #192
 5075 01c6 C02B     		cmp	r3, #192
 5076 01c8 16D0     		beq	.L247
 5077              		.loc 1 2921 3
 5078 01ca C02B     		cmp	r3, #192
 5079 01cc 18D8     		bhi	.L248
 5080 01ce 802B     		cmp	r3, #128
 5081 01d0 0AD0     		beq	.L249
 5082 01d2 802B     		cmp	r3, #128
 5083 01d4 14D8     		bhi	.L248
 5084 01d6 002B     		cmp	r3, #0
 5085 01d8 02D0     		beq	.L250
 5086 01da 402B     		cmp	r3, #64
 5087 01dc 08D0     		beq	.L251
 5088 01de 0FE0     		b	.L248
 5089              	.L250:
 5090              		.loc 1 2921 3 discriminator 40
 5091 01e0 0023     		movs	r3, #0
 5092 01e2 87F87330 		strb	r3, [r7, #115]
 5093 01e6 82E0     		b	.L230
 5094              	.L249:
 5095              		.loc 1 2921 3 discriminator 42
 5096 01e8 0223     		movs	r3, #2
 5097 01ea 87F87330 		strb	r3, [r7, #115]
 5098 01ee 7EE0     		b	.L230
 5099              	.L251:
 5100              		.loc 1 2921 3 discriminator 41
 5101 01f0 0423     		movs	r3, #4
 5102 01f2 87F87330 		strb	r3, [r7, #115]
 5103 01f6 7AE0     		b	.L230
 5104              	.L247:
 5105              		.loc 1 2921 3 discriminator 43
 5106 01f8 0823     		movs	r3, #8
 5107 01fa 87F87330 		strb	r3, [r7, #115]
 5108 01fe 76E0     		b	.L230
 5109              	.L248:
 5110              		.loc 1 2921 3 discriminator 39
 5111 0200 1023     		movs	r3, #16
 5112 0202 87F87330 		strb	r3, [r7, #115]
 5113 0206 72E0     		b	.L230
 5114              	.L246:
 5115              		.loc 1 2921 3 discriminator 38
 5116 0208 FB6D     		ldr	r3, [r7, #92]
 5117 020a 1A68     		ldr	r2, [r3]
 5118 020c 354B     		ldr	r3, .L308+28
 5119 020e 9A42     		cmp	r2, r3
 5120 0210 2AD1     		bne	.L253
 5121              		.loc 1 2921 3 discriminator 49
 5122 0212 304B     		ldr	r3, .L308+12
 5123 0214 D3F88830 		ldr	r3, [r3, #136]
 5124 0218 03F44073 		and	r3, r3, #768
 5125 021c B3F5407F 		cmp	r3, #768
ARM GAS  /tmp/ccXuXBwl.s 			page 141


 5126 0220 1AD0     		beq	.L254
 5127              		.loc 1 2921 3
 5128 0222 B3F5407F 		cmp	r3, #768
 5129 0226 1BD8     		bhi	.L255
 5130 0228 B3F5007F 		cmp	r3, #512
 5131 022c 0CD0     		beq	.L256
 5132 022e B3F5007F 		cmp	r3, #512
 5133 0232 15D8     		bhi	.L255
 5134 0234 002B     		cmp	r3, #0
 5135 0236 03D0     		beq	.L257
 5136 0238 B3F5807F 		cmp	r3, #256
 5137 023c 08D0     		beq	.L258
 5138 023e 0FE0     		b	.L255
 5139              	.L257:
 5140              		.loc 1 2921 3 discriminator 52
 5141 0240 0023     		movs	r3, #0
 5142 0242 87F87330 		strb	r3, [r7, #115]
 5143 0246 52E0     		b	.L230
 5144              	.L256:
 5145              		.loc 1 2921 3 discriminator 54
 5146 0248 0223     		movs	r3, #2
 5147 024a 87F87330 		strb	r3, [r7, #115]
 5148 024e 4EE0     		b	.L230
 5149              	.L258:
 5150              		.loc 1 2921 3 discriminator 53
 5151 0250 0423     		movs	r3, #4
 5152 0252 87F87330 		strb	r3, [r7, #115]
 5153 0256 4AE0     		b	.L230
 5154              	.L254:
 5155              		.loc 1 2921 3 discriminator 55
 5156 0258 0823     		movs	r3, #8
 5157 025a 87F87330 		strb	r3, [r7, #115]
 5158 025e 46E0     		b	.L230
 5159              	.L255:
 5160              		.loc 1 2921 3 discriminator 51
 5161 0260 1023     		movs	r3, #16
 5162 0262 87F87330 		strb	r3, [r7, #115]
 5163 0266 42E0     		b	.L230
 5164              	.L253:
 5165              		.loc 1 2921 3 discriminator 50
 5166 0268 FB6D     		ldr	r3, [r7, #92]
 5167 026a 1A68     		ldr	r2, [r3]
 5168 026c 174B     		ldr	r3, .L308+4
 5169 026e 9A42     		cmp	r2, r3
 5170 0270 3AD1     		bne	.L260
 5171              		.loc 1 2921 3 discriminator 61
 5172 0272 184B     		ldr	r3, .L308+12
 5173 0274 D3F88830 		ldr	r3, [r3, #136]
 5174 0278 03F44063 		and	r3, r3, #3072
 5175 027c B3F5406F 		cmp	r3, #3072
 5176 0280 1AD0     		beq	.L261
 5177              		.loc 1 2921 3
 5178 0282 B3F5406F 		cmp	r3, #3072
 5179 0286 1BD8     		bhi	.L262
 5180 0288 B3F5006F 		cmp	r3, #2048
 5181 028c 0CD0     		beq	.L263
 5182 028e B3F5006F 		cmp	r3, #2048
ARM GAS  /tmp/ccXuXBwl.s 			page 142


 5183 0292 15D8     		bhi	.L262
 5184 0294 002B     		cmp	r3, #0
 5185 0296 03D0     		beq	.L264
 5186 0298 B3F5806F 		cmp	r3, #1024
 5187 029c 08D0     		beq	.L265
 5188 029e 0FE0     		b	.L262
 5189              	.L264:
 5190              		.loc 1 2921 3 discriminator 64
 5191 02a0 0023     		movs	r3, #0
 5192 02a2 87F87330 		strb	r3, [r7, #115]
 5193 02a6 22E0     		b	.L230
 5194              	.L263:
 5195              		.loc 1 2921 3 discriminator 66
 5196 02a8 0223     		movs	r3, #2
 5197 02aa 87F87330 		strb	r3, [r7, #115]
 5198 02ae 1EE0     		b	.L230
 5199              	.L265:
 5200              		.loc 1 2921 3 discriminator 65
 5201 02b0 0423     		movs	r3, #4
 5202 02b2 87F87330 		strb	r3, [r7, #115]
 5203 02b6 1AE0     		b	.L230
 5204              	.L261:
 5205              		.loc 1 2921 3 discriminator 67
 5206 02b8 0823     		movs	r3, #8
 5207 02ba 87F87330 		strb	r3, [r7, #115]
 5208 02be 16E0     		b	.L230
 5209              	.L262:
 5210              		.loc 1 2921 3 discriminator 63
 5211 02c0 1023     		movs	r3, #16
 5212 02c2 87F87330 		strb	r3, [r7, #115]
 5213 02c6 12E0     		b	.L230
 5214              	.L309:
 5215              		.align	2
 5216              	.L308:
 5217 02c8 F369FFEF 		.word	-268473869
 5218 02cc 00800040 		.word	1073774592
 5219 02d0 00380140 		.word	1073821696
 5220 02d4 00100240 		.word	1073876992
 5221 02d8 00440040 		.word	1073759232
 5222 02dc 00480040 		.word	1073760256
 5223 02e0 004C0040 		.word	1073761280
 5224 02e4 00500040 		.word	1073762304
 5225              	.L260:
 5226              		.loc 1 2921 3 discriminator 62
 5227 02e8 1023     		movs	r3, #16
 5228 02ea 87F87330 		strb	r3, [r7, #115]
 5229              	.L230:
2922:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2923:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check LPUART instance */
2924:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (UART_INSTANCE_LOWPOWER(huart))
 5230              		.loc 1 2924 7 is_stmt 1
 5231 02ee FB6D     		ldr	r3, [r7, #92]
 5232 02f0 1A68     		ldr	r2, [r3]
 5233              		.loc 1 2924 6
 5234 02f2 BA4B     		ldr	r3, .L310
 5235 02f4 9A42     		cmp	r2, r3
 5236 02f6 40F00A81 		bne	.L267
ARM GAS  /tmp/ccXuXBwl.s 			page 143


2925:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
2926:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Retrieve frequency clock */
2927:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
 5237              		.loc 1 2927 5
 5238 02fa 97F87330 		ldrb	r3, [r7, #115]	@ zero_extendqisi2
 5239 02fe 082B     		cmp	r3, #8
 5240 0300 23D8     		bhi	.L268
 5241 0302 01A2     		adr	r2, .L270
 5242 0304 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5243              		.p2align 2
 5244              	.L270:
 5245 0308 2D030000 		.word	.L273+1
 5246 030c 4B030000 		.word	.L268+1
 5247 0310 35030000 		.word	.L272+1
 5248 0314 4B030000 		.word	.L268+1
 5249 0318 3B030000 		.word	.L271+1
 5250 031c 4B030000 		.word	.L268+1
 5251 0320 4B030000 		.word	.L268+1
 5252 0324 4B030000 		.word	.L268+1
 5253 0328 43030000 		.word	.L269+1
 5254              		.p2align 1
 5255              	.L273:
2928:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2929:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
2930:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2931:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = (HAL_RCC_GetPCLK1Freq() / UART_GET_DIV_FACTOR(huart->Init.ClockPrescal
2932:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2933:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = HAL_RCC_GetPCLK1Freq();
 5256              		.loc 1 2933 30
 5257 032c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5258 0330 7866     		str	r0, [r7, #100]
2934:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
2935:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5259              		.loc 1 2935 9
 5260 0332 0EE0     		b	.L274
 5261              	.L272:
2936:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
2937:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2938:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = ((uint32_t)HSI_VALUE / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler)
2939:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2940:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = (uint32_t)HSI_VALUE;
 5262              		.loc 1 2940 28
 5263 0334 AA4B     		ldr	r3, .L310+4
 5264 0336 7B66     		str	r3, [r7, #100]
2941:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
2942:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5265              		.loc 1 2942 9
 5266 0338 0BE0     		b	.L274
 5267              	.L271:
2943:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
2944:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2945:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = (HAL_RCC_GetSysClockFreq() / UART_GET_DIV_FACTOR(huart->Init.ClockPres
2946:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2947:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = HAL_RCC_GetSysClockFreq();
 5268              		.loc 1 2947 30
 5269 033a FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 5270 033e 7866     		str	r0, [r7, #100]
ARM GAS  /tmp/ccXuXBwl.s 			page 144


2948:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
2949:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5271              		.loc 1 2949 9
 5272 0340 07E0     		b	.L274
 5273              	.L269:
2950:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
2951:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2952:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = ((uint32_t)LSE_VALUE / UART_GET_DIV_FACTOR(huart->Init.ClockPrescaler)
2953:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2954:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         lpuart_ker_ck_pres = (uint32_t)LSE_VALUE;
 5274              		.loc 1 2954 28
 5275 0342 4FF40043 		mov	r3, #32768
 5276 0346 7B66     		str	r3, [r7, #100]
2955:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
2956:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5277              		.loc 1 2956 9
 5278 0348 03E0     		b	.L274
 5279              	.L268:
2957:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
2958:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default:
2959:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
 5280              		.loc 1 2959 13
 5281 034a 0123     		movs	r3, #1
 5282 034c 87F86B30 		strb	r3, [r7, #107]
2960:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5283              		.loc 1 2960 9
 5284 0350 00BF     		nop
 5285              	.L274:
2961:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
2962:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
2963:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* if proper clock source reported */
2964:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (lpuart_ker_ck_pres != 0U)
 5286              		.loc 1 2964 8
 5287 0352 7B6E     		ldr	r3, [r7, #100]
 5288 0354 002B     		cmp	r3, #0
 5289 0356 00F0DE81 		beq	.L286
2965:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
2966:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
2967:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
 5290              		.loc 1 2967 50
 5291 035a FB6D     		ldr	r3, [r7, #92]
 5292 035c 5A68     		ldr	r2, [r3, #4]
 5293              		.loc 1 2967 37
 5294 035e 1346     		mov	r3, r2
 5295 0360 5B00     		lsls	r3, r3, #1
 5296 0362 1A44     		add	r2, r2, r3
 5297              		.loc 1 2967 10
 5298 0364 7B6E     		ldr	r3, [r7, #100]
 5299 0366 9342     		cmp	r3, r2
 5300 0368 05D3     		bcc	.L276
2968:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 5301              		.loc 1 2968 53 discriminator 1
 5302 036a FB6D     		ldr	r3, [r7, #92]
 5303 036c 5B68     		ldr	r3, [r3, #4]
 5304              		.loc 1 2968 40 discriminator 1
 5305 036e 1A03     		lsls	r2, r3, #12
2967:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
ARM GAS  /tmp/ccXuXBwl.s 			page 145


 5306              		.loc 1 2967 62 discriminator 1
 5307 0370 7B6E     		ldr	r3, [r7, #100]
 5308 0372 9342     		cmp	r3, r2
 5309 0374 03D9     		bls	.L277
 5310              	.L276:
2969:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2970:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
 5311              		.loc 1 2970 13
 5312 0376 0123     		movs	r3, #1
 5313 0378 87F86B30 		strb	r3, [r7, #107]
 5314 037c CBE1     		b	.L286
 5315              	.L277:
2971:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
2972:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
2973:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
2974:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         switch (clocksource)
 5316              		.loc 1 2974 9
 5317 037e 97F87330 		ldrb	r3, [r7, #115]	@ zero_extendqisi2
 5318 0382 082B     		cmp	r3, #8
 5319 0384 00F2AE80 		bhi	.L278
 5320 0388 01A2     		adr	r2, .L280
 5321 038a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5322 038e 00BF     		.p2align 2
 5323              	.L280:
 5324 0390 B5030000 		.word	.L283+1
 5325 0394 E5040000 		.word	.L278+1
 5326 0398 13040000 		.word	.L282+1
 5327 039c E5040000 		.word	.L278+1
 5328 03a0 53040000 		.word	.L281+1
 5329 03a4 E5040000 		.word	.L278+1
 5330 03a8 E5040000 		.word	.L278+1
 5331 03ac E5040000 		.word	.L278+1
 5332 03b0 AD040000 		.word	.L279+1
 5333              		.p2align 1
 5334              	.L283:
2975:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
2976:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_PCLK1:
2977:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2978:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate, hua
2979:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2980:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
 5335              		.loc 1 2980 35
 5336 03b4 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5337 03b8 0346     		mov	r3, r0
 5338 03ba 0022     		movs	r2, #0
 5339 03bc 9846     		mov	r8, r3
 5340 03be 9146     		mov	r9, r2
 5341 03c0 4FF00002 		mov	r2, #0
 5342 03c4 4FF00003 		mov	r3, #0
 5343 03c8 4FEA0923 		lsl	r3, r9, #8
 5344 03cc 43EA1863 		orr	r3, r3, r8, lsr #24
 5345 03d0 4FEA0822 		lsl	r2, r8, #8
 5346 03d4 F96D     		ldr	r1, [r7, #92]
 5347 03d6 4968     		ldr	r1, [r1, #4]
 5348 03d8 4908     		lsrs	r1, r1, #1
 5349 03da 0020     		movs	r0, #0
 5350 03dc 3965     		str	r1, [r7, #80]
ARM GAS  /tmp/ccXuXBwl.s 			page 146


 5351 03de 7865     		str	r0, [r7, #84]
 5352 03e0 D7E91445 		ldrd	r4, [r7, #80]
 5353 03e4 2146     		mov	r1, r4
 5354 03e6 5118     		adds	r1, r2, r1
 5355 03e8 B964     		str	r1, [r7, #72]
 5356 03ea 2946     		mov	r1, r5
 5357 03ec 43EB0101 		adc	r1, r3, r1
 5358 03f0 F964     		str	r1, [r7, #76]
 5359 03f2 FB6D     		ldr	r3, [r7, #92]
 5360 03f4 5B68     		ldr	r3, [r3, #4]
 5361 03f6 0022     		movs	r2, #0
 5362 03f8 3B64     		str	r3, [r7, #64]
 5363 03fa 7A64     		str	r2, [r7, #68]
 5364 03fc D7E91023 		ldrd	r2, [r7, #64]
 5365 0400 D7E91201 		ldrd	r0, [r7, #72]
 5366 0404 FFF7FEFF 		bl	__aeabi_uldivmod
 5367 0408 0246     		mov	r2, r0
 5368 040a 0B46     		mov	r3, r1
 5369              		.loc 1 2980 22
 5370 040c 1346     		mov	r3, r2
 5371 040e FB66     		str	r3, [r7, #108]
2981:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
2982:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             break;
 5372              		.loc 1 2982 13
 5373 0410 6CE0     		b	.L284
 5374              	.L282:
2983:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_HSI:
2984:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2985:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HSI_VALUE, huart->Init.BaudRate, huart->Init.Cloc
2986:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2987:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HSI_VALUE, huart->Init.BaudRate));
 5375              		.loc 1 2987 35
 5376 0412 FB6D     		ldr	r3, [r7, #92]
 5377 0414 5B68     		ldr	r3, [r3, #4]
 5378 0416 5B08     		lsrs	r3, r3, #1
 5379 0418 0022     		movs	r2, #0
 5380 041a BB63     		str	r3, [r7, #56]
 5381 041c FA63     		str	r2, [r7, #60]
 5382 041e 714B     		ldr	r3, .L310+8
 5383 0420 D7E90E01 		ldrd	r0, [r7, #56]
 5384 0424 0246     		mov	r2, r0
 5385 0426 D318     		adds	r3, r2, r3
 5386 0428 3B63     		str	r3, [r7, #48]
 5387 042a 0B46     		mov	r3, r1
 5388 042c 43F10003 		adc	r3, r3, #0
 5389 0430 7B63     		str	r3, [r7, #52]
 5390 0432 FB6D     		ldr	r3, [r7, #92]
 5391 0434 5B68     		ldr	r3, [r3, #4]
 5392 0436 0022     		movs	r2, #0
 5393 0438 BB62     		str	r3, [r7, #40]
 5394 043a FA62     		str	r2, [r7, #44]
 5395 043c D7E90A23 		ldrd	r2, [r7, #40]
 5396 0440 D7E90C01 		ldrd	r0, [r7, #48]
 5397 0444 FFF7FEFF 		bl	__aeabi_uldivmod
 5398 0448 0246     		mov	r2, r0
 5399 044a 0B46     		mov	r3, r1
 5400              		.loc 1 2987 22
ARM GAS  /tmp/ccXuXBwl.s 			page 147


 5401 044c 1346     		mov	r3, r2
 5402 044e FB66     		str	r3, [r7, #108]
2988:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
2989:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             break;
 5403              		.loc 1 2989 13
 5404 0450 4CE0     		b	.L284
 5405              	.L281:
2990:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_SYSCLK:
2991:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2992:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate, 
2993:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
2994:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate))
 5406              		.loc 1 2994 35
 5407 0452 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 5408 0456 0346     		mov	r3, r0
 5409 0458 0022     		movs	r2, #0
 5410 045a 1C46     		mov	r4, r3
 5411 045c 1546     		mov	r5, r2
 5412 045e 4FF00002 		mov	r2, #0
 5413 0462 4FF00003 		mov	r3, #0
 5414 0466 2B02     		lsls	r3, r5, #8
 5415 0468 43EA1463 		orr	r3, r3, r4, lsr #24
 5416 046c 2202     		lsls	r2, r4, #8
 5417 046e F96D     		ldr	r1, [r7, #92]
 5418 0470 4968     		ldr	r1, [r1, #4]
 5419 0472 4908     		lsrs	r1, r1, #1
 5420 0474 0020     		movs	r0, #0
 5421 0476 3962     		str	r1, [r7, #32]
 5422 0478 7862     		str	r0, [r7, #36]
 5423 047a D7E90845 		ldrd	r4, [r7, #32]
 5424 047e 2146     		mov	r1, r4
 5425 0480 5118     		adds	r1, r2, r1
 5426 0482 B961     		str	r1, [r7, #24]
 5427 0484 2946     		mov	r1, r5
 5428 0486 43EB0101 		adc	r1, r3, r1
 5429 048a F961     		str	r1, [r7, #28]
 5430 048c FB6D     		ldr	r3, [r7, #92]
 5431 048e 5B68     		ldr	r3, [r3, #4]
 5432 0490 0022     		movs	r2, #0
 5433 0492 3B61     		str	r3, [r7, #16]
 5434 0494 7A61     		str	r2, [r7, #20]
 5435 0496 D7E90423 		ldrd	r2, [r7, #16]
 5436 049a D7E90601 		ldrd	r0, [r7, #24]
 5437 049e FFF7FEFF 		bl	__aeabi_uldivmod
 5438 04a2 0246     		mov	r2, r0
 5439 04a4 0B46     		mov	r3, r1
 5440              		.loc 1 2994 22
 5441 04a6 1346     		mov	r3, r2
 5442 04a8 FB66     		str	r3, [r7, #108]
2995:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
2996:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             break;
 5443              		.loc 1 2996 13
 5444 04aa 1FE0     		b	.L284
 5445              	.L279:
2997:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_LSE:
2998:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
2999:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(LSE_VALUE, huart->Init.BaudRate, huart->Init.Cloc
ARM GAS  /tmp/ccXuXBwl.s 			page 148


3000:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3001:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             usartdiv = (uint32_t)(UART_DIV_LPUART(LSE_VALUE, huart->Init.BaudRate));
 5446              		.loc 1 3001 35
 5447 04ac FB6D     		ldr	r3, [r7, #92]
 5448 04ae 5B68     		ldr	r3, [r3, #4]
 5449 04b0 5B08     		lsrs	r3, r3, #1
 5450 04b2 0022     		movs	r2, #0
 5451 04b4 9A46     		mov	r10, r3
 5452 04b6 9346     		mov	fp, r2
 5453 04b8 1AF50003 		adds	r3, r10, #8388608
 5454 04bc BB60     		str	r3, [r7, #8]
 5455 04be 4BF10003 		adc	r3, fp, #0
 5456 04c2 FB60     		str	r3, [r7, #12]
 5457 04c4 FB6D     		ldr	r3, [r7, #92]
 5458 04c6 5B68     		ldr	r3, [r3, #4]
 5459 04c8 0022     		movs	r2, #0
 5460 04ca 3B60     		str	r3, [r7]
 5461 04cc 7A60     		str	r2, [r7, #4]
 5462 04ce D7E90023 		ldrd	r2, [r7]
 5463 04d2 D7E90201 		ldrd	r0, [r7, #8]
 5464 04d6 FFF7FEFF 		bl	__aeabi_uldivmod
 5465 04da 0246     		mov	r2, r0
 5466 04dc 0B46     		mov	r3, r1
 5467              		.loc 1 3001 22
 5468 04de 1346     		mov	r3, r2
 5469 04e0 FB66     		str	r3, [r7, #108]
3002:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3003:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             break;
 5470              		.loc 1 3003 13
 5471 04e2 03E0     		b	.L284
 5472              	.L278:
3004:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           case UART_CLOCKSOURCE_UNDEFINED:
3005:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           default:
3006:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             ret = HAL_ERROR;
 5473              		.loc 1 3006 17
 5474 04e4 0123     		movs	r3, #1
 5475 04e6 87F86B30 		strb	r3, [r7, #107]
3007:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****             break;
 5476              		.loc 1 3007 13
 5477 04ea 00BF     		nop
 5478              	.L284:
3008:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
3009:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3010:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* It is forbidden to write values lower than 0x300 in the LPUART_BRR register */
3011:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
 5479              		.loc 1 3011 12
 5480 04ec FB6E     		ldr	r3, [r7, #108]
 5481 04ee B3F5407F 		cmp	r3, #768
 5482 04f2 08D3     		bcc	.L285
 5483              		.loc 1 3011 42 discriminator 1
 5484 04f4 FB6E     		ldr	r3, [r7, #108]
 5485 04f6 B3F5801F 		cmp	r3, #1048576
 5486 04fa 04D2     		bcs	.L285
3012:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
3013:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           huart->Instance->BRR = usartdiv;
 5487              		.loc 1 3013 16
 5488 04fc FB6D     		ldr	r3, [r7, #92]
ARM GAS  /tmp/ccXuXBwl.s 			page 149


 5489 04fe 1B68     		ldr	r3, [r3]
 5490              		.loc 1 3013 32
 5491 0500 FA6E     		ldr	r2, [r7, #108]
 5492 0502 DA60     		str	r2, [r3, #12]
 5493 0504 07E1     		b	.L286
 5494              	.L285:
3014:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
3015:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         else
3016:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         {
3017:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****           ret = HAL_ERROR;
 5495              		.loc 1 3017 15
 5496 0506 0123     		movs	r3, #1
 5497 0508 87F86B30 		strb	r3, [r7, #107]
 5498 050c 03E1     		b	.L286
 5499              	.L267:
3018:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         }
3019:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       } /*   if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) || (lpuart_ker_ck_pres > (4096
3020:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     } /* if (lpuart_ker_ck_pres != 0) */
3021:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3022:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check UART Over Sampling to set Baud Rate Register */
3023:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 5500              		.loc 1 3023 23
 5501 050e FB6D     		ldr	r3, [r7, #92]
 5502 0510 DB69     		ldr	r3, [r3, #28]
 5503              		.loc 1 3023 11
 5504 0512 B3F5004F 		cmp	r3, #32768
 5505 0516 40F08D80 		bne	.L287
3024:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3025:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
 5506              		.loc 1 3025 5
 5507 051a 97F87330 		ldrb	r3, [r7, #115]	@ zero_extendqisi2
 5508 051e 082B     		cmp	r3, #8
 5509 0520 62D8     		bhi	.L288
 5510 0522 01A2     		adr	r2, .L290
 5511 0524 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5512              		.p2align 2
 5513              	.L290:
 5514 0528 4D050000 		.word	.L294+1
 5515 052c 6B050000 		.word	.L293+1
 5516 0530 89050000 		.word	.L292+1
 5517 0534 E9050000 		.word	.L288+1
 5518 0538 A5050000 		.word	.L291+1
 5519 053c E9050000 		.word	.L288+1
 5520 0540 E9050000 		.word	.L288+1
 5521 0544 E9050000 		.word	.L288+1
 5522 0548 C3050000 		.word	.L289+1
 5523              		.p2align 1
 5524              	.L294:
3026:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3027:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3028:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3029:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate, huar
3030:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3031:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
 5525              		.loc 1 3031 31
 5526 054c FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5527 0550 0346     		mov	r3, r0
ARM GAS  /tmp/ccXuXBwl.s 			page 150


 5528 0552 5A00     		lsls	r2, r3, #1
 5529 0554 FB6D     		ldr	r3, [r7, #92]
 5530 0556 5B68     		ldr	r3, [r3, #4]
 5531 0558 5B08     		lsrs	r3, r3, #1
 5532 055a 1A44     		add	r2, r2, r3
 5533 055c FB6D     		ldr	r3, [r7, #92]
 5534 055e 5B68     		ldr	r3, [r3, #4]
 5535 0560 B2FBF3F3 		udiv	r3, r2, r3
 5536              		.loc 1 3031 20
 5537 0564 9BB2     		uxth	r3, r3
 5538              		.loc 1 3031 18
 5539 0566 FB66     		str	r3, [r7, #108]
3032:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3033:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5540              		.loc 1 3033 9
 5541 0568 42E0     		b	.L295
 5542              	.L293:
3034:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
3035:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3036:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate, huar
3037:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3038:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
 5543              		.loc 1 3038 31
 5544 056a FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 5545 056e 0346     		mov	r3, r0
 5546 0570 5A00     		lsls	r2, r3, #1
 5547 0572 FB6D     		ldr	r3, [r7, #92]
 5548 0574 5B68     		ldr	r3, [r3, #4]
 5549 0576 5B08     		lsrs	r3, r3, #1
 5550 0578 1A44     		add	r2, r2, r3
 5551 057a FB6D     		ldr	r3, [r7, #92]
 5552 057c 5B68     		ldr	r3, [r3, #4]
 5553 057e B2FBF3F3 		udiv	r3, r2, r3
 5554              		.loc 1 3038 20
 5555 0582 9BB2     		uxth	r3, r3
 5556              		.loc 1 3038 18
 5557 0584 FB66     		str	r3, [r7, #108]
3039:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3040:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5558              		.loc 1 3040 9
 5559 0586 33E0     		b	.L295
 5560              	.L292:
3041:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3042:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3043:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate, huart->Init.Clock
3044:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3045:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
 5561              		.loc 1 3045 31
 5562 0588 FB6D     		ldr	r3, [r7, #92]
 5563 058a 5B68     		ldr	r3, [r3, #4]
 5564 058c 5B08     		lsrs	r3, r3, #1
 5565 058e 03F1F473 		add	r3, r3, #31981568
 5566 0592 03F59043 		add	r3, r3, #18432
 5567 0596 FA6D     		ldr	r2, [r7, #92]
 5568 0598 5268     		ldr	r2, [r2, #4]
 5569 059a B3FBF2F3 		udiv	r3, r3, r2
 5570              		.loc 1 3045 20
ARM GAS  /tmp/ccXuXBwl.s 			page 151


 5571 059e 9BB2     		uxth	r3, r3
 5572              		.loc 1 3045 18
 5573 05a0 FB66     		str	r3, [r7, #108]
3046:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3047:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5574              		.loc 1 3047 9
 5575 05a2 25E0     		b	.L295
 5576              	.L291:
3048:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3049:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3050:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate, h
3051:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3052:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 5577              		.loc 1 3052 31
 5578 05a4 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 5579 05a8 0346     		mov	r3, r0
 5580 05aa 5A00     		lsls	r2, r3, #1
 5581 05ac FB6D     		ldr	r3, [r7, #92]
 5582 05ae 5B68     		ldr	r3, [r3, #4]
 5583 05b0 5B08     		lsrs	r3, r3, #1
 5584 05b2 1A44     		add	r2, r2, r3
 5585 05b4 FB6D     		ldr	r3, [r7, #92]
 5586 05b6 5B68     		ldr	r3, [r3, #4]
 5587 05b8 B2FBF3F3 		udiv	r3, r2, r3
 5588              		.loc 1 3052 20
 5589 05bc 9BB2     		uxth	r3, r3
 5590              		.loc 1 3052 18
 5591 05be FB66     		str	r3, [r7, #108]
3053:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3054:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5592              		.loc 1 3054 9
 5593 05c0 16E0     		b	.L295
 5594              	.L289:
3055:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3056:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3057:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8((uint32_t)LSE_VALUE, huart->Init.BaudRate, huart->
3058:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3059:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
 5595              		.loc 1 3059 31
 5596 05c2 FB6D     		ldr	r3, [r7, #92]
 5597 05c4 5B68     		ldr	r3, [r3, #4]
 5598 05c6 5B08     		lsrs	r3, r3, #1
 5599 05c8 03F58032 		add	r2, r3, #65536
 5600 05cc FB6D     		ldr	r3, [r7, #92]
 5601 05ce 5B68     		ldr	r3, [r3, #4]
 5602 05d0 B2FBF3F3 		udiv	r3, r2, r3
 5603              		.loc 1 3059 20
 5604 05d4 9BB2     		uxth	r3, r3
 5605              		.loc 1 3059 18
 5606 05d6 FB66     		str	r3, [r7, #108]
3060:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3061:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5607              		.loc 1 3061 9
 5608 05d8 0AE0     		b	.L295
 5609              	.L311:
 5610 05da 00BF     		.align	2
 5611              	.L310:
ARM GAS  /tmp/ccXuXBwl.s 			page 152


 5612 05dc 00800040 		.word	1073774592
 5613 05e0 0024F400 		.word	16000000
 5614 05e4 000024F4 		.word	-198967296
 5615              	.L288:
3062:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
3063:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default:
3064:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
 5616              		.loc 1 3064 13
 5617 05e8 0123     		movs	r3, #1
 5618 05ea 87F86B30 		strb	r3, [r7, #107]
3065:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5619              		.loc 1 3065 9
 5620 05ee 00BF     		nop
 5621              	.L295:
3066:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3067:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3068:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
3069:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 5622              		.loc 1 3069 8
 5623 05f0 FB6E     		ldr	r3, [r7, #108]
 5624 05f2 0F2B     		cmp	r3, #15
 5625 05f4 1AD9     		bls	.L296
 5626              		.loc 1 3069 36 discriminator 1
 5627 05f6 FB6E     		ldr	r3, [r7, #108]
 5628 05f8 B3F5803F 		cmp	r3, #65536
 5629 05fc 16D2     		bcs	.L296
3070:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3071:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 5630              		.loc 1 3071 17
 5631 05fe FB6E     		ldr	r3, [r7, #108]
 5632 0600 9BB2     		uxth	r3, r3
 5633              		.loc 1 3071 15
 5634 0602 23F00F03 		bic	r3, r3, #15
 5635 0606 A7F86230 		strh	r3, [r7, #98]	@ movhi
3072:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 5636              		.loc 1 3072 60
 5637 060a FB6E     		ldr	r3, [r7, #108]
 5638 060c 5B08     		lsrs	r3, r3, #1
 5639              		.loc 1 3072 18
 5640 060e 9BB2     		uxth	r3, r3
 5641 0610 03F00703 		and	r3, r3, #7
 5642 0614 9AB2     		uxth	r2, r3
 5643              		.loc 1 3072 15
 5644 0616 B7F86230 		ldrh	r3, [r7, #98]	@ movhi
 5645 061a 1343     		orrs	r3, r3, r2
 5646 061c A7F86230 		strh	r3, [r7, #98]	@ movhi
3073:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->BRR = brrtemp;
 5647              		.loc 1 3073 12
 5648 0620 FB6D     		ldr	r3, [r7, #92]
 5649 0622 1B68     		ldr	r3, [r3]
 5650              		.loc 1 3073 28
 5651 0624 B7F86220 		ldrh	r2, [r7, #98]
 5652 0628 DA60     		str	r2, [r3, #12]
 5653 062a 74E0     		b	.L286
 5654              	.L296:
3074:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3075:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
ARM GAS  /tmp/ccXuXBwl.s 			page 153


3076:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3077:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ret = HAL_ERROR;
 5655              		.loc 1 3077 11
 5656 062c 0123     		movs	r3, #1
 5657 062e 87F86B30 		strb	r3, [r7, #107]
 5658 0632 70E0     		b	.L286
 5659              	.L287:
3078:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3079:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3080:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3081:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3082:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     switch (clocksource)
 5660              		.loc 1 3082 5
 5661 0634 97F87330 		ldrb	r3, [r7, #115]	@ zero_extendqisi2
 5662 0638 082B     		cmp	r3, #8
 5663 063a 59D8     		bhi	.L298
 5664 063c 01A2     		adr	r2, .L300
 5665 063e 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 5666 0642 00BF     		.p2align 2
 5667              	.L300:
 5668 0644 69060000 		.word	.L304+1
 5669 0648 85060000 		.word	.L303+1
 5670 064c A1060000 		.word	.L302+1
 5671 0650 F1060000 		.word	.L298+1
 5672 0654 BD060000 		.word	.L301+1
 5673 0658 F1060000 		.word	.L298+1
 5674 065c F1060000 		.word	.L298+1
 5675 0660 F1060000 		.word	.L298+1
 5676 0664 D9060000 		.word	.L299+1
 5677              		.p2align 1
 5678              	.L304:
3083:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3084:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK1:
3085:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3086:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate, hua
3087:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3088:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
 5679              		.loc 1 3088 31
 5680 0668 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 5681 066c 0246     		mov	r2, r0
 5682 066e FB6D     		ldr	r3, [r7, #92]
 5683 0670 5B68     		ldr	r3, [r3, #4]
 5684 0672 5B08     		lsrs	r3, r3, #1
 5685 0674 1A44     		add	r2, r2, r3
 5686 0676 FB6D     		ldr	r3, [r7, #92]
 5687 0678 5B68     		ldr	r3, [r3, #4]
 5688 067a B2FBF3F3 		udiv	r3, r2, r3
 5689              		.loc 1 3088 20
 5690 067e 9BB2     		uxth	r3, r3
 5691              		.loc 1 3088 18
 5692 0680 FB66     		str	r3, [r7, #108]
3089:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3090:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5693              		.loc 1 3090 9
 5694 0682 39E0     		b	.L305
 5695              	.L303:
3091:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_PCLK2:
ARM GAS  /tmp/ccXuXBwl.s 			page 154


3092:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3093:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate, hua
3094:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3095:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
 5696              		.loc 1 3095 31
 5697 0684 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 5698 0688 0246     		mov	r2, r0
 5699 068a FB6D     		ldr	r3, [r7, #92]
 5700 068c 5B68     		ldr	r3, [r3, #4]
 5701 068e 5B08     		lsrs	r3, r3, #1
 5702 0690 1A44     		add	r2, r2, r3
 5703 0692 FB6D     		ldr	r3, [r7, #92]
 5704 0694 5B68     		ldr	r3, [r3, #4]
 5705 0696 B2FBF3F3 		udiv	r3, r2, r3
 5706              		.loc 1 3095 20
 5707 069a 9BB2     		uxth	r3, r3
 5708              		.loc 1 3095 18
 5709 069c FB66     		str	r3, [r7, #108]
3096:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3097:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5710              		.loc 1 3097 9
 5711 069e 2BE0     		b	.L305
 5712              	.L302:
3098:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_HSI:
3099:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3100:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate, huart->Init.Cloc
3101:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3102:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
 5713              		.loc 1 3102 31
 5714 06a0 FB6D     		ldr	r3, [r7, #92]
 5715 06a2 5B68     		ldr	r3, [r3, #4]
 5716 06a4 5B08     		lsrs	r3, r3, #1
 5717 06a6 03F57403 		add	r3, r3, #15990784
 5718 06aa 03F51053 		add	r3, r3, #9216
 5719 06ae FA6D     		ldr	r2, [r7, #92]
 5720 06b0 5268     		ldr	r2, [r2, #4]
 5721 06b2 B3FBF2F3 		udiv	r3, r3, r2
 5722              		.loc 1 3102 20
 5723 06b6 9BB2     		uxth	r3, r3
 5724              		.loc 1 3102 18
 5725 06b8 FB66     		str	r3, [r7, #108]
3103:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3104:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5726              		.loc 1 3104 9
 5727 06ba 1DE0     		b	.L305
 5728              	.L301:
3105:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_SYSCLK:
3106:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3107:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate, 
3108:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3109:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate))
 5729              		.loc 1 3109 31
 5730 06bc FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 5731 06c0 0246     		mov	r2, r0
 5732 06c2 FB6D     		ldr	r3, [r7, #92]
 5733 06c4 5B68     		ldr	r3, [r3, #4]
 5734 06c6 5B08     		lsrs	r3, r3, #1
ARM GAS  /tmp/ccXuXBwl.s 			page 155


 5735 06c8 1A44     		add	r2, r2, r3
 5736 06ca FB6D     		ldr	r3, [r7, #92]
 5737 06cc 5B68     		ldr	r3, [r3, #4]
 5738 06ce B2FBF3F3 		udiv	r3, r2, r3
 5739              		.loc 1 3109 20
 5740 06d2 9BB2     		uxth	r3, r3
 5741              		.loc 1 3109 18
 5742 06d4 FB66     		str	r3, [r7, #108]
3110:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3111:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5743              		.loc 1 3111 9
 5744 06d6 0FE0     		b	.L305
 5745              	.L299:
3112:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_LSE:
3113:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_PRESC_PRESCALER)
3114:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16((uint32_t)LSE_VALUE, huart->Init.BaudRate, huart-
3115:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3116:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         usartdiv = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
 5746              		.loc 1 3116 31
 5747 06d8 FB6D     		ldr	r3, [r7, #92]
 5748 06da 5B68     		ldr	r3, [r3, #4]
 5749 06dc 5B08     		lsrs	r3, r3, #1
 5750 06de 03F50042 		add	r2, r3, #32768
 5751 06e2 FB6D     		ldr	r3, [r7, #92]
 5752 06e4 5B68     		ldr	r3, [r3, #4]
 5753 06e6 B2FBF3F3 		udiv	r3, r2, r3
 5754              		.loc 1 3116 20
 5755 06ea 9BB2     		uxth	r3, r3
 5756              		.loc 1 3116 18
 5757 06ec FB66     		str	r3, [r7, #108]
3117:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_PRESC_PRESCALER */
3118:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5758              		.loc 1 3118 9
 5759 06ee 03E0     		b	.L305
 5760              	.L298:
3119:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       case UART_CLOCKSOURCE_UNDEFINED:
3120:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       default:
3121:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         ret = HAL_ERROR;
 5761              		.loc 1 3121 13
 5762 06f0 0123     		movs	r3, #1
 5763 06f2 87F86B30 		strb	r3, [r7, #107]
3122:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break;
 5764              		.loc 1 3122 9
 5765 06f6 00BF     		nop
 5766              	.L305:
3123:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3124:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3125:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* USARTDIV must be greater than or equal to 0d16 */
3126:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 5767              		.loc 1 3126 8
 5768 06f8 FB6E     		ldr	r3, [r7, #108]
 5769 06fa 0F2B     		cmp	r3, #15
 5770 06fc 08D9     		bls	.L306
 5771              		.loc 1 3126 36 discriminator 1
 5772 06fe FB6E     		ldr	r3, [r7, #108]
 5773 0700 B3F5803F 		cmp	r3, #65536
 5774 0704 04D2     		bcs	.L306
ARM GAS  /tmp/ccXuXBwl.s 			page 156


3127:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3128:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->BRR = usartdiv;
 5775              		.loc 1 3128 12
 5776 0706 FB6D     		ldr	r3, [r7, #92]
 5777 0708 1B68     		ldr	r3, [r3]
 5778              		.loc 1 3128 28
 5779 070a FA6E     		ldr	r2, [r7, #108]
 5780 070c DA60     		str	r2, [r3, #12]
 5781 070e 02E0     		b	.L286
 5782              	.L306:
3129:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3130:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
3131:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3132:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       ret = HAL_ERROR;
 5783              		.loc 1 3132 11
 5784 0710 0123     		movs	r3, #1
 5785 0712 87F86B30 		strb	r3, [r7, #107]
 5786              	.L286:
3133:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3134:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3135:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3136:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3137:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Initialize the number of data to process during RX/TX ISR execution */
3138:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->NbTxDataToProcess = 1;
3139:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->NbRxDataToProcess = 1;
3140:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3141:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3142:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear ISR function pointers */
3143:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxISR = NULL;
 5787              		.loc 1 3143 16
 5788 0716 FB6D     		ldr	r3, [r7, #92]
 5789 0718 0022     		movs	r2, #0
 5790 071a 1A66     		str	r2, [r3, #96]
3144:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxISR = NULL;
 5791              		.loc 1 3144 16
 5792 071c FB6D     		ldr	r3, [r7, #92]
 5793 071e 0022     		movs	r2, #0
 5794 0720 5A66     		str	r2, [r3, #100]
3145:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3146:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return ret;
 5795              		.loc 1 3146 10
 5796 0722 97F86B30 		ldrb	r3, [r7, #107]	@ zero_extendqisi2
3147:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 5797              		.loc 1 3147 1
 5798 0726 1846     		mov	r0, r3
 5799 0728 7837     		adds	r7, r7, #120
 5800              	.LCFI218:
 5801              		.cfi_def_cfa_offset 32
 5802 072a BD46     		mov	sp, r7
 5803              	.LCFI219:
 5804              		.cfi_def_cfa_register 13
 5805              		@ sp needed
 5806 072c BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 5807              		.cfi_endproc
 5808              	.LFE352:
 5810              		.section	.text.UART_AdvFeatureConfig,"ax",%progbits
 5811              		.align	1
ARM GAS  /tmp/ccXuXBwl.s 			page 157


 5812              		.global	UART_AdvFeatureConfig
 5813              		.syntax unified
 5814              		.thumb
 5815              		.thumb_func
 5816              		.fpu fpv4-sp-d16
 5818              	UART_AdvFeatureConfig:
 5819              	.LFB353:
3148:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3149:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3150:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Configure the UART peripheral advanced features.
3151:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3152:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3153:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3154:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
3155:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 5820              		.loc 1 3155 1
 5821              		.cfi_startproc
 5822              		@ args = 0, pretend = 0, frame = 8
 5823              		@ frame_needed = 1, uses_anonymous_args = 0
 5824              		@ link register save eliminated.
 5825 0000 80B4     		push	{r7}
 5826              	.LCFI220:
 5827              		.cfi_def_cfa_offset 4
 5828              		.cfi_offset 7, -4
 5829 0002 83B0     		sub	sp, sp, #12
 5830              	.LCFI221:
 5831              		.cfi_def_cfa_offset 16
 5832 0004 00AF     		add	r7, sp, #0
 5833              	.LCFI222:
 5834              		.cfi_def_cfa_register 7
 5835 0006 7860     		str	r0, [r7, #4]
3156:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check whether the set of advanced features to configure is properly set */
3157:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));
3158:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3159:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure TX pin active level inversion */
3160:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 5836              		.loc 1 3160 7
 5837 0008 7B68     		ldr	r3, [r7, #4]
 5838 000a 5B6A     		ldr	r3, [r3, #36]
 5839 000c 03F00103 		and	r3, r3, #1
 5840              		.loc 1 3160 6
 5841 0010 002B     		cmp	r3, #0
 5842 0012 0AD0     		beq	.L313
3161:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3162:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
3163:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 5843              		.loc 1 3163 5
 5844 0014 7B68     		ldr	r3, [r7, #4]
 5845 0016 1B68     		ldr	r3, [r3]
 5846 0018 5B68     		ldr	r3, [r3, #4]
 5847 001a 23F40031 		bic	r1, r3, #131072
 5848 001e 7B68     		ldr	r3, [r7, #4]
 5849 0020 9A6A     		ldr	r2, [r3, #40]
 5850 0022 7B68     		ldr	r3, [r7, #4]
 5851 0024 1B68     		ldr	r3, [r3]
 5852 0026 0A43     		orrs	r2, r2, r1
 5853 0028 5A60     		str	r2, [r3, #4]
ARM GAS  /tmp/ccXuXBwl.s 			page 158


 5854              	.L313:
3164:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3165:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3166:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX pin active level inversion */
3167:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 5855              		.loc 1 3167 7
 5856 002a 7B68     		ldr	r3, [r7, #4]
 5857 002c 5B6A     		ldr	r3, [r3, #36]
 5858 002e 03F00203 		and	r3, r3, #2
 5859              		.loc 1 3167 6
 5860 0032 002B     		cmp	r3, #0
 5861 0034 0AD0     		beq	.L314
3168:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3169:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
3170:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 5862              		.loc 1 3170 5
 5863 0036 7B68     		ldr	r3, [r7, #4]
 5864 0038 1B68     		ldr	r3, [r3]
 5865 003a 5B68     		ldr	r3, [r3, #4]
 5866 003c 23F48031 		bic	r1, r3, #65536
 5867 0040 7B68     		ldr	r3, [r7, #4]
 5868 0042 DA6A     		ldr	r2, [r3, #44]
 5869 0044 7B68     		ldr	r3, [r7, #4]
 5870 0046 1B68     		ldr	r3, [r3]
 5871 0048 0A43     		orrs	r2, r2, r1
 5872 004a 5A60     		str	r2, [r3, #4]
 5873              	.L314:
3171:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3172:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3173:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure data inversion */
3174:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 5874              		.loc 1 3174 7
 5875 004c 7B68     		ldr	r3, [r7, #4]
 5876 004e 5B6A     		ldr	r3, [r3, #36]
 5877 0050 03F00403 		and	r3, r3, #4
 5878              		.loc 1 3174 6
 5879 0054 002B     		cmp	r3, #0
 5880 0056 0AD0     		beq	.L315
3175:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3176:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
3177:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 5881              		.loc 1 3177 5
 5882 0058 7B68     		ldr	r3, [r7, #4]
 5883 005a 1B68     		ldr	r3, [r3]
 5884 005c 5B68     		ldr	r3, [r3, #4]
 5885 005e 23F48021 		bic	r1, r3, #262144
 5886 0062 7B68     		ldr	r3, [r7, #4]
 5887 0064 1A6B     		ldr	r2, [r3, #48]
 5888 0066 7B68     		ldr	r3, [r7, #4]
 5889 0068 1B68     		ldr	r3, [r3]
 5890 006a 0A43     		orrs	r2, r2, r1
 5891 006c 5A60     		str	r2, [r3, #4]
 5892              	.L315:
3178:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3179:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3180:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX/TX pins swap */
3181:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
ARM GAS  /tmp/ccXuXBwl.s 			page 159


 5893              		.loc 1 3181 7
 5894 006e 7B68     		ldr	r3, [r7, #4]
 5895 0070 5B6A     		ldr	r3, [r3, #36]
 5896 0072 03F00803 		and	r3, r3, #8
 5897              		.loc 1 3181 6
 5898 0076 002B     		cmp	r3, #0
 5899 0078 0AD0     		beq	.L316
3182:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3183:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
3184:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 5900              		.loc 1 3184 5
 5901 007a 7B68     		ldr	r3, [r7, #4]
 5902 007c 1B68     		ldr	r3, [r3]
 5903 007e 5B68     		ldr	r3, [r3, #4]
 5904 0080 23F40041 		bic	r1, r3, #32768
 5905 0084 7B68     		ldr	r3, [r7, #4]
 5906 0086 5A6B     		ldr	r2, [r3, #52]
 5907 0088 7B68     		ldr	r3, [r7, #4]
 5908 008a 1B68     		ldr	r3, [r3]
 5909 008c 0A43     		orrs	r2, r2, r1
 5910 008e 5A60     		str	r2, [r3, #4]
 5911              	.L316:
3185:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3186:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3187:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure RX overrun detection disabling */
3188:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 5912              		.loc 1 3188 7
 5913 0090 7B68     		ldr	r3, [r7, #4]
 5914 0092 5B6A     		ldr	r3, [r3, #36]
 5915 0094 03F01003 		and	r3, r3, #16
 5916              		.loc 1 3188 6
 5917 0098 002B     		cmp	r3, #0
 5918 009a 0AD0     		beq	.L317
3189:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3190:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
3191:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 5919              		.loc 1 3191 5
 5920 009c 7B68     		ldr	r3, [r7, #4]
 5921 009e 1B68     		ldr	r3, [r3]
 5922 00a0 9B68     		ldr	r3, [r3, #8]
 5923 00a2 23F48051 		bic	r1, r3, #4096
 5924 00a6 7B68     		ldr	r3, [r7, #4]
 5925 00a8 9A6B     		ldr	r2, [r3, #56]
 5926 00aa 7B68     		ldr	r3, [r7, #4]
 5927 00ac 1B68     		ldr	r3, [r3]
 5928 00ae 0A43     		orrs	r2, r2, r1
 5929 00b0 9A60     		str	r2, [r3, #8]
 5930              	.L317:
3192:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3193:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3194:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure DMA disabling on reception error */
3195:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 5931              		.loc 1 3195 7
 5932 00b2 7B68     		ldr	r3, [r7, #4]
 5933 00b4 5B6A     		ldr	r3, [r3, #36]
 5934 00b6 03F02003 		and	r3, r3, #32
 5935              		.loc 1 3195 6
ARM GAS  /tmp/ccXuXBwl.s 			page 160


 5936 00ba 002B     		cmp	r3, #0
 5937 00bc 0AD0     		beq	.L318
3196:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3197:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
3198:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 5938              		.loc 1 3198 5
 5939 00be 7B68     		ldr	r3, [r7, #4]
 5940 00c0 1B68     		ldr	r3, [r3]
 5941 00c2 9B68     		ldr	r3, [r3, #8]
 5942 00c4 23F40051 		bic	r1, r3, #8192
 5943 00c8 7B68     		ldr	r3, [r7, #4]
 5944 00ca DA6B     		ldr	r2, [r3, #60]
 5945 00cc 7B68     		ldr	r3, [r7, #4]
 5946 00ce 1B68     		ldr	r3, [r3]
 5947 00d0 0A43     		orrs	r2, r2, r1
 5948 00d2 9A60     		str	r2, [r3, #8]
 5949              	.L318:
3199:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3200:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3201:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure auto Baud rate detection scheme */
3202:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 5950              		.loc 1 3202 7
 5951 00d4 7B68     		ldr	r3, [r7, #4]
 5952 00d6 5B6A     		ldr	r3, [r3, #36]
 5953 00d8 03F04003 		and	r3, r3, #64
 5954              		.loc 1 3202 6
 5955 00dc 002B     		cmp	r3, #0
 5956 00de 1AD0     		beq	.L319
3203:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3204:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
3205:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
3206:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 5957              		.loc 1 3206 5
 5958 00e0 7B68     		ldr	r3, [r7, #4]
 5959 00e2 1B68     		ldr	r3, [r3]
 5960 00e4 5B68     		ldr	r3, [r3, #4]
 5961 00e6 23F48011 		bic	r1, r3, #1048576
 5962 00ea 7B68     		ldr	r3, [r7, #4]
 5963 00ec 1A6C     		ldr	r2, [r3, #64]
 5964 00ee 7B68     		ldr	r3, [r7, #4]
 5965 00f0 1B68     		ldr	r3, [r3]
 5966 00f2 0A43     		orrs	r2, r2, r1
 5967 00f4 5A60     		str	r2, [r3, #4]
3207:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* set auto Baudrate detection parameters if detection is enabled */
3208:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 5968              		.loc 1 3208 28
 5969 00f6 7B68     		ldr	r3, [r7, #4]
 5970 00f8 1B6C     		ldr	r3, [r3, #64]
 5971              		.loc 1 3208 8
 5972 00fa B3F5801F 		cmp	r3, #1048576
 5973 00fe 0AD1     		bne	.L319
3209:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3210:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
3211:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 5974              		.loc 1 3211 7
 5975 0100 7B68     		ldr	r3, [r7, #4]
 5976 0102 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccXuXBwl.s 			page 161


 5977 0104 5B68     		ldr	r3, [r3, #4]
 5978 0106 23F4C001 		bic	r1, r3, #6291456
 5979 010a 7B68     		ldr	r3, [r7, #4]
 5980 010c 5A6C     		ldr	r2, [r3, #68]
 5981 010e 7B68     		ldr	r3, [r7, #4]
 5982 0110 1B68     		ldr	r3, [r3]
 5983 0112 0A43     		orrs	r2, r2, r1
 5984 0114 5A60     		str	r2, [r3, #4]
 5985              	.L319:
3212:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3213:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3214:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3215:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* if required, configure MSB first on communication line */
3216:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 5986              		.loc 1 3216 7
 5987 0116 7B68     		ldr	r3, [r7, #4]
 5988 0118 5B6A     		ldr	r3, [r3, #36]
 5989 011a 03F08003 		and	r3, r3, #128
 5990              		.loc 1 3216 6
 5991 011e 002B     		cmp	r3, #0
 5992 0120 0AD0     		beq	.L321
3217:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3218:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
3219:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 5993              		.loc 1 3219 5
 5994 0122 7B68     		ldr	r3, [r7, #4]
 5995 0124 1B68     		ldr	r3, [r3]
 5996 0126 5B68     		ldr	r3, [r3, #4]
 5997 0128 23F40021 		bic	r1, r3, #524288
 5998 012c 7B68     		ldr	r3, [r7, #4]
 5999 012e 9A6C     		ldr	r2, [r3, #72]
 6000 0130 7B68     		ldr	r3, [r7, #4]
 6001 0132 1B68     		ldr	r3, [r3]
 6002 0134 0A43     		orrs	r2, r2, r1
 6003 0136 5A60     		str	r2, [r3, #4]
 6004              	.L321:
3220:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3221:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6005              		.loc 1 3221 1
 6006 0138 00BF     		nop
 6007 013a 0C37     		adds	r7, r7, #12
 6008              	.LCFI223:
 6009              		.cfi_def_cfa_offset 4
 6010 013c BD46     		mov	sp, r7
 6011              	.LCFI224:
 6012              		.cfi_def_cfa_register 13
 6013              		@ sp needed
 6014 013e 5DF8047B 		ldr	r7, [sp], #4
 6015              	.LCFI225:
 6016              		.cfi_restore 7
 6017              		.cfi_def_cfa_offset 0
 6018 0142 7047     		bx	lr
 6019              		.cfi_endproc
 6020              	.LFE353:
 6022              		.section	.text.UART_CheckIdleState,"ax",%progbits
 6023              		.align	1
 6024              		.global	UART_CheckIdleState
ARM GAS  /tmp/ccXuXBwl.s 			page 162


 6025              		.syntax unified
 6026              		.thumb
 6027              		.thumb_func
 6028              		.fpu fpv4-sp-d16
 6030              	UART_CheckIdleState:
 6031              	.LFB354:
3222:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3223:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3224:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief Check the UART Idle State.
3225:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3226:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
3227:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3228:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
3229:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6032              		.loc 1 3229 1
 6033              		.cfi_startproc
 6034              		@ args = 0, pretend = 0, frame = 16
 6035              		@ frame_needed = 1, uses_anonymous_args = 0
 6036 0000 80B5     		push	{r7, lr}
 6037              	.LCFI226:
 6038              		.cfi_def_cfa_offset 8
 6039              		.cfi_offset 7, -8
 6040              		.cfi_offset 14, -4
 6041 0002 86B0     		sub	sp, sp, #24
 6042              	.LCFI227:
 6043              		.cfi_def_cfa_offset 32
 6044 0004 02AF     		add	r7, sp, #8
 6045              	.LCFI228:
 6046              		.cfi_def_cfa 7, 24
 6047 0006 7860     		str	r0, [r7, #4]
3230:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint32_t tickstart;
3231:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3232:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Initialize the UART ErrorCode */
3233:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 6048              		.loc 1 3233 20
 6049 0008 7B68     		ldr	r3, [r7, #4]
 6050 000a 0022     		movs	r2, #0
 6051 000c DA67     		str	r2, [r3, #124]
3234:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3235:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Init tickstart for timeout managment*/
3236:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   tickstart = HAL_GetTick();
 6052              		.loc 1 3236 15
 6053 000e FFF7FEFF 		bl	HAL_GetTick
 6054 0012 F860     		str	r0, [r7, #12]
3237:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3238:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if the Transmitter is enabled */
3239:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 6055              		.loc 1 3239 13
 6056 0014 7B68     		ldr	r3, [r7, #4]
 6057 0016 1B68     		ldr	r3, [r3]
 6058              		.loc 1 3239 23
 6059 0018 1B68     		ldr	r3, [r3]
 6060              		.loc 1 3239 29
 6061 001a 03F00803 		and	r3, r3, #8
 6062              		.loc 1 3239 6
 6063 001e 082B     		cmp	r3, #8
 6064 0020 0ED1     		bne	.L323
ARM GAS  /tmp/ccXuXBwl.s 			page 163


3240:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3241:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Wait until TEACK flag is set */
3242:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
 6065              		.loc 1 3242 9
 6066 0022 6FF07E43 		mvn	r3, #-33554432
 6067 0026 0093     		str	r3, [sp]
 6068 0028 FB68     		ldr	r3, [r7, #12]
 6069 002a 0022     		movs	r2, #0
 6070 002c 4FF40011 		mov	r1, #2097152
 6071 0030 7868     		ldr	r0, [r7, #4]
 6072 0032 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 6073 0036 0346     		mov	r3, r0
 6074              		.loc 1 3242 8
 6075 0038 002B     		cmp	r3, #0
 6076 003a 01D0     		beq	.L323
3243:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3244:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Timeout occurred */
3245:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
 6077              		.loc 1 3245 14
 6078 003c 0323     		movs	r3, #3
 6079 003e 20E0     		b	.L324
 6080              	.L323:
3246:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3247:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3248:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3249:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if the Receiver is enabled */
3250:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 6081              		.loc 1 3250 13
 6082 0040 7B68     		ldr	r3, [r7, #4]
 6083 0042 1B68     		ldr	r3, [r3]
 6084              		.loc 1 3250 23
 6085 0044 1B68     		ldr	r3, [r3]
 6086              		.loc 1 3250 29
 6087 0046 03F00403 		and	r3, r3, #4
 6088              		.loc 1 3250 6
 6089 004a 042B     		cmp	r3, #4
 6090 004c 0ED1     		bne	.L325
3251:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3252:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Wait until REACK flag is set */
3253:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALU
 6091              		.loc 1 3253 9
 6092 004e 6FF07E43 		mvn	r3, #-33554432
 6093 0052 0093     		str	r3, [sp]
 6094 0054 FB68     		ldr	r3, [r7, #12]
 6095 0056 0022     		movs	r2, #0
 6096 0058 4FF48001 		mov	r1, #4194304
 6097 005c 7868     		ldr	r0, [r7, #4]
 6098 005e FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 6099 0062 0346     		mov	r3, r0
 6100              		.loc 1 3253 8
 6101 0064 002B     		cmp	r3, #0
 6102 0066 01D0     		beq	.L325
3254:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3255:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Timeout occurred */
3256:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return HAL_TIMEOUT;
 6103              		.loc 1 3256 14
 6104 0068 0323     		movs	r3, #3
ARM GAS  /tmp/ccXuXBwl.s 			page 164


 6105 006a 0AE0     		b	.L324
 6106              	.L325:
3257:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3258:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3259:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3260:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Initialize the UART State */
3261:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6107              		.loc 1 3261 17
 6108 006c 7B68     		ldr	r3, [r7, #4]
 6109 006e 2022     		movs	r2, #32
 6110 0070 5A67     		str	r2, [r3, #116]
3262:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 6111              		.loc 1 3262 18
 6112 0072 7B68     		ldr	r3, [r7, #4]
 6113 0074 2022     		movs	r2, #32
 6114 0076 9A67     		str	r2, [r3, #120]
3263:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3264:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6115              		.loc 1 3264 3
 6116 0078 7B68     		ldr	r3, [r7, #4]
 6117 007a 0022     		movs	r2, #0
 6118 007c 83F87020 		strb	r2, [r3, #112]
3265:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3266:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 6119              		.loc 1 3266 10
 6120 0080 0023     		movs	r3, #0
 6121              	.L324:
3267:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6122              		.loc 1 3267 1
 6123 0082 1846     		mov	r0, r3
 6124 0084 1037     		adds	r7, r7, #16
 6125              	.LCFI229:
 6126              		.cfi_def_cfa_offset 8
 6127 0086 BD46     		mov	sp, r7
 6128              	.LCFI230:
 6129              		.cfi_def_cfa_register 13
 6130              		@ sp needed
 6131 0088 80BD     		pop	{r7, pc}
 6132              		.cfi_endproc
 6133              	.LFE354:
 6135              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 6136              		.align	1
 6137              		.global	UART_WaitOnFlagUntilTimeout
 6138              		.syntax unified
 6139              		.thumb
 6140              		.thumb_func
 6141              		.fpu fpv4-sp-d16
 6143              	UART_WaitOnFlagUntilTimeout:
 6144              	.LFB355:
3268:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3269:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3270:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Handle UART Communication Timeout.
3271:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart     UART handle.
3272:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Flag      Specifies the UART flag to check
3273:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Status    Flag status (SET or RESET)
3274:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Tickstart Tick start value
3275:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param Timeout   Timeout duration
ARM GAS  /tmp/ccXuXBwl.s 			page 165


3276:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval HAL status
3277:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3278:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus 
3279:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****                                               uint32_t Tickstart, uint32_t Timeout)
3280:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6145              		.loc 1 3280 1
 6146              		.cfi_startproc
 6147              		@ args = 4, pretend = 0, frame = 16
 6148              		@ frame_needed = 1, uses_anonymous_args = 0
 6149 0000 80B5     		push	{r7, lr}
 6150              	.LCFI231:
 6151              		.cfi_def_cfa_offset 8
 6152              		.cfi_offset 7, -8
 6153              		.cfi_offset 14, -4
 6154 0002 84B0     		sub	sp, sp, #16
 6155              	.LCFI232:
 6156              		.cfi_def_cfa_offset 24
 6157 0004 00AF     		add	r7, sp, #0
 6158              	.LCFI233:
 6159              		.cfi_def_cfa_register 7
 6160 0006 F860     		str	r0, [r7, #12]
 6161 0008 B960     		str	r1, [r7, #8]
 6162 000a 3B60     		str	r3, [r7]
 6163 000c 1346     		mov	r3, r2
 6164 000e FB71     		strb	r3, [r7, #7]
3281:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Wait until flag is set */
3282:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 6165              		.loc 1 3282 9
 6166 0010 2AE0     		b	.L327
 6167              	.L330:
3283:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3284:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Check for the Timeout */
3285:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
 6168              		.loc 1 3285 8
 6169 0012 BB69     		ldr	r3, [r7, #24]
 6170 0014 B3F1FF3F 		cmp	r3, #-1
 6171 0018 26D0     		beq	.L327
3286:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3287:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 6172              		.loc 1 3287 13
 6173 001a FFF7FEFF 		bl	HAL_GetTick
 6174 001e 0246     		mov	r2, r0
 6175              		.loc 1 3287 27
 6176 0020 3B68     		ldr	r3, [r7]
 6177 0022 D31A     		subs	r3, r2, r3
 6178              		.loc 1 3287 10
 6179 0024 BA69     		ldr	r2, [r7, #24]
 6180 0026 9A42     		cmp	r2, r3
 6181 0028 02D3     		bcc	.L328
 6182              		.loc 1 3287 51 discriminator 1
 6183 002a BB69     		ldr	r3, [r7, #24]
 6184 002c 002B     		cmp	r3, #0
 6185 002e 1BD1     		bne	.L327
 6186              	.L328:
3288:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3289:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
3290:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
ARM GAS  /tmp/ccXuXBwl.s 			page 166


3291:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE | USART_CR1_TXEI
3292:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3293:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 6187              		.loc 1 3293 9
 6188 0030 FB68     		ldr	r3, [r7, #12]
 6189 0032 1B68     		ldr	r3, [r3]
 6190 0034 1A68     		ldr	r2, [r3]
 6191 0036 FB68     		ldr	r3, [r7, #12]
 6192 0038 1B68     		ldr	r3, [r3]
 6193 003a 22F4D072 		bic	r2, r2, #416
 6194 003e 1A60     		str	r2, [r3]
3294:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3295:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 6195              		.loc 1 3295 9
 6196 0040 FB68     		ldr	r3, [r7, #12]
 6197 0042 1B68     		ldr	r3, [r3]
 6198 0044 9A68     		ldr	r2, [r3, #8]
 6199 0046 FB68     		ldr	r3, [r7, #12]
 6200 0048 1B68     		ldr	r3, [r3]
 6201 004a 22F00102 		bic	r2, r2, #1
 6202 004e 9A60     		str	r2, [r3, #8]
3296:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3297:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->gState = HAL_UART_STATE_READY;
 6203              		.loc 1 3297 23
 6204 0050 FB68     		ldr	r3, [r7, #12]
 6205 0052 2022     		movs	r2, #32
 6206 0054 5A67     		str	r2, [r3, #116]
3298:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 6207              		.loc 1 3298 24
 6208 0056 FB68     		ldr	r3, [r7, #12]
 6209 0058 2022     		movs	r2, #32
 6210 005a 9A67     		str	r2, [r3, #120]
3299:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3300:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 6211              		.loc 1 3300 9
 6212 005c FB68     		ldr	r3, [r7, #12]
 6213 005e 0022     		movs	r2, #0
 6214 0060 83F87020 		strb	r2, [r3, #112]
3301:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3302:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         return HAL_TIMEOUT;
 6215              		.loc 1 3302 16
 6216 0064 0323     		movs	r3, #3
 6217 0066 0FE0     		b	.L329
 6218              	.L327:
3282:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 6219              		.loc 1 3282 11
 6220 0068 FB68     		ldr	r3, [r7, #12]
 6221 006a 1B68     		ldr	r3, [r3]
 6222 006c DA69     		ldr	r2, [r3, #28]
 6223 006e BB68     		ldr	r3, [r7, #8]
 6224 0070 1340     		ands	r3, r3, r2
3282:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 6225              		.loc 1 3282 50
 6226 0072 BA68     		ldr	r2, [r7, #8]
 6227 0074 9A42     		cmp	r2, r3
 6228 0076 0CBF     		ite	eq
 6229 0078 0123     		moveq	r3, #1
ARM GAS  /tmp/ccXuXBwl.s 			page 167


 6230 007a 0023     		movne	r3, #0
 6231 007c DBB2     		uxtb	r3, r3
 6232 007e 1A46     		mov	r2, r3
3282:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 6233              		.loc 1 3282 59
 6234 0080 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
3282:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
 6235              		.loc 1 3282 9
 6236 0082 9A42     		cmp	r2, r3
 6237 0084 C5D0     		beq	.L330
3303:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3304:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3305:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3306:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   return HAL_OK;
 6238              		.loc 1 3306 10
 6239 0086 0023     		movs	r3, #0
 6240              	.L329:
3307:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6241              		.loc 1 3307 1
 6242 0088 1846     		mov	r0, r3
 6243 008a 1037     		adds	r7, r7, #16
 6244              	.LCFI234:
 6245              		.cfi_def_cfa_offset 8
 6246 008c BD46     		mov	sp, r7
 6247              	.LCFI235:
 6248              		.cfi_def_cfa_register 13
 6249              		@ sp needed
 6250 008e 80BD     		pop	{r7, pc}
 6251              		.cfi_endproc
 6252              	.LFE355:
 6254              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 6255              		.align	1
 6256              		.syntax unified
 6257              		.thumb
 6258              		.thumb_func
 6259              		.fpu fpv4-sp-d16
 6261              	UART_EndTxTransfer:
 6262              	.LFB356:
3308:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3309:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3310:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3311:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3312:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
3313:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3314:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3315:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3316:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6263              		.loc 1 3316 1
 6264              		.cfi_startproc
 6265              		@ args = 0, pretend = 0, frame = 8
 6266              		@ frame_needed = 1, uses_anonymous_args = 0
 6267              		@ link register save eliminated.
 6268 0000 80B4     		push	{r7}
 6269              	.LCFI236:
 6270              		.cfi_def_cfa_offset 4
 6271              		.cfi_offset 7, -4
 6272 0002 83B0     		sub	sp, sp, #12
ARM GAS  /tmp/ccXuXBwl.s 			page 168


 6273              	.LCFI237:
 6274              		.cfi_def_cfa_offset 16
 6275 0004 00AF     		add	r7, sp, #0
 6276              	.LCFI238:
 6277              		.cfi_def_cfa_register 7
 6278 0006 7860     		str	r0, [r7, #4]
3317:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3318:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, TXFT interrupts */
3319:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE_TXFNFIE | USART_CR1_TCIE));
3320:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_TXFTIE));
3321:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3322:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
3323:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 6279              		.loc 1 3323 3
 6280 0008 7B68     		ldr	r3, [r7, #4]
 6281 000a 1B68     		ldr	r3, [r3]
 6282 000c 1A68     		ldr	r2, [r3]
 6283 000e 7B68     		ldr	r3, [r7, #4]
 6284 0010 1B68     		ldr	r3, [r3]
 6285 0012 22F0C002 		bic	r2, r2, #192
 6286 0016 1A60     		str	r2, [r3]
3324:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3325:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3326:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3327:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6287              		.loc 1 3327 17
 6288 0018 7B68     		ldr	r3, [r7, #4]
 6289 001a 2022     		movs	r2, #32
 6290 001c 5A67     		str	r2, [r3, #116]
3328:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6291              		.loc 1 3328 1
 6292 001e 00BF     		nop
 6293 0020 0C37     		adds	r7, r7, #12
 6294              	.LCFI239:
 6295              		.cfi_def_cfa_offset 4
 6296 0022 BD46     		mov	sp, r7
 6297              	.LCFI240:
 6298              		.cfi_def_cfa_register 13
 6299              		@ sp needed
 6300 0024 5DF8047B 		ldr	r7, [sp], #4
 6301              	.LCFI241:
 6302              		.cfi_restore 7
 6303              		.cfi_def_cfa_offset 0
 6304 0028 7047     		bx	lr
 6305              		.cfi_endproc
 6306              	.LFE356:
 6308              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 6309              		.align	1
 6310              		.syntax unified
 6311              		.thumb
 6312              		.thumb_func
 6313              		.fpu fpv4-sp-d16
 6315              	UART_EndRxTransfer:
 6316              	.LFB357:
3329:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3330:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3331:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
ARM GAS  /tmp/ccXuXBwl.s 			page 169


3332:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3333:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart UART handle.
3334:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3335:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3336:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3337:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6317              		.loc 1 3337 1
 6318              		.cfi_startproc
 6319              		@ args = 0, pretend = 0, frame = 8
 6320              		@ frame_needed = 1, uses_anonymous_args = 0
 6321              		@ link register save eliminated.
 6322 0000 80B4     		push	{r7}
 6323              	.LCFI242:
 6324              		.cfi_def_cfa_offset 4
 6325              		.cfi_offset 7, -4
 6326 0002 83B0     		sub	sp, sp, #12
 6327              	.LCFI243:
 6328              		.cfi_def_cfa_offset 16
 6329 0004 00AF     		add	r7, sp, #0
 6330              	.LCFI244:
 6331              		.cfi_def_cfa_register 7
 6332 0006 7860     		str	r0, [r7, #4]
3338:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3339:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3340:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
3341:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_EIE | USART_CR3_RXFTIE));
3342:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3343:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 6333              		.loc 1 3343 3
 6334 0008 7B68     		ldr	r3, [r7, #4]
 6335 000a 1B68     		ldr	r3, [r3]
 6336 000c 1A68     		ldr	r2, [r3]
 6337 000e 7B68     		ldr	r3, [r7, #4]
 6338 0010 1B68     		ldr	r3, [r3]
 6339 0012 22F49072 		bic	r2, r2, #288
 6340 0016 1A60     		str	r2, [r3]
3344:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 6341              		.loc 1 3344 3
 6342 0018 7B68     		ldr	r3, [r7, #4]
 6343 001a 1B68     		ldr	r3, [r3]
 6344 001c 9A68     		ldr	r2, [r3, #8]
 6345 001e 7B68     		ldr	r3, [r7, #4]
 6346 0020 1B68     		ldr	r3, [r3]
 6347 0022 22F00102 		bic	r2, r2, #1
 6348 0026 9A60     		str	r2, [r3, #8]
3345:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3346:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3347:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3348:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 6349              		.loc 1 3348 18
 6350 0028 7B68     		ldr	r3, [r7, #4]
 6351 002a 2022     		movs	r2, #32
 6352 002c 9A67     		str	r2, [r3, #120]
3349:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3350:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset RxIsr function pointer */
3351:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxISR = NULL;
 6353              		.loc 1 3351 16
ARM GAS  /tmp/ccXuXBwl.s 			page 170


 6354 002e 7B68     		ldr	r3, [r7, #4]
 6355 0030 0022     		movs	r2, #0
 6356 0032 1A66     		str	r2, [r3, #96]
3352:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6357              		.loc 1 3352 1
 6358 0034 00BF     		nop
 6359 0036 0C37     		adds	r7, r7, #12
 6360              	.LCFI245:
 6361              		.cfi_def_cfa_offset 4
 6362 0038 BD46     		mov	sp, r7
 6363              	.LCFI246:
 6364              		.cfi_def_cfa_register 13
 6365              		@ sp needed
 6366 003a 5DF8047B 		ldr	r7, [sp], #4
 6367              	.LCFI247:
 6368              		.cfi_restore 7
 6369              		.cfi_def_cfa_offset 0
 6370 003e 7047     		bx	lr
 6371              		.cfi_endproc
 6372              	.LFE357:
 6374              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 6375              		.align	1
 6376              		.syntax unified
 6377              		.thumb
 6378              		.thumb_func
 6379              		.fpu fpv4-sp-d16
 6381              	UART_DMATransmitCplt:
 6382              	.LFB358:
3353:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3354:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3355:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3356:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART transmit process complete callback.
3357:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3358:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3359:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3360:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
3361:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6383              		.loc 1 3361 1
 6384              		.cfi_startproc
 6385              		@ args = 0, pretend = 0, frame = 16
 6386              		@ frame_needed = 1, uses_anonymous_args = 0
 6387 0000 80B5     		push	{r7, lr}
 6388              	.LCFI248:
 6389              		.cfi_def_cfa_offset 8
 6390              		.cfi_offset 7, -8
 6391              		.cfi_offset 14, -4
 6392 0002 84B0     		sub	sp, sp, #16
 6393              	.LCFI249:
 6394              		.cfi_def_cfa_offset 24
 6395 0004 00AF     		add	r7, sp, #0
 6396              	.LCFI250:
 6397              		.cfi_def_cfa_register 7
 6398 0006 7860     		str	r0, [r7, #4]
3362:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6399              		.loc 1 3362 23
 6400 0008 7B68     		ldr	r3, [r7, #4]
 6401 000a 9B6A     		ldr	r3, [r3, #40]
ARM GAS  /tmp/ccXuXBwl.s 			page 171


 6402 000c FB60     		str	r3, [r7, #12]
3363:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3364:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Normal mode */
3365:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
 6403              		.loc 1 3365 7
 6404 000e 7B68     		ldr	r3, [r7, #4]
 6405 0010 1B68     		ldr	r3, [r3]
 6406 0012 1B68     		ldr	r3, [r3]
 6407 0014 03F02003 		and	r3, r3, #32
 6408              		.loc 1 3365 6
 6409 0018 002B     		cmp	r3, #0
 6410 001a 14D1     		bne	.L334
3366:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3367:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
 6411              		.loc 1 3367 24
 6412 001c FB68     		ldr	r3, [r7, #12]
 6413 001e 0022     		movs	r2, #0
 6414 0020 A3F85220 		strh	r2, [r3, #82]	@ movhi
3368:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3369:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by resetting the DMAT bit
3370:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        in the UART CR3 register */
3371:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 6415              		.loc 1 3371 5
 6416 0024 FB68     		ldr	r3, [r7, #12]
 6417 0026 1B68     		ldr	r3, [r3]
 6418 0028 9A68     		ldr	r2, [r3, #8]
 6419 002a FB68     		ldr	r3, [r7, #12]
 6420 002c 1B68     		ldr	r3, [r3]
 6421 002e 22F08002 		bic	r2, r2, #128
 6422 0032 9A60     		str	r2, [r3, #8]
3372:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3373:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
3374:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 6423              		.loc 1 3374 5
 6424 0034 FB68     		ldr	r3, [r7, #12]
 6425 0036 1B68     		ldr	r3, [r3]
 6426 0038 1A68     		ldr	r2, [r3]
 6427 003a FB68     		ldr	r3, [r7, #12]
 6428 003c 1B68     		ldr	r3, [r3]
 6429 003e 42F04002 		orr	r2, r2, #64
 6430 0042 1A60     		str	r2, [r3]
3375:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3376:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Circular mode */
3377:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3378:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3379:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3380:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3381:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3382:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3383:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3384:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3385:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3386:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3387:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6431              		.loc 1 3387 1
 6432 0044 02E0     		b	.L336
 6433              	.L334:
ARM GAS  /tmp/ccXuXBwl.s 			page 172


3384:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 6434              		.loc 1 3384 5
 6435 0046 F868     		ldr	r0, [r7, #12]
 6436 0048 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 6437              	.L336:
 6438              		.loc 1 3387 1
 6439 004c 00BF     		nop
 6440 004e 1037     		adds	r7, r7, #16
 6441              	.LCFI251:
 6442              		.cfi_def_cfa_offset 8
 6443 0050 BD46     		mov	sp, r7
 6444              	.LCFI252:
 6445              		.cfi_def_cfa_register 13
 6446              		@ sp needed
 6447 0052 80BD     		pop	{r7, pc}
 6448              		.cfi_endproc
 6449              	.LFE358:
 6451              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 6452              		.align	1
 6453              		.syntax unified
 6454              		.thumb
 6455              		.thumb_func
 6456              		.fpu fpv4-sp-d16
 6458              	UART_DMATxHalfCplt:
 6459              	.LFB359:
3388:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3389:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3390:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback.
3391:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3392:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3393:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3394:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3395:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6460              		.loc 1 3395 1
 6461              		.cfi_startproc
 6462              		@ args = 0, pretend = 0, frame = 16
 6463              		@ frame_needed = 1, uses_anonymous_args = 0
 6464 0000 80B5     		push	{r7, lr}
 6465              	.LCFI253:
 6466              		.cfi_def_cfa_offset 8
 6467              		.cfi_offset 7, -8
 6468              		.cfi_offset 14, -4
 6469 0002 84B0     		sub	sp, sp, #16
 6470              	.LCFI254:
 6471              		.cfi_def_cfa_offset 24
 6472 0004 00AF     		add	r7, sp, #0
 6473              	.LCFI255:
 6474              		.cfi_def_cfa_register 7
 6475 0006 7860     		str	r0, [r7, #4]
3396:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6476              		.loc 1 3396 23
 6477 0008 7B68     		ldr	r3, [r7, #4]
 6478 000a 9B6A     		ldr	r3, [r3, #40]
 6479 000c FB60     		str	r3, [r7, #12]
3397:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3398:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3399:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered Tx Half complete callback*/
ARM GAS  /tmp/ccXuXBwl.s 			page 173


3400:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3401:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3402:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Tx Half complete callback*/
3403:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 6480              		.loc 1 3403 3
 6481 000e F868     		ldr	r0, [r7, #12]
 6482 0010 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
3404:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3405:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6483              		.loc 1 3405 1
 6484 0014 00BF     		nop
 6485 0016 1037     		adds	r7, r7, #16
 6486              	.LCFI256:
 6487              		.cfi_def_cfa_offset 8
 6488 0018 BD46     		mov	sp, r7
 6489              	.LCFI257:
 6490              		.cfi_def_cfa_register 13
 6491              		@ sp needed
 6492 001a 80BD     		pop	{r7, pc}
 6493              		.cfi_endproc
 6494              	.LFE359:
 6496              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 6497              		.align	1
 6498              		.syntax unified
 6499              		.thumb
 6500              		.thumb_func
 6501              		.fpu fpv4-sp-d16
 6503              	UART_DMAReceiveCplt:
 6504              	.LFB360:
3406:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3407:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3408:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART receive process complete callback.
3409:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3410:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3411:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3412:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3413:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6505              		.loc 1 3413 1
 6506              		.cfi_startproc
 6507              		@ args = 0, pretend = 0, frame = 16
 6508              		@ frame_needed = 1, uses_anonymous_args = 0
 6509 0000 80B5     		push	{r7, lr}
 6510              	.LCFI258:
 6511              		.cfi_def_cfa_offset 8
 6512              		.cfi_offset 7, -8
 6513              		.cfi_offset 14, -4
 6514 0002 84B0     		sub	sp, sp, #16
 6515              	.LCFI259:
 6516              		.cfi_def_cfa_offset 24
 6517 0004 00AF     		add	r7, sp, #0
 6518              	.LCFI260:
 6519              		.cfi_def_cfa_register 7
 6520 0006 7860     		str	r0, [r7, #4]
3414:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6521              		.loc 1 3414 23
 6522 0008 7B68     		ldr	r3, [r7, #4]
 6523 000a 9B6A     		ldr	r3, [r3, #40]
ARM GAS  /tmp/ccXuXBwl.s 			page 174


 6524 000c FB60     		str	r3, [r7, #12]
3415:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3416:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* DMA Normal mode */
3417:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (HAL_IS_BIT_CLR(hdma->Instance->CCR, DMA_CCR_CIRC))
 6525              		.loc 1 3417 7
 6526 000e 7B68     		ldr	r3, [r7, #4]
 6527 0010 1B68     		ldr	r3, [r3]
 6528 0012 1B68     		ldr	r3, [r3]
 6529 0014 03F02003 		and	r3, r3, #32
 6530              		.loc 1 3417 6
 6531 0018 002B     		cmp	r3, #0
 6532 001a 1ED1     		bne	.L339
3418:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3419:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 6533              		.loc 1 3419 24
 6534 001c FB68     		ldr	r3, [r7, #12]
 6535 001e 0022     		movs	r2, #0
 6536 0020 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3420:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3421:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
3422:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 6537              		.loc 1 3422 5
 6538 0024 FB68     		ldr	r3, [r7, #12]
 6539 0026 1B68     		ldr	r3, [r3]
 6540 0028 1A68     		ldr	r2, [r3]
 6541 002a FB68     		ldr	r3, [r7, #12]
 6542 002c 1B68     		ldr	r3, [r3]
 6543 002e 22F48072 		bic	r2, r2, #256
 6544 0032 1A60     		str	r2, [r3]
3423:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 6545              		.loc 1 3423 5
 6546 0034 FB68     		ldr	r3, [r7, #12]
 6547 0036 1B68     		ldr	r3, [r3]
 6548 0038 9A68     		ldr	r2, [r3, #8]
 6549 003a FB68     		ldr	r3, [r7, #12]
 6550 003c 1B68     		ldr	r3, [r3]
 6551 003e 22F00102 		bic	r2, r2, #1
 6552 0042 9A60     		str	r2, [r3, #8]
3424:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3425:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
3426:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****        in the UART CR3 register */
3427:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 6553              		.loc 1 3427 5
 6554 0044 FB68     		ldr	r3, [r7, #12]
 6555 0046 1B68     		ldr	r3, [r3]
 6556 0048 9A68     		ldr	r2, [r3, #8]
 6557 004a FB68     		ldr	r3, [r7, #12]
 6558 004c 1B68     		ldr	r3, [r3]
 6559 004e 22F04002 		bic	r2, r2, #64
 6560 0052 9A60     		str	r2, [r3, #8]
3428:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3429:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3430:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 6561              		.loc 1 3430 20
 6562 0054 FB68     		ldr	r3, [r7, #12]
 6563 0056 2022     		movs	r2, #32
 6564 0058 9A67     		str	r2, [r3, #120]
ARM GAS  /tmp/ccXuXBwl.s 			page 175


 6565              	.L339:
3431:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3432:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3433:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3434:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered Rx complete callback*/
3435:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxCpltCallback(huart);
3436:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3437:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Rx complete callback*/
3438:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_RxCpltCallback(huart);
 6566              		.loc 1 3438 3
 6567 005a F868     		ldr	r0, [r7, #12]
 6568 005c FFF7FEFF 		bl	HAL_UART_RxCpltCallback
3439:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3440:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6569              		.loc 1 3440 1
 6570 0060 00BF     		nop
 6571 0062 1037     		adds	r7, r7, #16
 6572              	.LCFI261:
 6573              		.cfi_def_cfa_offset 8
 6574 0064 BD46     		mov	sp, r7
 6575              	.LCFI262:
 6576              		.cfi_def_cfa_register 13
 6577              		@ sp needed
 6578 0066 80BD     		pop	{r7, pc}
 6579              		.cfi_endproc
 6580              	.LFE360:
 6582              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 6583              		.align	1
 6584              		.syntax unified
 6585              		.thumb
 6586              		.thumb_func
 6587              		.fpu fpv4-sp-d16
 6589              	UART_DMARxHalfCplt:
 6590              	.LFB361:
3441:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3442:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3443:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback.
3444:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3445:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3446:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3447:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3448:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6591              		.loc 1 3448 1
 6592              		.cfi_startproc
 6593              		@ args = 0, pretend = 0, frame = 16
 6594              		@ frame_needed = 1, uses_anonymous_args = 0
 6595 0000 80B5     		push	{r7, lr}
 6596              	.LCFI263:
 6597              		.cfi_def_cfa_offset 8
 6598              		.cfi_offset 7, -8
 6599              		.cfi_offset 14, -4
 6600 0002 84B0     		sub	sp, sp, #16
 6601              	.LCFI264:
 6602              		.cfi_def_cfa_offset 24
 6603 0004 00AF     		add	r7, sp, #0
 6604              	.LCFI265:
 6605              		.cfi_def_cfa_register 7
ARM GAS  /tmp/ccXuXBwl.s 			page 176


 6606 0006 7860     		str	r0, [r7, #4]
3449:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6607              		.loc 1 3449 23
 6608 0008 7B68     		ldr	r3, [r7, #4]
 6609 000a 9B6A     		ldr	r3, [r3, #40]
 6610 000c FB60     		str	r3, [r7, #12]
3450:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3451:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3452:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered Rx Half complete callback*/
3453:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxHalfCpltCallback(huart);
3454:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3455:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Rx Half complete callback*/
3456:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_RxHalfCpltCallback(huart);
 6611              		.loc 1 3456 3
 6612 000e F868     		ldr	r0, [r7, #12]
 6613 0010 FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
3457:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3458:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6614              		.loc 1 3458 1
 6615 0014 00BF     		nop
 6616 0016 1037     		adds	r7, r7, #16
 6617              	.LCFI266:
 6618              		.cfi_def_cfa_offset 8
 6619 0018 BD46     		mov	sp, r7
 6620              	.LCFI267:
 6621              		.cfi_def_cfa_register 13
 6622              		@ sp needed
 6623 001a 80BD     		pop	{r7, pc}
 6624              		.cfi_endproc
 6625              	.LFE361:
 6627              		.section	.text.UART_DMAError,"ax",%progbits
 6628              		.align	1
 6629              		.syntax unified
 6630              		.thumb
 6631              		.thumb_func
 6632              		.fpu fpv4-sp-d16
 6634              	UART_DMAError:
 6635              	.LFB362:
3459:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3460:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3461:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief DMA UART communication error callback.
3462:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param hdma DMA handle.
3463:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3464:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3465:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3466:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6636              		.loc 1 3466 1
 6637              		.cfi_startproc
 6638              		@ args = 0, pretend = 0, frame = 24
 6639              		@ frame_needed = 1, uses_anonymous_args = 0
 6640 0000 80B5     		push	{r7, lr}
 6641              	.LCFI268:
 6642              		.cfi_def_cfa_offset 8
 6643              		.cfi_offset 7, -8
 6644              		.cfi_offset 14, -4
 6645 0002 86B0     		sub	sp, sp, #24
 6646              	.LCFI269:
ARM GAS  /tmp/ccXuXBwl.s 			page 177


 6647              		.cfi_def_cfa_offset 32
 6648 0004 00AF     		add	r7, sp, #0
 6649              	.LCFI270:
 6650              		.cfi_def_cfa_register 7
 6651 0006 7860     		str	r0, [r7, #4]
3467:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6652              		.loc 1 3467 23
 6653 0008 7B68     		ldr	r3, [r7, #4]
 6654 000a 9B6A     		ldr	r3, [r3, #40]
 6655 000c 7B61     		str	r3, [r7, #20]
3468:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3469:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef gstate = huart->gState;
 6656              		.loc 1 3469 31
 6657 000e 7B69     		ldr	r3, [r7, #20]
 6658 0010 5B6F     		ldr	r3, [r3, #116]
 6659 0012 3B61     		str	r3, [r7, #16]
3470:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   const HAL_UART_StateTypeDef rxstate = huart->RxState;
 6660              		.loc 1 3470 31
 6661 0014 7B69     		ldr	r3, [r7, #20]
 6662 0016 9B6F     		ldr	r3, [r3, #120]
 6663 0018 FB60     		str	r3, [r7, #12]
3471:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3472:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3473:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT)) &&
 6664              		.loc 1 3473 8
 6665 001a 7B69     		ldr	r3, [r7, #20]
 6666 001c 1B68     		ldr	r3, [r3]
 6667 001e 9B68     		ldr	r3, [r3, #8]
 6668 0020 03F08003 		and	r3, r3, #128
 6669              		.loc 1 3473 6
 6670 0024 802B     		cmp	r3, #128
 6671 0026 09D1     		bne	.L342
 6672              		.loc 1 3473 62 discriminator 1
 6673 0028 3B69     		ldr	r3, [r7, #16]
 6674 002a 212B     		cmp	r3, #33
 6675 002c 06D1     		bne	.L342
3474:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (gstate == HAL_UART_STATE_BUSY_TX))
3475:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3476:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->TxXferCount = 0U;
 6676              		.loc 1 3476 24
 6677 002e 7B69     		ldr	r3, [r7, #20]
 6678 0030 0022     		movs	r2, #0
 6679 0032 A3F85220 		strh	r2, [r3, #82]	@ movhi
3477:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 6680              		.loc 1 3477 5
 6681 0036 7869     		ldr	r0, [r7, #20]
 6682 0038 FFF7FEFF 		bl	UART_EndTxTransfer
 6683              	.L342:
3478:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3479:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3480:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3481:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if ((HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR)) &&
 6684              		.loc 1 3481 8
 6685 003c 7B69     		ldr	r3, [r7, #20]
 6686 003e 1B68     		ldr	r3, [r3]
 6687 0040 9B68     		ldr	r3, [r3, #8]
 6688 0042 03F04003 		and	r3, r3, #64
ARM GAS  /tmp/ccXuXBwl.s 			page 178


 6689              		.loc 1 3481 6
 6690 0046 402B     		cmp	r3, #64
 6691 0048 09D1     		bne	.L343
 6692              		.loc 1 3481 62 discriminator 1
 6693 004a FB68     		ldr	r3, [r7, #12]
 6694 004c 222B     		cmp	r3, #34
 6695 004e 06D1     		bne	.L343
3482:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       (rxstate == HAL_UART_STATE_BUSY_RX))
3483:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3484:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 6696              		.loc 1 3484 24
 6697 0050 7B69     		ldr	r3, [r7, #20]
 6698 0052 0022     		movs	r2, #0
 6699 0054 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3485:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 6700              		.loc 1 3485 5
 6701 0058 7869     		ldr	r0, [r7, #20]
 6702 005a FFF7FEFF 		bl	UART_EndRxTransfer
 6703              	.L343:
3486:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3487:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3488:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 6704              		.loc 1 3488 20
 6705 005e 7B69     		ldr	r3, [r7, #20]
 6706 0060 DB6F     		ldr	r3, [r3, #124]
 6707 0062 43F01002 		orr	r2, r3, #16
 6708 0066 7B69     		ldr	r3, [r7, #20]
 6709 0068 DA67     		str	r2, [r3, #124]
3489:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3490:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3491:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered error callback*/
3492:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3493:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3494:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3495:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 6710              		.loc 1 3495 3
 6711 006a 7869     		ldr	r0, [r7, #20]
 6712 006c FFF7FEFF 		bl	HAL_UART_ErrorCallback
3496:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3497:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6713              		.loc 1 3497 1
 6714 0070 00BF     		nop
 6715 0072 1837     		adds	r7, r7, #24
 6716              	.LCFI271:
 6717              		.cfi_def_cfa_offset 8
 6718 0074 BD46     		mov	sp, r7
 6719              	.LCFI272:
 6720              		.cfi_def_cfa_register 13
 6721              		@ sp needed
 6722 0076 80BD     		pop	{r7, pc}
 6723              		.cfi_endproc
 6724              	.LFE362:
 6726              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 6727              		.align	1
 6728              		.syntax unified
 6729              		.thumb
 6730              		.thumb_func
ARM GAS  /tmp/ccXuXBwl.s 			page 179


 6731              		.fpu fpv4-sp-d16
 6733              	UART_DMAAbortOnError:
 6734              	.LFB363:
3498:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3499:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3500:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3501:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3502:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3503:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3504:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3505:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3506:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6735              		.loc 1 3506 1
 6736              		.cfi_startproc
 6737              		@ args = 0, pretend = 0, frame = 16
 6738              		@ frame_needed = 1, uses_anonymous_args = 0
 6739 0000 80B5     		push	{r7, lr}
 6740              	.LCFI273:
 6741              		.cfi_def_cfa_offset 8
 6742              		.cfi_offset 7, -8
 6743              		.cfi_offset 14, -4
 6744 0002 84B0     		sub	sp, sp, #16
 6745              	.LCFI274:
 6746              		.cfi_def_cfa_offset 24
 6747 0004 00AF     		add	r7, sp, #0
 6748              	.LCFI275:
 6749              		.cfi_def_cfa_register 7
 6750 0006 7860     		str	r0, [r7, #4]
3507:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6751              		.loc 1 3507 23
 6752 0008 7B68     		ldr	r3, [r7, #4]
 6753 000a 9B6A     		ldr	r3, [r3, #40]
 6754 000c FB60     		str	r3, [r7, #12]
3508:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 6755              		.loc 1 3508 22
 6756 000e FB68     		ldr	r3, [r7, #12]
 6757 0010 0022     		movs	r2, #0
 6758 0012 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3509:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 6759              		.loc 1 3509 22
 6760 0016 FB68     		ldr	r3, [r7, #12]
 6761 0018 0022     		movs	r2, #0
 6762 001a A3F85220 		strh	r2, [r3, #82]	@ movhi
3510:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3511:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3512:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered error callback*/
3513:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3514:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3515:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3516:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 6763              		.loc 1 3516 3
 6764 001e F868     		ldr	r0, [r7, #12]
 6765 0020 FFF7FEFF 		bl	HAL_UART_ErrorCallback
3517:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3518:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6766              		.loc 1 3518 1
 6767 0024 00BF     		nop
ARM GAS  /tmp/ccXuXBwl.s 			page 180


 6768 0026 1037     		adds	r7, r7, #16
 6769              	.LCFI276:
 6770              		.cfi_def_cfa_offset 8
 6771 0028 BD46     		mov	sp, r7
 6772              	.LCFI277:
 6773              		.cfi_def_cfa_register 13
 6774              		@ sp needed
 6775 002a 80BD     		pop	{r7, pc}
 6776              		.cfi_endproc
 6777              	.LFE363:
 6779              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 6780              		.align	1
 6781              		.syntax unified
 6782              		.thumb
 6783              		.thumb_func
 6784              		.fpu fpv4-sp-d16
 6786              	UART_DMATxAbortCallback:
 6787              	.LFB364:
3519:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3520:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3521:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3522:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
3523:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3524:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3525:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3526:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3527:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3528:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3529:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6788              		.loc 1 3529 1
 6789              		.cfi_startproc
 6790              		@ args = 0, pretend = 0, frame = 16
 6791              		@ frame_needed = 1, uses_anonymous_args = 0
 6792 0000 80B5     		push	{r7, lr}
 6793              	.LCFI278:
 6794              		.cfi_def_cfa_offset 8
 6795              		.cfi_offset 7, -8
 6796              		.cfi_offset 14, -4
 6797 0002 84B0     		sub	sp, sp, #16
 6798              	.LCFI279:
 6799              		.cfi_def_cfa_offset 24
 6800 0004 00AF     		add	r7, sp, #0
 6801              	.LCFI280:
 6802              		.cfi_def_cfa_register 7
 6803 0006 7860     		str	r0, [r7, #4]
3530:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6804              		.loc 1 3530 23
 6805 0008 7B68     		ldr	r3, [r7, #4]
 6806 000a 9B6A     		ldr	r3, [r3, #40]
 6807 000c FB60     		str	r3, [r7, #12]
3531:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3532:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
 6808              		.loc 1 3532 8
 6809 000e FB68     		ldr	r3, [r7, #12]
 6810 0010 9B6E     		ldr	r3, [r3, #104]
 6811              		.loc 1 3532 36
 6812 0012 0022     		movs	r2, #0
ARM GAS  /tmp/ccXuXBwl.s 			page 181


 6813 0014 9A63     		str	r2, [r3, #56]
3533:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3534:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3535:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 6814              		.loc 1 3535 12
 6815 0016 FB68     		ldr	r3, [r7, #12]
 6816 0018 DB6E     		ldr	r3, [r3, #108]
 6817              		.loc 1 3535 6
 6818 001a 002B     		cmp	r3, #0
 6819 001c 04D0     		beq	.L346
3536:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3537:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
 6820              		.loc 1 3537 14
 6821 001e FB68     		ldr	r3, [r7, #12]
 6822 0020 DB6E     		ldr	r3, [r3, #108]
 6823              		.loc 1 3537 22
 6824 0022 9B6B     		ldr	r3, [r3, #56]
 6825              		.loc 1 3537 8
 6826 0024 002B     		cmp	r3, #0
 6827 0026 18D1     		bne	.L348
 6828              	.L346:
3538:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3539:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
3540:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3541:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3542:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3543:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3544:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 6829              		.loc 1 3544 22
 6830 0028 FB68     		ldr	r3, [r7, #12]
 6831 002a 0022     		movs	r2, #0
 6832 002c A3F85220 		strh	r2, [r3, #82]	@ movhi
3545:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 6833              		.loc 1 3545 22
 6834 0030 FB68     		ldr	r3, [r7, #12]
 6835 0032 0022     		movs	r2, #0
 6836 0034 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3546:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3547:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset errorCode */
3548:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 6837              		.loc 1 3548 20
 6838 0038 FB68     		ldr	r3, [r7, #12]
 6839 003a 0022     		movs	r2, #0
 6840 003c DA67     		str	r2, [r3, #124]
3549:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3550:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3551:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 6841              		.loc 1 3551 3
 6842 003e FB68     		ldr	r3, [r7, #12]
 6843 0040 1B68     		ldr	r3, [r3]
 6844 0042 0F22     		movs	r2, #15
 6845 0044 1A62     		str	r2, [r3, #32]
3552:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3553:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3554:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3555:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
3556:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/ccXuXBwl.s 			page 182


3557:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
3558:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3559:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3560:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3561:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3562:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 6846              		.loc 1 3562 18
 6847 0046 FB68     		ldr	r3, [r7, #12]
 6848 0048 2022     		movs	r2, #32
 6849 004a 5A67     		str	r2, [r3, #116]
3563:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 6850              		.loc 1 3563 18
 6851 004c FB68     		ldr	r3, [r7, #12]
 6852 004e 2022     		movs	r2, #32
 6853 0050 9A67     		str	r2, [r3, #120]
3564:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3565:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
3566:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3567:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3568:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3569:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3570:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3571:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 6854              		.loc 1 3571 3
 6855 0052 F868     		ldr	r0, [r7, #12]
 6856 0054 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 6857 0058 00E0     		b	.L345
 6858              	.L348:
3539:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 6859              		.loc 1 3539 7
 6860 005a 00BF     		nop
 6861              	.L345:
3572:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3573:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6862              		.loc 1 3573 1
 6863 005c 1037     		adds	r7, r7, #16
 6864              	.LCFI281:
 6865              		.cfi_def_cfa_offset 8
 6866 005e BD46     		mov	sp, r7
 6867              	.LCFI282:
 6868              		.cfi_def_cfa_register 13
 6869              		@ sp needed
 6870 0060 80BD     		pop	{r7, pc}
 6871              		.cfi_endproc
 6872              	.LFE364:
 6874              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 6875              		.align	1
 6876              		.syntax unified
 6877              		.thumb
 6878              		.thumb_func
 6879              		.fpu fpv4-sp-d16
 6881              	UART_DMARxAbortCallback:
 6882              	.LFB365:
3574:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3575:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3576:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3577:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
ARM GAS  /tmp/ccXuXBwl.s 			page 183


3578:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3579:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3580:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3581:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3582:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3583:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3584:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3585:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6883              		.loc 1 3585 1
 6884              		.cfi_startproc
 6885              		@ args = 0, pretend = 0, frame = 16
 6886              		@ frame_needed = 1, uses_anonymous_args = 0
 6887 0000 80B5     		push	{r7, lr}
 6888              	.LCFI283:
 6889              		.cfi_def_cfa_offset 8
 6890              		.cfi_offset 7, -8
 6891              		.cfi_offset 14, -4
 6892 0002 84B0     		sub	sp, sp, #16
 6893              	.LCFI284:
 6894              		.cfi_def_cfa_offset 24
 6895 0004 00AF     		add	r7, sp, #0
 6896              	.LCFI285:
 6897              		.cfi_def_cfa_register 7
 6898 0006 7860     		str	r0, [r7, #4]
3586:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 6899              		.loc 1 3586 23
 6900 0008 7B68     		ldr	r3, [r7, #4]
 6901 000a 9B6A     		ldr	r3, [r3, #40]
 6902 000c FB60     		str	r3, [r7, #12]
3587:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3588:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 6903              		.loc 1 3588 8
 6904 000e FB68     		ldr	r3, [r7, #12]
 6905 0010 DB6E     		ldr	r3, [r3, #108]
 6906              		.loc 1 3588 36
 6907 0012 0022     		movs	r2, #0
 6908 0014 9A63     		str	r2, [r3, #56]
3589:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3590:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3591:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 6909              		.loc 1 3591 12
 6910 0016 FB68     		ldr	r3, [r7, #12]
 6911 0018 9B6E     		ldr	r3, [r3, #104]
 6912              		.loc 1 3591 6
 6913 001a 002B     		cmp	r3, #0
 6914 001c 04D0     		beq	.L350
3592:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3593:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
 6915              		.loc 1 3593 14
 6916 001e FB68     		ldr	r3, [r7, #12]
 6917 0020 9B6E     		ldr	r3, [r3, #104]
 6918              		.loc 1 3593 22
 6919 0022 9B6B     		ldr	r3, [r3, #56]
 6920              		.loc 1 3593 8
 6921 0024 002B     		cmp	r3, #0
 6922 0026 22D1     		bne	.L352
 6923              	.L350:
ARM GAS  /tmp/ccXuXBwl.s 			page 184


3594:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3595:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       return;
3596:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3597:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3598:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3599:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3600:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 6924              		.loc 1 3600 22
 6925 0028 FB68     		ldr	r3, [r7, #12]
 6926 002a 0022     		movs	r2, #0
 6927 002c A3F85220 		strh	r2, [r3, #82]	@ movhi
3601:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 6928              		.loc 1 3601 22
 6929 0030 FB68     		ldr	r3, [r7, #12]
 6930 0032 0022     		movs	r2, #0
 6931 0034 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3602:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3603:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Reset errorCode */
3604:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 6932              		.loc 1 3604 20
 6933 0038 FB68     		ldr	r3, [r7, #12]
 6934 003a 0022     		movs	r2, #0
 6935 003c DA67     		str	r2, [r3, #124]
3605:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3606:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3607:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 6936              		.loc 1 3607 3
 6937 003e FB68     		ldr	r3, [r7, #12]
 6938 0040 1B68     		ldr	r3, [r3]
 6939 0042 0F22     		movs	r2, #15
 6940 0044 1A62     		str	r2, [r3, #32]
3608:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3609:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
3610:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 6941              		.loc 1 3610 3
 6942 0046 FB68     		ldr	r3, [r7, #12]
 6943 0048 1B68     		ldr	r3, [r3]
 6944 004a 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 6945 004c 9AB2     		uxth	r2, r3
 6946 004e FB68     		ldr	r3, [r7, #12]
 6947 0050 1B68     		ldr	r3, [r3]
 6948 0052 42F00802 		orr	r2, r2, #8
 6949 0056 92B2     		uxth	r2, r2
 6950 0058 1A83     		strh	r2, [r3, #24]	@ movhi
3611:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3612:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3613:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 6951              		.loc 1 3613 18
 6952 005a FB68     		ldr	r3, [r7, #12]
 6953 005c 2022     		movs	r2, #32
 6954 005e 5A67     		str	r2, [r3, #116]
3614:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 6955              		.loc 1 3614 18
 6956 0060 FB68     		ldr	r3, [r7, #12]
 6957 0062 2022     		movs	r2, #32
 6958 0064 9A67     		str	r2, [r3, #120]
3615:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccXuXBwl.s 			page 185


3616:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
3617:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3618:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3619:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3620:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3621:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3622:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 6959              		.loc 1 3622 3
 6960 0066 F868     		ldr	r0, [r7, #12]
 6961 0068 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 6962 006c 00E0     		b	.L349
 6963              	.L352:
3595:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 6964              		.loc 1 3595 7
 6965 006e 00BF     		nop
 6966              	.L349:
3623:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3624:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 6967              		.loc 1 3624 1
 6968 0070 1037     		adds	r7, r7, #16
 6969              	.LCFI286:
 6970              		.cfi_def_cfa_offset 8
 6971 0072 BD46     		mov	sp, r7
 6972              	.LCFI287:
 6973              		.cfi_def_cfa_register 13
 6974              		@ sp needed
 6975 0074 80BD     		pop	{r7, pc}
 6976              		.cfi_endproc
 6977              	.LFE365:
 6979              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 6980              		.align	1
 6981              		.syntax unified
 6982              		.thumb
 6983              		.thumb_func
 6984              		.fpu fpv4-sp-d16
 6986              	UART_DMATxOnlyAbortCallback:
 6987              	.LFB366:
3625:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3626:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3627:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3628:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3629:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3630:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3631:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3632:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3633:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3634:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3635:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3636:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 6988              		.loc 1 3636 1
 6989              		.cfi_startproc
 6990              		@ args = 0, pretend = 0, frame = 16
 6991              		@ frame_needed = 1, uses_anonymous_args = 0
 6992 0000 80B5     		push	{r7, lr}
 6993              	.LCFI288:
 6994              		.cfi_def_cfa_offset 8
 6995              		.cfi_offset 7, -8
ARM GAS  /tmp/ccXuXBwl.s 			page 186


 6996              		.cfi_offset 14, -4
 6997 0002 84B0     		sub	sp, sp, #16
 6998              	.LCFI289:
 6999              		.cfi_def_cfa_offset 24
 7000 0004 00AF     		add	r7, sp, #0
 7001              	.LCFI290:
 7002              		.cfi_def_cfa_register 7
 7003 0006 7860     		str	r0, [r7, #4]
3637:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)(hdma->Parent);
 7004              		.loc 1 3637 23
 7005 0008 7B68     		ldr	r3, [r7, #4]
 7006 000a 9B6A     		ldr	r3, [r3, #40]
 7007 000c FB60     		str	r3, [r7, #12]
3638:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3639:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxXferCount = 0U;
 7008              		.loc 1 3639 22
 7009 000e FB68     		ldr	r3, [r7, #12]
 7010 0010 0022     		movs	r2, #0
 7011 0012 A3F85220 		strh	r2, [r3, #82]	@ movhi
3640:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3641:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3642:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Flush the whole TX FIFO (if needed) */
3643:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->FifoMode == UART_FIFOMODE_ENABLE)
3644:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3645:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_TXDATA_FLUSH_REQUEST);
3646:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3647:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3648:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3649:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3650:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 7012              		.loc 1 3650 17
 7013 0016 FB68     		ldr	r3, [r7, #12]
 7014 0018 2022     		movs	r2, #32
 7015 001a 5A67     		str	r2, [r3, #116]
3651:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3652:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
3653:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3654:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3655:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3656:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3657:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3658:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 7016              		.loc 1 3658 3
 7017 001c F868     		ldr	r0, [r7, #12]
 7018 001e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
3659:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3660:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7019              		.loc 1 3660 1
 7020 0022 00BF     		nop
 7021 0024 1037     		adds	r7, r7, #16
 7022              	.LCFI291:
 7023              		.cfi_def_cfa_offset 8
 7024 0026 BD46     		mov	sp, r7
 7025              	.LCFI292:
 7026              		.cfi_def_cfa_register 13
 7027              		@ sp needed
 7028 0028 80BD     		pop	{r7, pc}
ARM GAS  /tmp/ccXuXBwl.s 			page 187


 7029              		.cfi_endproc
 7030              	.LFE366:
 7032              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 7033              		.align	1
 7034              		.syntax unified
 7035              		.thumb
 7036              		.thumb_func
 7037              		.fpu fpv4-sp-d16
 7039              	UART_DMARxOnlyAbortCallback:
 7040              	.LFB367:
3661:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3662:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3663:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3664:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3665:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3666:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3667:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  hdma DMA handle.
3668:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3669:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3670:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3671:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 7041              		.loc 1 3671 1
 7042              		.cfi_startproc
 7043              		@ args = 0, pretend = 0, frame = 16
 7044              		@ frame_needed = 1, uses_anonymous_args = 0
 7045 0000 80B5     		push	{r7, lr}
 7046              	.LCFI293:
 7047              		.cfi_def_cfa_offset 8
 7048              		.cfi_offset 7, -8
 7049              		.cfi_offset 14, -4
 7050 0002 84B0     		sub	sp, sp, #16
 7051              	.LCFI294:
 7052              		.cfi_def_cfa_offset 24
 7053 0004 00AF     		add	r7, sp, #0
 7054              	.LCFI295:
 7055              		.cfi_def_cfa_register 7
 7056 0006 7860     		str	r0, [r7, #4]
3672:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7057              		.loc 1 3672 23
 7058 0008 7B68     		ldr	r3, [r7, #4]
 7059 000a 9B6A     		ldr	r3, [r3, #40]
 7060 000c FB60     		str	r3, [r7, #12]
3673:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3674:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxXferCount = 0U;
 7061              		.loc 1 3674 22
 7062 000e FB68     		ldr	r3, [r7, #12]
 7063 0010 0022     		movs	r2, #0
 7064 0012 A3F85A20 		strh	r2, [r3, #90]	@ movhi
3675:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3676:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Clear the Error flags in the ICR register */
3677:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_CLEAR_FLAG(huart, UART_CLEAR_OREF | UART_CLEAR_NEF | UART_CLEAR_PEF | UART_CLEAR_FEF);
 7065              		.loc 1 3677 3
 7066 0016 FB68     		ldr	r3, [r7, #12]
 7067 0018 1B68     		ldr	r3, [r3]
 7068 001a 0F22     		movs	r2, #15
 7069 001c 1A62     		str	r2, [r3, #32]
3678:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
ARM GAS  /tmp/ccXuXBwl.s 			page 188


3679:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Discard the received data */
3680:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
 7070              		.loc 1 3680 3
 7071 001e FB68     		ldr	r3, [r7, #12]
 7072 0020 1B68     		ldr	r3, [r3]
 7073 0022 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 7074 0024 9AB2     		uxth	r2, r3
 7075 0026 FB68     		ldr	r3, [r7, #12]
 7076 0028 1B68     		ldr	r3, [r3]
 7077 002a 42F00802 		orr	r2, r2, #8
 7078 002e 92B2     		uxth	r2, r2
 7079 0030 1A83     		strh	r2, [r3, #24]	@ movhi
3681:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3682:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3683:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 7080              		.loc 1 3683 18
 7081 0032 FB68     		ldr	r3, [r7, #12]
 7082 0034 2022     		movs	r2, #32
 7083 0036 9A67     		str	r2, [r3, #120]
3684:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3685:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call user Abort complete callback */
3686:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3687:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3688:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3689:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3690:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3691:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 7084              		.loc 1 3691 3
 7085 0038 F868     		ldr	r0, [r7, #12]
 7086 003a FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
3692:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3693:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7087              		.loc 1 3693 1
 7088 003e 00BF     		nop
 7089 0040 1037     		adds	r7, r7, #16
 7090              	.LCFI296:
 7091              		.cfi_def_cfa_offset 8
 7092 0042 BD46     		mov	sp, r7
 7093              	.LCFI297:
 7094              		.cfi_def_cfa_register 13
 7095              		@ sp needed
 7096 0044 80BD     		pop	{r7, pc}
 7097              		.cfi_endproc
 7098              	.LFE367:
 7100              		.section	.text.UART_TxISR_8BIT,"ax",%progbits
 7101              		.align	1
 7102              		.syntax unified
 7103              		.thumb
 7104              		.thumb_func
 7105              		.fpu fpv4-sp-d16
 7107              	UART_TxISR_8BIT:
 7108              	.LFB368:
3694:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3695:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3696:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 7 or 8 bits data word length .
3697:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3698:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
ARM GAS  /tmp/ccXuXBwl.s 			page 189


3699:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3700:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3701:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3702:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT(UART_HandleTypeDef *huart)
3703:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 7109              		.loc 1 3703 1
 7110              		.cfi_startproc
 7111              		@ args = 0, pretend = 0, frame = 8
 7112              		@ frame_needed = 1, uses_anonymous_args = 0
 7113              		@ link register save eliminated.
 7114 0000 80B4     		push	{r7}
 7115              	.LCFI298:
 7116              		.cfi_def_cfa_offset 4
 7117              		.cfi_offset 7, -4
 7118 0002 83B0     		sub	sp, sp, #12
 7119              	.LCFI299:
 7120              		.cfi_def_cfa_offset 16
 7121 0004 00AF     		add	r7, sp, #0
 7122              	.LCFI300:
 7123              		.cfi_def_cfa_register 7
 7124 0006 7860     		str	r0, [r7, #4]
3704:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3705:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 7125              		.loc 1 3705 12
 7126 0008 7B68     		ldr	r3, [r7, #4]
 7127 000a 5B6F     		ldr	r3, [r3, #116]
 7128              		.loc 1 3705 6
 7129 000c 212B     		cmp	r3, #33
 7130 000e 2BD1     		bne	.L358
3706:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3707:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 7131              		.loc 1 3707 14
 7132 0010 7B68     		ldr	r3, [r7, #4]
 7133 0012 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 7134 0016 9BB2     		uxth	r3, r3
 7135              		.loc 1 3707 8
 7136 0018 002B     		cmp	r3, #0
 7137 001a 10D1     		bne	.L357
3708:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3709:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3710:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3711:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
3712:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3713:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 7138              		.loc 1 3713 7
 7139 001c 7B68     		ldr	r3, [r7, #4]
 7140 001e 1B68     		ldr	r3, [r3]
 7141 0020 1A68     		ldr	r2, [r3]
 7142 0022 7B68     		ldr	r3, [r7, #4]
 7143 0024 1B68     		ldr	r3, [r3]
 7144 0026 22F08002 		bic	r2, r2, #128
 7145 002a 1A60     		str	r2, [r3]
3714:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3715:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3716:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3717:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 7146              		.loc 1 3717 7
ARM GAS  /tmp/ccXuXBwl.s 			page 190


 7147 002c 7B68     		ldr	r3, [r7, #4]
 7148 002e 1B68     		ldr	r3, [r3]
 7149 0030 1A68     		ldr	r2, [r3]
 7150 0032 7B68     		ldr	r3, [r7, #4]
 7151 0034 1B68     		ldr	r3, [r3]
 7152 0036 42F04002 		orr	r2, r2, #64
 7153 003a 1A60     		str	r2, [r3]
3718:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3719:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
3720:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3721:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
3722:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr++;
3723:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
3724:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3725:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3726:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7154              		.loc 1 3726 1
 7155 003c 14E0     		b	.L358
 7156              	.L357:
3721:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr++;
 7157              		.loc 1 3721 46
 7158 003e 7B68     		ldr	r3, [r7, #4]
 7159 0040 DB6C     		ldr	r3, [r3, #76]
3721:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr++;
 7160              		.loc 1 3721 40
 7161 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
3721:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr++;
 7162              		.loc 1 3721 12
 7163 0044 7B68     		ldr	r3, [r7, #4]
 7164 0046 1B68     		ldr	r3, [r3]
3721:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr++;
 7165              		.loc 1 3721 30
 7166 0048 92B2     		uxth	r2, r2
3721:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr++;
 7167              		.loc 1 3721 28
 7168 004a 1A85     		strh	r2, [r3, #40]	@ movhi
3722:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 7169              		.loc 1 3722 12
 7170 004c 7B68     		ldr	r3, [r7, #4]
 7171 004e DB6C     		ldr	r3, [r3, #76]
3722:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 7172              		.loc 1 3722 24
 7173 0050 5A1C     		adds	r2, r3, #1
 7174 0052 7B68     		ldr	r3, [r7, #4]
 7175 0054 DA64     		str	r2, [r3, #76]
3723:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 7176              		.loc 1 3723 12
 7177 0056 7B68     		ldr	r3, [r7, #4]
 7178 0058 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 7179 005c 9BB2     		uxth	r3, r3
3723:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 7180              		.loc 1 3723 25
 7181 005e 013B     		subs	r3, r3, #1
 7182 0060 9AB2     		uxth	r2, r3
 7183 0062 7B68     		ldr	r3, [r7, #4]
 7184 0064 A3F85220 		strh	r2, [r3, #82]	@ movhi
 7185              	.L358:
ARM GAS  /tmp/ccXuXBwl.s 			page 191


 7186              		.loc 1 3726 1
 7187 0068 00BF     		nop
 7188 006a 0C37     		adds	r7, r7, #12
 7189              	.LCFI301:
 7190              		.cfi_def_cfa_offset 4
 7191 006c BD46     		mov	sp, r7
 7192              	.LCFI302:
 7193              		.cfi_def_cfa_register 13
 7194              		@ sp needed
 7195 006e 5DF8047B 		ldr	r7, [sp], #4
 7196              	.LCFI303:
 7197              		.cfi_restore 7
 7198              		.cfi_def_cfa_offset 0
 7199 0072 7047     		bx	lr
 7200              		.cfi_endproc
 7201              	.LFE368:
 7203              		.section	.text.UART_TxISR_16BIT,"ax",%progbits
 7204              		.align	1
 7205              		.syntax unified
 7206              		.thumb
 7207              		.thumb_func
 7208              		.fpu fpv4-sp-d16
 7210              	UART_TxISR_16BIT:
 7211              	.LFB369:
3727:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3728:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3729:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 9 bits data word length.
3730:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3731:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3732:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3733:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3734:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3735:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT(UART_HandleTypeDef *huart)
3736:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 7212              		.loc 1 3736 1
 7213              		.cfi_startproc
 7214              		@ args = 0, pretend = 0, frame = 16
 7215              		@ frame_needed = 1, uses_anonymous_args = 0
 7216              		@ link register save eliminated.
 7217 0000 80B4     		push	{r7}
 7218              	.LCFI304:
 7219              		.cfi_def_cfa_offset 4
 7220              		.cfi_offset 7, -4
 7221 0002 85B0     		sub	sp, sp, #20
 7222              	.LCFI305:
 7223              		.cfi_def_cfa_offset 24
 7224 0004 00AF     		add	r7, sp, #0
 7225              	.LCFI306:
 7226              		.cfi_def_cfa_register 7
 7227 0006 7860     		str	r0, [r7, #4]
3737:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
3738:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3739:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3740:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 7228              		.loc 1 3740 12
 7229 0008 7B68     		ldr	r3, [r7, #4]
 7230 000a 5B6F     		ldr	r3, [r3, #116]
ARM GAS  /tmp/ccXuXBwl.s 			page 192


 7231              		.loc 1 3740 6
 7232 000c 212B     		cmp	r3, #33
 7233 000e 2FD1     		bne	.L362
3741:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3742:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->TxXferCount == 0U)
 7234              		.loc 1 3742 14
 7235 0010 7B68     		ldr	r3, [r7, #4]
 7236 0012 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 7237 0016 9BB2     		uxth	r3, r3
 7238              		.loc 1 3742 8
 7239 0018 002B     		cmp	r3, #0
 7240 001a 10D1     		bne	.L361
3743:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3744:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Transmit Data Register Empty Interrupt */
3745:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3746:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE_TXFNFIE);
3747:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3748:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, USART_CR1_TXEIE);
 7241              		.loc 1 3748 7
 7242 001c 7B68     		ldr	r3, [r7, #4]
 7243 001e 1B68     		ldr	r3, [r3]
 7244 0020 1A68     		ldr	r2, [r3]
 7245 0022 7B68     		ldr	r3, [r7, #4]
 7246 0024 1B68     		ldr	r3, [r3]
 7247 0026 22F08002 		bic	r2, r2, #128
 7248 002a 1A60     		str	r2, [r3]
3749:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3750:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3751:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3752:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 7249              		.loc 1 3752 7
 7250 002c 7B68     		ldr	r3, [r7, #4]
 7251 002e 1B68     		ldr	r3, [r3]
 7252 0030 1A68     		ldr	r2, [r3]
 7253 0032 7B68     		ldr	r3, [r7, #4]
 7254 0034 1B68     		ldr	r3, [r3]
 7255 0036 42F04002 		orr	r2, r2, #64
 7256 003a 1A60     		str	r2, [r3]
3753:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3754:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     else
3755:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3756:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
3757:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
3758:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
3759:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
3760:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3761:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3762:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7257              		.loc 1 3762 1
 7258 003c 18E0     		b	.L362
 7259              	.L361:
3756:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
 7260              		.loc 1 3756 11
 7261 003e 7B68     		ldr	r3, [r7, #4]
 7262 0040 DB6C     		ldr	r3, [r3, #76]
 7263 0042 FB60     		str	r3, [r7, #12]
3757:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
ARM GAS  /tmp/ccXuXBwl.s 			page 193


 7264              		.loc 1 3757 43
 7265 0044 FB68     		ldr	r3, [r7, #12]
 7266 0046 1A88     		ldrh	r2, [r3]
3757:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 7267              		.loc 1 3757 12
 7268 0048 7B68     		ldr	r3, [r7, #4]
 7269 004a 1B68     		ldr	r3, [r3]
3757:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 7270              		.loc 1 3757 50
 7271 004c C2F30802 		ubfx	r2, r2, #0, #9
 7272 0050 92B2     		uxth	r2, r2
3757:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 7273              		.loc 1 3757 28
 7274 0052 1A85     		strh	r2, [r3, #40]	@ movhi
3758:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->TxXferCount--;
 7275              		.loc 1 3758 25
 7276 0054 7B68     		ldr	r3, [r7, #4]
 7277 0056 DB6C     		ldr	r3, [r3, #76]
 7278 0058 9A1C     		adds	r2, r3, #2
 7279 005a 7B68     		ldr	r3, [r7, #4]
 7280 005c DA64     		str	r2, [r3, #76]
3759:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 7281              		.loc 1 3759 12
 7282 005e 7B68     		ldr	r3, [r7, #4]
 7283 0060 B3F85230 		ldrh	r3, [r3, #82]	@ movhi
 7284 0064 9BB2     		uxth	r3, r3
3759:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
 7285              		.loc 1 3759 25
 7286 0066 013B     		subs	r3, r3, #1
 7287 0068 9AB2     		uxth	r2, r3
 7288 006a 7B68     		ldr	r3, [r7, #4]
 7289 006c A3F85220 		strh	r2, [r3, #82]	@ movhi
 7290              	.L362:
 7291              		.loc 1 3762 1
 7292 0070 00BF     		nop
 7293 0072 1437     		adds	r7, r7, #20
 7294              	.LCFI307:
 7295              		.cfi_def_cfa_offset 4
 7296 0074 BD46     		mov	sp, r7
 7297              	.LCFI308:
 7298              		.cfi_def_cfa_register 13
 7299              		@ sp needed
 7300 0076 5DF8047B 		ldr	r7, [sp], #4
 7301              	.LCFI309:
 7302              		.cfi_restore 7
 7303              		.cfi_def_cfa_offset 0
 7304 007a 7047     		bx	lr
 7305              		.cfi_endproc
 7306              	.LFE369:
 7308              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 7309              		.align	1
 7310              		.syntax unified
 7311              		.thumb
 7312              		.thumb_func
 7313              		.fpu fpv4-sp-d16
 7315              	UART_EndTransmit_IT:
 7316              	.LFB370:
ARM GAS  /tmp/ccXuXBwl.s 			page 194


3763:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3764:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3765:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3766:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 7 or 8 bits data word length and FIFO mode is enabled.
3767:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3768:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3769:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3770:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3771:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3772:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_8BIT_FIFOEN(UART_HandleTypeDef *huart)
3773:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3774:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  nb_tx_data;
3775:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3776:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3777:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
3778:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3779:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
3780:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3781:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
3782:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3783:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
3784:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
3785:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3786:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
3787:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3788:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3789:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break; /* force exit loop */
3790:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3791:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
3792:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3793:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (uint8_t)(*huart->pTxBuffPtr & (uint8_t)0xFF);
3794:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->pTxBuffPtr++;
3795:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxXferCount--;
3796:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3797:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
3798:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3799:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Nothing to do */
3800:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3801:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3802:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3803:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3804:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3805:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3806:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief TX interrrupt handler for 9 bits data word length and FIFO mode is enabled.
3807:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3808:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Transmit_IT().
3809:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3810:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3811:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3812:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_TxISR_16BIT_FIFOEN(UART_HandleTypeDef *huart)
3813:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
3814:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
3815:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  nb_tx_data;
3816:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3817:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3818:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
3819:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
ARM GAS  /tmp/ccXuXBwl.s 			page 195


3820:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     for (nb_tx_data = huart->NbTxDataToProcess ; nb_tx_data > 0U ; nb_tx_data--)
3821:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3822:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       if (huart->TxXferCount == 0U)
3823:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3824:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Disable the TX FIFO threshold interrupt */
3825:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         CLEAR_BIT(huart->Instance->CR3, USART_CR3_TXFTIE);
3826:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3827:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Enable the UART Transmit Complete Interrupt */
3828:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
3829:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3830:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         break; /* force exit loop */
3831:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3832:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else if (READ_BIT(huart->Instance->ISR, USART_ISR_TXE_TXFNF) != 0U)
3833:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3834:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         tmp = (uint16_t *) huart->pTxBuffPtr;
3835:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->Instance->TDR = (((uint32_t)(*tmp)) & 0x01FFUL);
3836:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->pTxBuffPtr += 2U;
3837:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         huart->TxXferCount--;
3838:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3839:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       else
3840:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       {
3841:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****         /* Nothing to do */
3842:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       }
3843:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3844:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3845:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
3846:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3847:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3848:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3849:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief  Wrap up transmission in non-blocking mode.
3850:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param  huart pointer to a UART_HandleTypeDef structure that contains
3851:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3852:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3853:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3854:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3855:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 7317              		.loc 1 3855 1
 7318              		.cfi_startproc
 7319              		@ args = 0, pretend = 0, frame = 8
 7320              		@ frame_needed = 1, uses_anonymous_args = 0
 7321 0000 80B5     		push	{r7, lr}
 7322              	.LCFI310:
 7323              		.cfi_def_cfa_offset 8
 7324              		.cfi_offset 7, -8
 7325              		.cfi_offset 14, -4
 7326 0002 82B0     		sub	sp, sp, #8
 7327              	.LCFI311:
 7328              		.cfi_def_cfa_offset 16
 7329 0004 00AF     		add	r7, sp, #0
 7330              	.LCFI312:
 7331              		.cfi_def_cfa_register 7
 7332 0006 7860     		str	r0, [r7, #4]
3856:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3857:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 7333              		.loc 1 3857 3
 7334 0008 7B68     		ldr	r3, [r7, #4]
 7335 000a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccXuXBwl.s 			page 196


 7336 000c 1A68     		ldr	r2, [r3]
 7337 000e 7B68     		ldr	r3, [r7, #4]
 7338 0010 1B68     		ldr	r3, [r3]
 7339 0012 22F04002 		bic	r2, r2, #64
 7340 0016 1A60     		str	r2, [r3]
3858:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3859:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
3860:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 7341              		.loc 1 3860 17
 7342 0018 7B68     		ldr	r3, [r7, #4]
 7343 001a 2022     		movs	r2, #32
 7344 001c 5A67     		str	r2, [r3, #116]
3861:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3862:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Cleat TxISR function pointer */
3863:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxISR = NULL;
 7345              		.loc 1 3863 16
 7346 001e 7B68     		ldr	r3, [r7, #4]
 7347 0020 0022     		movs	r2, #0
 7348 0022 5A66     		str	r2, [r3, #100]
3864:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3865:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3866:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3867:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   huart->TxCpltCallback(huart);
3868:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3869:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3870:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
 7349              		.loc 1 3870 3
 7350 0024 7868     		ldr	r0, [r7, #4]
 7351 0026 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
3871:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3872:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7352              		.loc 1 3872 1
 7353 002a 00BF     		nop
 7354 002c 0837     		adds	r7, r7, #8
 7355              	.LCFI313:
 7356              		.cfi_def_cfa_offset 8
 7357 002e BD46     		mov	sp, r7
 7358              	.LCFI314:
 7359              		.cfi_def_cfa_register 13
 7360              		@ sp needed
 7361 0030 80BD     		pop	{r7, pc}
 7362              		.cfi_endproc
 7363              	.LFE370:
 7365              		.section	.text.UART_RxISR_8BIT,"ax",%progbits
 7366              		.align	1
 7367              		.syntax unified
 7368              		.thumb
 7369              		.thumb_func
 7370              		.fpu fpv4-sp-d16
 7372              	UART_RxISR_8BIT:
 7373              	.LFB371:
3873:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3874:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3875:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief RX interrrupt handler for 7 or 8 bits data word length .
3876:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3877:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3878:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
ARM GAS  /tmp/ccXuXBwl.s 			page 197


3879:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_8BIT(UART_HandleTypeDef *huart)
3880:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 7374              		.loc 1 3880 1
 7375              		.cfi_startproc
 7376              		@ args = 0, pretend = 0, frame = 16
 7377              		@ frame_needed = 1, uses_anonymous_args = 0
 7378 0000 80B5     		push	{r7, lr}
 7379              	.LCFI315:
 7380              		.cfi_def_cfa_offset 8
 7381              		.cfi_offset 7, -8
 7382              		.cfi_offset 14, -4
 7383 0002 84B0     		sub	sp, sp, #16
 7384              	.LCFI316:
 7385              		.cfi_def_cfa_offset 24
 7386 0004 00AF     		add	r7, sp, #0
 7387              	.LCFI317:
 7388              		.cfi_def_cfa_register 7
 7389 0006 7860     		str	r0, [r7, #4]
3881:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 7390              		.loc 1 3881 12
 7391 0008 7B68     		ldr	r3, [r7, #4]
 7392 000a B3F85C30 		ldrh	r3, [r3, #92]	@ movhi
 7393 000e FB81     		strh	r3, [r7, #14]	@ movhi
3882:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  uhdata;
3883:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3884:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3885:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 7394              		.loc 1 3885 12
 7395 0010 7B68     		ldr	r3, [r7, #4]
 7396 0012 9B6F     		ldr	r3, [r3, #120]
 7397              		.loc 1 3885 6
 7398 0014 222B     		cmp	r3, #34
 7399 0016 3AD1     		bne	.L365
3886:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3887:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 7400              		.loc 1 3887 25
 7401 0018 7B68     		ldr	r3, [r7, #4]
 7402 001a 1B68     		ldr	r3, [r3]
 7403              		.loc 1 3887 12
 7404 001c 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 7405 001e BB81     		strh	r3, [r7, #12]	@ movhi
3888:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     *huart->pRxBuffPtr = (uint8_t)(uhdata & (uint8_t)uhMask);
 7406              		.loc 1 3888 26
 7407 0020 BB89     		ldrh	r3, [r7, #12]	@ movhi
 7408 0022 D9B2     		uxtb	r1, r3
 7409              		.loc 1 3888 45
 7410 0024 FB89     		ldrh	r3, [r7, #14]	@ movhi
 7411 0026 DAB2     		uxtb	r2, r3
 7412              		.loc 1 3888 11
 7413 0028 7B68     		ldr	r3, [r7, #4]
 7414 002a 5B6D     		ldr	r3, [r3, #84]
 7415              		.loc 1 3888 26
 7416 002c 0A40     		ands	r2, r2, r1
 7417 002e D2B2     		uxtb	r2, r2
 7418              		.loc 1 3888 24
 7419 0030 1A70     		strb	r2, [r3]
3889:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr++;
ARM GAS  /tmp/ccXuXBwl.s 			page 198


 7420              		.loc 1 3889 10
 7421 0032 7B68     		ldr	r3, [r7, #4]
 7422 0034 5B6D     		ldr	r3, [r3, #84]
 7423              		.loc 1 3889 22
 7424 0036 5A1C     		adds	r2, r3, #1
 7425 0038 7B68     		ldr	r3, [r7, #4]
 7426 003a 5A65     		str	r2, [r3, #84]
3890:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount--;
 7427              		.loc 1 3890 10
 7428 003c 7B68     		ldr	r3, [r7, #4]
 7429 003e B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 7430 0042 9BB2     		uxth	r3, r3
 7431              		.loc 1 3890 23
 7432 0044 013B     		subs	r3, r3, #1
 7433 0046 9AB2     		uxth	r2, r3
 7434 0048 7B68     		ldr	r3, [r7, #4]
 7435 004a A3F85A20 		strh	r2, [r3, #90]	@ movhi
3891:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3892:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 7436              		.loc 1 3892 14
 7437 004e 7B68     		ldr	r3, [r7, #4]
 7438 0050 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 7439 0054 9BB2     		uxth	r3, r3
 7440              		.loc 1 3892 8
 7441 0056 002B     		cmp	r3, #0
 7442 0058 23D1     		bne	.L367
3893:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3894:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupts */
3895:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3896:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
3897:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3898:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 7443              		.loc 1 3898 7
 7444 005a 7B68     		ldr	r3, [r7, #4]
 7445 005c 1B68     		ldr	r3, [r3]
 7446 005e 1A68     		ldr	r2, [r3]
 7447 0060 7B68     		ldr	r3, [r7, #4]
 7448 0062 1B68     		ldr	r3, [r3]
 7449 0064 22F49072 		bic	r2, r2, #288
 7450 0068 1A60     		str	r2, [r3]
3899:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3900:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3901:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3902:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 7451              		.loc 1 3902 7
 7452 006a 7B68     		ldr	r3, [r7, #4]
 7453 006c 1B68     		ldr	r3, [r3]
 7454 006e 9A68     		ldr	r2, [r3, #8]
 7455 0070 7B68     		ldr	r3, [r7, #4]
 7456 0072 1B68     		ldr	r3, [r3]
 7457 0074 22F00102 		bic	r2, r2, #1
 7458 0078 9A60     		str	r2, [r3, #8]
3903:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3904:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3905:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 7459              		.loc 1 3905 22
 7460 007a 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccXuXBwl.s 			page 199


 7461 007c 2022     		movs	r2, #32
 7462 007e 9A67     		str	r2, [r3, #120]
3906:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3907:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
3908:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = NULL;
 7463              		.loc 1 3908 20
 7464 0080 7B68     		ldr	r3, [r7, #4]
 7465 0082 0022     		movs	r2, #0
 7466 0084 1A66     		str	r2, [r3, #96]
3909:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3910:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3911:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3912:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3913:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3914:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3915:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 7467              		.loc 1 3915 7
 7468 0086 7868     		ldr	r0, [r7, #4]
 7469 0088 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
3916:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3917:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3918:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3919:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3920:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3921:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3922:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3923:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3924:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7470              		.loc 1 3924 1
 7471 008c 09E0     		b	.L367
 7472              	.L365:
3922:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 7473              		.loc 1 3922 5
 7474 008e 7B68     		ldr	r3, [r7, #4]
 7475 0090 1B68     		ldr	r3, [r3]
 7476 0092 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 7477 0094 9AB2     		uxth	r2, r3
 7478 0096 7B68     		ldr	r3, [r7, #4]
 7479 0098 1B68     		ldr	r3, [r3]
 7480 009a 42F00802 		orr	r2, r2, #8
 7481 009e 92B2     		uxth	r2, r2
 7482 00a0 1A83     		strh	r2, [r3, #24]	@ movhi
 7483              	.L367:
 7484              		.loc 1 3924 1
 7485 00a2 00BF     		nop
 7486 00a4 1037     		adds	r7, r7, #16
 7487              	.LCFI318:
 7488              		.cfi_def_cfa_offset 8
 7489 00a6 BD46     		mov	sp, r7
 7490              	.LCFI319:
 7491              		.cfi_def_cfa_register 13
 7492              		@ sp needed
 7493 00a8 80BD     		pop	{r7, pc}
 7494              		.cfi_endproc
 7495              	.LFE371:
 7497              		.section	.text.UART_RxISR_16BIT,"ax",%progbits
 7498              		.align	1
ARM GAS  /tmp/ccXuXBwl.s 			page 200


 7499              		.syntax unified
 7500              		.thumb
 7501              		.thumb_func
 7502              		.fpu fpv4-sp-d16
 7504              	UART_RxISR_16BIT:
 7505              	.LFB372:
3925:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3926:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** /**
3927:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @brief RX interrrupt handler for 9 bits data word length .
3928:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @note   Function is called under interruption only, once
3929:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   *         interruptions have been enabled by HAL_UART_Receive_IT()
3930:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @param huart UART handle.
3931:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   * @retval None
3932:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   */
3933:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** static void UART_RxISR_16BIT(UART_HandleTypeDef *huart)
3934:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** {
 7506              		.loc 1 3934 1
 7507              		.cfi_startproc
 7508              		@ args = 0, pretend = 0, frame = 16
 7509              		@ frame_needed = 1, uses_anonymous_args = 0
 7510 0000 80B5     		push	{r7, lr}
 7511              	.LCFI320:
 7512              		.cfi_def_cfa_offset 8
 7513              		.cfi_offset 7, -8
 7514              		.cfi_offset 14, -4
 7515 0002 84B0     		sub	sp, sp, #16
 7516              	.LCFI321:
 7517              		.cfi_def_cfa_offset 24
 7518 0004 00AF     		add	r7, sp, #0
 7519              	.LCFI322:
 7520              		.cfi_def_cfa_register 7
 7521 0006 7860     		str	r0, [r7, #4]
3935:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t *tmp;
3936:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t uhMask = huart->Mask;
 7522              		.loc 1 3936 12
 7523 0008 7B68     		ldr	r3, [r7, #4]
 7524 000a B3F85C30 		ldrh	r3, [r3, #92]	@ movhi
 7525 000e FB81     		strh	r3, [r7, #14]	@ movhi
3937:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   uint16_t  uhdata;
3938:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3939:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3940:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 7526              		.loc 1 3940 12
 7527 0010 7B68     		ldr	r3, [r7, #4]
 7528 0012 9B6F     		ldr	r3, [r3, #120]
 7529              		.loc 1 3940 6
 7530 0014 222B     		cmp	r3, #34
 7531 0016 3AD1     		bne	.L369
3941:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3942:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     uhdata = (uint16_t) READ_REG(huart->Instance->RDR);
 7532              		.loc 1 3942 25
 7533 0018 7B68     		ldr	r3, [r7, #4]
 7534 001a 1B68     		ldr	r3, [r3]
 7535              		.loc 1 3942 12
 7536 001c 9B8C     		ldrh	r3, [r3, #36]	@ movhi
 7537 001e BB81     		strh	r3, [r7, #12]	@ movhi
3943:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     tmp = (uint16_t *) huart->pRxBuffPtr ;
ARM GAS  /tmp/ccXuXBwl.s 			page 201


 7538              		.loc 1 3943 9
 7539 0020 7B68     		ldr	r3, [r7, #4]
 7540 0022 5B6D     		ldr	r3, [r3, #84]
 7541 0024 BB60     		str	r3, [r7, #8]
3944:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     *tmp = (uint16_t)(uhdata & uhMask);
 7542              		.loc 1 3944 12
 7543 0026 BA89     		ldrh	r2, [r7, #12]	@ movhi
 7544 0028 FB89     		ldrh	r3, [r7, #14]	@ movhi
 7545 002a 1340     		ands	r3, r3, r2
 7546 002c 9AB2     		uxth	r2, r3
 7547              		.loc 1 3944 10
 7548 002e BB68     		ldr	r3, [r7, #8]
 7549 0030 1A80     		strh	r2, [r3]	@ movhi
3945:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->pRxBuffPtr += 2U;
 7550              		.loc 1 3945 23
 7551 0032 7B68     		ldr	r3, [r7, #4]
 7552 0034 5B6D     		ldr	r3, [r3, #84]
 7553 0036 9A1C     		adds	r2, r3, #2
 7554 0038 7B68     		ldr	r3, [r7, #4]
 7555 003a 5A65     		str	r2, [r3, #84]
3946:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     huart->RxXferCount--;
 7556              		.loc 1 3946 10
 7557 003c 7B68     		ldr	r3, [r7, #4]
 7558 003e B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 7559 0042 9BB2     		uxth	r3, r3
 7560              		.loc 1 3946 23
 7561 0044 013B     		subs	r3, r3, #1
 7562 0046 9AB2     		uxth	r2, r3
 7563 0048 7B68     		ldr	r3, [r7, #4]
 7564 004a A3F85A20 		strh	r2, [r3, #90]	@ movhi
3947:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3948:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     if (huart->RxXferCount == 0U)
 7565              		.loc 1 3948 14
 7566 004e 7B68     		ldr	r3, [r7, #4]
 7567 0050 B3F85A30 		ldrh	r3, [r3, #90]	@ movhi
 7568 0054 9BB2     		uxth	r3, r3
 7569              		.loc 1 3948 8
 7570 0056 002B     		cmp	r3, #0
 7571 0058 23D1     		bne	.L371
3949:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     {
3950:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt and RXNE interrupt*/
3951:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if defined(USART_CR1_FIFOEN)
3952:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE_RXFNEIE | USART_CR1_PEIE));
3953:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3954:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 7572              		.loc 1 3954 7
 7573 005a 7B68     		ldr	r3, [r7, #4]
 7574 005c 1B68     		ldr	r3, [r3]
 7575 005e 1A68     		ldr	r2, [r3]
 7576 0060 7B68     		ldr	r3, [r7, #4]
 7577 0062 1B68     		ldr	r3, [r3]
 7578 0064 22F49072 		bic	r2, r2, #288
 7579 0068 1A60     		str	r2, [r3]
3955:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USART_CR1_FIFOEN */
3956:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3957:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3958:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
ARM GAS  /tmp/ccXuXBwl.s 			page 202


 7580              		.loc 1 3958 7
 7581 006a 7B68     		ldr	r3, [r7, #4]
 7582 006c 1B68     		ldr	r3, [r3]
 7583 006e 9A68     		ldr	r2, [r3, #8]
 7584 0070 7B68     		ldr	r3, [r7, #4]
 7585 0072 1B68     		ldr	r3, [r3]
 7586 0074 22F00102 		bic	r2, r2, #1
 7587 0078 9A60     		str	r2, [r3, #8]
3959:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3960:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3961:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 7588              		.loc 1 3961 22
 7589 007a 7B68     		ldr	r3, [r7, #4]
 7590 007c 2022     		movs	r2, #32
 7591 007e 9A67     		str	r2, [r3, #120]
3962:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3963:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /* Clear RxISR function pointer */
3964:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxISR = NULL;
 7592              		.loc 1 3964 20
 7593 0080 7B68     		ldr	r3, [r7, #4]
 7594 0082 0022     		movs	r2, #0
 7595 0084 1A66     		str	r2, [r3, #96]
3965:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** 
3966:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3967:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /*Call registered Rx complete callback*/
3968:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       huart->RxCpltCallback(huart);
3969:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #else
3970:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       /*Call legacy weak Rx complete callback*/
3971:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****       HAL_UART_RxCpltCallback(huart);
 7596              		.loc 1 3971 7
 7597 0086 7868     		ldr	r0, [r7, #4]
 7598 0088 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
3972:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3973:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     }
3974:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3975:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   else
3976:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   {
3977:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     /* Clear RXNE interrupt flag */
3978:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****     __HAL_UART_SEND_REQ(huart, UART_RXDATA_FLUSH_REQUEST);
3979:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
3980:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c **** }
 7599              		.loc 1 3980 1
 7600 008c 09E0     		b	.L371
 7601              	.L369:
3978:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_uart.c ****   }
 7602              		.loc 1 3978 5
 7603 008e 7B68     		ldr	r3, [r7, #4]
 7604 0090 1B68     		ldr	r3, [r3]
 7605 0092 1B8B     		ldrh	r3, [r3, #24]	@ movhi
 7606 0094 9AB2     		uxth	r2, r3
 7607 0096 7B68     		ldr	r3, [r7, #4]
 7608 0098 1B68     		ldr	r3, [r3]
 7609 009a 42F00802 		orr	r2, r2, #8
 7610 009e 92B2     		uxth	r2, r2
 7611 00a0 1A83     		strh	r2, [r3, #24]	@ movhi
 7612              	.L371:
 7613              		.loc 1 3980 1
ARM GAS  /tmp/ccXuXBwl.s 			page 203


 7614 00a2 00BF     		nop
 7615 00a4 1037     		adds	r7, r7, #16
 7616              	.LCFI323:
 7617              		.cfi_def_cfa_offset 8
 7618 00a6 BD46     		mov	sp, r7
 7619              	.LCFI324:
 7620              		.cfi_def_cfa_register 13
 7621              		@ sp needed
 7622 00a8 80BD     		pop	{r7, pc}
 7623              		.cfi_endproc
 7624              	.LFE372:
 7626              		.text
 7627              	.Letext0:
 7628              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 7629              		.file 3 "../Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 7630              		.file 4 "../Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 7631              		.file 5 "../Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 7632              		.file 6 "../Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 7633              		.file 7 "../Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
ARM GAS  /tmp/ccXuXBwl.s 			page 204


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_uart.c
     /tmp/ccXuXBwl.s:18     .text.HAL_UART_Init:0000000000000000 $t
     /tmp/ccXuXBwl.s:26     .text.HAL_UART_Init:0000000000000000 HAL_UART_Init
     /tmp/ccXuXBwl.s:694    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccXuXBwl.s:4809   .text.UART_SetConfig:0000000000000000 UART_SetConfig
     /tmp/ccXuXBwl.s:5818   .text.UART_AdvFeatureConfig:0000000000000000 UART_AdvFeatureConfig
     /tmp/ccXuXBwl.s:6030   .text.UART_CheckIdleState:0000000000000000 UART_CheckIdleState
     /tmp/ccXuXBwl.s:143    .text.HAL_HalfDuplex_Init:0000000000000000 $t
     /tmp/ccXuXBwl.s:150    .text.HAL_HalfDuplex_Init:0000000000000000 HAL_HalfDuplex_Init
     /tmp/ccXuXBwl.s:274    .text.HAL_LIN_Init:0000000000000000 $t
     /tmp/ccXuXBwl.s:281    .text.HAL_LIN_Init:0000000000000000 HAL_LIN_Init
     /tmp/ccXuXBwl.s:436    .text.HAL_MultiProcessor_Init:0000000000000000 $t
     /tmp/ccXuXBwl.s:443    .text.HAL_MultiProcessor_Init:0000000000000000 HAL_MultiProcessor_Init
     /tmp/ccXuXBwl.s:588    .text.HAL_UART_DeInit:0000000000000000 $t
     /tmp/ccXuXBwl.s:595    .text.HAL_UART_DeInit:0000000000000000 HAL_UART_DeInit
     /tmp/ccXuXBwl.s:737    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccXuXBwl.s:687    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccXuXBwl.s:730    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccXuXBwl.s:773    .text.HAL_UART_Transmit:0000000000000000 $t
     /tmp/ccXuXBwl.s:780    .text.HAL_UART_Transmit:0000000000000000 HAL_UART_Transmit
     /tmp/ccXuXBwl.s:6143   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 UART_WaitOnFlagUntilTimeout
     /tmp/ccXuXBwl.s:997    .text.HAL_UART_Receive:0000000000000000 $t
     /tmp/ccXuXBwl.s:1004   .text.HAL_UART_Receive:0000000000000000 HAL_UART_Receive
     /tmp/ccXuXBwl.s:1289   .text.HAL_UART_Transmit_IT:0000000000000000 $t
     /tmp/ccXuXBwl.s:1296   .text.HAL_UART_Transmit_IT:0000000000000000 HAL_UART_Transmit_IT
     /tmp/ccXuXBwl.s:1432   .text.HAL_UART_Transmit_IT:00000000000000b0 $d
     /tmp/ccXuXBwl.s:7210   .text.UART_TxISR_16BIT:0000000000000000 UART_TxISR_16BIT
     /tmp/ccXuXBwl.s:7107   .text.UART_TxISR_8BIT:0000000000000000 UART_TxISR_8BIT
     /tmp/ccXuXBwl.s:1438   .text.HAL_UART_Receive_IT:0000000000000000 $t
     /tmp/ccXuXBwl.s:1445   .text.HAL_UART_Receive_IT:0000000000000000 HAL_UART_Receive_IT
     /tmp/ccXuXBwl.s:1660   .text.HAL_UART_Receive_IT:000000000000013c $d
     /tmp/ccXuXBwl.s:7504   .text.UART_RxISR_16BIT:0000000000000000 UART_RxISR_16BIT
     /tmp/ccXuXBwl.s:7372   .text.UART_RxISR_8BIT:0000000000000000 UART_RxISR_8BIT
     /tmp/ccXuXBwl.s:1666   .text.HAL_UART_Transmit_DMA:0000000000000000 $t
     /tmp/ccXuXBwl.s:1673   .text.HAL_UART_Transmit_DMA:0000000000000000 HAL_UART_Transmit_DMA
     /tmp/ccXuXBwl.s:1850   .text.HAL_UART_Transmit_DMA:00000000000000ec $d
     /tmp/ccXuXBwl.s:6381   .text.UART_DMATransmitCplt:0000000000000000 UART_DMATransmitCplt
     /tmp/ccXuXBwl.s:6458   .text.UART_DMATxHalfCplt:0000000000000000 UART_DMATxHalfCplt
     /tmp/ccXuXBwl.s:6634   .text.UART_DMAError:0000000000000000 UART_DMAError
     /tmp/ccXuXBwl.s:1857   .text.HAL_UART_Receive_DMA:0000000000000000 $t
     /tmp/ccXuXBwl.s:1864   .text.HAL_UART_Receive_DMA:0000000000000000 HAL_UART_Receive_DMA
     /tmp/ccXuXBwl.s:2048   .text.HAL_UART_Receive_DMA:00000000000000fc $d
     /tmp/ccXuXBwl.s:6503   .text.UART_DMAReceiveCplt:0000000000000000 UART_DMAReceiveCplt
     /tmp/ccXuXBwl.s:6589   .text.UART_DMARxHalfCplt:0000000000000000 UART_DMARxHalfCplt
     /tmp/ccXuXBwl.s:2055   .text.HAL_UART_DMAPause:0000000000000000 $t
     /tmp/ccXuXBwl.s:2062   .text.HAL_UART_DMAPause:0000000000000000 HAL_UART_DMAPause
     /tmp/ccXuXBwl.s:2184   .text.HAL_UART_DMAResume:0000000000000000 $t
     /tmp/ccXuXBwl.s:2191   .text.HAL_UART_DMAResume:0000000000000000 HAL_UART_DMAResume
     /tmp/ccXuXBwl.s:2298   .text.HAL_UART_DMAStop:0000000000000000 $t
     /tmp/ccXuXBwl.s:2305   .text.HAL_UART_DMAStop:0000000000000000 HAL_UART_DMAStop
     /tmp/ccXuXBwl.s:6261   .text.UART_EndTxTransfer:0000000000000000 UART_EndTxTransfer
     /tmp/ccXuXBwl.s:6315   .text.UART_EndRxTransfer:0000000000000000 UART_EndRxTransfer
     /tmp/ccXuXBwl.s:2460   .text.HAL_UART_Abort:0000000000000000 $t
     /tmp/ccXuXBwl.s:2467   .text.HAL_UART_Abort:0000000000000000 HAL_UART_Abort
     /tmp/ccXuXBwl.s:2661   .text.HAL_UART_AbortTransmit:0000000000000000 $t
     /tmp/ccXuXBwl.s:2668   .text.HAL_UART_AbortTransmit:0000000000000000 HAL_UART_AbortTransmit
ARM GAS  /tmp/ccXuXBwl.s 			page 205


     /tmp/ccXuXBwl.s:2773   .text.HAL_UART_AbortReceive:0000000000000000 $t
     /tmp/ccXuXBwl.s:2780   .text.HAL_UART_AbortReceive:0000000000000000 HAL_UART_AbortReceive
     /tmp/ccXuXBwl.s:2908   .text.HAL_UART_Abort_IT:0000000000000000 $t
     /tmp/ccXuXBwl.s:2915   .text.HAL_UART_Abort_IT:0000000000000000 HAL_UART_Abort_IT
     /tmp/ccXuXBwl.s:4124   .text.HAL_UART_AbortCpltCallback:0000000000000000 HAL_UART_AbortCpltCallback
     /tmp/ccXuXBwl.s:3165   .text.HAL_UART_Abort_IT:0000000000000168 $d
     /tmp/ccXuXBwl.s:6786   .text.UART_DMATxAbortCallback:0000000000000000 UART_DMATxAbortCallback
     /tmp/ccXuXBwl.s:6881   .text.UART_DMARxAbortCallback:0000000000000000 UART_DMARxAbortCallback
     /tmp/ccXuXBwl.s:3171   .text.HAL_UART_AbortTransmit_IT:0000000000000000 $t
     /tmp/ccXuXBwl.s:3178   .text.HAL_UART_AbortTransmit_IT:0000000000000000 HAL_UART_AbortTransmit_IT
     /tmp/ccXuXBwl.s:4167   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 HAL_UART_AbortTransmitCpltCallback
     /tmp/ccXuXBwl.s:3303   .text.HAL_UART_AbortTransmit_IT:00000000000000a8 $d
     /tmp/ccXuXBwl.s:6986   .text.UART_DMATxOnlyAbortCallback:0000000000000000 UART_DMATxOnlyAbortCallback
     /tmp/ccXuXBwl.s:3308   .text.HAL_UART_AbortReceive_IT:0000000000000000 $t
     /tmp/ccXuXBwl.s:3315   .text.HAL_UART_AbortReceive_IT:0000000000000000 HAL_UART_AbortReceive_IT
     /tmp/ccXuXBwl.s:4210   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 HAL_UART_AbortReceiveCpltCallback
     /tmp/ccXuXBwl.s:3468   .text.HAL_UART_AbortReceive_IT:00000000000000dc $d
     /tmp/ccXuXBwl.s:7039   .text.UART_DMARxOnlyAbortCallback:0000000000000000 UART_DMARxOnlyAbortCallback
     /tmp/ccXuXBwl.s:3473   .text.HAL_UART_IRQHandler:0000000000000000 $t
     /tmp/ccXuXBwl.s:3480   .text.HAL_UART_IRQHandler:0000000000000000 HAL_UART_IRQHandler
     /tmp/ccXuXBwl.s:4081   .text.HAL_UART_ErrorCallback:0000000000000000 HAL_UART_ErrorCallback
     /tmp/ccXuXBwl.s:7315   .text.UART_EndTransmit_IT:0000000000000000 UART_EndTransmit_IT
     /tmp/ccXuXBwl.s:3897   .text.HAL_UART_IRQHandler:0000000000000258 $d
     /tmp/ccXuXBwl.s:6733   .text.UART_DMAAbortOnError:0000000000000000 UART_DMAAbortOnError
     /tmp/ccXuXBwl.s:3902   .text.HAL_UART_TxCpltCallback:0000000000000000 $t
     /tmp/ccXuXBwl.s:3909   .text.HAL_UART_TxCpltCallback:0000000000000000 HAL_UART_TxCpltCallback
     /tmp/ccXuXBwl.s:3945   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 $t
     /tmp/ccXuXBwl.s:3952   .text.HAL_UART_TxHalfCpltCallback:0000000000000000 HAL_UART_TxHalfCpltCallback
     /tmp/ccXuXBwl.s:3988   .text.HAL_UART_RxCpltCallback:0000000000000000 $t
     /tmp/ccXuXBwl.s:3995   .text.HAL_UART_RxCpltCallback:0000000000000000 HAL_UART_RxCpltCallback
     /tmp/ccXuXBwl.s:4031   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 $t
     /tmp/ccXuXBwl.s:4038   .text.HAL_UART_RxHalfCpltCallback:0000000000000000 HAL_UART_RxHalfCpltCallback
     /tmp/ccXuXBwl.s:4074   .text.HAL_UART_ErrorCallback:0000000000000000 $t
     /tmp/ccXuXBwl.s:4117   .text.HAL_UART_AbortCpltCallback:0000000000000000 $t
     /tmp/ccXuXBwl.s:4160   .text.HAL_UART_AbortTransmitCpltCallback:0000000000000000 $t
     /tmp/ccXuXBwl.s:4203   .text.HAL_UART_AbortReceiveCpltCallback:0000000000000000 $t
     /tmp/ccXuXBwl.s:4246   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 $t
     /tmp/ccXuXBwl.s:4253   .text.HAL_MultiProcessor_EnableMuteMode:0000000000000000 HAL_MultiProcessor_EnableMuteMode
     /tmp/ccXuXBwl.s:4319   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 $t
     /tmp/ccXuXBwl.s:4326   .text.HAL_MultiProcessor_DisableMuteMode:0000000000000000 HAL_MultiProcessor_DisableMuteMode
     /tmp/ccXuXBwl.s:4392   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 $t
     /tmp/ccXuXBwl.s:4399   .text.HAL_MultiProcessor_EnterMuteMode:0000000000000000 HAL_MultiProcessor_EnterMuteMode
     /tmp/ccXuXBwl.s:4445   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 $t
     /tmp/ccXuXBwl.s:4452   .text.HAL_HalfDuplex_EnableTransmitter:0000000000000000 HAL_HalfDuplex_EnableTransmitter
     /tmp/ccXuXBwl.s:4532   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 $t
     /tmp/ccXuXBwl.s:4539   .text.HAL_HalfDuplex_EnableReceiver:0000000000000000 HAL_HalfDuplex_EnableReceiver
     /tmp/ccXuXBwl.s:4619   .text.HAL_LIN_SendBreak:0000000000000000 $t
     /tmp/ccXuXBwl.s:4626   .text.HAL_LIN_SendBreak:0000000000000000 HAL_LIN_SendBreak
     /tmp/ccXuXBwl.s:4700   .text.HAL_UART_GetState:0000000000000000 $t
     /tmp/ccXuXBwl.s:4707   .text.HAL_UART_GetState:0000000000000000 HAL_UART_GetState
     /tmp/ccXuXBwl.s:4755   .text.HAL_UART_GetError:0000000000000000 $t
     /tmp/ccXuXBwl.s:4762   .text.HAL_UART_GetError:0000000000000000 HAL_UART_GetError
     /tmp/ccXuXBwl.s:4802   .text.UART_SetConfig:0000000000000000 $t
     /tmp/ccXuXBwl.s:4928   .text.UART_SetConfig:00000000000000a8 $d
     /tmp/ccXuXBwl.s:4932   .text.UART_SetConfig:00000000000000b8 $t
     /tmp/ccXuXBwl.s:4975   .text.UART_SetConfig:0000000000000100 $d
     /tmp/ccXuXBwl.s:4988   .text.UART_SetConfig:0000000000000134 $t
ARM GAS  /tmp/ccXuXBwl.s 			page 206


     /tmp/ccXuXBwl.s:5217   .text.UART_SetConfig:00000000000002c8 $d
     /tmp/ccXuXBwl.s:5227   .text.UART_SetConfig:00000000000002e8 $t
     /tmp/ccXuXBwl.s:5245   .text.UART_SetConfig:0000000000000308 $d
     /tmp/ccXuXBwl.s:5254   .text.UART_SetConfig:000000000000032c $t
     /tmp/ccXuXBwl.s:5324   .text.UART_SetConfig:0000000000000390 $d
     /tmp/ccXuXBwl.s:5333   .text.UART_SetConfig:00000000000003b4 $t
     /tmp/ccXuXBwl.s:5514   .text.UART_SetConfig:0000000000000528 $d
     /tmp/ccXuXBwl.s:5523   .text.UART_SetConfig:000000000000054c $t
     /tmp/ccXuXBwl.s:5612   .text.UART_SetConfig:00000000000005dc $d
     /tmp/ccXuXBwl.s:5617   .text.UART_SetConfig:00000000000005e8 $t
     /tmp/ccXuXBwl.s:5668   .text.UART_SetConfig:0000000000000644 $d
     /tmp/ccXuXBwl.s:5677   .text.UART_SetConfig:0000000000000668 $t
     /tmp/ccXuXBwl.s:5811   .text.UART_AdvFeatureConfig:0000000000000000 $t
     /tmp/ccXuXBwl.s:6023   .text.UART_CheckIdleState:0000000000000000 $t
     /tmp/ccXuXBwl.s:6136   .text.UART_WaitOnFlagUntilTimeout:0000000000000000 $t
     /tmp/ccXuXBwl.s:6255   .text.UART_EndTxTransfer:0000000000000000 $t
     /tmp/ccXuXBwl.s:6309   .text.UART_EndRxTransfer:0000000000000000 $t
     /tmp/ccXuXBwl.s:6375   .text.UART_DMATransmitCplt:0000000000000000 $t
     /tmp/ccXuXBwl.s:6452   .text.UART_DMATxHalfCplt:0000000000000000 $t
     /tmp/ccXuXBwl.s:6497   .text.UART_DMAReceiveCplt:0000000000000000 $t
     /tmp/ccXuXBwl.s:6583   .text.UART_DMARxHalfCplt:0000000000000000 $t
     /tmp/ccXuXBwl.s:6628   .text.UART_DMAError:0000000000000000 $t
     /tmp/ccXuXBwl.s:6727   .text.UART_DMAAbortOnError:0000000000000000 $t
     /tmp/ccXuXBwl.s:6780   .text.UART_DMATxAbortCallback:0000000000000000 $t
     /tmp/ccXuXBwl.s:6875   .text.UART_DMARxAbortCallback:0000000000000000 $t
     /tmp/ccXuXBwl.s:6980   .text.UART_DMATxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccXuXBwl.s:7033   .text.UART_DMARxOnlyAbortCallback:0000000000000000 $t
     /tmp/ccXuXBwl.s:7101   .text.UART_TxISR_8BIT:0000000000000000 $t
     /tmp/ccXuXBwl.s:7204   .text.UART_TxISR_16BIT:0000000000000000 $t
     /tmp/ccXuXBwl.s:7309   .text.UART_EndTransmit_IT:0000000000000000 $t
     /tmp/ccXuXBwl.s:7366   .text.UART_RxISR_8BIT:0000000000000000 $t
     /tmp/ccXuXBwl.s:7498   .text.UART_RxISR_16BIT:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
HAL_UARTEx_WakeupCallback
__aeabi_uldivmod
HAL_RCC_GetPCLK1Freq
HAL_RCC_GetSysClockFreq
HAL_RCC_GetPCLK2Freq
