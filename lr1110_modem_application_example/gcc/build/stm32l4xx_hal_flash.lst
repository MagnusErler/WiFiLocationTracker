ARM GAS  /tmp/ccwP94xg.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_hal_flash.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	pFlash
  18              		.section	.data.pFlash,"aw"
  19              		.align	2
  22              	pFlash:
  23 0000 00       		.byte	0
  24 0001 000000   		.space	3
  25 0004 00000000 		.word	0
  26 0008 00       		.byte	0
  27 0009 000000   		.space	3
  28 000c 00000000 		.word	0
  29 0010 01000000 		.word	1
  30 0014 00000000 		.word	0
  31 0018 00000000 		.word	0
  32 001c 00       		.byte	0
  33 001d 000000   		.space	3
  34              		.section	.text.HAL_FLASH_Program,"ax",%progbits
  35              		.align	1
  36              		.global	HAL_FLASH_Program
  37              		.arch armv7e-m
  38              		.syntax unified
  39              		.thumb
  40              		.thumb_func
  41              		.fpu fpv4-sp-d16
  43              	HAL_FLASH_Program:
  44              	.LFB313:
  45              		.file 1 "../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c"
   1:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /**
   2:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   ******************************************************************************
   3:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @file    stm32l4xx_hal_flash.c
   4:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @author  MCD Application Team
   5:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @brief   FLASH HAL module driver.
   6:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *          This file provides firmware functions to manage the following
   7:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *          functionalities of the internal FLASH memory:
   8:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *           + Program operations functions
   9:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *           + Memory Control functions
  10:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *           + Peripheral Errors functions
  11:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *
  12:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****  @verbatim
  13:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   ==============================================================================
  14:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****                         ##### FLASH peripheral features #####
  15:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   ==============================================================================
ARM GAS  /tmp/ccwP94xg.s 			page 2


  16:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
  17:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   [..] The Flash memory interface manages CPU AHB I-Code and D-Code accesses
  18:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****        to the Flash memory. It implements the erase and program Flash memory operations
  19:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****        and the read and write protection mechanisms.
  20:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
  21:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   [..] The Flash memory interface accelerates code execution with a system of instruction
  22:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****        prefetch and cache lines.
  23:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
  24:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   [..] The FLASH main features are:
  25:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       (+) Flash memory read operations
  26:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       (+) Flash memory program/erase operations
  27:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       (+) Read / write protections
  28:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       (+) Option bytes programming
  29:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       (+) Prefetch on I-Code
  30:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       (+) 32 cache lines of 4*64 bits on I-Code
  31:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       (+) 8 cache lines of 4*64 bits on D-Code
  32:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       (+) Error code correction (ECC) : Data in flash are 72-bits word
  33:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****           (8 bits added per double word)
  34:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
  35:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
  36:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****                         ##### How to use this driver #####
  37:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****  ==============================================================================
  38:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     [..]
  39:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       This driver provides functions and macros to configure and program the FLASH
  40:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       memory of all STM32L4xx devices.
  41:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
  42:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       (#) Flash Memory IO Programming functions:
  43:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****            (++) Lock and Unlock the FLASH interface using HAL_FLASH_Unlock() and
  44:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****                 HAL_FLASH_Lock() functions
  45:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****            (++) Program functions: double word and fast program (full row programming)
  46:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****            (++) There Two modes of programming :
  47:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****             (+++) Polling mode using HAL_FLASH_Program() function
  48:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****             (+++) Interrupt mode using HAL_FLASH_Program_IT() function
  49:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
  50:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       (#) Interrupts and flags management functions :
  51:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****            (++) Handle FLASH interrupts by calling HAL_FLASH_IRQHandler()
  52:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****            (++) Callback functions are called when the flash operations are finished :
  53:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****                 HAL_FLASH_EndOfOperationCallback() when everything is ok, otherwise
  54:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****                 HAL_FLASH_OperationErrorCallback()
  55:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****            (++) Get error flag status by calling HAL_GetError()
  56:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
  57:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       (#) Option bytes management functions :
  58:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****            (++) Lock and Unlock the option bytes using HAL_FLASH_OB_Unlock() and
  59:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****                 HAL_FLASH_OB_Lock() functions
  60:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****            (++) Launch the reload of the option bytes using HAL_FLASH_Launch() function.
  61:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****                 In this case, a reset is generated
  62:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
  63:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     [..]
  64:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       In addition to these functions, this driver includes a set of macros allowing
  65:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       to handle the following operations:
  66:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****        (+) Set the latency
  67:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****        (+) Enable/Disable the prefetch buffer
  68:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****        (+) Enable/Disable the Instruction cache and the Data cache
  69:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****        (+) Reset the Instruction cache and the Data cache
  70:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****        (+) Enable/Disable the Flash power-down during low-power run and sleep modes
  71:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****        (+) Enable/Disable the Flash interrupts
  72:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****        (+) Monitor the Flash flags status
ARM GAS  /tmp/ccwP94xg.s 			page 3


  73:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
  74:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****  @endverbatim
  75:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   ******************************************************************************
  76:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @attention
  77:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *
  78:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  79:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * All rights reserved.</center></h2>
  80:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *
  81:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  82:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * the "License"; You may not use this file except in compliance with the
  83:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * License. You may obtain a copy of the License at:
  84:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *                       opensource.org/licenses/BSD-3-Clause
  85:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *
  86:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   ******************************************************************************
  87:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   */
  88:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
  89:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /* Includes ------------------------------------------------------------------*/
  90:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** #include "stm32l4xx_hal.h"
  91:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
  92:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /** @addtogroup STM32L4xx_HAL_Driver
  93:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @{
  94:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   */
  95:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
  96:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /** @defgroup FLASH FLASH
  97:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @brief FLASH HAL module driver
  98:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @{
  99:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   */
 100:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 101:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** #ifdef HAL_FLASH_MODULE_ENABLED
 102:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 103:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /* Private typedef -----------------------------------------------------------*/
 104:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /* Private defines -----------------------------------------------------------*/
 105:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** #if defined (STM32L4R5xx) || defined (STM32L4R7xx) || defined (STM32L4R9xx) || defined (STM32L4S5xx
 106:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** #define FLASH_NB_DOUBLE_WORDS_IN_ROW  64
 107:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** #else
 108:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** #define FLASH_NB_DOUBLE_WORDS_IN_ROW  32
 109:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** #endif
 110:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /* Private macros ------------------------------------------------------------*/
 111:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /* Private variables ---------------------------------------------------------*/
 112:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /** @defgroup FLASH_Private_Variables FLASH Private Variables
 113:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****  * @{
 114:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****  */
 115:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /**
 116:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @brief  Variable used for Program/Erase sectors under interruption
 117:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   */
 118:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** FLASH_ProcessTypeDef pFlash = {.Lock = HAL_UNLOCKED, \
 119:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****                                .ErrorCode = HAL_FLASH_ERROR_NONE, \
 120:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****                                .ProcedureOnGoing = FLASH_PROC_NONE, \
 121:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****                                .Address = 0U, \
 122:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****                                .Bank = FLASH_BANK_1, \
 123:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****                                .Page = 0U, \
 124:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****                                .NbPagesToErase = 0U, \
 125:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****                                .CacheToReactivate = FLASH_CACHE_DISABLED};
 126:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /**
 127:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @}
 128:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   */
 129:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
ARM GAS  /tmp/ccwP94xg.s 			page 4


 130:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /* Private function prototypes -----------------------------------------------*/
 131:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /** @defgroup FLASH_Private_Functions FLASH Private Functions
 132:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****  * @{
 133:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****  */
 134:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** static void          FLASH_Program_DoubleWord(uint32_t Address, uint64_t Data);
 135:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** static void          FLASH_Program_Fast(uint32_t Address, uint32_t DataAddress);
 136:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /**
 137:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @}
 138:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   */
 139:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 140:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /* Exported functions --------------------------------------------------------*/
 141:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions FLASH Exported Functions
 142:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @{
 143:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   */
 144:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 145:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group1 Programming operation functions
 146:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****  *  @brief   Programming operation functions
 147:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****  *
 148:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** @verbatim
 149:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****  ===============================================================================
 150:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****                   ##### Programming operation functions #####
 151:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****  ===============================================================================
 152:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     [..]
 153:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     This subsection provides a set of functions allowing to manage the FLASH
 154:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     program operations.
 155:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 156:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** @endverbatim
 157:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @{
 158:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   */
 159:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 160:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /**
 161:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @brief  Program double word or fast program of a row at a specified address.
 162:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @param  TypeProgram:  Indicate the way to program at a specified address.
 163:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *                           This parameter can be a value of @ref FLASH_Type_Program
 164:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @param  Address:  specifies the address to be programmed.
 165:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @param  Data: specifies the data to be programmed
 166:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *                This parameter is the data for the double word program and the address where
 167:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *                are stored the data for the row fast program
 168:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *
 169:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
 170:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   */
 171:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Program(uint32_t TypeProgram, uint32_t Address, uint64_t Data)
 172:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** {
  46              		.loc 1 172 1
  47              		.cfi_startproc
  48              		@ args = 0, pretend = 0, frame = 24
  49              		@ frame_needed = 1, uses_anonymous_args = 0
  50 0000 80B5     		push	{r7, lr}
  51              	.LCFI0:
  52              		.cfi_def_cfa_offset 8
  53              		.cfi_offset 7, -8
  54              		.cfi_offset 14, -4
  55 0002 86B0     		sub	sp, sp, #24
  56              	.LCFI1:
  57              		.cfi_def_cfa_offset 32
  58 0004 00AF     		add	r7, sp, #0
  59              	.LCFI2:
ARM GAS  /tmp/ccwP94xg.s 			page 5


  60              		.cfi_def_cfa_register 7
  61 0006 F860     		str	r0, [r7, #12]
  62 0008 B960     		str	r1, [r7, #8]
  63 000a C7E90023 		strd	r2, [r7]
 173:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   HAL_StatusTypeDef status;
 174:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   uint32_t prog_bit = 0;
  64              		.loc 1 174 12
  65 000e 0023     		movs	r3, #0
  66 0010 3B61     		str	r3, [r7, #16]
 175:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 176:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* Process Locked */
 177:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   __HAL_LOCK(&pFlash);
  67              		.loc 1 177 3
  68 0012 2F4B     		ldr	r3, .L11
  69 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  70 0016 012B     		cmp	r3, #1
  71 0018 01D1     		bne	.L2
  72              		.loc 1 177 3 is_stmt 0 discriminator 1
  73 001a 0223     		movs	r3, #2
  74 001c 53E0     		b	.L3
  75              	.L2:
  76              		.loc 1 177 3 discriminator 2
  77 001e 2C4B     		ldr	r3, .L11
  78 0020 0122     		movs	r2, #1
  79 0022 1A70     		strb	r2, [r3]
 178:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 179:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* Check the parameters */
 180:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 181:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 182:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* Wait for last operation to be completed */
 183:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
  80              		.loc 1 183 12 is_stmt 1 discriminator 2
  81 0024 4CF25030 		movw	r0, #50000
  82 0028 FFF7FEFF 		bl	FLASH_WaitForLastOperation
  83 002c 0346     		mov	r3, r0
  84 002e FB75     		strb	r3, [r7, #23]
 184:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 185:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   if(status == HAL_OK)
  85              		.loc 1 185 5 discriminator 2
  86 0030 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
  87 0032 002B     		cmp	r3, #0
  88 0034 43D1     		bne	.L4
 186:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   {
 187:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
  89              		.loc 1 187 22
  90 0036 264B     		ldr	r3, .L11
  91 0038 0022     		movs	r2, #0
  92 003a 5A60     		str	r2, [r3, #4]
 188:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 189:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     /* Deactivate the data cache if they are activated to avoid data misbehavior */
 190:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     if(READ_BIT(FLASH->ACR, FLASH_ACR_DCEN) != 0U)
  93              		.loc 1 190 8
  94 003c 254B     		ldr	r3, .L11+4
  95 003e 1B68     		ldr	r3, [r3]
  96 0040 03F48063 		and	r3, r3, #1024
  97              		.loc 1 190 7
  98 0044 002B     		cmp	r3, #0
ARM GAS  /tmp/ccwP94xg.s 			page 6


  99 0046 09D0     		beq	.L5
 191:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     {
 192:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       /* Disable data cache  */
 193:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       __HAL_FLASH_DATA_CACHE_DISABLE();
 100              		.loc 1 193 7
 101 0048 224B     		ldr	r3, .L11+4
 102 004a 1B68     		ldr	r3, [r3]
 103 004c 214A     		ldr	r2, .L11+4
 104 004e 23F48063 		bic	r3, r3, #1024
 105 0052 1360     		str	r3, [r2]
 194:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       pFlash.CacheToReactivate = FLASH_CACHE_DCACHE_ENABLED;
 106              		.loc 1 194 32
 107 0054 1E4B     		ldr	r3, .L11
 108 0056 0222     		movs	r2, #2
 109 0058 1A77     		strb	r2, [r3, #28]
 110 005a 02E0     		b	.L6
 111              	.L5:
 195:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     }
 196:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     else
 197:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     {
 198:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       pFlash.CacheToReactivate = FLASH_CACHE_DISABLED;
 112              		.loc 1 198 32
 113 005c 1C4B     		ldr	r3, .L11
 114 005e 0022     		movs	r2, #0
 115 0060 1A77     		strb	r2, [r3, #28]
 116              	.L6:
 199:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     }
 200:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 201:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     if(TypeProgram == FLASH_TYPEPROGRAM_DOUBLEWORD)
 117              		.loc 1 201 7
 118 0062 FB68     		ldr	r3, [r7, #12]
 119 0064 002B     		cmp	r3, #0
 120 0066 07D1     		bne	.L7
 202:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     {
 203:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       /* Program double-word (64-bit) at a specified address */
 204:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       FLASH_Program_DoubleWord(Address, Data);
 121              		.loc 1 204 7
 122 0068 D7E90023 		ldrd	r2, [r7]
 123 006c B868     		ldr	r0, [r7, #8]
 124 006e FFF7FEFF 		bl	FLASH_Program_DoubleWord
 205:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       prog_bit = FLASH_CR_PG;
 125              		.loc 1 205 16
 126 0072 0123     		movs	r3, #1
 127 0074 3B61     		str	r3, [r7, #16]
 128 0076 10E0     		b	.L8
 129              	.L7:
 206:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     }
 207:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     else if((TypeProgram == FLASH_TYPEPROGRAM_FAST) || (TypeProgram == FLASH_TYPEPROGRAM_FAST_AND_L
 130              		.loc 1 207 12
 131 0078 FB68     		ldr	r3, [r7, #12]
 132 007a 012B     		cmp	r3, #1
 133 007c 02D0     		beq	.L9
 134              		.loc 1 207 53 discriminator 1
 135 007e FB68     		ldr	r3, [r7, #12]
 136 0080 022B     		cmp	r3, #2
 137 0082 0AD1     		bne	.L8
 138              	.L9:
ARM GAS  /tmp/ccwP94xg.s 			page 7


 208:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     {
 209:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       /* Fast program a 32 row double-word (64-bit) at a specified address */
 210:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       FLASH_Program_Fast(Address, (uint32_t)Data);
 139              		.loc 1 210 7
 140 0084 3B68     		ldr	r3, [r7]
 141 0086 1946     		mov	r1, r3
 142 0088 B868     		ldr	r0, [r7, #8]
 143 008a FFF7FEFF 		bl	FLASH_Program_Fast
 211:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 212:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       /* If it is the last row, the bit will be cleared at the end of the operation */
 213:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       if(TypeProgram == FLASH_TYPEPROGRAM_FAST_AND_LAST)
 144              		.loc 1 213 9
 145 008e FB68     		ldr	r3, [r7, #12]
 146 0090 022B     		cmp	r3, #2
 147 0092 02D1     		bne	.L8
 214:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       {
 215:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****         prog_bit = FLASH_CR_FSTPG;
 148              		.loc 1 215 18
 149 0094 4FF48023 		mov	r3, #262144
 150 0098 3B61     		str	r3, [r7, #16]
 151              	.L8:
 216:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       }
 217:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     }
 218:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     else
 219:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     {
 220:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       /* Nothing to do */
 221:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     }
 222:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 223:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     /* Wait for last operation to be completed */
 224:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 152              		.loc 1 224 14
 153 009a 4CF25030 		movw	r0, #50000
 154 009e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 155 00a2 0346     		mov	r3, r0
 156 00a4 FB75     		strb	r3, [r7, #23]
 225:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 226:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     /* If the program operation is completed, disable the PG or FSTPG Bit */
 227:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     if (prog_bit != 0U)
 157              		.loc 1 227 8
 158 00a6 3B69     		ldr	r3, [r7, #16]
 159 00a8 002B     		cmp	r3, #0
 160 00aa 06D0     		beq	.L10
 228:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     {
 229:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       CLEAR_BIT(FLASH->CR, prog_bit);
 161              		.loc 1 229 7
 162 00ac 094B     		ldr	r3, .L11+4
 163 00ae 5A69     		ldr	r2, [r3, #20]
 164 00b0 3B69     		ldr	r3, [r7, #16]
 165 00b2 DB43     		mvns	r3, r3
 166 00b4 0749     		ldr	r1, .L11+4
 167 00b6 1340     		ands	r3, r3, r2
 168 00b8 4B61     		str	r3, [r1, #20]
 169              	.L10:
 230:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     }
 231:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 232:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     /* Flush the caches to be sure of the data consistency */
 233:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     FLASH_FlushCaches();
ARM GAS  /tmp/ccwP94xg.s 			page 8


 170              		.loc 1 233 5
 171 00ba FFF7FEFF 		bl	FLASH_FlushCaches
 172              	.L4:
 234:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   }
 235:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 236:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* Process Unlocked */
 237:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   __HAL_UNLOCK(&pFlash);
 173              		.loc 1 237 3
 174 00be 044B     		ldr	r3, .L11
 175 00c0 0022     		movs	r2, #0
 176 00c2 1A70     		strb	r2, [r3]
 238:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 239:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   return status;
 177              		.loc 1 239 10
 178 00c4 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 179              	.L3:
 240:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** }
 180              		.loc 1 240 1
 181 00c6 1846     		mov	r0, r3
 182 00c8 1837     		adds	r7, r7, #24
 183              	.LCFI3:
 184              		.cfi_def_cfa_offset 8
 185 00ca BD46     		mov	sp, r7
 186              	.LCFI4:
 187              		.cfi_def_cfa_register 13
 188              		@ sp needed
 189 00cc 80BD     		pop	{r7, pc}
 190              	.L12:
 191 00ce 00BF     		.align	2
 192              	.L11:
 193 00d0 00000000 		.word	pFlash
 194 00d4 00200240 		.word	1073881088
 195              		.cfi_endproc
 196              	.LFE313:
 198              		.section	.text.HAL_FLASH_Program_IT,"ax",%progbits
 199              		.align	1
 200              		.global	HAL_FLASH_Program_IT
 201              		.syntax unified
 202              		.thumb
 203              		.thumb_func
 204              		.fpu fpv4-sp-d16
 206              	HAL_FLASH_Program_IT:
 207              	.LFB314:
 241:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 242:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /**
 243:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @brief  Program double word or fast program of a row at a specified address with interrupt enab
 244:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @param  TypeProgram:  Indicate the way to program at a specified address.
 245:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *                           This parameter can be a value of @ref FLASH_Type_Program
 246:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @param  Address:  specifies the address to be programmed.
 247:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @param  Data: specifies the data to be programmed
 248:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *                This parameter is the data for the double word program and the address where
 249:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *                are stored the data for the row fast program
 250:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *
 251:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @retval HAL Status
 252:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   */
 253:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Program_IT(uint32_t TypeProgram, uint32_t Address, uint64_t Data)
 254:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** {
ARM GAS  /tmp/ccwP94xg.s 			page 9


 208              		.loc 1 254 1
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 24
 211              		@ frame_needed = 1, uses_anonymous_args = 0
 212 0000 80B5     		push	{r7, lr}
 213              	.LCFI5:
 214              		.cfi_def_cfa_offset 8
 215              		.cfi_offset 7, -8
 216              		.cfi_offset 14, -4
 217 0002 86B0     		sub	sp, sp, #24
 218              	.LCFI6:
 219              		.cfi_def_cfa_offset 32
 220 0004 00AF     		add	r7, sp, #0
 221              	.LCFI7:
 222              		.cfi_def_cfa_register 7
 223 0006 F860     		str	r0, [r7, #12]
 224 0008 B960     		str	r1, [r7, #8]
 225 000a C7E90023 		strd	r2, [r7]
 255:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 226              		.loc 1 255 21
 227 000e 0023     		movs	r3, #0
 228 0010 FB75     		strb	r3, [r7, #23]
 256:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 257:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* Check the parameters */
 258:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   assert_param(IS_FLASH_TYPEPROGRAM(TypeProgram));
 259:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 260:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* Process Locked */
 261:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   __HAL_LOCK(&pFlash);
 229              		.loc 1 261 3
 230 0012 254B     		ldr	r3, .L23
 231 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 232 0016 012B     		cmp	r3, #1
 233 0018 01D1     		bne	.L14
 234              		.loc 1 261 3 is_stmt 0 discriminator 1
 235 001a 0223     		movs	r3, #2
 236 001c 40E0     		b	.L15
 237              	.L14:
 238              		.loc 1 261 3 discriminator 2
 239 001e 224B     		ldr	r3, .L23
 240 0020 0122     		movs	r2, #1
 241 0022 1A70     		strb	r2, [r3]
 262:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 263:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 242              		.loc 1 263 20 is_stmt 1 discriminator 2
 243 0024 204B     		ldr	r3, .L23
 244 0026 0022     		movs	r2, #0
 245 0028 5A60     		str	r2, [r3, #4]
 264:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 265:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* Deactivate the data cache if they are activated to avoid data misbehavior */
 266:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   if(READ_BIT(FLASH->ACR, FLASH_ACR_DCEN) != 0U)
 246              		.loc 1 266 6 discriminator 2
 247 002a 204B     		ldr	r3, .L23+4
 248 002c 1B68     		ldr	r3, [r3]
 249 002e 03F48063 		and	r3, r3, #1024
 250              		.loc 1 266 5 discriminator 2
 251 0032 002B     		cmp	r3, #0
 252 0034 09D0     		beq	.L16
ARM GAS  /tmp/ccwP94xg.s 			page 10


 267:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   {
 268:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     /* Disable data cache  */
 269:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     __HAL_FLASH_DATA_CACHE_DISABLE();
 253              		.loc 1 269 5
 254 0036 1D4B     		ldr	r3, .L23+4
 255 0038 1B68     		ldr	r3, [r3]
 256 003a 1C4A     		ldr	r2, .L23+4
 257 003c 23F48063 		bic	r3, r3, #1024
 258 0040 1360     		str	r3, [r2]
 270:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     pFlash.CacheToReactivate = FLASH_CACHE_DCACHE_ENABLED;
 259              		.loc 1 270 30
 260 0042 194B     		ldr	r3, .L23
 261 0044 0222     		movs	r2, #2
 262 0046 1A77     		strb	r2, [r3, #28]
 263 0048 02E0     		b	.L17
 264              	.L16:
 271:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   }
 272:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   else
 273:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   {
 274:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     pFlash.CacheToReactivate = FLASH_CACHE_DISABLED;
 265              		.loc 1 274 30
 266 004a 174B     		ldr	r3, .L23
 267 004c 0022     		movs	r2, #0
 268 004e 1A77     		strb	r2, [r3, #28]
 269              	.L17:
 275:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   }
 276:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 277:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* Set internal variables used by the IRQ handler */
 278:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   if(TypeProgram == FLASH_TYPEPROGRAM_FAST_AND_LAST)
 270              		.loc 1 278 5
 271 0050 FB68     		ldr	r3, [r7, #12]
 272 0052 022B     		cmp	r3, #2
 273 0054 03D1     		bne	.L18
 279:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   {
 280:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_PROGRAM_LAST;
 274              		.loc 1 280 29
 275 0056 144B     		ldr	r3, .L23
 276 0058 0422     		movs	r2, #4
 277 005a 1A72     		strb	r2, [r3, #8]
 278 005c 02E0     		b	.L19
 279              	.L18:
 281:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   }
 282:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   else
 283:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   {
 284:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_PROGRAM;
 280              		.loc 1 284 29
 281 005e 124B     		ldr	r3, .L23
 282 0060 0322     		movs	r2, #3
 283 0062 1A72     		strb	r2, [r3, #8]
 284              	.L19:
 285:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   }
 286:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   pFlash.Address = Address;
 285              		.loc 1 286 18
 286 0064 104A     		ldr	r2, .L23
 287 0066 BB68     		ldr	r3, [r7, #8]
 288 0068 D360     		str	r3, [r2, #12]
 287:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
ARM GAS  /tmp/ccwP94xg.s 			page 11


 288:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* Enable End of Operation and Error interrupts */
 289:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   __HAL_FLASH_ENABLE_IT(FLASH_IT_EOP | FLASH_IT_OPERR);
 289              		.loc 1 289 3
 290 006a 104B     		ldr	r3, .L23+4
 291 006c 5B69     		ldr	r3, [r3, #20]
 292 006e 0F4A     		ldr	r2, .L23+4
 293 0070 43F04073 		orr	r3, r3, #50331648
 294 0074 5361     		str	r3, [r2, #20]
 290:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 291:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   if(TypeProgram == FLASH_TYPEPROGRAM_DOUBLEWORD)
 295              		.loc 1 291 5
 296 0076 FB68     		ldr	r3, [r7, #12]
 297 0078 002B     		cmp	r3, #0
 298 007a 05D1     		bne	.L20
 292:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   {
 293:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     /* Program double-word (64-bit) at a specified address */
 294:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     FLASH_Program_DoubleWord(Address, Data);
 299              		.loc 1 294 5
 300 007c D7E90023 		ldrd	r2, [r7]
 301 0080 B868     		ldr	r0, [r7, #8]
 302 0082 FFF7FEFF 		bl	FLASH_Program_DoubleWord
 303 0086 0AE0     		b	.L21
 304              	.L20:
 295:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   }
 296:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   else if((TypeProgram == FLASH_TYPEPROGRAM_FAST) || (TypeProgram == FLASH_TYPEPROGRAM_FAST_AND_LAS
 305              		.loc 1 296 10
 306 0088 FB68     		ldr	r3, [r7, #12]
 307 008a 012B     		cmp	r3, #1
 308 008c 02D0     		beq	.L22
 309              		.loc 1 296 51 discriminator 1
 310 008e FB68     		ldr	r3, [r7, #12]
 311 0090 022B     		cmp	r3, #2
 312 0092 04D1     		bne	.L21
 313              	.L22:
 297:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   {
 298:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     /* Fast program a 32 row double-word (64-bit) at a specified address */
 299:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     FLASH_Program_Fast(Address, (uint32_t)Data);
 314              		.loc 1 299 5
 315 0094 3B68     		ldr	r3, [r7]
 316 0096 1946     		mov	r1, r3
 317 0098 B868     		ldr	r0, [r7, #8]
 318 009a FFF7FEFF 		bl	FLASH_Program_Fast
 319              	.L21:
 300:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   }
 301:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   else
 302:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   {
 303:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     /* Nothing to do */
 304:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   }
 305:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 306:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   return status;
 320              		.loc 1 306 10
 321 009e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 322              	.L15:
 307:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** }
 323              		.loc 1 307 1
 324 00a0 1846     		mov	r0, r3
 325 00a2 1837     		adds	r7, r7, #24
ARM GAS  /tmp/ccwP94xg.s 			page 12


 326              	.LCFI8:
 327              		.cfi_def_cfa_offset 8
 328 00a4 BD46     		mov	sp, r7
 329              	.LCFI9:
 330              		.cfi_def_cfa_register 13
 331              		@ sp needed
 332 00a6 80BD     		pop	{r7, pc}
 333              	.L24:
 334              		.align	2
 335              	.L23:
 336 00a8 00000000 		.word	pFlash
 337 00ac 00200240 		.word	1073881088
 338              		.cfi_endproc
 339              	.LFE314:
 341              		.section	.text.HAL_FLASH_IRQHandler,"ax",%progbits
 342              		.align	1
 343              		.global	HAL_FLASH_IRQHandler
 344              		.syntax unified
 345              		.thumb
 346              		.thumb_func
 347              		.fpu fpv4-sp-d16
 349              	HAL_FLASH_IRQHandler:
 350              	.LFB315:
 308:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 309:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /**
 310:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @brief Handle FLASH interrupt request.
 311:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @retval None
 312:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   */
 313:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** void HAL_FLASH_IRQHandler(void)
 314:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** {
 351              		.loc 1 314 1
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 16
 354              		@ frame_needed = 1, uses_anonymous_args = 0
 355 0000 80B5     		push	{r7, lr}
 356              	.LCFI10:
 357              		.cfi_def_cfa_offset 8
 358              		.cfi_offset 7, -8
 359              		.cfi_offset 14, -4
 360 0002 84B0     		sub	sp, sp, #16
 361              	.LCFI11:
 362              		.cfi_def_cfa_offset 24
 363 0004 00AF     		add	r7, sp, #0
 364              	.LCFI12:
 365              		.cfi_def_cfa_register 7
 315:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   uint32_t tmp_page;
 316:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   uint32_t error;
 317:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   FLASH_ProcedureTypeDef procedure;
 318:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 319:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* If the operation is completed, disable the PG, PNB, MER1, MER2 and PER Bit */
 320:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   CLEAR_BIT(FLASH->CR, (FLASH_CR_PG | FLASH_CR_MER1 | FLASH_CR_PER | FLASH_CR_PNB));
 366              		.loc 1 320 3
 367 0006 6B4B     		ldr	r3, .L43
 368 0008 5B69     		ldr	r3, [r3, #20]
 369 000a 6A4A     		ldr	r2, .L43
 370 000c 23F4FF63 		bic	r3, r3, #2040
 371 0010 23F00703 		bic	r3, r3, #7
ARM GAS  /tmp/ccwP94xg.s 			page 13


 372 0014 5361     		str	r3, [r2, #20]
 321:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** #if defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx
 322:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     defined (STM32L496xx) || defined (STM32L4A6xx) || \
 323:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     defined (STM32L4R5xx) || defined (STM32L4R7xx) || defined (STM32L4R9xx) || defined (STM32L4S5xx
 324:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   CLEAR_BIT(FLASH->CR, FLASH_CR_MER2);
 373              		.loc 1 324 3
 374 0016 674B     		ldr	r3, .L43
 375 0018 5B69     		ldr	r3, [r3, #20]
 376 001a 664A     		ldr	r2, .L43
 377 001c 23F40043 		bic	r3, r3, #32768
 378 0020 5361     		str	r3, [r2, #20]
 325:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** #endif
 326:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 327:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* Disable the FSTPG Bit only if it is the last row programmed */
 328:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   if(pFlash.ProcedureOnGoing == FLASH_PROC_PROGRAM_LAST)
 379              		.loc 1 328 12
 380 0022 654B     		ldr	r3, .L43+4
 381 0024 1B7A     		ldrb	r3, [r3, #8]
 382 0026 DBB2     		uxtb	r3, r3
 383              		.loc 1 328 5
 384 0028 042B     		cmp	r3, #4
 385 002a 05D1     		bne	.L26
 329:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   {
 330:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     CLEAR_BIT(FLASH->CR, FLASH_CR_FSTPG);
 386              		.loc 1 330 5
 387 002c 614B     		ldr	r3, .L43
 388 002e 5B69     		ldr	r3, [r3, #20]
 389 0030 604A     		ldr	r2, .L43
 390 0032 23F48023 		bic	r3, r3, #262144
 391 0036 5361     		str	r3, [r2, #20]
 392              	.L26:
 331:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   }
 332:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 333:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* Check FLASH operation error flags */
 334:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   error = (FLASH->SR & FLASH_FLAG_SR_ERRORS);
 393              		.loc 1 334 17
 394 0038 5E4B     		ldr	r3, .L43
 395 003a 1A69     		ldr	r2, [r3, #16]
 396              		.loc 1 334 9
 397 003c 4CF2FA33 		movw	r3, #50170
 398 0040 1340     		ands	r3, r3, r2
 399 0042 FB60     		str	r3, [r7, #12]
 335:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   error |= (FLASH->ECCR & FLASH_FLAG_ECCC);
 400              		.loc 1 335 18
 401 0044 5B4B     		ldr	r3, .L43
 402 0046 9B69     		ldr	r3, [r3, #24]
 403              		.loc 1 335 25
 404 0048 03F08043 		and	r3, r3, #1073741824
 405              		.loc 1 335 9
 406 004c FA68     		ldr	r2, [r7, #12]
 407 004e 1343     		orrs	r3, r3, r2
 408 0050 FB60     		str	r3, [r7, #12]
 336:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 337:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   if (error !=0U)
 409              		.loc 1 337 6
 410 0052 FB68     		ldr	r3, [r7, #12]
 411 0054 002B     		cmp	r3, #0
ARM GAS  /tmp/ccwP94xg.s 			page 14


 412 0056 45D0     		beq	.L27
 338:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   {
 339:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     /*Save the error code*/
 340:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     pFlash.ErrorCode |= error;
 413              		.loc 1 340 22
 414 0058 574B     		ldr	r3, .L43+4
 415 005a 5A68     		ldr	r2, [r3, #4]
 416 005c FB68     		ldr	r3, [r7, #12]
 417 005e 1343     		orrs	r3, r3, r2
 418 0060 554A     		ldr	r2, .L43+4
 419 0062 5360     		str	r3, [r2, #4]
 341:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 342:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     /* Clear error programming flags */
 343:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG(error);
 420              		.loc 1 343 5
 421 0064 FB68     		ldr	r3, [r7, #12]
 422 0066 03F04043 		and	r3, r3, #-1073741824
 423 006a 002B     		cmp	r3, #0
 424 006c 07D0     		beq	.L28
 425              		.loc 1 343 5 is_stmt 0 discriminator 1
 426 006e 514B     		ldr	r3, .L43
 427 0070 9A69     		ldr	r2, [r3, #24]
 428 0072 FB68     		ldr	r3, [r7, #12]
 429 0074 03F04043 		and	r3, r3, #-1073741824
 430 0078 4E49     		ldr	r1, .L43
 431 007a 1343     		orrs	r3, r3, r2
 432 007c 8B61     		str	r3, [r1, #24]
 433              	.L28:
 434              		.loc 1 343 5 discriminator 3
 435 007e FB68     		ldr	r3, [r7, #12]
 436 0080 23F04043 		bic	r3, r3, #-1073741824
 437 0084 002B     		cmp	r3, #0
 438 0086 04D0     		beq	.L29
 439              		.loc 1 343 5 discriminator 4
 440 0088 4A4A     		ldr	r2, .L43
 441 008a FB68     		ldr	r3, [r7, #12]
 442 008c 23F04043 		bic	r3, r3, #-1073741824
 443 0090 1361     		str	r3, [r2, #16]
 444              	.L29:
 344:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 345:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     /* Flush the caches to be sure of the data consistency */
 346:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     FLASH_FlushCaches() ;
 445              		.loc 1 346 5 is_stmt 1
 446 0092 FFF7FEFF 		bl	FLASH_FlushCaches
 347:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 348:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     /* FLASH error interrupt user callback */
 349:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     procedure = pFlash.ProcedureOnGoing;
 447              		.loc 1 349 15
 448 0096 484B     		ldr	r3, .L43+4
 449 0098 1B7A     		ldrb	r3, [r3, #8]
 450 009a FB72     		strb	r3, [r7, #11]
 350:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     if(procedure == FLASH_PROC_PAGE_ERASE)
 451              		.loc 1 350 7
 452 009c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 453 009e 012B     		cmp	r3, #1
 454 00a0 05D1     		bne	.L30
 351:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     {
ARM GAS  /tmp/ccwP94xg.s 			page 15


 352:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****        HAL_FLASH_OperationErrorCallback(pFlash.Page);
 455              		.loc 1 352 8
 456 00a2 454B     		ldr	r3, .L43+4
 457 00a4 5B69     		ldr	r3, [r3, #20]
 458 00a6 1846     		mov	r0, r3
 459 00a8 FFF7FEFF 		bl	HAL_FLASH_OperationErrorCallback
 460 00ac 17E0     		b	.L31
 461              	.L30:
 353:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     }
 354:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     else if(procedure == FLASH_PROC_MASS_ERASE)
 462              		.loc 1 354 12
 463 00ae FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 464 00b0 022B     		cmp	r3, #2
 465 00b2 05D1     		bne	.L32
 355:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     {
 356:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****         HAL_FLASH_OperationErrorCallback(pFlash.Bank);
 466              		.loc 1 356 9
 467 00b4 404B     		ldr	r3, .L43+4
 468 00b6 1B69     		ldr	r3, [r3, #16]
 469 00b8 1846     		mov	r0, r3
 470 00ba FFF7FEFF 		bl	HAL_FLASH_OperationErrorCallback
 471 00be 0EE0     		b	.L31
 472              	.L32:
 357:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     }
 358:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     else if((procedure == FLASH_PROC_PROGRAM) ||
 473              		.loc 1 358 12
 474 00c0 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 475 00c2 032B     		cmp	r3, #3
 476 00c4 02D0     		beq	.L33
 477              		.loc 1 358 47 discriminator 1
 478 00c6 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 479 00c8 042B     		cmp	r3, #4
 480 00ca 05D1     		bne	.L34
 481              	.L33:
 359:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****             (procedure == FLASH_PROC_PROGRAM_LAST))
 360:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     {
 361:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****        HAL_FLASH_OperationErrorCallback(pFlash.Address);
 482              		.loc 1 361 8
 483 00cc 3A4B     		ldr	r3, .L43+4
 484 00ce DB68     		ldr	r3, [r3, #12]
 485 00d0 1846     		mov	r0, r3
 486 00d2 FFF7FEFF 		bl	HAL_FLASH_OperationErrorCallback
 487 00d6 02E0     		b	.L31
 488              	.L34:
 362:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     }
 363:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     else
 364:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     {
 365:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****        HAL_FLASH_OperationErrorCallback(0U);
 489              		.loc 1 365 8
 490 00d8 0020     		movs	r0, #0
 491 00da FFF7FEFF 		bl	HAL_FLASH_OperationErrorCallback
 492              	.L31:
 366:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     }
 367:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 368:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     /*Stop the procedure ongoing*/
 369:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 493              		.loc 1 369 29
ARM GAS  /tmp/ccwP94xg.s 			page 16


 494 00de 364B     		ldr	r3, .L43+4
 495 00e0 0022     		movs	r2, #0
 496 00e2 1A72     		strb	r2, [r3, #8]
 497              	.L27:
 370:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   }
 371:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 372:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* Check FLASH End of Operation flag  */
 373:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   if(__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP) != 0U)
 498              		.loc 1 373 6
 499 00e4 334B     		ldr	r3, .L43
 500 00e6 1B69     		ldr	r3, [r3, #16]
 501 00e8 03F00103 		and	r3, r3, #1
 502              		.loc 1 373 5
 503 00ec 012B     		cmp	r3, #1
 504 00ee 4FD1     		bne	.L35
 374:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   {
 375:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     /* Clear FLASH End of Operation pending bit */
 376:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 505              		.loc 1 376 5 discriminator 4
 506 00f0 304B     		ldr	r3, .L43
 507 00f2 0122     		movs	r2, #1
 508 00f4 1A61     		str	r2, [r3, #16]
 377:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 378:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     if(pFlash.ProcedureOnGoing == FLASH_PROC_PAGE_ERASE)
 509              		.loc 1 378 14 discriminator 4
 510 00f6 304B     		ldr	r3, .L43+4
 511 00f8 1B7A     		ldrb	r3, [r3, #8]
 512 00fa DBB2     		uxtb	r3, r3
 513              		.loc 1 378 7 discriminator 4
 514 00fc 012B     		cmp	r3, #1
 515 00fe 2BD1     		bne	.L36
 379:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     {
 380:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       /* Nb of pages to erased can be decreased */
 381:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       pFlash.NbPagesToErase--;
 516              		.loc 1 381 13
 517 0100 2D4B     		ldr	r3, .L43+4
 518 0102 9B69     		ldr	r3, [r3, #24]
 519              		.loc 1 381 28
 520 0104 013B     		subs	r3, r3, #1
 521 0106 2C4A     		ldr	r2, .L43+4
 522 0108 9361     		str	r3, [r2, #24]
 382:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 383:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       /* Check if there are still pages to erase*/
 384:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       if(pFlash.NbPagesToErase != 0U)
 523              		.loc 1 384 16
 524 010a 2B4B     		ldr	r3, .L43+4
 525 010c 9B69     		ldr	r3, [r3, #24]
 526              		.loc 1 384 9
 527 010e 002B     		cmp	r3, #0
 528 0110 13D0     		beq	.L37
 385:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       {
 386:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****         /* Indicate user which page has been erased*/
 387:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Page);
 529              		.loc 1 387 9
 530 0112 294B     		ldr	r3, .L43+4
 531 0114 5B69     		ldr	r3, [r3, #20]
 532 0116 1846     		mov	r0, r3
ARM GAS  /tmp/ccwP94xg.s 			page 17


 533 0118 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 388:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 389:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****         /* Increment page number */
 390:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****         pFlash.Page++;
 534              		.loc 1 390 15
 535 011c 264B     		ldr	r3, .L43+4
 536 011e 5B69     		ldr	r3, [r3, #20]
 537              		.loc 1 390 20
 538 0120 0133     		adds	r3, r3, #1
 539 0122 254A     		ldr	r2, .L43+4
 540 0124 5361     		str	r3, [r2, #20]
 391:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****         tmp_page = pFlash.Page;
 541              		.loc 1 391 18
 542 0126 244B     		ldr	r3, .L43+4
 543 0128 5B69     		ldr	r3, [r3, #20]
 544 012a 7B60     		str	r3, [r7, #4]
 392:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****         FLASH_PageErase(tmp_page, pFlash.Bank);
 545              		.loc 1 392 9
 546 012c 224B     		ldr	r3, .L43+4
 547 012e 1B69     		ldr	r3, [r3, #16]
 548 0130 1946     		mov	r1, r3
 549 0132 7868     		ldr	r0, [r7, #4]
 550 0134 FFF7FEFF 		bl	FLASH_PageErase
 551 0138 2AE0     		b	.L35
 552              	.L37:
 393:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       }
 394:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       else
 395:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       {
 396:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****         /* No more pages to Erase */
 397:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****         /* Reset Address and stop Erase pages procedure */
 398:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****         pFlash.Page = 0xFFFFFFFFU;
 553              		.loc 1 398 21
 554 013a 1F4B     		ldr	r3, .L43+4
 555 013c 4FF0FF32 		mov	r2, #-1
 556 0140 5A61     		str	r2, [r3, #20]
 399:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****         pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 557              		.loc 1 399 33
 558 0142 1D4B     		ldr	r3, .L43+4
 559 0144 0022     		movs	r2, #0
 560 0146 1A72     		strb	r2, [r3, #8]
 400:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 401:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****         /* Flush the caches to be sure of the data consistency */
 402:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****         FLASH_FlushCaches() ;
 561              		.loc 1 402 9
 562 0148 FFF7FEFF 		bl	FLASH_FlushCaches
 403:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 404:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 405:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Page);
 563              		.loc 1 405 9
 564 014c 1A4B     		ldr	r3, .L43+4
 565 014e 5B69     		ldr	r3, [r3, #20]
 566 0150 1846     		mov	r0, r3
 567 0152 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 568 0156 1BE0     		b	.L35
 569              	.L36:
 406:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       }
 407:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     }
ARM GAS  /tmp/ccwP94xg.s 			page 18


 408:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     else
 409:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     {
 410:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       /* Flush the caches to be sure of the data consistency */
 411:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       FLASH_FlushCaches() ;
 570              		.loc 1 411 7
 571 0158 FFF7FEFF 		bl	FLASH_FlushCaches
 412:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 413:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       procedure = pFlash.ProcedureOnGoing;
 572              		.loc 1 413 17
 573 015c 164B     		ldr	r3, .L43+4
 574 015e 1B7A     		ldrb	r3, [r3, #8]
 575 0160 FB72     		strb	r3, [r7, #11]
 414:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       if(procedure == FLASH_PROC_MASS_ERASE)
 576              		.loc 1 414 9
 577 0162 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 578 0164 022B     		cmp	r3, #2
 579 0166 05D1     		bne	.L38
 415:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       {
 416:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****         /* MassErase ended. Return the selected bank */
 417:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 418:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Bank);
 580              		.loc 1 418 9
 581 0168 134B     		ldr	r3, .L43+4
 582 016a 1B69     		ldr	r3, [r3, #16]
 583 016c 1846     		mov	r0, r3
 584 016e FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 585 0172 0AE0     		b	.L39
 586              	.L38:
 419:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       }
 420:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       else if((procedure == FLASH_PROC_PROGRAM) ||
 587              		.loc 1 420 14
 588 0174 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 589 0176 032B     		cmp	r3, #3
 590 0178 02D0     		beq	.L40
 591              		.loc 1 420 49 discriminator 1
 592 017a FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 593 017c 042B     		cmp	r3, #4
 594 017e 04D1     		bne	.L39
 595              	.L40:
 421:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****               (procedure == FLASH_PROC_PROGRAM_LAST))
 422:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       {
 423:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****         /* Program ended. Return the selected address */
 424:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****         /* FLASH EOP interrupt user callback */
 425:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****         HAL_FLASH_EndOfOperationCallback(pFlash.Address);
 596              		.loc 1 425 9
 597 0180 0D4B     		ldr	r3, .L43+4
 598 0182 DB68     		ldr	r3, [r3, #12]
 599 0184 1846     		mov	r0, r3
 600 0186 FFF7FEFF 		bl	HAL_FLASH_EndOfOperationCallback
 601              	.L39:
 426:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       }
 427:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       else
 428:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       {
 429:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****         /* Nothing to do */
 430:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       }
 431:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 432:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       /*Clear the procedure ongoing*/
ARM GAS  /tmp/ccwP94xg.s 			page 19


 433:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       pFlash.ProcedureOnGoing = FLASH_PROC_NONE;
 602              		.loc 1 433 31
 603 018a 0B4B     		ldr	r3, .L43+4
 604 018c 0022     		movs	r2, #0
 605 018e 1A72     		strb	r2, [r3, #8]
 606              	.L35:
 434:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     }
 435:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   }
 436:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 437:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   if(pFlash.ProcedureOnGoing == FLASH_PROC_NONE)
 607              		.loc 1 437 12
 608 0190 094B     		ldr	r3, .L43+4
 609 0192 1B7A     		ldrb	r3, [r3, #8]
 610 0194 DBB2     		uxtb	r3, r3
 611              		.loc 1 437 5
 612 0196 002B     		cmp	r3, #0
 613 0198 08D1     		bne	.L42
 438:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   {
 439:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     /* Disable End of Operation and Error interrupts */
 440:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     __HAL_FLASH_DISABLE_IT(FLASH_IT_EOP | FLASH_IT_OPERR);
 614              		.loc 1 440 5 discriminator 4
 615 019a 064B     		ldr	r3, .L43
 616 019c 5B69     		ldr	r3, [r3, #20]
 617 019e 054A     		ldr	r2, .L43
 618 01a0 23F04073 		bic	r3, r3, #50331648
 619 01a4 5361     		str	r3, [r2, #20]
 441:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 442:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     /* Process Unlocked */
 443:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     __HAL_UNLOCK(&pFlash);
 620              		.loc 1 443 5 discriminator 4
 621 01a6 044B     		ldr	r3, .L43+4
 622 01a8 0022     		movs	r2, #0
 623 01aa 1A70     		strb	r2, [r3]
 624              	.L42:
 444:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   }
 445:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** }
 625              		.loc 1 445 1
 626 01ac 00BF     		nop
 627 01ae 1037     		adds	r7, r7, #16
 628              	.LCFI13:
 629              		.cfi_def_cfa_offset 8
 630 01b0 BD46     		mov	sp, r7
 631              	.LCFI14:
 632              		.cfi_def_cfa_register 13
 633              		@ sp needed
 634 01b2 80BD     		pop	{r7, pc}
 635              	.L44:
 636              		.align	2
 637              	.L43:
 638 01b4 00200240 		.word	1073881088
 639 01b8 00000000 		.word	pFlash
 640              		.cfi_endproc
 641              	.LFE315:
 643              		.section	.text.HAL_FLASH_EndOfOperationCallback,"ax",%progbits
 644              		.align	1
 645              		.weak	HAL_FLASH_EndOfOperationCallback
 646              		.syntax unified
ARM GAS  /tmp/ccwP94xg.s 			page 20


 647              		.thumb
 648              		.thumb_func
 649              		.fpu fpv4-sp-d16
 651              	HAL_FLASH_EndOfOperationCallback:
 652              	.LFB316:
 446:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 447:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /**
 448:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @brief  FLASH end of operation interrupt callback.
 449:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @param  ReturnValue: The value saved in this parameter depends on the ongoing procedure
 450:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *                  Mass Erase: Bank number which has been requested to erase
 451:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *                  Page Erase: Page which has been erased
 452:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *                    (if 0xFFFFFFFF, it means that all the selected pages have been erased)
 453:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *                  Program: Address which was selected for data program
 454:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @retval None
 455:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   */
 456:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** __weak void HAL_FLASH_EndOfOperationCallback(uint32_t ReturnValue)
 457:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** {
 653              		.loc 1 457 1
 654              		.cfi_startproc
 655              		@ args = 0, pretend = 0, frame = 8
 656              		@ frame_needed = 1, uses_anonymous_args = 0
 657              		@ link register save eliminated.
 658 0000 80B4     		push	{r7}
 659              	.LCFI15:
 660              		.cfi_def_cfa_offset 4
 661              		.cfi_offset 7, -4
 662 0002 83B0     		sub	sp, sp, #12
 663              	.LCFI16:
 664              		.cfi_def_cfa_offset 16
 665 0004 00AF     		add	r7, sp, #0
 666              	.LCFI17:
 667              		.cfi_def_cfa_register 7
 668 0006 7860     		str	r0, [r7, #4]
 458:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 459:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   UNUSED(ReturnValue);
 460:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 461:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 462:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****             the HAL_FLASH_EndOfOperationCallback could be implemented in the user file
 463:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****    */
 464:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** }
 669              		.loc 1 464 1
 670 0008 00BF     		nop
 671 000a 0C37     		adds	r7, r7, #12
 672              	.LCFI18:
 673              		.cfi_def_cfa_offset 4
 674 000c BD46     		mov	sp, r7
 675              	.LCFI19:
 676              		.cfi_def_cfa_register 13
 677              		@ sp needed
 678 000e 5DF8047B 		ldr	r7, [sp], #4
 679              	.LCFI20:
 680              		.cfi_restore 7
 681              		.cfi_def_cfa_offset 0
 682 0012 7047     		bx	lr
 683              		.cfi_endproc
 684              	.LFE316:
 686              		.section	.text.HAL_FLASH_OperationErrorCallback,"ax",%progbits
ARM GAS  /tmp/ccwP94xg.s 			page 21


 687              		.align	1
 688              		.weak	HAL_FLASH_OperationErrorCallback
 689              		.syntax unified
 690              		.thumb
 691              		.thumb_func
 692              		.fpu fpv4-sp-d16
 694              	HAL_FLASH_OperationErrorCallback:
 695              	.LFB317:
 465:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 466:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /**
 467:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @brief  FLASH operation error interrupt callback.
 468:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @param  ReturnValue: The value saved in this parameter depends on the ongoing procedure
 469:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *                 Mass Erase: Bank number which has been requested to erase
 470:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *                 Page Erase: Page number which returned an error
 471:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *                 Program: Address which was selected for data program
 472:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @retval None
 473:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   */
 474:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** __weak void HAL_FLASH_OperationErrorCallback(uint32_t ReturnValue)
 475:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** {
 696              		.loc 1 475 1
 697              		.cfi_startproc
 698              		@ args = 0, pretend = 0, frame = 8
 699              		@ frame_needed = 1, uses_anonymous_args = 0
 700              		@ link register save eliminated.
 701 0000 80B4     		push	{r7}
 702              	.LCFI21:
 703              		.cfi_def_cfa_offset 4
 704              		.cfi_offset 7, -4
 705 0002 83B0     		sub	sp, sp, #12
 706              	.LCFI22:
 707              		.cfi_def_cfa_offset 16
 708 0004 00AF     		add	r7, sp, #0
 709              	.LCFI23:
 710              		.cfi_def_cfa_register 7
 711 0006 7860     		str	r0, [r7, #4]
 476:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* Prevent unused argument(s) compilation warning */
 477:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   UNUSED(ReturnValue);
 478:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 479:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 480:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****             the HAL_FLASH_OperationErrorCallback could be implemented in the user file
 481:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****    */
 482:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** }
 712              		.loc 1 482 1
 713 0008 00BF     		nop
 714 000a 0C37     		adds	r7, r7, #12
 715              	.LCFI24:
 716              		.cfi_def_cfa_offset 4
 717 000c BD46     		mov	sp, r7
 718              	.LCFI25:
 719              		.cfi_def_cfa_register 13
 720              		@ sp needed
 721 000e 5DF8047B 		ldr	r7, [sp], #4
 722              	.LCFI26:
 723              		.cfi_restore 7
 724              		.cfi_def_cfa_offset 0
 725 0012 7047     		bx	lr
 726              		.cfi_endproc
ARM GAS  /tmp/ccwP94xg.s 			page 22


 727              	.LFE317:
 729              		.section	.text.HAL_FLASH_Unlock,"ax",%progbits
 730              		.align	1
 731              		.global	HAL_FLASH_Unlock
 732              		.syntax unified
 733              		.thumb
 734              		.thumb_func
 735              		.fpu fpv4-sp-d16
 737              	HAL_FLASH_Unlock:
 738              	.LFB318:
 483:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 484:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /**
 485:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @}
 486:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   */
 487:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 488:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group2 Peripheral Control functions
 489:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****  *  @brief   Management functions
 490:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****  *
 491:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** @verbatim
 492:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****  ===============================================================================
 493:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****                       ##### Peripheral Control functions #####
 494:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****  ===============================================================================
 495:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     [..]
 496:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     This subsection provides a set of functions allowing to control the FLASH
 497:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     memory operations.
 498:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 499:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** @endverbatim
 500:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @{
 501:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   */
 502:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 503:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /**
 504:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @brief  Unlock the FLASH control register access.
 505:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @retval HAL Status
 506:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   */
 507:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Unlock(void)
 508:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** {
 739              		.loc 1 508 1
 740              		.cfi_startproc
 741              		@ args = 0, pretend = 0, frame = 8
 742              		@ frame_needed = 1, uses_anonymous_args = 0
 743              		@ link register save eliminated.
 744 0000 80B4     		push	{r7}
 745              	.LCFI27:
 746              		.cfi_def_cfa_offset 4
 747              		.cfi_offset 7, -4
 748 0002 83B0     		sub	sp, sp, #12
 749              	.LCFI28:
 750              		.cfi_def_cfa_offset 16
 751 0004 00AF     		add	r7, sp, #0
 752              	.LCFI29:
 753              		.cfi_def_cfa_register 7
 509:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   HAL_StatusTypeDef status = HAL_OK;
 754              		.loc 1 509 21
 755 0006 0023     		movs	r3, #0
 756 0008 FB71     		strb	r3, [r7, #7]
 510:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 511:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != 0U)
ARM GAS  /tmp/ccwP94xg.s 			page 23


 757              		.loc 1 511 6
 758 000a 0B4B     		ldr	r3, .L50
 759 000c 5B69     		ldr	r3, [r3, #20]
 760              		.loc 1 511 5
 761 000e 002B     		cmp	r3, #0
 762 0010 0BDA     		bge	.L48
 512:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   {
 513:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     /* Authorize the FLASH Registers access */
 514:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     WRITE_REG(FLASH->KEYR, FLASH_KEY1);
 763              		.loc 1 514 5
 764 0012 094B     		ldr	r3, .L50
 765 0014 094A     		ldr	r2, .L50+4
 766 0016 9A60     		str	r2, [r3, #8]
 515:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     WRITE_REG(FLASH->KEYR, FLASH_KEY2);
 767              		.loc 1 515 5
 768 0018 074B     		ldr	r3, .L50
 769 001a 094A     		ldr	r2, .L50+8
 770 001c 9A60     		str	r2, [r3, #8]
 516:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 517:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     /* Verify Flash is unlocked */
 518:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     if(READ_BIT(FLASH->CR, FLASH_CR_LOCK) != 0U)
 771              		.loc 1 518 8
 772 001e 064B     		ldr	r3, .L50
 773 0020 5B69     		ldr	r3, [r3, #20]
 774              		.loc 1 518 7
 775 0022 002B     		cmp	r3, #0
 776 0024 01DA     		bge	.L48
 519:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     {
 520:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       status = HAL_ERROR;
 777              		.loc 1 520 14
 778 0026 0123     		movs	r3, #1
 779 0028 FB71     		strb	r3, [r7, #7]
 780              	.L48:
 521:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     }
 522:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   }
 523:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 524:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   return status;
 781              		.loc 1 524 10
 782 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 525:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** }
 783              		.loc 1 525 1
 784 002c 1846     		mov	r0, r3
 785 002e 0C37     		adds	r7, r7, #12
 786              	.LCFI30:
 787              		.cfi_def_cfa_offset 4
 788 0030 BD46     		mov	sp, r7
 789              	.LCFI31:
 790              		.cfi_def_cfa_register 13
 791              		@ sp needed
 792 0032 5DF8047B 		ldr	r7, [sp], #4
 793              	.LCFI32:
 794              		.cfi_restore 7
 795              		.cfi_def_cfa_offset 0
 796 0036 7047     		bx	lr
 797              	.L51:
 798              		.align	2
 799              	.L50:
ARM GAS  /tmp/ccwP94xg.s 			page 24


 800 0038 00200240 		.word	1073881088
 801 003c 23016745 		.word	1164378403
 802 0040 AB89EFCD 		.word	-839939669
 803              		.cfi_endproc
 804              	.LFE318:
 806              		.section	.text.HAL_FLASH_Lock,"ax",%progbits
 807              		.align	1
 808              		.global	HAL_FLASH_Lock
 809              		.syntax unified
 810              		.thumb
 811              		.thumb_func
 812              		.fpu fpv4-sp-d16
 814              	HAL_FLASH_Lock:
 815              	.LFB319:
 526:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 527:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /**
 528:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @brief  Lock the FLASH control register access.
 529:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @retval HAL Status
 530:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   */
 531:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_Lock(void)
 532:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** {
 816              		.loc 1 532 1
 817              		.cfi_startproc
 818              		@ args = 0, pretend = 0, frame = 0
 819              		@ frame_needed = 1, uses_anonymous_args = 0
 820              		@ link register save eliminated.
 821 0000 80B4     		push	{r7}
 822              	.LCFI33:
 823              		.cfi_def_cfa_offset 4
 824              		.cfi_offset 7, -4
 825 0002 00AF     		add	r7, sp, #0
 826              	.LCFI34:
 827              		.cfi_def_cfa_register 7
 533:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* Set the LOCK Bit to lock the FLASH Registers access */
 534:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   SET_BIT(FLASH->CR, FLASH_CR_LOCK);
 828              		.loc 1 534 3
 829 0004 054B     		ldr	r3, .L54
 830 0006 5B69     		ldr	r3, [r3, #20]
 831 0008 044A     		ldr	r2, .L54
 832 000a 43F00043 		orr	r3, r3, #-2147483648
 833 000e 5361     		str	r3, [r2, #20]
 535:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 536:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   return HAL_OK;
 834              		.loc 1 536 10
 835 0010 0023     		movs	r3, #0
 537:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** }
 836              		.loc 1 537 1
 837 0012 1846     		mov	r0, r3
 838 0014 BD46     		mov	sp, r7
 839              	.LCFI35:
 840              		.cfi_def_cfa_register 13
 841              		@ sp needed
 842 0016 5DF8047B 		ldr	r7, [sp], #4
 843              	.LCFI36:
 844              		.cfi_restore 7
 845              		.cfi_def_cfa_offset 0
 846 001a 7047     		bx	lr
ARM GAS  /tmp/ccwP94xg.s 			page 25


 847              	.L55:
 848              		.align	2
 849              	.L54:
 850 001c 00200240 		.word	1073881088
 851              		.cfi_endproc
 852              	.LFE319:
 854              		.section	.text.HAL_FLASH_OB_Unlock,"ax",%progbits
 855              		.align	1
 856              		.global	HAL_FLASH_OB_Unlock
 857              		.syntax unified
 858              		.thumb
 859              		.thumb_func
 860              		.fpu fpv4-sp-d16
 862              	HAL_FLASH_OB_Unlock:
 863              	.LFB320:
 538:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 539:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /**
 540:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @brief  Unlock the FLASH Option Bytes Registers access.
 541:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @retval HAL Status
 542:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   */
 543:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Unlock(void)
 544:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** {
 864              		.loc 1 544 1
 865              		.cfi_startproc
 866              		@ args = 0, pretend = 0, frame = 0
 867              		@ frame_needed = 1, uses_anonymous_args = 0
 868              		@ link register save eliminated.
 869 0000 80B4     		push	{r7}
 870              	.LCFI37:
 871              		.cfi_def_cfa_offset 4
 872              		.cfi_offset 7, -4
 873 0002 00AF     		add	r7, sp, #0
 874              	.LCFI38:
 875              		.cfi_def_cfa_register 7
 545:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   if(READ_BIT(FLASH->CR, FLASH_CR_OPTLOCK) != 0U)
 876              		.loc 1 545 6
 877 0004 094B     		ldr	r3, .L60
 878 0006 5B69     		ldr	r3, [r3, #20]
 879 0008 03F08043 		and	r3, r3, #1073741824
 880              		.loc 1 545 5
 881 000c 002B     		cmp	r3, #0
 882 000e 07D0     		beq	.L57
 546:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   {
 547:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     /* Authorizes the Option Byte register programming */
 548:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     WRITE_REG(FLASH->OPTKEYR, FLASH_OPTKEY1);
 883              		.loc 1 548 5
 884 0010 064B     		ldr	r3, .L60
 885 0012 074A     		ldr	r2, .L60+4
 886 0014 DA60     		str	r2, [r3, #12]
 549:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     WRITE_REG(FLASH->OPTKEYR, FLASH_OPTKEY2);
 887              		.loc 1 549 5
 888 0016 054B     		ldr	r3, .L60
 889 0018 064A     		ldr	r2, .L60+8
 890 001a DA60     		str	r2, [r3, #12]
 550:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   }
 551:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   else
 552:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   {
ARM GAS  /tmp/ccwP94xg.s 			page 26


 553:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     return HAL_ERROR;
 554:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   }
 555:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 556:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   return HAL_OK;
 891              		.loc 1 556 10
 892 001c 0023     		movs	r3, #0
 893 001e 00E0     		b	.L59
 894              	.L57:
 553:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   }
 895              		.loc 1 553 12
 896 0020 0123     		movs	r3, #1
 897              	.L59:
 557:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** }
 898              		.loc 1 557 1
 899 0022 1846     		mov	r0, r3
 900 0024 BD46     		mov	sp, r7
 901              	.LCFI39:
 902              		.cfi_def_cfa_register 13
 903              		@ sp needed
 904 0026 5DF8047B 		ldr	r7, [sp], #4
 905              	.LCFI40:
 906              		.cfi_restore 7
 907              		.cfi_def_cfa_offset 0
 908 002a 7047     		bx	lr
 909              	.L61:
 910              		.align	2
 911              	.L60:
 912 002c 00200240 		.word	1073881088
 913 0030 3B2A1908 		.word	135866939
 914 0034 7F6E5D4C 		.word	1281191551
 915              		.cfi_endproc
 916              	.LFE320:
 918              		.section	.text.HAL_FLASH_OB_Lock,"ax",%progbits
 919              		.align	1
 920              		.global	HAL_FLASH_OB_Lock
 921              		.syntax unified
 922              		.thumb
 923              		.thumb_func
 924              		.fpu fpv4-sp-d16
 926              	HAL_FLASH_OB_Lock:
 927              	.LFB321:
 558:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 559:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /**
 560:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @brief  Lock the FLASH Option Bytes Registers access.
 561:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @retval HAL Status
 562:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   */
 563:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Lock(void)
 564:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** {
 928              		.loc 1 564 1
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 0
 931              		@ frame_needed = 1, uses_anonymous_args = 0
 932              		@ link register save eliminated.
 933 0000 80B4     		push	{r7}
 934              	.LCFI41:
 935              		.cfi_def_cfa_offset 4
 936              		.cfi_offset 7, -4
ARM GAS  /tmp/ccwP94xg.s 			page 27


 937 0002 00AF     		add	r7, sp, #0
 938              	.LCFI42:
 939              		.cfi_def_cfa_register 7
 565:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* Set the OPTLOCK Bit to lock the FLASH Option Byte Registers access */
 566:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   SET_BIT(FLASH->CR, FLASH_CR_OPTLOCK);
 940              		.loc 1 566 3
 941 0004 054B     		ldr	r3, .L64
 942 0006 5B69     		ldr	r3, [r3, #20]
 943 0008 044A     		ldr	r2, .L64
 944 000a 43F08043 		orr	r3, r3, #1073741824
 945 000e 5361     		str	r3, [r2, #20]
 567:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 568:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   return HAL_OK;
 946              		.loc 1 568 10
 947 0010 0023     		movs	r3, #0
 569:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** }
 948              		.loc 1 569 1
 949 0012 1846     		mov	r0, r3
 950 0014 BD46     		mov	sp, r7
 951              	.LCFI43:
 952              		.cfi_def_cfa_register 13
 953              		@ sp needed
 954 0016 5DF8047B 		ldr	r7, [sp], #4
 955              	.LCFI44:
 956              		.cfi_restore 7
 957              		.cfi_def_cfa_offset 0
 958 001a 7047     		bx	lr
 959              	.L65:
 960              		.align	2
 961              	.L64:
 962 001c 00200240 		.word	1073881088
 963              		.cfi_endproc
 964              	.LFE321:
 966              		.section	.text.HAL_FLASH_OB_Launch,"ax",%progbits
 967              		.align	1
 968              		.global	HAL_FLASH_OB_Launch
 969              		.syntax unified
 970              		.thumb
 971              		.thumb_func
 972              		.fpu fpv4-sp-d16
 974              	HAL_FLASH_OB_Launch:
 975              	.LFB322:
 570:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 571:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /**
 572:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @brief  Launch the option byte loading.
 573:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @retval HAL Status
 574:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   */
 575:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** HAL_StatusTypeDef HAL_FLASH_OB_Launch(void)
 576:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** {
 976              		.loc 1 576 1
 977              		.cfi_startproc
 978              		@ args = 0, pretend = 0, frame = 0
 979              		@ frame_needed = 1, uses_anonymous_args = 0
 980 0000 80B5     		push	{r7, lr}
 981              	.LCFI45:
 982              		.cfi_def_cfa_offset 8
 983              		.cfi_offset 7, -8
ARM GAS  /tmp/ccwP94xg.s 			page 28


 984              		.cfi_offset 14, -4
 985 0002 00AF     		add	r7, sp, #0
 986              	.LCFI46:
 987              		.cfi_def_cfa_register 7
 577:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* Set the bit to force the option byte reloading */
 578:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   SET_BIT(FLASH->CR, FLASH_CR_OBL_LAUNCH);
 988              		.loc 1 578 3
 989 0004 064B     		ldr	r3, .L68
 990 0006 5B69     		ldr	r3, [r3, #20]
 991 0008 054A     		ldr	r2, .L68
 992 000a 43F00063 		orr	r3, r3, #134217728
 993 000e 5361     		str	r3, [r2, #20]
 579:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 580:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* Wait for last operation to be completed */
 581:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   return(FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE));
 994              		.loc 1 581 10
 995 0010 4CF25030 		movw	r0, #50000
 996 0014 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 997 0018 0346     		mov	r3, r0
 582:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** }
 998              		.loc 1 582 1
 999 001a 1846     		mov	r0, r3
 1000 001c 80BD     		pop	{r7, pc}
 1001              	.L69:
 1002 001e 00BF     		.align	2
 1003              	.L68:
 1004 0020 00200240 		.word	1073881088
 1005              		.cfi_endproc
 1006              	.LFE322:
 1008              		.section	.text.HAL_FLASH_GetError,"ax",%progbits
 1009              		.align	1
 1010              		.global	HAL_FLASH_GetError
 1011              		.syntax unified
 1012              		.thumb
 1013              		.thumb_func
 1014              		.fpu fpv4-sp-d16
 1016              	HAL_FLASH_GetError:
 1017              	.LFB323:
 583:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 584:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /**
 585:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @}
 586:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   */
 587:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 588:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /** @defgroup FLASH_Exported_Functions_Group3 Peripheral State and Errors functions
 589:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****  *  @brief   Peripheral Errors functions
 590:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****  *
 591:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** @verbatim
 592:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****  ===============================================================================
 593:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****                 ##### Peripheral Errors functions #####
 594:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****  ===============================================================================
 595:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     [..]
 596:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     This subsection permits to get in run-time Errors of the FLASH peripheral.
 597:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 598:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** @endverbatim
 599:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @{
 600:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   */
 601:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
ARM GAS  /tmp/ccwP94xg.s 			page 29


 602:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /**
 603:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @brief  Get the specific FLASH error flag.
 604:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @retval FLASH_ErrorCode: The returned value can be:
 605:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_RD: FLASH Read Protection error flag (PCROP)
 606:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_PGS: FLASH Programming Sequence error flag
 607:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_PGP: FLASH Programming Parallelism error flag
 608:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_PGA: FLASH Programming Alignment error flag
 609:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_WRP: FLASH Write protected error flag
 610:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_OPERATION: FLASH operation Error flag
 611:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_NONE: No error set
 612:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_OP: FLASH Operation error
 613:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_PROG: FLASH Programming error
 614:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_WRP: FLASH Write protection error
 615:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_PGA: FLASH Programming alignment error
 616:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_SIZ: FLASH Size error
 617:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_PGS: FLASH Programming sequence error
 618:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_MIS: FLASH Fast programming data miss error
 619:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_FAST: FLASH Fast programming error
 620:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_RD: FLASH PCROP read error
 621:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_OPTV: FLASH Option validity error
 622:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *            @arg FLASH_FLAG_PEMPTY : FLASH Boot from not programmed flash (apply only for STM32L
 623:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *            @arg HAL_FLASH_ERROR_ECCD: FLASH two ECC errors have been detected
 624:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   */
 625:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** uint32_t HAL_FLASH_GetError(void)
 626:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** {
 1018              		.loc 1 626 1
 1019              		.cfi_startproc
 1020              		@ args = 0, pretend = 0, frame = 0
 1021              		@ frame_needed = 1, uses_anonymous_args = 0
 1022              		@ link register save eliminated.
 1023 0000 80B4     		push	{r7}
 1024              	.LCFI47:
 1025              		.cfi_def_cfa_offset 4
 1026              		.cfi_offset 7, -4
 1027 0002 00AF     		add	r7, sp, #0
 1028              	.LCFI48:
 1029              		.cfi_def_cfa_register 7
 627:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****    return pFlash.ErrorCode;
 1030              		.loc 1 627 17
 1031 0004 034B     		ldr	r3, .L72
 1032 0006 5B68     		ldr	r3, [r3, #4]
 628:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** }
 1033              		.loc 1 628 1
 1034 0008 1846     		mov	r0, r3
 1035 000a BD46     		mov	sp, r7
 1036              	.LCFI49:
 1037              		.cfi_def_cfa_register 13
 1038              		@ sp needed
 1039 000c 5DF8047B 		ldr	r7, [sp], #4
 1040              	.LCFI50:
 1041              		.cfi_restore 7
 1042              		.cfi_def_cfa_offset 0
 1043 0010 7047     		bx	lr
 1044              	.L73:
 1045 0012 00BF     		.align	2
 1046              	.L72:
 1047 0014 00000000 		.word	pFlash
ARM GAS  /tmp/ccwP94xg.s 			page 30


 1048              		.cfi_endproc
 1049              	.LFE323:
 1051              		.section	.text.FLASH_WaitForLastOperation,"ax",%progbits
 1052              		.align	1
 1053              		.global	FLASH_WaitForLastOperation
 1054              		.syntax unified
 1055              		.thumb
 1056              		.thumb_func
 1057              		.fpu fpv4-sp-d16
 1059              	FLASH_WaitForLastOperation:
 1060              	.LFB324:
 629:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 630:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /**
 631:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @}
 632:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   */
 633:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 634:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /**
 635:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @}
 636:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   */
 637:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 638:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /* Private functions ---------------------------------------------------------*/
 639:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 640:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /** @addtogroup FLASH_Private_Functions
 641:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @{
 642:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   */
 643:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 644:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /**
 645:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @brief  Wait for a FLASH operation to complete.
 646:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @param  Timeout: maximum flash operation timeout
 647:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @retval HAL_StatusTypeDef HAL Status
 648:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   */
 649:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** HAL_StatusTypeDef FLASH_WaitForLastOperation(uint32_t Timeout)
 650:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** {
 1061              		.loc 1 650 1
 1062              		.cfi_startproc
 1063              		@ args = 0, pretend = 0, frame = 16
 1064              		@ frame_needed = 1, uses_anonymous_args = 0
 1065 0000 80B5     		push	{r7, lr}
 1066              	.LCFI51:
 1067              		.cfi_def_cfa_offset 8
 1068              		.cfi_offset 7, -8
 1069              		.cfi_offset 14, -4
 1070 0002 84B0     		sub	sp, sp, #16
 1071              	.LCFI52:
 1072              		.cfi_def_cfa_offset 24
 1073 0004 00AF     		add	r7, sp, #0
 1074              	.LCFI53:
 1075              		.cfi_def_cfa_register 7
 1076 0006 7860     		str	r0, [r7, #4]
 651:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* Wait for the FLASH operation to complete by polling on BUSY flag to be reset.
 652:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****      Even if the FLASH operation fails, the BUSY flag will be reset and an error
 653:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****      flag will be set */
 654:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 655:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   uint32_t tickstart = HAL_GetTick();
 1077              		.loc 1 655 24
 1078 0008 FFF7FEFF 		bl	HAL_GetTick
 1079 000c F860     		str	r0, [r7, #12]
ARM GAS  /tmp/ccwP94xg.s 			page 31


 656:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   uint32_t error;
 657:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 658:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   while(__HAL_FLASH_GET_FLAG(FLASH_FLAG_BSY))
 1080              		.loc 1 658 8
 1081 000e 0DE0     		b	.L75
 1082              	.L77:
 659:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   {
 660:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     if(Timeout != HAL_MAX_DELAY)
 1083              		.loc 1 660 7
 1084 0010 7B68     		ldr	r3, [r7, #4]
 1085 0012 B3F1FF3F 		cmp	r3, #-1
 1086 0016 09D0     		beq	.L75
 661:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     {
 662:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       if((HAL_GetTick() - tickstart) >= Timeout)
 1087              		.loc 1 662 11
 1088 0018 FFF7FEFF 		bl	HAL_GetTick
 1089 001c 0246     		mov	r2, r0
 1090              		.loc 1 662 25
 1091 001e FB68     		ldr	r3, [r7, #12]
 1092 0020 D31A     		subs	r3, r2, r3
 1093              		.loc 1 662 9
 1094 0022 7A68     		ldr	r2, [r7, #4]
 1095 0024 9A42     		cmp	r2, r3
 1096 0026 01D8     		bhi	.L75
 663:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       {
 664:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****         return HAL_TIMEOUT;
 1097              		.loc 1 664 16
 1098 0028 0323     		movs	r3, #3
 1099 002a 3FE0     		b	.L76
 1100              	.L75:
 658:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   {
 1101              		.loc 1 658 9
 1102 002c 214B     		ldr	r3, .L82
 1103 002e 1B69     		ldr	r3, [r3, #16]
 1104 0030 03F48033 		and	r3, r3, #65536
 658:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   {
 1105              		.loc 1 658 8
 1106 0034 B3F5803F 		cmp	r3, #65536
 1107 0038 EAD0     		beq	.L77
 665:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****       }
 666:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     }
 667:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   }
 668:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 669:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   error = (FLASH->SR & FLASH_FLAG_SR_ERRORS);
 1108              		.loc 1 669 17
 1109 003a 1E4B     		ldr	r3, .L82
 1110 003c 1A69     		ldr	r2, [r3, #16]
 1111              		.loc 1 669 9
 1112 003e 4CF2FA33 		movw	r3, #50170
 1113 0042 1340     		ands	r3, r3, r2
 1114 0044 BB60     		str	r3, [r7, #8]
 670:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   error |= (FLASH->ECCR & FLASH_FLAG_ECCD);
 1115              		.loc 1 670 18
 1116 0046 1B4B     		ldr	r3, .L82
 1117 0048 9B69     		ldr	r3, [r3, #24]
 1118              		.loc 1 670 25
 1119 004a 03F00043 		and	r3, r3, #-2147483648
ARM GAS  /tmp/ccwP94xg.s 			page 32


 1120              		.loc 1 670 9
 1121 004e BA68     		ldr	r2, [r7, #8]
 1122 0050 1343     		orrs	r3, r3, r2
 1123 0052 BB60     		str	r3, [r7, #8]
 671:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 672:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   if(error != 0u)
 1124              		.loc 1 672 5
 1125 0054 BB68     		ldr	r3, [r7, #8]
 1126 0056 002B     		cmp	r3, #0
 1127 0058 1ED0     		beq	.L78
 673:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   {
 674:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     /*Save the error code*/
 675:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     pFlash.ErrorCode |= error;
 1128              		.loc 1 675 22
 1129 005a 174B     		ldr	r3, .L82+4
 1130 005c 5A68     		ldr	r2, [r3, #4]
 1131 005e BB68     		ldr	r3, [r7, #8]
 1132 0060 1343     		orrs	r3, r3, r2
 1133 0062 154A     		ldr	r2, .L82+4
 1134 0064 5360     		str	r3, [r2, #4]
 676:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 677:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     /* Clear error programming flags */
 678:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG(error);
 1135              		.loc 1 678 5
 1136 0066 BB68     		ldr	r3, [r7, #8]
 1137 0068 03F04043 		and	r3, r3, #-1073741824
 1138 006c 002B     		cmp	r3, #0
 1139 006e 07D0     		beq	.L79
 1140              		.loc 1 678 5 is_stmt 0 discriminator 1
 1141 0070 104B     		ldr	r3, .L82
 1142 0072 9A69     		ldr	r2, [r3, #24]
 1143 0074 BB68     		ldr	r3, [r7, #8]
 1144 0076 03F04043 		and	r3, r3, #-1073741824
 1145 007a 0E49     		ldr	r1, .L82
 1146 007c 1343     		orrs	r3, r3, r2
 1147 007e 8B61     		str	r3, [r1, #24]
 1148              	.L79:
 1149              		.loc 1 678 5 discriminator 3
 1150 0080 BB68     		ldr	r3, [r7, #8]
 1151 0082 23F04043 		bic	r3, r3, #-1073741824
 1152 0086 002B     		cmp	r3, #0
 1153 0088 04D0     		beq	.L80
 1154              		.loc 1 678 5 discriminator 4
 1155 008a 0A4A     		ldr	r2, .L82
 1156 008c BB68     		ldr	r3, [r7, #8]
 1157 008e 23F04043 		bic	r3, r3, #-1073741824
 1158 0092 1361     		str	r3, [r2, #16]
 1159              	.L80:
 679:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 680:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     return HAL_ERROR;
 1160              		.loc 1 680 12 is_stmt 1
 1161 0094 0123     		movs	r3, #1
 1162 0096 09E0     		b	.L76
 1163              	.L78:
 681:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   }
 682:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 683:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* Check FLASH End of Operation flag  */
ARM GAS  /tmp/ccwP94xg.s 			page 33


 684:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   if (__HAL_FLASH_GET_FLAG(FLASH_FLAG_EOP))
 1164              		.loc 1 684 7
 1165 0098 064B     		ldr	r3, .L82
 1166 009a 1B69     		ldr	r3, [r3, #16]
 1167 009c 03F00103 		and	r3, r3, #1
 1168              		.loc 1 684 6
 1169 00a0 012B     		cmp	r3, #1
 1170 00a2 02D1     		bne	.L81
 685:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   {
 686:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     /* Clear FLASH End of Operation pending bit */
 687:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP);
 1171              		.loc 1 687 5 discriminator 4
 1172 00a4 034B     		ldr	r3, .L82
 1173 00a6 0122     		movs	r2, #1
 1174 00a8 1A61     		str	r2, [r3, #16]
 1175              	.L81:
 688:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   }
 689:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 690:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* If there is an error flag set */
 691:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   return HAL_OK;
 1176              		.loc 1 691 10
 1177 00aa 0023     		movs	r3, #0
 1178              	.L76:
 692:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** }
 1179              		.loc 1 692 1
 1180 00ac 1846     		mov	r0, r3
 1181 00ae 1037     		adds	r7, r7, #16
 1182              	.LCFI54:
 1183              		.cfi_def_cfa_offset 8
 1184 00b0 BD46     		mov	sp, r7
 1185              	.LCFI55:
 1186              		.cfi_def_cfa_register 13
 1187              		@ sp needed
 1188 00b2 80BD     		pop	{r7, pc}
 1189              	.L83:
 1190              		.align	2
 1191              	.L82:
 1192 00b4 00200240 		.word	1073881088
 1193 00b8 00000000 		.word	pFlash
 1194              		.cfi_endproc
 1195              	.LFE324:
 1197              		.section	.text.FLASH_Program_DoubleWord,"ax",%progbits
 1198              		.align	1
 1199              		.syntax unified
 1200              		.thumb
 1201              		.thumb_func
 1202              		.fpu fpv4-sp-d16
 1204              	FLASH_Program_DoubleWord:
 1205              	.LFB325:
 693:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 694:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /**
 695:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @brief  Program double-word (64-bit) at a specified address.
 696:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @param  Address: specifies the address to be programmed.
 697:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @param  Data: specifies the data to be programmed.
 698:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @retval None
 699:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   */
 700:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** static void FLASH_Program_DoubleWord(uint32_t Address, uint64_t Data)
ARM GAS  /tmp/ccwP94xg.s 			page 34


 701:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** {
 1206              		.loc 1 701 1
 1207              		.cfi_startproc
 1208              		@ args = 0, pretend = 0, frame = 16
 1209              		@ frame_needed = 1, uses_anonymous_args = 0
 1210              		@ link register save eliminated.
 1211 0000 80B4     		push	{r7}
 1212              	.LCFI56:
 1213              		.cfi_def_cfa_offset 4
 1214              		.cfi_offset 7, -4
 1215 0002 85B0     		sub	sp, sp, #20
 1216              	.LCFI57:
 1217              		.cfi_def_cfa_offset 24
 1218 0004 00AF     		add	r7, sp, #0
 1219              	.LCFI58:
 1220              		.cfi_def_cfa_register 7
 1221 0006 F860     		str	r0, [r7, #12]
 1222 0008 C7E90023 		strd	r2, [r7]
 702:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* Check the parameters */
 703:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(Address));
 704:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 705:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* Set PG bit */
 706:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   SET_BIT(FLASH->CR, FLASH_CR_PG);
 1223              		.loc 1 706 3
 1224 000c 0E4B     		ldr	r3, .L85
 1225 000e 5B69     		ldr	r3, [r3, #20]
 1226 0010 0D4A     		ldr	r2, .L85
 1227 0012 43F00103 		orr	r3, r3, #1
 1228 0016 5361     		str	r3, [r2, #20]
 707:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 708:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* Program first word */
 709:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *(__IO uint32_t*)Address = (uint32_t)Data;
 1229              		.loc 1 709 4
 1230 0018 FB68     		ldr	r3, [r7, #12]
 1231              		.loc 1 709 30
 1232 001a 3A68     		ldr	r2, [r7]
 1233              		.loc 1 709 28
 1234 001c 1A60     		str	r2, [r3]
 1235              	.LBB10:
 1236              	.LBB11:
 1237              		.file 2 "../Drivers/CMSIS/Include/cmsis_gcc.h"
   1:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:../Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:../Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
ARM GAS  /tmp/ccwP94xg.s 			page 35


  17:../Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  /tmp/ccwP94xg.s 			page 36


  74:../Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:../Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:../Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccwP94xg.s 			page 37


 131:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  /tmp/ccwP94xg.s 			page 38


 188:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
ARM GAS  /tmp/ccwP94xg.s 			page 39


 245:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
ARM GAS  /tmp/ccwP94xg.s 			page 40


 302:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /tmp/ccwP94xg.s 			page 41


 359:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccwP94xg.s 			page 42


 416:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
ARM GAS  /tmp/ccwP94xg.s 			page 43


 473:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:../Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /tmp/ccwP94xg.s 			page 44


 530:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:../Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:../Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
ARM GAS  /tmp/ccwP94xg.s 			page 45


 587:../Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:../Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:../Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:../Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:../Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:../Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:../Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:../Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  /tmp/ccwP94xg.s 			page 46


 644:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:../Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:../Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:../Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
ARM GAS  /tmp/ccwP94xg.s 			page 47


 701:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:../Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:../Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:../Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:../Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:../Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
ARM GAS  /tmp/ccwP94xg.s 			page 48


 758:../Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:../Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:../Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:../Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:../Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:../Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:../Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:../Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:../Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:../Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
ARM GAS  /tmp/ccwP94xg.s 			page 49


 815:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:../Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:../Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:../Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:../Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:../Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 1238              		.loc 2 868 3
 1239              		.syntax unified
 1240              	@ 868 "../Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  /tmp/ccwP94xg.s 			page 50


 1241 001e BFF36F8F 		isb 0xF
 1242              	@ 0 "" 2
 869:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1243              		.loc 2 869 1
 1244              		.thumb
 1245              		.syntax unified
 1246 0022 00BF     		nop
 1247              	.LBE11:
 1248              	.LBE10:
 710:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 711:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* Barrier to ensure programming is performed in 2 steps, in right order
 712:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     (independently of compiler optimization behavior) */
 713:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   __ISB();
 714:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 715:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* Program second word */
 716:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   *(__IO uint32_t*)(Address+4U) = (uint32_t)(Data >> 32);
 1249              		.loc 1 716 51
 1250 0024 D7E90001 		ldrd	r0, [r7]
 1251 0028 4FF00002 		mov	r2, #0
 1252 002c 4FF00003 		mov	r3, #0
 1253 0030 0A00     		movs	r2, r1
 1254 0032 0023     		movs	r3, #0
 1255              		.loc 1 716 28
 1256 0034 F968     		ldr	r1, [r7, #12]
 1257 0036 0431     		adds	r1, r1, #4
 1258              		.loc 1 716 35
 1259 0038 1346     		mov	r3, r2
 1260              		.loc 1 716 33
 1261 003a 0B60     		str	r3, [r1]
 717:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** }
 1262              		.loc 1 717 1
 1263 003c 00BF     		nop
 1264 003e 1437     		adds	r7, r7, #20
 1265              	.LCFI59:
 1266              		.cfi_def_cfa_offset 4
 1267 0040 BD46     		mov	sp, r7
 1268              	.LCFI60:
 1269              		.cfi_def_cfa_register 13
 1270              		@ sp needed
 1271 0042 5DF8047B 		ldr	r7, [sp], #4
 1272              	.LCFI61:
 1273              		.cfi_restore 7
 1274              		.cfi_def_cfa_offset 0
 1275 0046 7047     		bx	lr
 1276              	.L86:
 1277              		.align	2
 1278              	.L85:
 1279 0048 00200240 		.word	1073881088
 1280              		.cfi_endproc
 1281              	.LFE325:
 1283              		.section	.text.FLASH_Program_Fast,"ax",%progbits
 1284              		.align	1
 1285              		.syntax unified
 1286              		.thumb
 1287              		.thumb_func
 1288              		.fpu fpv4-sp-d16
 1290              	FLASH_Program_Fast:
ARM GAS  /tmp/ccwP94xg.s 			page 51


 1291              	.LFB326:
 718:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 719:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** /**
 720:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @brief  Fast program a row double-word (64-bit) at a specified address.
 721:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @param  Address: specifies the address to be programmed.
 722:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @param  DataAddress: specifies the address where the data are stored.
 723:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   * @retval None
 724:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   */
 725:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** static void FLASH_Program_Fast(uint32_t Address, uint32_t DataAddress)
 726:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** {
 1292              		.loc 1 726 1
 1293              		.cfi_startproc
 1294              		@ args = 0, pretend = 0, frame = 32
 1295              		@ frame_needed = 1, uses_anonymous_args = 0
 1296              		@ link register save eliminated.
 1297 0000 80B4     		push	{r7}
 1298              	.LCFI62:
 1299              		.cfi_def_cfa_offset 4
 1300              		.cfi_offset 7, -4
 1301 0002 89B0     		sub	sp, sp, #36
 1302              	.LCFI63:
 1303              		.cfi_def_cfa_offset 40
 1304 0004 00AF     		add	r7, sp, #0
 1305              	.LCFI64:
 1306              		.cfi_def_cfa_register 7
 1307 0006 7860     		str	r0, [r7, #4]
 1308 0008 3960     		str	r1, [r7]
 727:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   uint32_t primask_bit;
 728:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   uint8_t row_index = (2*FLASH_NB_DOUBLE_WORDS_IN_ROW);
 1309              		.loc 1 728 11
 1310 000a 4023     		movs	r3, #64
 1311 000c FB77     		strb	r3, [r7, #31]
 729:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   __IO uint32_t *dest_addr = (__IO uint32_t*)Address;
 1312              		.loc 1 729 18
 1313 000e 7B68     		ldr	r3, [r7, #4]
 1314 0010 BB61     		str	r3, [r7, #24]
 730:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   __IO uint32_t *src_addr = (__IO uint32_t*)DataAddress;
 1315              		.loc 1 730 18
 1316 0012 3B68     		ldr	r3, [r7]
 1317 0014 7B61     		str	r3, [r7, #20]
 731:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 732:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* Check the parameters */
 733:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   assert_param(IS_FLASH_MAIN_MEM_ADDRESS(Address));
 734:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 735:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* Set FSTPG bit */
 736:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   SET_BIT(FLASH->CR, FLASH_CR_FSTPG);
 1318              		.loc 1 736 3
 1319 0016 144B     		ldr	r3, .L90
 1320 0018 5B69     		ldr	r3, [r3, #20]
 1321 001a 134A     		ldr	r2, .L90
 1322 001c 43F48023 		orr	r3, r3, #262144
 1323 0020 5361     		str	r3, [r2, #20]
 1324              	.LBB12:
 1325              	.LBB13:
 386:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 1326              		.loc 2 386 3
 1327              		.syntax unified
ARM GAS  /tmp/ccwP94xg.s 			page 52


 1328              	@ 386 "../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1329 0022 EFF31083 		MRS r3, primask
 1330              	@ 0 "" 2
 1331              		.thumb
 1332              		.syntax unified
 1333 0026 FB60     		str	r3, [r7, #12]
 387:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1334              		.loc 2 387 9
 1335 0028 FB68     		ldr	r3, [r7, #12]
 1336              	.LBE13:
 1337              	.LBE12:
 737:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 738:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* Disable interrupts to avoid any interruption during the loop */
 739:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   primask_bit = __get_PRIMASK();
 1338              		.loc 1 739 17
 1339 002a 3B61     		str	r3, [r7, #16]
 1340              	.LBB14:
 1341              	.LBB15:
 142:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1342              		.loc 2 142 3
 1343              		.syntax unified
 1344              	@ 142 "../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1345 002c 72B6     		cpsid i
 1346              	@ 0 "" 2
 143:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1347              		.loc 2 143 1
 1348              		.thumb
 1349              		.syntax unified
 1350 002e 00BF     		nop
 1351              	.L89:
 1352              	.LBE15:
 1353              	.LBE14:
 740:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   __disable_irq();
 741:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 742:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* Program the double word of the row */
 743:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   do
 744:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   {
 745:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     *dest_addr = *src_addr;
 1354              		.loc 1 745 18 discriminator 1
 1355 0030 7B69     		ldr	r3, [r7, #20]
 1356 0032 1A68     		ldr	r2, [r3]
 1357              		.loc 1 745 16 discriminator 1
 1358 0034 BB69     		ldr	r3, [r7, #24]
 1359 0036 1A60     		str	r2, [r3]
 746:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     dest_addr++;
 1360              		.loc 1 746 14 discriminator 1
 1361 0038 BB69     		ldr	r3, [r7, #24]
 1362 003a 0433     		adds	r3, r3, #4
 1363 003c BB61     		str	r3, [r7, #24]
 747:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     src_addr++;
 1364              		.loc 1 747 13 discriminator 1
 1365 003e 7B69     		ldr	r3, [r7, #20]
 1366 0040 0433     		adds	r3, r3, #4
 1367 0042 7B61     		str	r3, [r7, #20]
 748:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****     row_index--;
 1368              		.loc 1 748 14 discriminator 1
 1369 0044 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
ARM GAS  /tmp/ccwP94xg.s 			page 53


 1370 0046 013B     		subs	r3, r3, #1
 1371 0048 FB77     		strb	r3, [r7, #31]
 749:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   } while (row_index != 0U);
 1372              		.loc 1 749 3 discriminator 1
 1373 004a FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 1374 004c 002B     		cmp	r3, #0
 1375 004e EFD1     		bne	.L89
 1376 0050 3B69     		ldr	r3, [r7, #16]
 1377 0052 BB60     		str	r3, [r7, #8]
 1378              	.LBB16:
 1379              	.LBB17:
 414:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1380              		.loc 2 414 3
 1381 0054 BB68     		ldr	r3, [r7, #8]
 1382              		.syntax unified
 1383              	@ 414 "../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1384 0056 83F31088 		MSR primask, r3
 1385              	@ 0 "" 2
 415:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 1386              		.loc 2 415 1
 1387              		.thumb
 1388              		.syntax unified
 1389 005a 00BF     		nop
 1390              	.LBE17:
 1391              	.LBE16:
 750:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** 
 751:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   /* Re-enable the interrupts */
 752:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c ****   __set_PRIMASK(primask_bit);
 753:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_flash.c **** }
 1392              		.loc 1 753 1
 1393 005c 00BF     		nop
 1394 005e 2437     		adds	r7, r7, #36
 1395              	.LCFI65:
 1396              		.cfi_def_cfa_offset 4
 1397 0060 BD46     		mov	sp, r7
 1398              	.LCFI66:
 1399              		.cfi_def_cfa_register 13
 1400              		@ sp needed
 1401 0062 5DF8047B 		ldr	r7, [sp], #4
 1402              	.LCFI67:
 1403              		.cfi_restore 7
 1404              		.cfi_def_cfa_offset 0
 1405 0066 7047     		bx	lr
 1406              	.L91:
 1407              		.align	2
 1408              	.L90:
 1409 0068 00200240 		.word	1073881088
 1410              		.cfi_endproc
 1411              	.LFE326:
 1413              		.text
 1414              	.Letext0:
 1415              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 1416              		.file 4 "../Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 1417              		.file 5 "../Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 1418              		.file 6 "../Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
ARM GAS  /tmp/ccwP94xg.s 			page 54


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_flash.c
     /tmp/ccwP94xg.s:22     .data.pFlash:0000000000000000 pFlash
     /tmp/ccwP94xg.s:19     .data.pFlash:0000000000000000 $d
     /tmp/ccwP94xg.s:35     .text.HAL_FLASH_Program:0000000000000000 $t
     /tmp/ccwP94xg.s:43     .text.HAL_FLASH_Program:0000000000000000 HAL_FLASH_Program
     /tmp/ccwP94xg.s:1059   .text.FLASH_WaitForLastOperation:0000000000000000 FLASH_WaitForLastOperation
     /tmp/ccwP94xg.s:1204   .text.FLASH_Program_DoubleWord:0000000000000000 FLASH_Program_DoubleWord
     /tmp/ccwP94xg.s:1290   .text.FLASH_Program_Fast:0000000000000000 FLASH_Program_Fast
     /tmp/ccwP94xg.s:193    .text.HAL_FLASH_Program:00000000000000d0 $d
     /tmp/ccwP94xg.s:199    .text.HAL_FLASH_Program_IT:0000000000000000 $t
     /tmp/ccwP94xg.s:206    .text.HAL_FLASH_Program_IT:0000000000000000 HAL_FLASH_Program_IT
     /tmp/ccwP94xg.s:336    .text.HAL_FLASH_Program_IT:00000000000000a8 $d
     /tmp/ccwP94xg.s:342    .text.HAL_FLASH_IRQHandler:0000000000000000 $t
     /tmp/ccwP94xg.s:349    .text.HAL_FLASH_IRQHandler:0000000000000000 HAL_FLASH_IRQHandler
     /tmp/ccwP94xg.s:694    .text.HAL_FLASH_OperationErrorCallback:0000000000000000 HAL_FLASH_OperationErrorCallback
     /tmp/ccwP94xg.s:651    .text.HAL_FLASH_EndOfOperationCallback:0000000000000000 HAL_FLASH_EndOfOperationCallback
     /tmp/ccwP94xg.s:638    .text.HAL_FLASH_IRQHandler:00000000000001b4 $d
     /tmp/ccwP94xg.s:644    .text.HAL_FLASH_EndOfOperationCallback:0000000000000000 $t
     /tmp/ccwP94xg.s:687    .text.HAL_FLASH_OperationErrorCallback:0000000000000000 $t
     /tmp/ccwP94xg.s:730    .text.HAL_FLASH_Unlock:0000000000000000 $t
     /tmp/ccwP94xg.s:737    .text.HAL_FLASH_Unlock:0000000000000000 HAL_FLASH_Unlock
     /tmp/ccwP94xg.s:800    .text.HAL_FLASH_Unlock:0000000000000038 $d
     /tmp/ccwP94xg.s:807    .text.HAL_FLASH_Lock:0000000000000000 $t
     /tmp/ccwP94xg.s:814    .text.HAL_FLASH_Lock:0000000000000000 HAL_FLASH_Lock
     /tmp/ccwP94xg.s:850    .text.HAL_FLASH_Lock:000000000000001c $d
     /tmp/ccwP94xg.s:855    .text.HAL_FLASH_OB_Unlock:0000000000000000 $t
     /tmp/ccwP94xg.s:862    .text.HAL_FLASH_OB_Unlock:0000000000000000 HAL_FLASH_OB_Unlock
     /tmp/ccwP94xg.s:912    .text.HAL_FLASH_OB_Unlock:000000000000002c $d
     /tmp/ccwP94xg.s:919    .text.HAL_FLASH_OB_Lock:0000000000000000 $t
     /tmp/ccwP94xg.s:926    .text.HAL_FLASH_OB_Lock:0000000000000000 HAL_FLASH_OB_Lock
     /tmp/ccwP94xg.s:962    .text.HAL_FLASH_OB_Lock:000000000000001c $d
     /tmp/ccwP94xg.s:967    .text.HAL_FLASH_OB_Launch:0000000000000000 $t
     /tmp/ccwP94xg.s:974    .text.HAL_FLASH_OB_Launch:0000000000000000 HAL_FLASH_OB_Launch
     /tmp/ccwP94xg.s:1004   .text.HAL_FLASH_OB_Launch:0000000000000020 $d
     /tmp/ccwP94xg.s:1009   .text.HAL_FLASH_GetError:0000000000000000 $t
     /tmp/ccwP94xg.s:1016   .text.HAL_FLASH_GetError:0000000000000000 HAL_FLASH_GetError
     /tmp/ccwP94xg.s:1047   .text.HAL_FLASH_GetError:0000000000000014 $d
     /tmp/ccwP94xg.s:1052   .text.FLASH_WaitForLastOperation:0000000000000000 $t
     /tmp/ccwP94xg.s:1192   .text.FLASH_WaitForLastOperation:00000000000000b4 $d
     /tmp/ccwP94xg.s:1198   .text.FLASH_Program_DoubleWord:0000000000000000 $t
     /tmp/ccwP94xg.s:1279   .text.FLASH_Program_DoubleWord:0000000000000048 $d
     /tmp/ccwP94xg.s:1284   .text.FLASH_Program_Fast:0000000000000000 $t
     /tmp/ccwP94xg.s:1409   .text.FLASH_Program_Fast:0000000000000068 $d

UNDEFINED SYMBOLS
FLASH_FlushCaches
FLASH_PageErase
HAL_GetTick
