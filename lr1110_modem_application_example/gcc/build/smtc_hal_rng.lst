ARM GAS  /tmp/cczIokiC.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"smtc_hal_rng.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.bss.rng_handle,"aw",%nobits
  18              		.align	2
  21              	rng_handle:
  22 0000 00000000 		.space	16
  22      00000000 
  22      00000000 
  22      00000000 
  23              		.section	.text.hal_rng_get_random,"ax",%progbits
  24              		.align	1
  25              		.global	hal_rng_get_random
  26              		.arch armv7e-m
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  30              		.fpu fpv4-sp-d16
  32              	hal_rng_get_random:
  33              	.LFB313:
  34              		.file 1 "../Src/smtc_hal/smtc_hal_rng.c"
   1:../Src/smtc_hal/smtc_hal_rng.c **** /*!
   2:../Src/smtc_hal/smtc_hal_rng.c ****  * @file      smtc_hal_rng.c
   3:../Src/smtc_hal/smtc_hal_rng.c ****  *
   4:../Src/smtc_hal/smtc_hal_rng.c ****  * @brief     Board specific package RNG API implementation
   5:../Src/smtc_hal/smtc_hal_rng.c ****  *
   6:../Src/smtc_hal/smtc_hal_rng.c ****  * Revised BSD License
   7:../Src/smtc_hal/smtc_hal_rng.c ****  * Copyright Semtech Corporation 2020. All rights reserved.
   8:../Src/smtc_hal/smtc_hal_rng.c ****  *
   9:../Src/smtc_hal/smtc_hal_rng.c ****  * Redistribution and use in source and binary forms, with or without
  10:../Src/smtc_hal/smtc_hal_rng.c ****  * modification, are permitted provided that the following conditions are met:
  11:../Src/smtc_hal/smtc_hal_rng.c ****  *     * Redistributions of source code must retain the above copyright
  12:../Src/smtc_hal/smtc_hal_rng.c ****  *       notice, this list of conditions and the following disclaimer.
  13:../Src/smtc_hal/smtc_hal_rng.c ****  *     * Redistributions in binary form must reproduce the above copyright
  14:../Src/smtc_hal/smtc_hal_rng.c ****  *       notice, this list of conditions and the following disclaimer in the
  15:../Src/smtc_hal/smtc_hal_rng.c ****  *       documentation and/or other materials provided with the distribution.
  16:../Src/smtc_hal/smtc_hal_rng.c ****  *     * Neither the name of the Semtech corporation nor the
  17:../Src/smtc_hal/smtc_hal_rng.c ****  *       names of its contributors may be used to endorse or promote products
  18:../Src/smtc_hal/smtc_hal_rng.c ****  *       derived from this software without specific prior written permission.
  19:../Src/smtc_hal/smtc_hal_rng.c ****  *
  20:../Src/smtc_hal/smtc_hal_rng.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:../Src/smtc_hal/smtc_hal_rng.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:../Src/smtc_hal/smtc_hal_rng.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  23:../Src/smtc_hal/smtc_hal_rng.c ****  * ARE DISCLAIMED. IN NO EVENT SHALL SEMTECH CORPORATION BE LIABLE FOR ANY
ARM GAS  /tmp/cczIokiC.s 			page 2


  24:../Src/smtc_hal/smtc_hal_rng.c ****  * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
  25:../Src/smtc_hal/smtc_hal_rng.c ****  * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  26:../Src/smtc_hal/smtc_hal_rng.c ****  * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  27:../Src/smtc_hal/smtc_hal_rng.c ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  28:../Src/smtc_hal/smtc_hal_rng.c ****  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
  29:../Src/smtc_hal/smtc_hal_rng.c ****  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:../Src/smtc_hal/smtc_hal_rng.c ****  */
  31:../Src/smtc_hal/smtc_hal_rng.c **** 
  32:../Src/smtc_hal/smtc_hal_rng.c **** /*
  33:../Src/smtc_hal/smtc_hal_rng.c ****  * -----------------------------------------------------------------------------
  34:../Src/smtc_hal/smtc_hal_rng.c ****  * --- DEPENDENCIES ------------------------------------------------------------
  35:../Src/smtc_hal/smtc_hal_rng.c ****  */
  36:../Src/smtc_hal/smtc_hal_rng.c **** 
  37:../Src/smtc_hal/smtc_hal_rng.c **** #include <stdint.h>   // C99 types
  38:../Src/smtc_hal/smtc_hal_rng.c **** #include <stdbool.h>  // bool type
  39:../Src/smtc_hal/smtc_hal_rng.c **** 
  40:../Src/smtc_hal/smtc_hal_rng.c **** #include "stm32l4xx_hal.h"
  41:../Src/smtc_hal/smtc_hal_rng.c **** #include "smtc_hal_rng.h"
  42:../Src/smtc_hal/smtc_hal_rng.c **** #include "smtc_hal_mcu.h"
  43:../Src/smtc_hal/smtc_hal_rng.c **** 
  44:../Src/smtc_hal/smtc_hal_rng.c **** /*
  45:../Src/smtc_hal/smtc_hal_rng.c ****  * -----------------------------------------------------------------------------
  46:../Src/smtc_hal/smtc_hal_rng.c ****  * --- PRIVATE MACROS-----------------------------------------------------------
  47:../Src/smtc_hal/smtc_hal_rng.c ****  */
  48:../Src/smtc_hal/smtc_hal_rng.c **** 
  49:../Src/smtc_hal/smtc_hal_rng.c **** /*
  50:../Src/smtc_hal/smtc_hal_rng.c ****  * -----------------------------------------------------------------------------
  51:../Src/smtc_hal/smtc_hal_rng.c ****  * --- PRIVATE CONSTANTS -------------------------------------------------------
  52:../Src/smtc_hal/smtc_hal_rng.c ****  */
  53:../Src/smtc_hal/smtc_hal_rng.c **** 
  54:../Src/smtc_hal/smtc_hal_rng.c **** /*
  55:../Src/smtc_hal/smtc_hal_rng.c ****  * -----------------------------------------------------------------------------
  56:../Src/smtc_hal/smtc_hal_rng.c ****  * --- PRIVATE TYPES -----------------------------------------------------------
  57:../Src/smtc_hal/smtc_hal_rng.c ****  */
  58:../Src/smtc_hal/smtc_hal_rng.c **** 
  59:../Src/smtc_hal/smtc_hal_rng.c **** /*
  60:../Src/smtc_hal/smtc_hal_rng.c ****  * -----------------------------------------------------------------------------
  61:../Src/smtc_hal/smtc_hal_rng.c ****  * --- PRIVATE VARIABLES -------------------------------------------------------
  62:../Src/smtc_hal/smtc_hal_rng.c ****  */
  63:../Src/smtc_hal/smtc_hal_rng.c **** 
  64:../Src/smtc_hal/smtc_hal_rng.c **** static RNG_HandleTypeDef rng_handle;
  65:../Src/smtc_hal/smtc_hal_rng.c **** 
  66:../Src/smtc_hal/smtc_hal_rng.c **** /*
  67:../Src/smtc_hal/smtc_hal_rng.c ****  * -----------------------------------------------------------------------------
  68:../Src/smtc_hal/smtc_hal_rng.c ****  * --- PRIVATE FUNCTIONS DECLARATION -------------------------------------------
  69:../Src/smtc_hal/smtc_hal_rng.c ****  */
  70:../Src/smtc_hal/smtc_hal_rng.c **** 
  71:../Src/smtc_hal/smtc_hal_rng.c **** /*
  72:../Src/smtc_hal/smtc_hal_rng.c ****  * -----------------------------------------------------------------------------
  73:../Src/smtc_hal/smtc_hal_rng.c ****  * --- PUBLIC FUNCTIONS DEFINITION ---------------------------------------------
  74:../Src/smtc_hal/smtc_hal_rng.c ****  */
  75:../Src/smtc_hal/smtc_hal_rng.c **** 
  76:../Src/smtc_hal/smtc_hal_rng.c **** uint32_t hal_rng_get_random( void )
  77:../Src/smtc_hal/smtc_hal_rng.c **** {
  35              		.loc 1 77 1
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /tmp/cczIokiC.s 			page 3


  38              		@ frame_needed = 1, uses_anonymous_args = 0
  39 0000 80B5     		push	{r7, lr}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 82B0     		sub	sp, sp, #8
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 16
  47 0004 00AF     		add	r7, sp, #0
  48              	.LCFI2:
  49              		.cfi_def_cfa_register 7
  78:../Src/smtc_hal/smtc_hal_rng.c ****     uint32_t rand_nb = 0;
  50              		.loc 1 78 14
  51 0006 0023     		movs	r3, #0
  52 0008 7B60     		str	r3, [r7, #4]
  79:../Src/smtc_hal/smtc_hal_rng.c **** 
  80:../Src/smtc_hal/smtc_hal_rng.c ****     /* Init and enable RNG */
  81:../Src/smtc_hal/smtc_hal_rng.c ****     rng_handle.Instance = RNG;
  53              		.loc 1 81 25
  54 000a 0B4B     		ldr	r3, .L4
  55 000c 0B4A     		ldr	r2, .L4+4
  56 000e 1A60     		str	r2, [r3]
  82:../Src/smtc_hal/smtc_hal_rng.c **** 
  83:../Src/smtc_hal/smtc_hal_rng.c ****     if( HAL_RNG_Init( &rng_handle ) != HAL_OK )
  57              		.loc 1 83 9
  58 0010 0948     		ldr	r0, .L4
  59 0012 FFF7FEFF 		bl	HAL_RNG_Init
  60 0016 0346     		mov	r3, r0
  61              		.loc 1 83 7
  62 0018 002B     		cmp	r3, #0
  63 001a 01D0     		beq	.L2
  84:../Src/smtc_hal/smtc_hal_rng.c ****     {
  85:../Src/smtc_hal/smtc_hal_rng.c ****         hal_mcu_panic( );
  64              		.loc 1 85 9
  65 001c FFF7FEFF 		bl	hal_mcu_panic
  66              	.L2:
  86:../Src/smtc_hal/smtc_hal_rng.c ****     }
  87:../Src/smtc_hal/smtc_hal_rng.c **** 
  88:../Src/smtc_hal/smtc_hal_rng.c ****     /* Wait for data ready interrupt: 42+4 RNG clock cycles */
  89:../Src/smtc_hal/smtc_hal_rng.c ****     rand_nb = ( uint32_t ) HAL_RNG_GetRandomNumber( &rng_handle );
  67              		.loc 1 89 28
  68 0020 0548     		ldr	r0, .L4
  69 0022 FFF7FEFF 		bl	HAL_RNG_GetRandomNumber
  70 0026 7860     		str	r0, [r7, #4]
  90:../Src/smtc_hal/smtc_hal_rng.c **** 
  91:../Src/smtc_hal/smtc_hal_rng.c ****     /* Disable RNG */
  92:../Src/smtc_hal/smtc_hal_rng.c ****     HAL_RNG_DeInit( &rng_handle );
  71              		.loc 1 92 5
  72 0028 0348     		ldr	r0, .L4
  73 002a FFF7FEFF 		bl	HAL_RNG_DeInit
  93:../Src/smtc_hal/smtc_hal_rng.c **** 
  94:../Src/smtc_hal/smtc_hal_rng.c ****     return rand_nb;
  74              		.loc 1 94 12
  75 002e 7B68     		ldr	r3, [r7, #4]
  95:../Src/smtc_hal/smtc_hal_rng.c **** }
  76              		.loc 1 95 1
ARM GAS  /tmp/cczIokiC.s 			page 4


  77 0030 1846     		mov	r0, r3
  78 0032 0837     		adds	r7, r7, #8
  79              	.LCFI3:
  80              		.cfi_def_cfa_offset 8
  81 0034 BD46     		mov	sp, r7
  82              	.LCFI4:
  83              		.cfi_def_cfa_register 13
  84              		@ sp needed
  85 0036 80BD     		pop	{r7, pc}
  86              	.L5:
  87              		.align	2
  88              	.L4:
  89 0038 00000000 		.word	rng_handle
  90 003c 00080650 		.word	1342572544
  91              		.cfi_endproc
  92              	.LFE313:
  94              		.section	.text.hal_rng_get_random_in_range,"ax",%progbits
  95              		.align	1
  96              		.global	hal_rng_get_random_in_range
  97              		.syntax unified
  98              		.thumb
  99              		.thumb_func
 100              		.fpu fpv4-sp-d16
 102              	hal_rng_get_random_in_range:
 103              	.LFB314:
  96:../Src/smtc_hal/smtc_hal_rng.c **** 
  97:../Src/smtc_hal/smtc_hal_rng.c **** uint32_t hal_rng_get_random_in_range( const uint32_t val_1, const uint32_t val_2 )
  98:../Src/smtc_hal/smtc_hal_rng.c **** {
 104              		.loc 1 98 1
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 8
 107              		@ frame_needed = 1, uses_anonymous_args = 0
 108 0000 80B5     		push	{r7, lr}
 109              	.LCFI5:
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 7, -8
 112              		.cfi_offset 14, -4
 113 0002 82B0     		sub	sp, sp, #8
 114              	.LCFI6:
 115              		.cfi_def_cfa_offset 16
 116 0004 00AF     		add	r7, sp, #0
 117              	.LCFI7:
 118              		.cfi_def_cfa_register 7
 119 0006 7860     		str	r0, [r7, #4]
 120 0008 3960     		str	r1, [r7]
  99:../Src/smtc_hal/smtc_hal_rng.c ****     if( val_1 <= val_2 )
 121              		.loc 1 99 7
 122 000a 7A68     		ldr	r2, [r7, #4]
 123 000c 3B68     		ldr	r3, [r7]
 124 000e 9A42     		cmp	r2, r3
 125 0010 0ED8     		bhi	.L7
 100:../Src/smtc_hal/smtc_hal_rng.c ****     {
 101:../Src/smtc_hal/smtc_hal_rng.c ****         return ( uint32_t )( ( hal_rng_get_random( ) % ( val_2 - val_1 + 1 ) ) + val_1 );
 126              		.loc 1 101 32
 127 0012 FFF7FEFF 		bl	hal_rng_get_random
 128 0016 0246     		mov	r2, r0
 129              		.loc 1 101 64
ARM GAS  /tmp/cczIokiC.s 			page 5


 130 0018 3968     		ldr	r1, [r7]
 131 001a 7B68     		ldr	r3, [r7, #4]
 132 001c CB1A     		subs	r3, r1, r3
 133              		.loc 1 101 72
 134 001e 0133     		adds	r3, r3, #1
 135              		.loc 1 101 54
 136 0020 B2FBF3F1 		udiv	r1, r2, r3
 137 0024 01FB03F3 		mul	r3, r1, r3
 138 0028 D21A     		subs	r2, r2, r3
 139              		.loc 1 101 16
 140 002a 7B68     		ldr	r3, [r7, #4]
 141 002c 1344     		add	r3, r3, r2
 142 002e 0DE0     		b	.L8
 143              	.L7:
 102:../Src/smtc_hal/smtc_hal_rng.c ****     }
 103:../Src/smtc_hal/smtc_hal_rng.c ****     else
 104:../Src/smtc_hal/smtc_hal_rng.c ****     {
 105:../Src/smtc_hal/smtc_hal_rng.c ****         return ( uint32_t )( ( hal_rng_get_random( ) % ( val_1 - val_2 + 1 ) ) + val_2 );
 144              		.loc 1 105 32
 145 0030 FFF7FEFF 		bl	hal_rng_get_random
 146 0034 0246     		mov	r2, r0
 147              		.loc 1 105 64
 148 0036 7968     		ldr	r1, [r7, #4]
 149 0038 3B68     		ldr	r3, [r7]
 150 003a CB1A     		subs	r3, r1, r3
 151              		.loc 1 105 72
 152 003c 0133     		adds	r3, r3, #1
 153              		.loc 1 105 54
 154 003e B2FBF3F1 		udiv	r1, r2, r3
 155 0042 01FB03F3 		mul	r3, r1, r3
 156 0046 D21A     		subs	r2, r2, r3
 157              		.loc 1 105 16
 158 0048 3B68     		ldr	r3, [r7]
 159 004a 1344     		add	r3, r3, r2
 160              	.L8:
 106:../Src/smtc_hal/smtc_hal_rng.c ****     }
 107:../Src/smtc_hal/smtc_hal_rng.c **** }
 161              		.loc 1 107 1
 162 004c 1846     		mov	r0, r3
 163 004e 0837     		adds	r7, r7, #8
 164              	.LCFI8:
 165              		.cfi_def_cfa_offset 8
 166 0050 BD46     		mov	sp, r7
 167              	.LCFI9:
 168              		.cfi_def_cfa_register 13
 169              		@ sp needed
 170 0052 80BD     		pop	{r7, pc}
 171              		.cfi_endproc
 172              	.LFE314:
 174              		.section	.text.hal_rng_get_signed_random_in_range,"ax",%progbits
 175              		.align	1
 176              		.global	hal_rng_get_signed_random_in_range
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 180              		.fpu fpv4-sp-d16
 182              	hal_rng_get_signed_random_in_range:
ARM GAS  /tmp/cczIokiC.s 			page 6


 183              	.LFB315:
 108:../Src/smtc_hal/smtc_hal_rng.c **** 
 109:../Src/smtc_hal/smtc_hal_rng.c **** int32_t hal_rng_get_signed_random_in_range( const int32_t val_1, const int32_t val_2 )
 110:../Src/smtc_hal/smtc_hal_rng.c **** {
 184              		.loc 1 110 1
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 16
 187              		@ frame_needed = 1, uses_anonymous_args = 0
 188 0000 80B5     		push	{r7, lr}
 189              	.LCFI10:
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 7, -8
 192              		.cfi_offset 14, -4
 193 0002 84B0     		sub	sp, sp, #16
 194              	.LCFI11:
 195              		.cfi_def_cfa_offset 24
 196 0004 00AF     		add	r7, sp, #0
 197              	.LCFI12:
 198              		.cfi_def_cfa_register 7
 199 0006 7860     		str	r0, [r7, #4]
 200 0008 3960     		str	r1, [r7]
 111:../Src/smtc_hal/smtc_hal_rng.c ****     uint32_t tmp_range = 0;  // ( val_1 <= val_2 ) ? ( val_2 - val_1 ) : ( val_1 - val_2 );
 201              		.loc 1 111 14
 202 000a 0023     		movs	r3, #0
 203 000c FB60     		str	r3, [r7, #12]
 112:../Src/smtc_hal/smtc_hal_rng.c **** 
 113:../Src/smtc_hal/smtc_hal_rng.c ****     if( val_1 <= val_2 )
 204              		.loc 1 113 7
 205 000e 7A68     		ldr	r2, [r7, #4]
 206 0010 3B68     		ldr	r3, [r7]
 207 0012 9A42     		cmp	r2, r3
 208 0014 0BDC     		bgt	.L10
 114:../Src/smtc_hal/smtc_hal_rng.c ****     {
 115:../Src/smtc_hal/smtc_hal_rng.c ****         tmp_range = ( val_2 - val_1 );
 209              		.loc 1 115 29
 210 0016 3A68     		ldr	r2, [r7]
 211 0018 7B68     		ldr	r3, [r7, #4]
 212 001a D31A     		subs	r3, r2, r3
 213              		.loc 1 115 19
 214 001c FB60     		str	r3, [r7, #12]
 116:../Src/smtc_hal/smtc_hal_rng.c ****         return ( int32_t )( ( val_1 + hal_rng_get_random_in_range( 0, tmp_range ) ) );
 215              		.loc 1 116 39
 216 001e F968     		ldr	r1, [r7, #12]
 217 0020 0020     		movs	r0, #0
 218 0022 FFF7FEFF 		bl	hal_rng_get_random_in_range
 219 0026 0246     		mov	r2, r0
 220              		.loc 1 116 37
 221 0028 7B68     		ldr	r3, [r7, #4]
 222 002a 1344     		add	r3, r3, r2
 223              		.loc 1 116 16
 224 002c 0AE0     		b	.L11
 225              	.L10:
 117:../Src/smtc_hal/smtc_hal_rng.c ****     }
 118:../Src/smtc_hal/smtc_hal_rng.c ****     else
 119:../Src/smtc_hal/smtc_hal_rng.c ****     {
 120:../Src/smtc_hal/smtc_hal_rng.c ****         tmp_range = ( val_1 - val_2 );
 226              		.loc 1 120 29
ARM GAS  /tmp/cczIokiC.s 			page 7


 227 002e 7A68     		ldr	r2, [r7, #4]
 228 0030 3B68     		ldr	r3, [r7]
 229 0032 D31A     		subs	r3, r2, r3
 230              		.loc 1 120 19
 231 0034 FB60     		str	r3, [r7, #12]
 121:../Src/smtc_hal/smtc_hal_rng.c ****         return ( int32_t )( ( val_2 + hal_rng_get_random_in_range( 0, tmp_range ) ) );
 232              		.loc 1 121 39
 233 0036 F968     		ldr	r1, [r7, #12]
 234 0038 0020     		movs	r0, #0
 235 003a FFF7FEFF 		bl	hal_rng_get_random_in_range
 236 003e 0246     		mov	r2, r0
 237              		.loc 1 121 37
 238 0040 3B68     		ldr	r3, [r7]
 239 0042 1344     		add	r3, r3, r2
 240              	.L11:
 122:../Src/smtc_hal/smtc_hal_rng.c ****     }
 123:../Src/smtc_hal/smtc_hal_rng.c **** }
 241              		.loc 1 123 1
 242 0044 1846     		mov	r0, r3
 243 0046 1037     		adds	r7, r7, #16
 244              	.LCFI13:
 245              		.cfi_def_cfa_offset 8
 246 0048 BD46     		mov	sp, r7
 247              	.LCFI14:
 248              		.cfi_def_cfa_register 13
 249              		@ sp needed
 250 004a 80BD     		pop	{r7, pc}
 251              		.cfi_endproc
 252              	.LFE315:
 254              		.section	.text.HAL_RNG_MspInit,"ax",%progbits
 255              		.align	1
 256              		.global	HAL_RNG_MspInit
 257              		.syntax unified
 258              		.thumb
 259              		.thumb_func
 260              		.fpu fpv4-sp-d16
 262              	HAL_RNG_MspInit:
 263              	.LFB316:
 124:../Src/smtc_hal/smtc_hal_rng.c **** 
 125:../Src/smtc_hal/smtc_hal_rng.c **** void HAL_RNG_MspInit( RNG_HandleTypeDef* hrng )
 126:../Src/smtc_hal/smtc_hal_rng.c **** {
 264              		.loc 1 126 1
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 152
 267              		@ frame_needed = 1, uses_anonymous_args = 0
 268 0000 80B5     		push	{r7, lr}
 269              	.LCFI15:
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 7, -8
 272              		.cfi_offset 14, -4
 273 0002 A6B0     		sub	sp, sp, #152
 274              	.LCFI16:
 275              		.cfi_def_cfa_offset 160
 276 0004 00AF     		add	r7, sp, #0
 277              	.LCFI17:
 278              		.cfi_def_cfa_register 7
 279 0006 7860     		str	r0, [r7, #4]
ARM GAS  /tmp/cczIokiC.s 			page 8


 127:../Src/smtc_hal/smtc_hal_rng.c ****     RCC_PeriphCLKInitTypeDef PeriphClkInitStruct;
 128:../Src/smtc_hal/smtc_hal_rng.c **** 
 129:../Src/smtc_hal/smtc_hal_rng.c ****     /* Select MSI output as RNG clock source */
 130:../Src/smtc_hal/smtc_hal_rng.c ****     PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_RNG;
 280              		.loc 1 130 46
 281 0008 4FF48023 		mov	r3, #262144
 282 000c 3B61     		str	r3, [r7, #16]
 131:../Src/smtc_hal/smtc_hal_rng.c ****     PeriphClkInitStruct.RngClockSelection = RCC_RNGCLKSOURCE_MSI;
 283              		.loc 1 131 43
 284 000e 4FF04063 		mov	r3, #201326592
 285 0012 C7F88430 		str	r3, [r7, #132]
 132:../Src/smtc_hal/smtc_hal_rng.c ****     HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct);
 286              		.loc 1 132 5
 287 0016 07F11003 		add	r3, r7, #16
 288 001a 1846     		mov	r0, r3
 289 001c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 290              	.LBB2:
 133:../Src/smtc_hal/smtc_hal_rng.c ****     
 134:../Src/smtc_hal/smtc_hal_rng.c ****     /* RNG Peripheral clock enable */
 135:../Src/smtc_hal/smtc_hal_rng.c ****     __RNG_CLK_ENABLE( );
 291              		.loc 1 135 5
 292 0020 074B     		ldr	r3, .L13
 293 0022 DB6C     		ldr	r3, [r3, #76]
 294 0024 064A     		ldr	r2, .L13
 295 0026 43F48023 		orr	r3, r3, #262144
 296 002a D364     		str	r3, [r2, #76]
 297 002c 044B     		ldr	r3, .L13
 298 002e DB6C     		ldr	r3, [r3, #76]
 299 0030 03F48023 		and	r3, r3, #262144
 300 0034 FB60     		str	r3, [r7, #12]
 301 0036 FB68     		ldr	r3, [r7, #12]
 302              	.LBE2:
 136:../Src/smtc_hal/smtc_hal_rng.c **** }
 303              		.loc 1 136 1
 304 0038 00BF     		nop
 305 003a 9837     		adds	r7, r7, #152
 306              	.LCFI18:
 307              		.cfi_def_cfa_offset 8
 308 003c BD46     		mov	sp, r7
 309              	.LCFI19:
 310              		.cfi_def_cfa_register 13
 311              		@ sp needed
 312 003e 80BD     		pop	{r7, pc}
 313              	.L14:
 314              		.align	2
 315              	.L13:
 316 0040 00100240 		.word	1073876992
 317              		.cfi_endproc
 318              	.LFE316:
 320              		.section	.text.HAL_RNG_MspDeInit,"ax",%progbits
 321              		.align	1
 322              		.global	HAL_RNG_MspDeInit
 323              		.syntax unified
 324              		.thumb
 325              		.thumb_func
 326              		.fpu fpv4-sp-d16
 328              	HAL_RNG_MspDeInit:
ARM GAS  /tmp/cczIokiC.s 			page 9


 329              	.LFB317:
 137:../Src/smtc_hal/smtc_hal_rng.c **** 
 138:../Src/smtc_hal/smtc_hal_rng.c **** void HAL_RNG_MspDeInit( RNG_HandleTypeDef* hrng )
 139:../Src/smtc_hal/smtc_hal_rng.c **** {
 330              		.loc 1 139 1
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 8
 333              		@ frame_needed = 1, uses_anonymous_args = 0
 334              		@ link register save eliminated.
 335 0000 80B4     		push	{r7}
 336              	.LCFI20:
 337              		.cfi_def_cfa_offset 4
 338              		.cfi_offset 7, -4
 339 0002 83B0     		sub	sp, sp, #12
 340              	.LCFI21:
 341              		.cfi_def_cfa_offset 16
 342 0004 00AF     		add	r7, sp, #0
 343              	.LCFI22:
 344              		.cfi_def_cfa_register 7
 345 0006 7860     		str	r0, [r7, #4]
 140:../Src/smtc_hal/smtc_hal_rng.c ****     /* Enable RNG reset state */
 141:../Src/smtc_hal/smtc_hal_rng.c ****     __RNG_FORCE_RESET( );
 346              		.loc 1 141 5
 347 0008 084B     		ldr	r3, .L16
 348 000a DB6A     		ldr	r3, [r3, #44]
 349 000c 074A     		ldr	r2, .L16
 350 000e 43F48023 		orr	r3, r3, #262144
 351 0012 D362     		str	r3, [r2, #44]
 142:../Src/smtc_hal/smtc_hal_rng.c **** 
 143:../Src/smtc_hal/smtc_hal_rng.c ****     /* Release RNG from reset state */
 144:../Src/smtc_hal/smtc_hal_rng.c ****     __RNG_RELEASE_RESET( );
 352              		.loc 1 144 5
 353 0014 054B     		ldr	r3, .L16
 354 0016 DB6A     		ldr	r3, [r3, #44]
 355 0018 044A     		ldr	r2, .L16
 356 001a 23F48023 		bic	r3, r3, #262144
 357 001e D362     		str	r3, [r2, #44]
 145:../Src/smtc_hal/smtc_hal_rng.c **** }
 358              		.loc 1 145 1
 359 0020 00BF     		nop
 360 0022 0C37     		adds	r7, r7, #12
 361              	.LCFI23:
 362              		.cfi_def_cfa_offset 4
 363 0024 BD46     		mov	sp, r7
 364              	.LCFI24:
 365              		.cfi_def_cfa_register 13
 366              		@ sp needed
 367 0026 5DF8047B 		ldr	r7, [sp], #4
 368              	.LCFI25:
 369              		.cfi_restore 7
 370              		.cfi_def_cfa_offset 0
 371 002a 7047     		bx	lr
 372              	.L17:
 373              		.align	2
 374              	.L16:
 375 002c 00100240 		.word	1073876992
 376              		.cfi_endproc
ARM GAS  /tmp/cczIokiC.s 			page 10


 377              	.LFE317:
 379              		.text
 380              	.Letext0:
 381              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 382              		.file 3 "../Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 383              		.file 4 "../Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 384              		.file 5 "../Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 385              		.file 6 "../Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rng.h"
ARM GAS  /tmp/cczIokiC.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 smtc_hal_rng.c
     /tmp/cczIokiC.s:18     .bss.rng_handle:0000000000000000 $d
     /tmp/cczIokiC.s:21     .bss.rng_handle:0000000000000000 rng_handle
     /tmp/cczIokiC.s:24     .text.hal_rng_get_random:0000000000000000 $t
     /tmp/cczIokiC.s:32     .text.hal_rng_get_random:0000000000000000 hal_rng_get_random
     /tmp/cczIokiC.s:89     .text.hal_rng_get_random:0000000000000038 $d
     /tmp/cczIokiC.s:95     .text.hal_rng_get_random_in_range:0000000000000000 $t
     /tmp/cczIokiC.s:102    .text.hal_rng_get_random_in_range:0000000000000000 hal_rng_get_random_in_range
     /tmp/cczIokiC.s:175    .text.hal_rng_get_signed_random_in_range:0000000000000000 $t
     /tmp/cczIokiC.s:182    .text.hal_rng_get_signed_random_in_range:0000000000000000 hal_rng_get_signed_random_in_range
     /tmp/cczIokiC.s:255    .text.HAL_RNG_MspInit:0000000000000000 $t
     /tmp/cczIokiC.s:262    .text.HAL_RNG_MspInit:0000000000000000 HAL_RNG_MspInit
     /tmp/cczIokiC.s:316    .text.HAL_RNG_MspInit:0000000000000040 $d
     /tmp/cczIokiC.s:321    .text.HAL_RNG_MspDeInit:0000000000000000 $t
     /tmp/cczIokiC.s:328    .text.HAL_RNG_MspDeInit:0000000000000000 HAL_RNG_MspDeInit
     /tmp/cczIokiC.s:375    .text.HAL_RNG_MspDeInit:000000000000002c $d

UNDEFINED SYMBOLS
HAL_RNG_Init
hal_mcu_panic
HAL_RNG_GetRandomNumber
HAL_RNG_DeInit
HAL_RCCEx_PeriphCLKConfig
