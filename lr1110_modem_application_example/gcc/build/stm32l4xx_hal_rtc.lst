ARM GAS  /tmp/ccXWJXxY.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l4xx_hal_rtc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_RTC_Init,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_RTC_Init
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	HAL_RTC_Init:
  27              	.LFB313:
  28              		.file 1 "../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c"
   1:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
   2:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   ******************************************************************************
   3:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @file    stm32l4xx_hal_rtc.c
   4:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @author  MCD Application Team
   5:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief   RTC HAL module driver.
   6:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This file provides firmware functions to manage the following
   7:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          functionalities of the Real-Time Clock (RTC) peripheral:
   8:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *           + Initialization/de-initialization functions
   9:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *           + Calendar (Time and Date) configuration
  10:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *           + Alarms (Alarm A and Alarm B) configuration
  11:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *           + WakeUp Timer configuration
  12:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *           + TimeStamp configuration
  13:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *           + Tampers configuration
  14:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *           + Backup Data Registers configuration
  15:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *           + RTC Tamper and TimeStamp Pins Selection
  16:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *           + Interrupts and flags management
  17:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *
  18:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   @verbatim
  19:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
  20:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                           ##### RTC Operating Condition #####
  21:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
  22:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..] The real-time clock (RTC) and the RTC backup registers can be powered
  23:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        from the VBAT voltage when the main VDD supply is powered off.
  24:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        To retain the content of the RTC backup registers and supply the RTC
  25:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        when VDD is turned off, VBAT pin can be connected to an optional
  26:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        standby voltage supplied by a battery or by another source.
  27:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
  28:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                    ##### Backup Domain Reset #####
  29:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
  30:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..] The backup domain reset sets all RTC registers and the RCC_BDCR register
ARM GAS  /tmp/ccXWJXxY.s 			page 2


  31:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        to their reset values.
  32:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        A backup domain reset is generated when one of the following events occurs:
  33:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (#) Software reset, triggered by setting the BDRST bit in the
  34:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         RCC Backup domain control register (RCC_BDCR).
  35:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (#) VDD or VBAT power on, if both supplies have previously been powered off.
  36:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (#) Tamper detection event resets all data backup registers.
  37:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
  38:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                    ##### Backup Domain Access #####
  39:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   ==================================================================
  40:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..] After reset, the backup domain (RTC registers and RTC backup data registers)
  41:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        is protected against possible unwanted write accesses.
  42:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..] To enable access to the RTC Domain and RTC registers, proceed as follows:
  43:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Enable the Power Controller (PWR) APB1 interface clock using the
  44:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_RCC_PWR_CLK_ENABLE() function.
  45:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Enable access to RTC domain using the HAL_PWR_EnableBkUpAccess() function.
  46:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Select the RTC clock source using the __HAL_RCC_RTC_CONFIG() function.
  47:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Enable RTC Clock using the __HAL_RCC_RTC_ENABLE() function.
  48:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
  49:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..] To enable access to the RTC Domain and RTC registers, proceed as follows:
  50:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (#) Call the function HAL_RCCEx_PeriphCLKConfig with RCC_PERIPHCLK_RTC for
  51:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         PeriphClockSelection and select RTCClockSelection (LSE, LSI or HSEdiv32)
  52:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (#) Enable RTC Clock using the __HAL_RCC_RTC_ENABLE() macro.
  53:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
  54:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ##### How to use RTC Driver #####
  55:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===================================================================
  56:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..]
  57:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Enable the RTC domain access (see description in the section above).
  58:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Configure the RTC Prescaler (Asynchronous and Synchronous) and RTC hour
  59:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         format using the HAL_RTC_Init() function.
  60:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
  61:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *** Time and Date configuration ***
  62:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   ===================================
  63:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..]
  64:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) To configure the RTC Calendar (Time and Date) use the HAL_RTC_SetTime()
  65:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         and HAL_RTC_SetDate() functions.
  66:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) To read the RTC Calendar, use the HAL_RTC_GetTime() and HAL_RTC_GetDate() functions.
  67:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
  68:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *** Alarm configuration ***
  69:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   ===========================
  70:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..]
  71:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) To configure the RTC Alarm use the HAL_RTC_SetAlarm() function.
  72:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****             You can also configure the RTC Alarm with interrupt mode using the
  73:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****             HAL_RTC_SetAlarm_IT() function.
  74:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) To read the RTC Alarm, use the HAL_RTC_GetAlarm() function.
  75:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
  76:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ##### RTC and low power modes #####
  77:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   ==================================================================
  78:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..] The MCU can be woken up from a low power mode by an RTC alternate
  79:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        function.
  80:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..] The RTC alternate functions are the RTC alarms (Alarm A and Alarm B),
  81:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        RTC wakeup, RTC tamper event detection and RTC time stamp event detection.
  82:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        These RTC alternate functions can wake up the system from the Stop and
  83:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        Standby low power modes.
  84:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..] The system can also wake up from low power modes without depending
  85:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        on an external interrupt (Auto-wakeup mode), by using the RTC alarm
  86:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        or the RTC wakeup events.
  87:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   [..] The RTC provides a programmable time base for waking up from the
ARM GAS  /tmp/ccXWJXxY.s 			page 3


  88:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        Stop or Standby mode at regular intervals.
  89:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        Wakeup from STOP and STANDBY modes is possible only when the RTC clock source
  90:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****        is LSE or LSI.
  91:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
  92:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *** Callback registration ***
  93:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   =============================================
  94:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   When The compilation define USE_HAL_RTC_REGISTER_CALLBACKS is set to 0 or
  95:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   not defined, the callback registration feature is not available and all callbacks
  96:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   are set to the corresponding weak functions. This is the recommended configuration
  97:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   in order to optimize memory/code consumption footprint/performances.
  98:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
  99:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   The compilation define  USE_RTC_REGISTER_CALLBACKS when set to 1
 100:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   allows the user to configure dynamically the driver callbacks.
 101:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   Use Function @ref HAL_RTC_RegisterCallback() to register an interrupt callback.
 102:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 103:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   Function @ref HAL_RTC_RegisterCallback() allows to register following callbacks:
 104:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) AlarmAEventCallback          : RTC Alarm A Event callback.
 105:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) AlarmBEventCallback          : RTC Alarm B Event callback.
 106:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) TimeStampEventCallback       : RTC TimeStamp Event callback.
 107:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) WakeUpTimerEventCallback     : RTC WakeUpTimer Event callback.
 108:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Tamper1EventCallback         : RTC Tamper 1 Event callback.
 109:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Tamper2EventCallback         : RTC Tamper 2 Event callback.
 110:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Tamper3EventCallback         : RTC Tamper 3 Event callback.
 111:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) MspInitCallback              : RTC MspInit callback.
 112:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) MspDeInitCallback            : RTC MspDeInit callback.
 113:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   This function takes as parameters the HAL peripheral handle, the Callback ID
 114:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   and a pointer to the user callback function.
 115:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 116:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   Use function @ref HAL_RTC_UnRegisterCallback() to reset a callback to the default
 117:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   weak function.
 118:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   @ref HAL_RTC_UnRegisterCallback() takes as parameters the HAL peripheral handle,
 119:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   and the Callback ID.
 120:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   This function allows to reset following callbacks:
 121:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) AlarmAEventCallback          : RTC Alarm A Event callback.
 122:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) AlarmBEventCallback          : RTC Alarm B Event callback.
 123:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) TimeStampEventCallback       : RTC TimeStamp Event callback.
 124:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) WakeUpTimerEventCallback     : RTC WakeUpTimer Event callback.
 125:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Tamper1EventCallback         : RTC Tamper 1 Event callback.
 126:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Tamper2EventCallback         : RTC Tamper 2 Event callback.
 127:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) Tamper3EventCallback         : RTC Tamper 3 Event callback.
 128:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) MspInitCallback              : RTC MspInit callback.
 129:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     (+) MspDeInitCallback            : RTC MspDeInit callback.
 130:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 131:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   By default, after the @ref HAL_RTC_Init() and when the state is HAL_RTC_STATE_RESET,
 132:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   all callbacks are set to the corresponding weak functions :
 133:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   examples @ref AlarmAEventCallback(), @ref TimeStampEventCallback().
 134:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   Exception done for MspInit and MspDeInit callbacks that are reset to the legacy weak function
 135:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   in the @ref HAL_RTC_Init()/@ref HAL_RTC_DeInit() only when these callbacks are null
 136:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   (not registered beforehand).
 137:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   If not, MspInit or MspDeInit are not null, @ref HAL_RTC_Init()/@ref HAL_RTC_DeInit()
 138:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   keep and use the user MspInit/MspDeInit callbacks (registered beforehand)
 139:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 140:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   Callbacks can be registered/unregistered in HAL_RTC_STATE_READY state only.
 141:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   Exception done MspInit/MspDeInit that can be registered/unregistered
 142:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   in HAL_RTC_STATE_READY or HAL_RTC_STATE_RESET state,
 143:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 144:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   In that case first register the MspInit/MspDeInit user callbacks
ARM GAS  /tmp/ccXWJXxY.s 			page 4


 145:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   using @ref HAL_RTC_RegisterCallback() before calling @ref HAL_RTC_DeInit()
 146:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   or @ref HAL_RTC_Init() function.
 147:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 148:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   When The compilation define USE_HAL_RTC_REGISTER_CALLBACKS is set to 0 or
 149:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   not defined, the callback registration feature is not available and all callbacks
 150:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   are set to the corresponding weak functions.
 151:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 152:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****    @endverbatim
 153:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   ******************************************************************************
 154:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @attention
 155:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *
 156:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
 157:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * All rights reserved.</center></h2>
 158:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *
 159:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 160:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * the "License"; You may not use this file except in compliance with the
 161:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * License. You may obtain a copy of the License at:
 162:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *                        opensource.org/licenses/BSD-3-Clause
 163:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *
 164:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   ******************************************************************************
 165:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 166:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 167:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /* Includes ------------------------------------------------------------------*/
 168:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #include "stm32l4xx_hal.h"
 169:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 170:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /** @addtogroup STM32L4xx_HAL_Driver
 171:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @{
 172:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 173:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 174:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 175:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /** @addtogroup RTC
 176:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief RTC HAL module driver
 177:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @{
 178:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 179:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 180:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #ifdef HAL_RTC_MODULE_ENABLED
 181:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 182:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /* Private typedef -----------------------------------------------------------*/
 183:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /* Private define ------------------------------------------------------------*/
 184:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /* Private macro -------------------------------------------------------------*/
 185:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /* Private variables ---------------------------------------------------------*/
 186:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /* Private function prototypes -----------------------------------------------*/
 187:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /* Exported functions --------------------------------------------------------*/
 188:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 189:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions
 190:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @{
 191:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 192:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 193:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group1
 194:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *  @brief    Initialization and Configuration functions
 195:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *
 196:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @verbatim
 197:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
 198:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ##### Initialization and de-initialization functions #####
 199:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
 200:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****    [..] This section provides functions allowing to initialize and configure the
 201:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****          RTC Prescaler (Synchronous and Asynchronous), RTC Hour format, disable
ARM GAS  /tmp/ccXWJXxY.s 			page 5


 202:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****          RTC registers Write protection, enter and exit the RTC initialization mode,
 203:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****          RTC registers synchronization check and reference clock detection enable.
 204:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****          (#) The RTC Prescaler is programmed to generate the RTC 1Hz time base.
 205:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              It is split into 2 programmable prescalers to minimize power consumption.
 206:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              (++) A 7-bit asynchronous prescaler and a 15-bit synchronous prescaler.
 207:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              (++) When both prescalers are used, it is recommended to configure the
 208:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                  asynchronous prescaler to a high value to minimize power consumption.
 209:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****          (#) All RTC registers are Write protected. Writing to the RTC registers
 210:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              is enabled by writing a key into the Write Protection register, RTC_WPR.
 211:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****          (#) To configure the RTC Calendar, user application should enter
 212:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              initialization mode. In this mode, the calendar counter is stopped
 213:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              and its value can be updated. When the initialization sequence is
 214:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              complete, the calendar restarts counting after 4 RTCCLK cycles.
 215:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****          (#) To read the calendar through the shadow registers after Calendar
 216:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              initialization, calendar update or after wakeup from low power modes
 217:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              the software must first clear the RSF flag. The software must then
 218:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              wait until it is set again before reading the calendar, which means
 219:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              that the calendar registers have been correctly copied into the
 220:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              RTC_TR and RTC_DR shadow registers.The HAL_RTC_WaitForSynchro() function
 221:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****              implements the above software sequence (RSF clear and RSF check).
 222:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 223:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @endverbatim
 224:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @{
 225:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 226:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 227:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 228:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Initialize the RTC peripheral
 229:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
 230:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
 231:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 232:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_Init(RTC_HandleTypeDef *hrtc)
 233:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
  29              		.loc 1 233 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 16
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 84B0     		sub	sp, sp, #16
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 24
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  44 0006 7860     		str	r0, [r7, #4]
 234:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_ERROR;
  45              		.loc 1 234 21
  46 0008 0123     		movs	r3, #1
  47 000a FB73     		strb	r3, [r7, #15]
 235:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 236:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the RTC peripheral state */
 237:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (hrtc != NULL)
  48              		.loc 1 237 6
  49 000c 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccXWJXxY.s 			page 6


  50 000e 002B     		cmp	r3, #0
  51 0010 6FD0     		beq	.L2
 238:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 239:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Check the parameters */
 240:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALL_INSTANCE(hrtc->Instance));
 241:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_HOUR_FORMAT(hrtc->Init.HourFormat));
 242:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ASYNCH_PREDIV(hrtc->Init.AsynchPrediv));
 243:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_SYNCH_PREDIV(hrtc->Init.SynchPrediv));
 244:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_OUTPUT(hrtc->Init.OutPut));
 245:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_OUTPUT_REMAP(hrtc->Init.OutPutRemap));
 246:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_OUTPUT_POL(hrtc->Init.OutPutPolarity));
 247:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_OUTPUT_TYPE(hrtc->Init.OutPutType));
 248:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx)
 249:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_OUTPUT_PULLUP(hrtc->Init.OutPutPullUp));
 250:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 251:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 252:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
 253:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (hrtc->State == HAL_RTC_STATE_RESET)
 254:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 255:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Allocate lock resource and initialize it */
 256:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Lock = HAL_UNLOCKED;
 257:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->AlarmAEventCallback          =  HAL_RTC_AlarmAEventCallback;             /* Legacy weak
 258:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->AlarmBEventCallback          =  HAL_RTCEx_AlarmBEventCallback;           /* Legacy weak
 259:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->TimeStampEventCallback       =  HAL_RTCEx_TimeStampEventCallback;        /* Legacy weak
 260:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->WakeUpTimerEventCallback     =  HAL_RTCEx_WakeUpTimerEventCallback;      /* Legacy weak
 261:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(RTC_TAMPER1_SUPPORT)
 262:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Tamper1EventCallback         =  HAL_RTCEx_Tamper1EventCallback;          /* Legacy weak
 263:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* RTC_TAMPER1_SUPPORT */
 264:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Tamper2EventCallback         =  HAL_RTCEx_Tamper2EventCallback;          /* Legacy weak
 265:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(RTC_TAMPER3_SUPPORT)
 266:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Tamper3EventCallback         =  HAL_RTCEx_Tamper3EventCallback;          /* Legacy weak
 267:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* RTC_TAMPER3_SUPPORT */
 268:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 269:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (hrtc->MspInitCallback == NULL)
 270:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 271:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspInitCallback = HAL_RTC_MspInit;
 272:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 273:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Init the low level hardware */
 274:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->MspInitCallback(hrtc);
 275:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 276:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (hrtc->MspDeInitCallback == NULL)
 277:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 278:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspDeInitCallback = HAL_RTC_MspDeInit;
 279:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 280:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 281:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else /* #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
 282:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (hrtc->State == HAL_RTC_STATE_RESET)
  52              		.loc 1 282 13
  53 0012 7B68     		ldr	r3, [r7, #4]
  54 0014 93F82130 		ldrb	r3, [r3, #33]
  55 0018 DBB2     		uxtb	r3, r3
  56              		.loc 1 282 8
  57 001a 002B     		cmp	r3, #0
  58 001c 06D1     		bne	.L3
 283:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 284:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Allocate lock resource and initialize it */
 285:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Lock = HAL_UNLOCKED;
ARM GAS  /tmp/ccXWJXxY.s 			page 7


  59              		.loc 1 285 18
  60 001e 7B68     		ldr	r3, [r7, #4]
  61 0020 0022     		movs	r2, #0
  62 0022 83F82020 		strb	r2, [r3, #32]
 286:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 287:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Initialize RTC MSP */
 288:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       HAL_RTC_MspInit(hrtc);
  63              		.loc 1 288 7
  64 0026 7868     		ldr	r0, [r7, #4]
  65 0028 FFF7FEFF 		bl	HAL_RTC_MspInit
  66              	.L3:
 289:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 290:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
 291:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 292:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx)
 293:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Process TAMP ip offset from RTC one */
 294:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->TampOffset = (TAMP_BASE - RTC_BASE);
 295:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 296:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Set RTC state */
 297:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_BUSY;
  67              		.loc 1 297 17
  68 002c 7B68     		ldr	r3, [r7, #4]
  69 002e 0222     		movs	r2, #2
  70 0030 83F82120 		strb	r2, [r3, #33]
 298:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 299:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Disable the write protection for RTC registers */
 300:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
  71              		.loc 1 300 5
  72 0034 7B68     		ldr	r3, [r7, #4]
  73 0036 1B68     		ldr	r3, [r3]
  74 0038 CA22     		movs	r2, #202
  75 003a 5A62     		str	r2, [r3, #36]
  76 003c 7B68     		ldr	r3, [r7, #4]
  77 003e 1B68     		ldr	r3, [r3]
  78 0040 5322     		movs	r2, #83
  79 0042 5A62     		str	r2, [r3, #36]
 301:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 302:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Enter Initialization mode */
 303:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     status = RTC_EnterInitMode(hrtc);
  80              		.loc 1 303 14
  81 0044 7868     		ldr	r0, [r7, #4]
  82 0046 FFF7FEFF 		bl	RTC_EnterInitMode
  83 004a 0346     		mov	r3, r0
  84 004c FB73     		strb	r3, [r7, #15]
 304:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 305:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (status == HAL_OK)
  85              		.loc 1 305 8
  86 004e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  87 0050 002B     		cmp	r3, #0
  88 0052 4ED1     		bne	.L2
 306:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 307:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx)
 308:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Clear RTC_CR FMT, OSEL, POL and TAMPOE Bits */
 309:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->CR &= ~(RTC_CR_FMT | RTC_CR_POL | RTC_CR_OSEL | RTC_CR_TAMPOE);
 310:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else
 311:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Clear RTC_CR FMT, OSEL and POL Bits */
 312:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->CR &= ~(RTC_CR_FMT | RTC_CR_OSEL | RTC_CR_POL);
ARM GAS  /tmp/ccXWJXxY.s 			page 8


  89              		.loc 1 312 11
  90 0054 7B68     		ldr	r3, [r7, #4]
  91 0056 1B68     		ldr	r3, [r3]
  92              		.loc 1 312 26
  93 0058 9B68     		ldr	r3, [r3, #8]
  94              		.loc 1 312 11
  95 005a 7A68     		ldr	r2, [r7, #4]
  96 005c 1268     		ldr	r2, [r2]
  97              		.loc 1 312 26
  98 005e 23F4E003 		bic	r3, r3, #7340032
  99 0062 23F04003 		bic	r3, r3, #64
 100 0066 9360     		str	r3, [r2, #8]
 313:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 314:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Set RTC_CR register */
 315:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->CR |= (hrtc->Init.HourFormat | hrtc->Init.OutPut | hrtc->Init.OutPutPolarity)
 101              		.loc 1 315 11
 102 0068 7B68     		ldr	r3, [r7, #4]
 103 006a 1B68     		ldr	r3, [r3]
 104              		.loc 1 315 26
 105 006c 9968     		ldr	r1, [r3, #8]
 106              		.loc 1 315 40
 107 006e 7B68     		ldr	r3, [r7, #4]
 108 0070 5A68     		ldr	r2, [r3, #4]
 109              		.loc 1 315 64
 110 0072 7B68     		ldr	r3, [r7, #4]
 111 0074 1B69     		ldr	r3, [r3, #16]
 112              		.loc 1 315 52
 113 0076 1A43     		orrs	r2, r2, r3
 114              		.loc 1 315 84
 115 0078 7B68     		ldr	r3, [r7, #4]
 116 007a 9B69     		ldr	r3, [r3, #24]
 117              		.loc 1 315 72
 118 007c 1A43     		orrs	r2, r2, r3
 119              		.loc 1 315 11
 120 007e 7B68     		ldr	r3, [r7, #4]
 121 0080 1B68     		ldr	r3, [r3]
 122              		.loc 1 315 26
 123 0082 0A43     		orrs	r2, r2, r1
 124 0084 9A60     		str	r2, [r3, #8]
 316:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 317:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Configure the RTC PRER */
 318:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->PRER = (hrtc->Init.SynchPrediv);
 125              		.loc 1 318 11
 126 0086 7B68     		ldr	r3, [r7, #4]
 127 0088 1B68     		ldr	r3, [r3]
 128              		.loc 1 318 41
 129 008a 7A68     		ldr	r2, [r7, #4]
 130 008c D268     		ldr	r2, [r2, #12]
 131              		.loc 1 318 28
 132 008e 1A61     		str	r2, [r3, #16]
 319:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->PRER |= (hrtc->Init.AsynchPrediv << RTC_PRER_PREDIV_A_Pos);
 133              		.loc 1 319 11
 134 0090 7B68     		ldr	r3, [r7, #4]
 135 0092 1B68     		ldr	r3, [r3]
 136              		.loc 1 319 28
 137 0094 1969     		ldr	r1, [r3, #16]
 138              		.loc 1 319 42
ARM GAS  /tmp/ccXWJXxY.s 			page 9


 139 0096 7B68     		ldr	r3, [r7, #4]
 140 0098 9B68     		ldr	r3, [r3, #8]
 141              		.loc 1 319 56
 142 009a 1A04     		lsls	r2, r3, #16
 143              		.loc 1 319 11
 144 009c 7B68     		ldr	r3, [r7, #4]
 145 009e 1B68     		ldr	r3, [r3]
 146              		.loc 1 319 28
 147 00a0 0A43     		orrs	r2, r2, r1
 148 00a2 1A61     		str	r2, [r3, #16]
 320:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 321:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Exit Initialization mode */
 322:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       status = RTC_ExitInitMode(hrtc);
 149              		.loc 1 322 16
 150 00a4 7868     		ldr	r0, [r7, #4]
 151 00a6 FFF7FEFF 		bl	RTC_ExitInitMode
 152 00aa 0346     		mov	r3, r0
 153 00ac FB73     		strb	r3, [r7, #15]
 323:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 324:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (status == HAL_OK)
 154              		.loc 1 324 10
 155 00ae FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 156 00b0 002B     		cmp	r3, #0
 157 00b2 1ED1     		bne	.L2
 325:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 326:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx)
 327:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->CR &= ~(RTC_CR_TAMPALRM_PU | RTC_CR_TAMPALRM_TYPE | RTC_CR_OUT2EN);
 328:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->CR |= (hrtc->Init.OutPutPullUp | hrtc->Init.OutPutType | hrtc->Init.OutPutR
 329:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else
 330:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->OR &= ~(RTC_OR_ALARMOUTTYPE | RTC_OR_OUT_RMP);
 158              		.loc 1 330 13
 159 00b4 7B68     		ldr	r3, [r7, #4]
 160 00b6 1B68     		ldr	r3, [r3]
 161              		.loc 1 330 28
 162 00b8 DA6C     		ldr	r2, [r3, #76]
 163              		.loc 1 330 13
 164 00ba 7B68     		ldr	r3, [r7, #4]
 165 00bc 1B68     		ldr	r3, [r3]
 166              		.loc 1 330 28
 167 00be 22F00302 		bic	r2, r2, #3
 168 00c2 DA64     		str	r2, [r3, #76]
 331:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->OR |= (hrtc->Init.OutPutType | hrtc->Init.OutPutRemap);
 169              		.loc 1 331 13
 170 00c4 7B68     		ldr	r3, [r7, #4]
 171 00c6 1B68     		ldr	r3, [r3]
 172              		.loc 1 331 28
 173 00c8 D96C     		ldr	r1, [r3, #76]
 174              		.loc 1 331 42
 175 00ca 7B68     		ldr	r3, [r7, #4]
 176 00cc DA69     		ldr	r2, [r3, #28]
 177              		.loc 1 331 66
 178 00ce 7B68     		ldr	r3, [r7, #4]
 179 00d0 5B69     		ldr	r3, [r3, #20]
 180              		.loc 1 331 54
 181 00d2 1A43     		orrs	r2, r2, r3
 182              		.loc 1 331 13
 183 00d4 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccXWJXxY.s 			page 10


 184 00d6 1B68     		ldr	r3, [r3]
 185              		.loc 1 331 28
 186 00d8 0A43     		orrs	r2, r2, r1
 187 00da DA64     		str	r2, [r3, #76]
 332:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 333:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 334:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 335:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 188              		.loc 1 335 9
 189 00dc 7B68     		ldr	r3, [r7, #4]
 190 00de 1B68     		ldr	r3, [r3]
 191 00e0 FF22     		movs	r2, #255
 192 00e2 5A62     		str	r2, [r3, #36]
 336:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 337:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         if (status == HAL_OK)
 193              		.loc 1 337 12
 194 00e4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 195 00e6 002B     		cmp	r3, #0
 196 00e8 03D1     		bne	.L2
 338:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         {
 339:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****           hrtc->State = HAL_RTC_STATE_READY;
 197              		.loc 1 339 23
 198 00ea 7B68     		ldr	r3, [r7, #4]
 199 00ec 0122     		movs	r2, #1
 200 00ee 83F82120 		strb	r2, [r3, #33]
 201              	.L2:
 340:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         }
 341:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 342:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 343:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 344:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 345:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return status;
 202              		.loc 1 345 10
 203 00f2 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 346:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 204              		.loc 1 346 1
 205 00f4 1846     		mov	r0, r3
 206 00f6 1037     		adds	r7, r7, #16
 207              	.LCFI3:
 208              		.cfi_def_cfa_offset 8
 209 00f8 BD46     		mov	sp, r7
 210              	.LCFI4:
 211              		.cfi_def_cfa_register 13
 212              		@ sp needed
 213 00fa 80BD     		pop	{r7, pc}
 214              		.cfi_endproc
 215              	.LFE313:
 217              		.section	.text.HAL_RTC_DeInit,"ax",%progbits
 218              		.align	1
 219              		.global	HAL_RTC_DeInit
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 223              		.fpu fpv4-sp-d16
 225              	HAL_RTC_DeInit:
 226              	.LFB314:
 347:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccXWJXxY.s 			page 11


 348:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 349:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  DeInitialize the RTC peripheral.
 350:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note   This function does not reset the RTC Backup Data registers.
 351:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
 352:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
 353:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 354:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_DeInit(RTC_HandleTypeDef *hrtc)
 355:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 227              		.loc 1 355 1
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 16
 230              		@ frame_needed = 1, uses_anonymous_args = 0
 231 0000 80B5     		push	{r7, lr}
 232              	.LCFI5:
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 7, -8
 235              		.cfi_offset 14, -4
 236 0002 84B0     		sub	sp, sp, #16
 237              	.LCFI6:
 238              		.cfi_def_cfa_offset 24
 239 0004 00AF     		add	r7, sp, #0
 240              	.LCFI7:
 241              		.cfi_def_cfa_register 7
 242 0006 7860     		str	r0, [r7, #4]
 356:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 243              		.loc 1 356 21
 244 0008 0123     		movs	r3, #1
 245 000a FB73     		strb	r3, [r7, #15]
 357:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 358:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the RTC peripheral state */
 359:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (hrtc != NULL)
 246              		.loc 1 359 6
 247 000c 7B68     		ldr	r3, [r7, #4]
 248 000e 002B     		cmp	r3, #0
 249 0010 63D0     		beq	.L6
 360:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 361:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Check the parameters */
 362:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_ALL_INSTANCE(hrtc->Instance));
 363:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 364:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Set RTC state */
 365:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_BUSY;
 250              		.loc 1 365 17
 251 0012 7B68     		ldr	r3, [r7, #4]
 252 0014 0222     		movs	r2, #2
 253 0016 83F82120 		strb	r2, [r3, #33]
 366:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 367:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Disable the write protection for RTC registers */
 368:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 254              		.loc 1 368 5
 255 001a 7B68     		ldr	r3, [r7, #4]
 256 001c 1B68     		ldr	r3, [r3]
 257 001e CA22     		movs	r2, #202
 258 0020 5A62     		str	r2, [r3, #36]
 259 0022 7B68     		ldr	r3, [r7, #4]
 260 0024 1B68     		ldr	r3, [r3]
 261 0026 5322     		movs	r2, #83
 262 0028 5A62     		str	r2, [r3, #36]
ARM GAS  /tmp/ccXWJXxY.s 			page 12


 369:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 370:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Enter Initialization mode */
 371:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     status = RTC_EnterInitMode(hrtc);
 263              		.loc 1 371 14
 264 002a 7868     		ldr	r0, [r7, #4]
 265 002c FFF7FEFF 		bl	RTC_EnterInitMode
 266 0030 0346     		mov	r3, r0
 267 0032 FB73     		strb	r3, [r7, #15]
 372:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 373:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (status == HAL_OK)
 268              		.loc 1 373 8
 269 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 270 0036 002B     		cmp	r3, #0
 271 0038 4FD1     		bne	.L6
 374:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 375:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Reset all RTC CR register bits */
 376:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->TR = 0x00000000U;
 272              		.loc 1 376 11
 273 003a 7B68     		ldr	r3, [r7, #4]
 274 003c 1B68     		ldr	r3, [r3]
 275              		.loc 1 376 26
 276 003e 0022     		movs	r2, #0
 277 0040 1A60     		str	r2, [r3]
 377:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->DR = ((uint32_t)(RTC_DR_WDU_0 | RTC_DR_MU_0 | RTC_DR_DU_0));
 278              		.loc 1 377 11
 279 0042 7B68     		ldr	r3, [r7, #4]
 280 0044 1B68     		ldr	r3, [r3]
 281              		.loc 1 377 26
 282 0046 42F20112 		movw	r2, #8449
 283 004a 5A60     		str	r2, [r3, #4]
 378:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->CR &= 0x00000000U;
 284              		.loc 1 378 11
 285 004c 7B68     		ldr	r3, [r7, #4]
 286 004e 1B68     		ldr	r3, [r3]
 287              		.loc 1 378 26
 288 0050 9B68     		ldr	r3, [r3, #8]
 289              		.loc 1 378 11
 290 0052 7B68     		ldr	r3, [r7, #4]
 291 0054 1B68     		ldr	r3, [r3]
 292              		.loc 1 378 26
 293 0056 0022     		movs	r2, #0
 294 0058 9A60     		str	r2, [r3, #8]
 379:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 380:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->WUTR = RTC_WUTR_WUT;
 295              		.loc 1 380 11
 296 005a 7B68     		ldr	r3, [r7, #4]
 297 005c 1B68     		ldr	r3, [r3]
 298              		.loc 1 380 28
 299 005e 4FF6FF72 		movw	r2, #65535
 300 0062 5A61     		str	r2, [r3, #20]
 381:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->PRER = ((uint32_t)(RTC_PRER_PREDIV_A | 0x000000FFU));
 301              		.loc 1 381 11
 302 0064 7B68     		ldr	r3, [r7, #4]
 303 0066 1B68     		ldr	r3, [r3]
 304              		.loc 1 381 28
 305 0068 1E4A     		ldr	r2, .L8
 306 006a 1A61     		str	r2, [r3, #16]
ARM GAS  /tmp/ccXWJXxY.s 			page 13


 382:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->ALRMAR = 0x00000000U;
 307              		.loc 1 382 11
 308 006c 7B68     		ldr	r3, [r7, #4]
 309 006e 1B68     		ldr	r3, [r3]
 310              		.loc 1 382 30
 311 0070 0022     		movs	r2, #0
 312 0072 DA61     		str	r2, [r3, #28]
 383:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->ALRMBR = 0x00000000U;
 313              		.loc 1 383 11
 314 0074 7B68     		ldr	r3, [r7, #4]
 315 0076 1B68     		ldr	r3, [r3]
 316              		.loc 1 383 30
 317 0078 0022     		movs	r2, #0
 318 007a 1A62     		str	r2, [r3, #32]
 384:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->SHIFTR = 0x00000000U;
 319              		.loc 1 384 11
 320 007c 7B68     		ldr	r3, [r7, #4]
 321 007e 1B68     		ldr	r3, [r3]
 322              		.loc 1 384 30
 323 0080 0022     		movs	r2, #0
 324 0082 DA62     		str	r2, [r3, #44]
 385:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->CALR = 0x00000000U;
 325              		.loc 1 385 11
 326 0084 7B68     		ldr	r3, [r7, #4]
 327 0086 1B68     		ldr	r3, [r3]
 328              		.loc 1 385 28
 329 0088 0022     		movs	r2, #0
 330 008a DA63     		str	r2, [r3, #60]
 386:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->ALRMASSR = 0x00000000U;
 331              		.loc 1 386 11
 332 008c 7B68     		ldr	r3, [r7, #4]
 333 008e 1B68     		ldr	r3, [r3]
 334              		.loc 1 386 32
 335 0090 0022     		movs	r2, #0
 336 0092 5A64     		str	r2, [r3, #68]
 387:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->Instance->ALRMBSSR = 0x00000000U;
 337              		.loc 1 387 11
 338 0094 7B68     		ldr	r3, [r7, #4]
 339 0096 1B68     		ldr	r3, [r3]
 340              		.loc 1 387 32
 341 0098 0022     		movs	r2, #0
 342 009a 9A64     		str	r2, [r3, #72]
 388:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 389:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Exit initialization mode */
 390:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       status = RTC_ExitInitMode(hrtc);
 343              		.loc 1 390 16
 344 009c 7868     		ldr	r0, [r7, #4]
 345 009e FFF7FEFF 		bl	RTC_ExitInitMode
 346 00a2 0346     		mov	r3, r0
 347 00a4 FB73     		strb	r3, [r7, #15]
 391:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 392:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 393:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (status == HAL_OK)
 348              		.loc 1 393 10
 349 00a6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 350 00a8 002B     		cmp	r3, #0
 351 00aa 16D1     		bne	.L6
ARM GAS  /tmp/ccXWJXxY.s 			page 14


 394:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 395:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx)
 396:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Reset TAMP registers */
 397:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         ((TAMP_TypeDef *)((uint32_t)hrtc->Instance + hrtc->TampOffset))->CR1 = 0xFFFF0000U;
 398:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         ((TAMP_TypeDef *)((uint32_t)hrtc->Instance + hrtc->TampOffset))->CR2 = 0x00000000U;
 399:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else
 400:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Reset Tamper configuration register */
 401:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->TAMPCR = 0x00000000U;
 352              		.loc 1 401 13
 353 00ac 7B68     		ldr	r3, [r7, #4]
 354 00ae 1B68     		ldr	r3, [r3]
 355              		.loc 1 401 32
 356 00b0 0022     		movs	r2, #0
 357 00b2 1A64     		str	r2, [r3, #64]
 402:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 403:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Reset Option register */
 404:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Instance->OR = 0x00000000U;
 358              		.loc 1 404 13
 359 00b4 7B68     		ldr	r3, [r7, #4]
 360 00b6 1B68     		ldr	r3, [r3]
 361              		.loc 1 404 28
 362 00b8 0022     		movs	r2, #0
 363 00ba DA64     		str	r2, [r3, #76]
 405:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 406:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 407:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
 408:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 364              		.loc 1 408 9
 365 00bc 7B68     		ldr	r3, [r7, #4]
 366 00be 1B68     		ldr	r3, [r3]
 367 00c0 FF22     		movs	r2, #255
 368 00c2 5A62     		str	r2, [r3, #36]
 409:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 410:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
 411:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         if (hrtc->MspDeInitCallback == NULL)
 412:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         {
 413:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****           hrtc->MspDeInitCallback = HAL_RTC_MspDeInit;
 414:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         }
 415:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 416:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* DeInit the low level hardware: CLOCK, NVIC.*/
 417:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspDeInitCallback(hrtc);
 418:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else
 419:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* De-Initialize RTC MSP */
 420:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         HAL_RTC_MspDeInit(hrtc);
 369              		.loc 1 420 9
 370 00c4 7868     		ldr	r0, [r7, #4]
 371 00c6 FFF7FEFF 		bl	HAL_RTC_MspDeInit
 421:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS) */
 422:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 423:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_RESET;
 372              		.loc 1 423 21
 373 00ca 7B68     		ldr	r3, [r7, #4]
 374 00cc 0022     		movs	r2, #0
 375 00ce 83F82120 		strb	r2, [r3, #33]
 424:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 425:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Release Lock */
 426:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
ARM GAS  /tmp/ccXWJXxY.s 			page 15


 376              		.loc 1 426 9
 377 00d2 7B68     		ldr	r3, [r7, #4]
 378 00d4 0022     		movs	r2, #0
 379 00d6 83F82020 		strb	r2, [r3, #32]
 380              	.L6:
 427:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 428:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 429:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 430:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 431:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return status;
 381              		.loc 1 431 10
 382 00da FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 432:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 383              		.loc 1 432 1
 384 00dc 1846     		mov	r0, r3
 385 00de 1037     		adds	r7, r7, #16
 386              	.LCFI8:
 387              		.cfi_def_cfa_offset 8
 388 00e0 BD46     		mov	sp, r7
 389              	.LCFI9:
 390              		.cfi_def_cfa_register 13
 391              		@ sp needed
 392 00e2 80BD     		pop	{r7, pc}
 393              	.L9:
 394              		.align	2
 395              	.L8:
 396 00e4 FF007F00 		.word	8323327
 397              		.cfi_endproc
 398              	.LFE314:
 400              		.section	.text.HAL_RTC_MspInit,"ax",%progbits
 401              		.align	1
 402              		.weak	HAL_RTC_MspInit
 403              		.syntax unified
 404              		.thumb
 405              		.thumb_func
 406              		.fpu fpv4-sp-d16
 408              	HAL_RTC_MspInit:
 409              	.LFB315:
 433:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 434:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
 435:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 436:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Register a User RTC Callback
 437:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         To be used instead of the weak predefined callback
 438:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
 439:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  CallbackID ID of the callback to be registered
 440:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         This parameter can be one of the following values:
 441:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_ALARM_A_EVENT_CB_ID          Alarm A Event Callback ID
 442:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_ALARM_B_EVENT_CB_ID          Alarm B Event Callback ID
 443:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_TIMESTAMP_EVENT_CB_ID        TimeStamp Event Callback ID
 444:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_WAKEUPTIMER_EVENT_CB_ID      WakeUp Timer Event Callback ID
 445:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_TAMPER1_EVENT_CB_ID          Tamper 1 Callback ID
 446:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_TAMPER2_EVENT_CB_ID          Tamper 2 Callback ID
 447:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_TAMPER3_EVENT_CB_ID          Tamper 3 Callback ID
 448:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_MSPINIT_CB_ID                Msp Init callback ID
 449:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_MSPDEINIT_CB_ID              Msp DeInit callback ID
 450:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  pCallback pointer to the Callback function
 451:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
ARM GAS  /tmp/ccXWJXxY.s 			page 16


 452:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 453:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_RegisterCallback(RTC_HandleTypeDef *hrtc, HAL_RTC_CallbackIDTypeDef Callb
 454:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 455:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_OK;
 456:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 457:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (pCallback == NULL)
 458:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 459:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     return HAL_ERROR;
 460:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 461:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 462:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process locked */
 463:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 464:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 465:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (HAL_RTC_STATE_READY == hrtc->State)
 466:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 467:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     switch (CallbackID)
 468:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 469:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_ALARM_A_EVENT_CB_ID :
 470:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->AlarmAEventCallback = pCallback;
 471:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 472:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 473:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_ALARM_B_EVENT_CB_ID :
 474:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->AlarmBEventCallback = pCallback;
 475:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 476:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 477:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_TIMESTAMP_EVENT_CB_ID :
 478:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->TimeStampEventCallback = pCallback;
 479:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 480:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 481:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_WAKEUPTIMER_EVENT_CB_ID :
 482:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->WakeUpTimerEventCallback = pCallback;
 483:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 484:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 485:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(RTC_TAMPER1_SUPPORT)
 486:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_TAMPER1_EVENT_CB_ID :
 487:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Tamper1EventCallback = pCallback;
 488:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 489:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* RTC_TAMPER1_SUPPORT */
 490:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 491:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_TAMPER2_EVENT_CB_ID :
 492:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Tamper2EventCallback = pCallback;
 493:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 494:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 495:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(RTC_TAMPER3_SUPPORT)
 496:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_TAMPER3_EVENT_CB_ID :
 497:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Tamper3EventCallback = pCallback;
 498:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 499:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* RTC_TAMPER3_SUPPORT */
 500:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 501:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_MSPINIT_CB_ID :
 502:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspInitCallback = pCallback;
 503:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 504:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 505:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_MSPDEINIT_CB_ID :
 506:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspDeInitCallback = pCallback;
 507:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 508:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccXWJXxY.s 			page 17


 509:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       default :
 510:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Return error status */
 511:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         status =  HAL_ERROR;
 512:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 513:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 514:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 515:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else if (HAL_RTC_STATE_RESET == hrtc->State)
 516:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 517:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     switch (CallbackID)
 518:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 519:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_MSPINIT_CB_ID :
 520:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspInitCallback = pCallback;
 521:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 522:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 523:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_MSPDEINIT_CB_ID :
 524:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspDeInitCallback = pCallback;
 525:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 526:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 527:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       default :
 528:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Return error status */
 529:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         status =  HAL_ERROR;
 530:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 531:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 532:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 533:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
 534:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 535:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Return error status */
 536:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     status =  HAL_ERROR;
 537:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 538:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 539:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Release Lock */
 540:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 541:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 542:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return status;
 543:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 544:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 545:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 546:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Unregister an RTC Callback
 547:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         RTC callback is redirected to the weak predefined callback
 548:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
 549:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  CallbackID ID of the callback to be unregistered
 550:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         This parameter can be one of the following values:
 551:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_ALARM_A_EVENT_CB_ID          Alarm A Event Callback ID
 552:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_ALARM_B_EVENT_CB_ID          Alarm B Event Callback ID
 553:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_TIMESTAMP_EVENT_CB_ID        TimeStamp Event Callback ID
 554:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_WAKEUPTIMER_EVENT_CB_ID      WakeUp Timer Event Callback ID
 555:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_TAMPER1_EVENT_CB_ID          Tamper 1 Callback ID
 556:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_TAMPER2_EVENT_CB_ID          Tamper 2 Callback ID
 557:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_TAMPER3_EVENT_CB_ID          Tamper 3 Callback ID
 558:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_MSPINIT_CB_ID Msp Init callback ID
 559:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          @arg @ref HAL_RTC_MSPDEINIT_CB_ID Msp DeInit callback ID
 560:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
 561:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 562:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_UnRegisterCallback(RTC_HandleTypeDef *hrtc, HAL_RTC_CallbackIDTypeDef Cal
 563:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 564:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_OK;
 565:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccXWJXxY.s 			page 18


 566:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process locked */
 567:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 568:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 569:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (HAL_RTC_STATE_READY == hrtc->State)
 570:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 571:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     switch (CallbackID)
 572:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 573:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_ALARM_A_EVENT_CB_ID :
 574:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->AlarmAEventCallback = HAL_RTC_AlarmAEventCallback;         /* Legacy weak AlarmAEvent
 575:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 576:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 577:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_ALARM_B_EVENT_CB_ID :
 578:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->AlarmBEventCallback = HAL_RTCEx_AlarmBEventCallback;          /* Legacy weak AlarmBEv
 579:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 580:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 581:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_TIMESTAMP_EVENT_CB_ID :
 582:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->TimeStampEventCallback = HAL_RTCEx_TimeStampEventCallback;    /* Legacy weak TimeStam
 583:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 584:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 585:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_WAKEUPTIMER_EVENT_CB_ID :
 586:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->WakeUpTimerEventCallback = HAL_RTCEx_WakeUpTimerEventCallback; /* Legacy weak WakeUpT
 587:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 588:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 589:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(RTC_TAMPER1_SUPPORT)
 590:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_TAMPER1_EVENT_CB_ID :
 591:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Tamper1EventCallback = HAL_RTCEx_Tamper1EventCallback;         /* Legacy weak Tamper1
 592:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 593:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* RTC_TAMPER1_SUPPORT */
 594:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 595:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_TAMPER2_EVENT_CB_ID :
 596:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Tamper2EventCallback = HAL_RTCEx_Tamper2EventCallback;         /* Legacy weak Tamper2
 597:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 598:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 599:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(RTC_TAMPER3_SUPPORT)
 600:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_TAMPER3_EVENT_CB_ID :
 601:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->Tamper3EventCallback = HAL_RTCEx_Tamper3EventCallback;         /* Legacy weak Tamper3
 602:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 603:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* RTC_TAMPER3_SUPPORT */
 604:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 605:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_MSPINIT_CB_ID :
 606:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspInitCallback = HAL_RTC_MspInit;
 607:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 608:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 609:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_MSPDEINIT_CB_ID :
 610:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspDeInitCallback = HAL_RTC_MspDeInit;
 611:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 612:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 613:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       default :
 614:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Return error status */
 615:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         status =  HAL_ERROR;
 616:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 617:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 618:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 619:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else if (HAL_RTC_STATE_RESET == hrtc->State)
 620:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 621:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     switch (CallbackID)
 622:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
ARM GAS  /tmp/ccXWJXxY.s 			page 19


 623:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_MSPINIT_CB_ID :
 624:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspInitCallback = HAL_RTC_MspInit;
 625:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 626:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 627:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       case HAL_RTC_MSPDEINIT_CB_ID :
 628:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->MspDeInitCallback = HAL_RTC_MspDeInit;
 629:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 630:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 631:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       default :
 632:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Return error status */
 633:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         status =  HAL_ERROR;
 634:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         break;
 635:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 636:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 637:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
 638:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 639:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Return error status */
 640:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     status =  HAL_ERROR;
 641:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 642:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 643:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Release Lock */
 644:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 645:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 646:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return status;
 647:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 648:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* USE_HAL_RTC_REGISTER_CALLBACKS */
 649:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 650:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 651:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Initialize the RTC MSP.
 652:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
 653:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval None
 654:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 655:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** __weak void HAL_RTC_MspInit(RTC_HandleTypeDef *hrtc)
 656:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 410              		.loc 1 656 1
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 8
 413              		@ frame_needed = 1, uses_anonymous_args = 0
 414              		@ link register save eliminated.
 415 0000 80B4     		push	{r7}
 416              	.LCFI10:
 417              		.cfi_def_cfa_offset 4
 418              		.cfi_offset 7, -4
 419 0002 83B0     		sub	sp, sp, #12
 420              	.LCFI11:
 421              		.cfi_def_cfa_offset 16
 422 0004 00AF     		add	r7, sp, #0
 423              	.LCFI12:
 424              		.cfi_def_cfa_register 7
 425 0006 7860     		str	r0, [r7, #4]
 657:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 658:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   UNUSED(hrtc);
 659:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 660:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 661:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****             the HAL_RTC_MspInit could be implemented in the user file
 662:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****    */
 663:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
ARM GAS  /tmp/ccXWJXxY.s 			page 20


 426              		.loc 1 663 1
 427 0008 00BF     		nop
 428 000a 0C37     		adds	r7, r7, #12
 429              	.LCFI13:
 430              		.cfi_def_cfa_offset 4
 431 000c BD46     		mov	sp, r7
 432              	.LCFI14:
 433              		.cfi_def_cfa_register 13
 434              		@ sp needed
 435 000e 5DF8047B 		ldr	r7, [sp], #4
 436              	.LCFI15:
 437              		.cfi_restore 7
 438              		.cfi_def_cfa_offset 0
 439 0012 7047     		bx	lr
 440              		.cfi_endproc
 441              	.LFE315:
 443              		.section	.text.HAL_RTC_MspDeInit,"ax",%progbits
 444              		.align	1
 445              		.weak	HAL_RTC_MspDeInit
 446              		.syntax unified
 447              		.thumb
 448              		.thumb_func
 449              		.fpu fpv4-sp-d16
 451              	HAL_RTC_MspDeInit:
 452              	.LFB316:
 664:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 665:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 666:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  DeInitialize the RTC MSP.
 667:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
 668:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval None
 669:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 670:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** __weak void HAL_RTC_MspDeInit(RTC_HandleTypeDef *hrtc)
 671:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 453              		.loc 1 671 1
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 8
 456              		@ frame_needed = 1, uses_anonymous_args = 0
 457              		@ link register save eliminated.
 458 0000 80B4     		push	{r7}
 459              	.LCFI16:
 460              		.cfi_def_cfa_offset 4
 461              		.cfi_offset 7, -4
 462 0002 83B0     		sub	sp, sp, #12
 463              	.LCFI17:
 464              		.cfi_def_cfa_offset 16
 465 0004 00AF     		add	r7, sp, #0
 466              	.LCFI18:
 467              		.cfi_def_cfa_register 7
 468 0006 7860     		str	r0, [r7, #4]
 672:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 673:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   UNUSED(hrtc);
 674:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 675:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 676:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****             the HAL_RTC_MspDeInit could be implemented in the user file
 677:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****    */
 678:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 469              		.loc 1 678 1
ARM GAS  /tmp/ccXWJXxY.s 			page 21


 470 0008 00BF     		nop
 471 000a 0C37     		adds	r7, r7, #12
 472              	.LCFI19:
 473              		.cfi_def_cfa_offset 4
 474 000c BD46     		mov	sp, r7
 475              	.LCFI20:
 476              		.cfi_def_cfa_register 13
 477              		@ sp needed
 478 000e 5DF8047B 		ldr	r7, [sp], #4
 479              	.LCFI21:
 480              		.cfi_restore 7
 481              		.cfi_def_cfa_offset 0
 482 0012 7047     		bx	lr
 483              		.cfi_endproc
 484              	.LFE316:
 486              		.section	.text.HAL_RTC_SetTime,"ax",%progbits
 487              		.align	1
 488              		.global	HAL_RTC_SetTime
 489              		.syntax unified
 490              		.thumb
 491              		.thumb_func
 492              		.fpu fpv4-sp-d16
 494              	HAL_RTC_SetTime:
 495              	.LFB317:
 679:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 680:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 681:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @}
 682:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 683:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 684:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group2
 685:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *  @brief   RTC Time and Date functions
 686:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *
 687:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @verbatim
 688:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
 689:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                  ##### RTC Time and Date functions #####
 690:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
 691:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 692:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  [..] This section provides functions allowing to configure Time and Date features
 693:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 694:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @endverbatim
 695:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @{
 696:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 697:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 698:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 699:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Set RTC current time.
 700:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
 701:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sTime Pointer to Time structure
 702:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
 703:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 704:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format
 705:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 706:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
 707:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 708:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
 709:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 496              		.loc 1 709 1
 497              		.cfi_startproc
ARM GAS  /tmp/ccXWJXxY.s 			page 22


 498              		@ args = 0, pretend = 0, frame = 24
 499              		@ frame_needed = 1, uses_anonymous_args = 0
 500 0000 90B5     		push	{r4, r7, lr}
 501              	.LCFI22:
 502              		.cfi_def_cfa_offset 12
 503              		.cfi_offset 4, -12
 504              		.cfi_offset 7, -8
 505              		.cfi_offset 14, -4
 506 0002 87B0     		sub	sp, sp, #28
 507              	.LCFI23:
 508              		.cfi_def_cfa_offset 40
 509 0004 00AF     		add	r7, sp, #0
 510              	.LCFI24:
 511              		.cfi_def_cfa_register 7
 512 0006 F860     		str	r0, [r7, #12]
 513 0008 B960     		str	r1, [r7, #8]
 514 000a 7A60     		str	r2, [r7, #4]
 710:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg;
 711:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status;
 712:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 713:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters */
 714:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 715:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_DAYLIGHT_SAVING(sTime->DayLightSaving));
 716:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_STORE_OPERATION(sTime->StoreOperation));
 717:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 718:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Locked */
 719:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 515              		.loc 1 719 3
 516 000c FB68     		ldr	r3, [r7, #12]
 517 000e 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 518 0012 012B     		cmp	r3, #1
 519 0014 01D1     		bne	.L13
 520              		.loc 1 719 3 is_stmt 0 discriminator 1
 521 0016 0223     		movs	r3, #2
 522 0018 8BE0     		b	.L14
 523              	.L13:
 524              		.loc 1 719 3 discriminator 2
 525 001a FB68     		ldr	r3, [r7, #12]
 526 001c 0122     		movs	r2, #1
 527 001e 83F82020 		strb	r2, [r3, #32]
 720:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 721:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 528              		.loc 1 721 15 is_stmt 1 discriminator 2
 529 0022 FB68     		ldr	r3, [r7, #12]
 530 0024 0222     		movs	r2, #2
 531 0026 83F82120 		strb	r2, [r3, #33]
 722:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 723:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 724:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 532              		.loc 1 724 3 discriminator 2
 533 002a FB68     		ldr	r3, [r7, #12]
 534 002c 1B68     		ldr	r3, [r3]
 535 002e CA22     		movs	r2, #202
 536 0030 5A62     		str	r2, [r3, #36]
 537 0032 FB68     		ldr	r3, [r7, #12]
 538 0034 1B68     		ldr	r3, [r3]
 539 0036 5322     		movs	r2, #83
ARM GAS  /tmp/ccXWJXxY.s 			page 23


 540 0038 5A62     		str	r2, [r3, #36]
 725:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 726:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enter Initialization mode */
 727:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   status = RTC_EnterInitMode(hrtc);
 541              		.loc 1 727 12 discriminator 2
 542 003a F868     		ldr	r0, [r7, #12]
 543 003c FFF7FEFF 		bl	RTC_EnterInitMode
 544 0040 0346     		mov	r3, r0
 545 0042 FB74     		strb	r3, [r7, #19]
 728:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (status == HAL_OK)
 546              		.loc 1 728 6 discriminator 2
 547 0044 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 548 0046 002B     		cmp	r3, #0
 549 0048 63D1     		bne	.L15
 729:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 730:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (Format == RTC_FORMAT_BIN)
 550              		.loc 1 730 8
 551 004a 7B68     		ldr	r3, [r7, #4]
 552 004c 002B     		cmp	r3, #0
 553 004e 26D1     		bne	.L16
 731:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 732:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if ((hrtc->Instance->CR & RTC_CR_FMT) != 0U)
 554              		.loc 1 732 16
 555 0050 FB68     		ldr	r3, [r7, #12]
 556 0052 1B68     		ldr	r3, [r3]
 557              		.loc 1 732 26
 558 0054 9B68     		ldr	r3, [r3, #8]
 559              		.loc 1 732 31
 560 0056 03F04003 		and	r3, r3, #64
 561              		.loc 1 732 10
 562 005a 002B     		cmp	r3, #0
 563 005c 02D1     		bne	.L17
 733:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 734:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR12(sTime->Hours));
 735:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOURFORMAT12(sTime->TimeFormat));
 736:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 737:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       else
 738:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 739:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         sTime->TimeFormat = 0x00U;
 564              		.loc 1 739 27
 565 005e BB68     		ldr	r3, [r7, #8]
 566 0060 0022     		movs	r2, #0
 567 0062 DA70     		strb	r2, [r3, #3]
 568              	.L17:
 740:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR24(sTime->Hours));
 741:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 742:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_MINUTES(sTime->Minutes));
 743:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_SECONDS(sTime->Seconds));
 744:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 745:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       tmpreg = (uint32_t)(((uint32_t)RTC_ByteToBcd2(sTime->Hours) << RTC_TR_HU_Pos) | \
 569              		.loc 1 745 38
 570 0064 BB68     		ldr	r3, [r7, #8]
 571 0066 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 572 0068 1846     		mov	r0, r3
 573 006a FFF7FEFF 		bl	RTC_ByteToBcd2
 574 006e 0346     		mov	r3, r0
 575              		.loc 1 745 67
ARM GAS  /tmp/ccXWJXxY.s 			page 24


 576 0070 1C04     		lsls	r4, r3, #16
 746:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                           ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 577              		.loc 1 746 38
 578 0072 BB68     		ldr	r3, [r7, #8]
 579 0074 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 580 0076 1846     		mov	r0, r3
 581 0078 FFF7FEFF 		bl	RTC_ByteToBcd2
 582 007c 0346     		mov	r3, r0
 583              		.loc 1 746 69
 584 007e 1B02     		lsls	r3, r3, #8
 745:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                           ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 585              		.loc 1 745 85
 586 0080 1C43     		orrs	r4, r4, r3
 747:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                           ((uint32_t)RTC_ByteToBcd2(sTime->Seconds) << RTC_TR_SU_Pos) | \
 587              		.loc 1 747 38
 588 0082 BB68     		ldr	r3, [r7, #8]
 589 0084 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 590 0086 1846     		mov	r0, r3
 591 0088 FFF7FEFF 		bl	RTC_ByteToBcd2
 592 008c 0346     		mov	r3, r0
 746:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                           ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 593              		.loc 1 746 88
 594 008e 44EA0302 		orr	r2, r4, r3
 748:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                           (((uint32_t)sTime->TimeFormat) << RTC_TR_PM_Pos));
 595              		.loc 1 748 44
 596 0092 BB68     		ldr	r3, [r7, #8]
 597 0094 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 598              		.loc 1 748 58
 599 0096 9B05     		lsls	r3, r3, #22
 745:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                           ((uint32_t)RTC_ByteToBcd2(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 600              		.loc 1 745 14
 601 0098 1343     		orrs	r3, r3, r2
 602 009a 7B61     		str	r3, [r7, #20]
 603 009c 18E0     		b	.L18
 604              	.L16:
 749:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 750:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
 751:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 752:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if ((hrtc->Instance->CR & RTC_CR_FMT) != 0U)
 605              		.loc 1 752 16
 606 009e FB68     		ldr	r3, [r7, #12]
 607 00a0 1B68     		ldr	r3, [r3]
 608              		.loc 1 752 26
 609 00a2 9B68     		ldr	r3, [r3, #8]
 610              		.loc 1 752 31
 611 00a4 03F04003 		and	r3, r3, #64
 612              		.loc 1 752 10
 613 00a8 002B     		cmp	r3, #0
 614 00aa 02D1     		bne	.L19
 753:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 754:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR12(RTC_Bcd2ToByte(sTime->Hours)));
 755:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOURFORMAT12(sTime->TimeFormat));
 756:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 757:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       else
 758:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
 759:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         sTime->TimeFormat = 0x00U;
 615              		.loc 1 759 27
ARM GAS  /tmp/ccXWJXxY.s 			page 25


 616 00ac BB68     		ldr	r3, [r7, #8]
 617 00ae 0022     		movs	r2, #0
 618 00b0 DA70     		strb	r2, [r3, #3]
 619              	.L19:
 760:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sTime->Hours)));
 761:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
 762:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sTime->Minutes)));
 763:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sTime->Seconds)));
 764:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       tmpreg = (((uint32_t)(sTime->Hours) << RTC_TR_HU_Pos) | \
 620              		.loc 1 764 34
 621 00b2 BB68     		ldr	r3, [r7, #8]
 622 00b4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 623              		.loc 1 764 43
 624 00b6 1A04     		lsls	r2, r3, #16
 765:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 625              		.loc 1 765 34
 626 00b8 BB68     		ldr	r3, [r7, #8]
 627 00ba 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 628              		.loc 1 765 45
 629 00bc 1B02     		lsls	r3, r3, #8
 764:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 630              		.loc 1 764 61
 631 00be 1343     		orrs	r3, r3, r2
 766:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sTime->Seconds) << RTC_TR_SU_Pos) | \
 632              		.loc 1 766 34
 633 00c0 BA68     		ldr	r2, [r7, #8]
 634 00c2 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 765:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 635              		.loc 1 765 64
 636 00c4 1A43     		orrs	r2, r2, r3
 767:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sTime->TimeFormat) << RTC_TR_PM_Pos));
 637              		.loc 1 767 34
 638 00c6 BB68     		ldr	r3, [r7, #8]
 639 00c8 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 640              		.loc 1 767 48
 641 00ca 9B05     		lsls	r3, r3, #22
 764:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                 ((uint32_t)(sTime->Minutes) << RTC_TR_MNU_Pos) | \
 642              		.loc 1 764 14
 643 00cc 1343     		orrs	r3, r3, r2
 644 00ce 7B61     		str	r3, [r7, #20]
 645              	.L18:
 768:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
 769:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 770:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Set the RTC_TR register */
 771:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->TR = (uint32_t)(tmpreg & RTC_TR_RESERVED_MASK);
 646              		.loc 1 771 9
 647 00d0 FB68     		ldr	r3, [r7, #12]
 648 00d2 1A68     		ldr	r2, [r3]
 649              		.loc 1 771 26
 650 00d4 7B69     		ldr	r3, [r7, #20]
 651 00d6 03F07F33 		and	r3, r3, #2139062143
 652 00da 23F0FE43 		bic	r3, r3, #2130706432
 653              		.loc 1 771 24
 654 00de 1360     		str	r3, [r2]
 772:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 773:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear the bits to be configured */
 774:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->CR &= ((uint32_t)~RTC_CR_BKP);
ARM GAS  /tmp/ccXWJXxY.s 			page 26


 655              		.loc 1 774 9
 656 00e0 FB68     		ldr	r3, [r7, #12]
 657 00e2 1B68     		ldr	r3, [r3]
 658              		.loc 1 774 24
 659 00e4 9A68     		ldr	r2, [r3, #8]
 660              		.loc 1 774 9
 661 00e6 FB68     		ldr	r3, [r7, #12]
 662 00e8 1B68     		ldr	r3, [r3]
 663              		.loc 1 774 24
 664 00ea 22F48022 		bic	r2, r2, #262144
 665 00ee 9A60     		str	r2, [r3, #8]
 775:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 776:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the RTC_CR register */
 777:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->CR |= (uint32_t)(sTime->DayLightSaving | sTime->StoreOperation);
 666              		.loc 1 777 9
 667 00f0 FB68     		ldr	r3, [r7, #12]
 668 00f2 1B68     		ldr	r3, [r3]
 669              		.loc 1 777 24
 670 00f4 9968     		ldr	r1, [r3, #8]
 671              		.loc 1 777 43
 672 00f6 BB68     		ldr	r3, [r7, #8]
 673 00f8 DA68     		ldr	r2, [r3, #12]
 674              		.loc 1 777 67
 675 00fa BB68     		ldr	r3, [r7, #8]
 676 00fc 1B69     		ldr	r3, [r3, #16]
 677              		.loc 1 777 60
 678 00fe 1A43     		orrs	r2, r2, r3
 679              		.loc 1 777 9
 680 0100 FB68     		ldr	r3, [r7, #12]
 681 0102 1B68     		ldr	r3, [r3]
 682              		.loc 1 777 24
 683 0104 0A43     		orrs	r2, r2, r1
 684 0106 9A60     		str	r2, [r3, #8]
 778:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 779:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Exit Initialization mode */
 780:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     status = RTC_ExitInitMode(hrtc);
 685              		.loc 1 780 14
 686 0108 F868     		ldr	r0, [r7, #12]
 687 010a FFF7FEFF 		bl	RTC_ExitInitMode
 688 010e 0346     		mov	r3, r0
 689 0110 FB74     		strb	r3, [r7, #19]
 690              	.L15:
 781:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 782:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 783:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
 784:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 691              		.loc 1 784 3
 692 0112 FB68     		ldr	r3, [r7, #12]
 693 0114 1B68     		ldr	r3, [r3]
 694 0116 FF22     		movs	r2, #255
 695 0118 5A62     		str	r2, [r3, #36]
 785:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 786:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (status == HAL_OK)
 696              		.loc 1 786 6
 697 011a FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 698 011c 002B     		cmp	r3, #0
 699 011e 03D1     		bne	.L20
ARM GAS  /tmp/ccXWJXxY.s 			page 27


 787:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 788:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY;
 700              		.loc 1 788 17
 701 0120 FB68     		ldr	r3, [r7, #12]
 702 0122 0122     		movs	r2, #1
 703 0124 83F82120 		strb	r2, [r3, #33]
 704              	.L20:
 789:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 790:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 791:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Unlocked */
 792:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 705              		.loc 1 792 3
 706 0128 FB68     		ldr	r3, [r7, #12]
 707 012a 0022     		movs	r2, #0
 708 012c 83F82020 		strb	r2, [r3, #32]
 793:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 794:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return status;
 709              		.loc 1 794 10
 710 0130 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 711              	.L14:
 795:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 712              		.loc 1 795 1
 713 0132 1846     		mov	r0, r3
 714 0134 1C37     		adds	r7, r7, #28
 715              	.LCFI25:
 716              		.cfi_def_cfa_offset 12
 717 0136 BD46     		mov	sp, r7
 718              	.LCFI26:
 719              		.cfi_def_cfa_register 13
 720              		@ sp needed
 721 0138 90BD     		pop	{r4, r7, pc}
 722              		.cfi_endproc
 723              	.LFE317:
 725              		.section	.text.HAL_RTC_GetTime,"ax",%progbits
 726              		.align	1
 727              		.global	HAL_RTC_GetTime
 728              		.syntax unified
 729              		.thumb
 730              		.thumb_func
 731              		.fpu fpv4-sp-d16
 733              	HAL_RTC_GetTime:
 734              	.LFB318:
 796:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 797:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 798:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Get RTC current time.
 799:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note  You can use SubSeconds and SecondFraction (sTime structure fields returned) to convert S
 800:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        value in second fraction ratio with time unit following generic formula:
 801:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        Second fraction ratio * time_unit= [(SecondFraction-SubSeconds)/(SecondFraction+1)] * ti
 802:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        This conversion can be performed only if no shift operation is pending (ie. SHFP=0) when
 803:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note  You must call HAL_RTC_GetDate() after HAL_RTC_GetTime() to unlock the values
 804:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        in the higher-order calendar shadow registers to ensure consistency between the time and
 805:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        Reading RTC current time locks the values in calendar shadow registers until Current dat
 806:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        to ensure consistency between the time and date values.
 807:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
 808:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sTime Pointer to Time structure with Hours, Minutes and Seconds fields returned
 809:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *                with input format (BIN or BCD), also SubSeconds field returning the
 810:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *                RTC_SSR register content and SecondFraction field the Synchronous pre-scaler
ARM GAS  /tmp/ccXWJXxY.s 			page 28


 811:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *                factor to be used for second fraction ratio computation.
 812:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
 813:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 814:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format
 815:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 816:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
 817:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 818:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
 819:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 735              		.loc 1 819 1
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 24
 738              		@ frame_needed = 1, uses_anonymous_args = 0
 739 0000 80B5     		push	{r7, lr}
 740              	.LCFI27:
 741              		.cfi_def_cfa_offset 8
 742              		.cfi_offset 7, -8
 743              		.cfi_offset 14, -4
 744 0002 86B0     		sub	sp, sp, #24
 745              	.LCFI28:
 746              		.cfi_def_cfa_offset 32
 747 0004 00AF     		add	r7, sp, #0
 748              	.LCFI29:
 749              		.cfi_def_cfa_register 7
 750 0006 F860     		str	r0, [r7, #12]
 751 0008 B960     		str	r1, [r7, #8]
 752 000a 7A60     		str	r2, [r7, #4]
 820:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg;
 821:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 822:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters */
 823:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 824:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 825:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Get subseconds structure field from the corresponding register*/
 826:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->SubSeconds = (uint32_t)(hrtc->Instance->SSR);
 753              		.loc 1 826 38
 754 000c FB68     		ldr	r3, [r7, #12]
 755 000e 1B68     		ldr	r3, [r3]
 756              		.loc 1 826 48
 757 0010 9A6A     		ldr	r2, [r3, #40]
 758              		.loc 1 826 21
 759 0012 BB68     		ldr	r3, [r7, #8]
 760 0014 5A60     		str	r2, [r3, #4]
 827:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 828:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Get SecondFraction structure field from the corresponding register field*/
 829:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->SecondFraction = (uint32_t)(hrtc->Instance->PRER & RTC_PRER_PREDIV_S);
 761              		.loc 1 829 42
 762 0016 FB68     		ldr	r3, [r7, #12]
 763 0018 1B68     		ldr	r3, [r3]
 764              		.loc 1 829 52
 765 001a 1B69     		ldr	r3, [r3, #16]
 766              		.loc 1 829 27
 767 001c C3F30E02 		ubfx	r2, r3, #0, #15
 768              		.loc 1 829 25
 769 0020 BB68     		ldr	r3, [r7, #8]
 770 0022 9A60     		str	r2, [r3, #8]
 830:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 831:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Get the TR register */
ARM GAS  /tmp/ccXWJXxY.s 			page 29


 832:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   tmpreg = (uint32_t)(hrtc->Instance->TR & RTC_TR_RESERVED_MASK);
 771              		.loc 1 832 27
 772 0024 FB68     		ldr	r3, [r7, #12]
 773 0026 1B68     		ldr	r3, [r3]
 774              		.loc 1 832 37
 775 0028 1B68     		ldr	r3, [r3]
 776              		.loc 1 832 10
 777 002a 03F07F33 		and	r3, r3, #2139062143
 778 002e 23F0FE43 		bic	r3, r3, #2130706432
 779 0032 7B61     		str	r3, [r7, #20]
 833:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 834:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
 835:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->Hours = (uint8_t)((tmpreg & (RTC_TR_HT | RTC_TR_HU)) >> RTC_TR_HU_Pos);
 780              		.loc 1 835 63
 781 0034 7B69     		ldr	r3, [r7, #20]
 782 0036 1B0C     		lsrs	r3, r3, #16
 783              		.loc 1 835 18
 784 0038 DBB2     		uxtb	r3, r3
 785 003a 03F03F03 		and	r3, r3, #63
 786 003e DAB2     		uxtb	r2, r3
 787              		.loc 1 835 16
 788 0040 BB68     		ldr	r3, [r7, #8]
 789 0042 1A70     		strb	r2, [r3]
 836:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->Minutes = (uint8_t)((tmpreg & (RTC_TR_MNT | RTC_TR_MNU)) >> RTC_TR_MNU_Pos);
 790              		.loc 1 836 67
 791 0044 7B69     		ldr	r3, [r7, #20]
 792 0046 1B0A     		lsrs	r3, r3, #8
 793              		.loc 1 836 20
 794 0048 DBB2     		uxtb	r3, r3
 795 004a 03F07F03 		and	r3, r3, #127
 796 004e DAB2     		uxtb	r2, r3
 797              		.loc 1 836 18
 798 0050 BB68     		ldr	r3, [r7, #8]
 799 0052 5A70     		strb	r2, [r3, #1]
 837:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->Seconds = (uint8_t)((tmpreg & (RTC_TR_ST | RTC_TR_SU)) >> RTC_TR_SU_Pos);
 800              		.loc 1 837 20
 801 0054 7B69     		ldr	r3, [r7, #20]
 802 0056 DBB2     		uxtb	r3, r3
 803 0058 03F07F03 		and	r3, r3, #127
 804 005c DAB2     		uxtb	r2, r3
 805              		.loc 1 837 18
 806 005e BB68     		ldr	r3, [r7, #8]
 807 0060 9A70     		strb	r2, [r3, #2]
 838:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sTime->TimeFormat = (uint8_t)((tmpreg & (RTC_TR_PM)) >> RTC_TR_PM_Pos);
 808              		.loc 1 838 56
 809 0062 7B69     		ldr	r3, [r7, #20]
 810 0064 9B0D     		lsrs	r3, r3, #22
 811              		.loc 1 838 23
 812 0066 DBB2     		uxtb	r3, r3
 813 0068 03F00103 		and	r3, r3, #1
 814 006c DAB2     		uxtb	r2, r3
 815              		.loc 1 838 21
 816 006e BB68     		ldr	r3, [r7, #8]
 817 0070 DA70     		strb	r2, [r3, #3]
 839:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 840:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the input parameters format */
 841:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (Format == RTC_FORMAT_BIN)
ARM GAS  /tmp/ccXWJXxY.s 			page 30


 818              		.loc 1 841 6
 819 0072 7B68     		ldr	r3, [r7, #4]
 820 0074 002B     		cmp	r3, #0
 821 0076 1AD1     		bne	.L22
 842:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 843:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Convert the time structure parameters to Binary format */
 844:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sTime->Hours = (uint8_t)RTC_Bcd2ToByte(sTime->Hours);
 822              		.loc 1 844 29
 823 0078 BB68     		ldr	r3, [r7, #8]
 824 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 825 007c 1846     		mov	r0, r3
 826 007e FFF7FEFF 		bl	RTC_Bcd2ToByte
 827 0082 0346     		mov	r3, r0
 828 0084 1A46     		mov	r2, r3
 829              		.loc 1 844 18
 830 0086 BB68     		ldr	r3, [r7, #8]
 831 0088 1A70     		strb	r2, [r3]
 845:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sTime->Minutes = (uint8_t)RTC_Bcd2ToByte(sTime->Minutes);
 832              		.loc 1 845 31
 833 008a BB68     		ldr	r3, [r7, #8]
 834 008c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 835 008e 1846     		mov	r0, r3
 836 0090 FFF7FEFF 		bl	RTC_Bcd2ToByte
 837 0094 0346     		mov	r3, r0
 838 0096 1A46     		mov	r2, r3
 839              		.loc 1 845 20
 840 0098 BB68     		ldr	r3, [r7, #8]
 841 009a 5A70     		strb	r2, [r3, #1]
 846:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sTime->Seconds = (uint8_t)RTC_Bcd2ToByte(sTime->Seconds);
 842              		.loc 1 846 31
 843 009c BB68     		ldr	r3, [r7, #8]
 844 009e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 845 00a0 1846     		mov	r0, r3
 846 00a2 FFF7FEFF 		bl	RTC_Bcd2ToByte
 847 00a6 0346     		mov	r3, r0
 848 00a8 1A46     		mov	r2, r3
 849              		.loc 1 846 20
 850 00aa BB68     		ldr	r3, [r7, #8]
 851 00ac 9A70     		strb	r2, [r3, #2]
 852              	.L22:
 847:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 848:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 849:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
 853              		.loc 1 849 10
 854 00ae 0023     		movs	r3, #0
 850:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 855              		.loc 1 850 1
 856 00b0 1846     		mov	r0, r3
 857 00b2 1837     		adds	r7, r7, #24
 858              	.LCFI30:
 859              		.cfi_def_cfa_offset 8
 860 00b4 BD46     		mov	sp, r7
 861              	.LCFI31:
 862              		.cfi_def_cfa_register 13
 863              		@ sp needed
 864 00b6 80BD     		pop	{r7, pc}
 865              		.cfi_endproc
ARM GAS  /tmp/ccXWJXxY.s 			page 31


 866              	.LFE318:
 868              		.section	.text.HAL_RTC_SetDate,"ax",%progbits
 869              		.align	1
 870              		.global	HAL_RTC_SetDate
 871              		.syntax unified
 872              		.thumb
 873              		.thumb_func
 874              		.fpu fpv4-sp-d16
 876              	HAL_RTC_SetDate:
 877              	.LFB319:
 851:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 852:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 853:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Set RTC current date.
 854:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
 855:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sDate Pointer to date structure
 856:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format specifies the format of the entered parameters.
 857:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 858:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format
 859:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 860:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
 861:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 862:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
 863:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 878              		.loc 1 863 1
 879              		.cfi_startproc
 880              		@ args = 0, pretend = 0, frame = 24
 881              		@ frame_needed = 1, uses_anonymous_args = 0
 882 0000 90B5     		push	{r4, r7, lr}
 883              	.LCFI32:
 884              		.cfi_def_cfa_offset 12
 885              		.cfi_offset 4, -12
 886              		.cfi_offset 7, -8
 887              		.cfi_offset 14, -4
 888 0002 87B0     		sub	sp, sp, #28
 889              	.LCFI33:
 890              		.cfi_def_cfa_offset 40
 891 0004 00AF     		add	r7, sp, #0
 892              	.LCFI34:
 893              		.cfi_def_cfa_register 7
 894 0006 F860     		str	r0, [r7, #12]
 895 0008 B960     		str	r1, [r7, #8]
 896 000a 7A60     		str	r2, [r7, #4]
 864:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t datetmpreg;
 865:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status;
 866:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 867:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters */
 868:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 869:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 870:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Locked */
 871:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 897              		.loc 1 871 3
 898 000c FB68     		ldr	r3, [r7, #12]
 899 000e 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 900 0012 012B     		cmp	r3, #1
 901 0014 01D1     		bne	.L25
 902              		.loc 1 871 3 is_stmt 0 discriminator 1
 903 0016 0223     		movs	r3, #2
ARM GAS  /tmp/ccXWJXxY.s 			page 32


 904 0018 75E0     		b	.L26
 905              	.L25:
 906              		.loc 1 871 3 discriminator 2
 907 001a FB68     		ldr	r3, [r7, #12]
 908 001c 0122     		movs	r2, #1
 909 001e 83F82020 		strb	r2, [r3, #32]
 872:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 873:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 910              		.loc 1 873 15 is_stmt 1 discriminator 2
 911 0022 FB68     		ldr	r3, [r7, #12]
 912 0024 0222     		movs	r2, #2
 913 0026 83F82120 		strb	r2, [r3, #33]
 874:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 875:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if ((Format == RTC_FORMAT_BIN) && ((sDate->Month & 0x10U) == 0x10U))
 914              		.loc 1 875 6 discriminator 2
 915 002a 7B68     		ldr	r3, [r7, #4]
 916 002c 002B     		cmp	r3, #0
 917 002e 0ED1     		bne	.L27
 918              		.loc 1 875 44 discriminator 1
 919 0030 BB68     		ldr	r3, [r7, #8]
 920 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 921              		.loc 1 875 52 discriminator 1
 922 0034 03F01003 		and	r3, r3, #16
 923              		.loc 1 875 34 discriminator 1
 924 0038 002B     		cmp	r3, #0
 925 003a 08D0     		beq	.L27
 876:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 877:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sDate->Month = (uint8_t)((sDate->Month & (uint8_t)~(0x10U)) + (uint8_t)0x0AU);
 926              		.loc 1 877 36
 927 003c BB68     		ldr	r3, [r7, #8]
 928 003e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 929              		.loc 1 877 44
 930 0040 23F01003 		bic	r3, r3, #16
 931 0044 DBB2     		uxtb	r3, r3
 932              		.loc 1 877 20
 933 0046 0A33     		adds	r3, r3, #10
 934 0048 DAB2     		uxtb	r2, r3
 935              		.loc 1 877 18
 936 004a BB68     		ldr	r3, [r7, #8]
 937 004c 5A70     		strb	r2, [r3, #1]
 938              	.L27:
 878:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 879:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 880:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_WEEKDAY(sDate->WeekDay));
 881:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 882:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (Format == RTC_FORMAT_BIN)
 939              		.loc 1 882 6
 940 004e 7B68     		ldr	r3, [r7, #4]
 941 0050 002B     		cmp	r3, #0
 942 0052 1CD1     		bne	.L28
 883:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 884:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_YEAR(sDate->Year));
 885:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(sDate->Month));
 886:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(sDate->Date));
 887:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 888:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     datetmpreg = (((uint32_t)RTC_ByteToBcd2(sDate->Year) << RTC_DR_YU_Pos) | \
 943              		.loc 1 888 30
ARM GAS  /tmp/ccXWJXxY.s 			page 33


 944 0054 BB68     		ldr	r3, [r7, #8]
 945 0056 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 946 0058 1846     		mov	r0, r3
 947 005a FFF7FEFF 		bl	RTC_ByteToBcd2
 948 005e 0346     		mov	r3, r0
 949              		.loc 1 888 58
 950 0060 1C04     		lsls	r4, r3, #16
 889:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)RTC_ByteToBcd2(sDate->Month) << RTC_DR_MU_Pos) | \
 951              		.loc 1 889 30
 952 0062 BB68     		ldr	r3, [r7, #8]
 953 0064 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 954 0066 1846     		mov	r0, r3
 955 0068 FFF7FEFF 		bl	RTC_ByteToBcd2
 956 006c 0346     		mov	r3, r0
 957              		.loc 1 889 59
 958 006e 1B02     		lsls	r3, r3, #8
 888:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)RTC_ByteToBcd2(sDate->Month) << RTC_DR_MU_Pos) | \
 959              		.loc 1 888 76
 960 0070 1C43     		orrs	r4, r4, r3
 890:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)RTC_ByteToBcd2(sDate->Date) << RTC_DR_DU_Pos) | \
 961              		.loc 1 890 30
 962 0072 BB68     		ldr	r3, [r7, #8]
 963 0074 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 964 0076 1846     		mov	r0, r3
 965 0078 FFF7FEFF 		bl	RTC_ByteToBcd2
 966 007c 0346     		mov	r3, r0
 889:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)RTC_ByteToBcd2(sDate->Month) << RTC_DR_MU_Pos) | \
 967              		.loc 1 889 77
 968 007e 44EA0302 		orr	r2, r4, r3
 891:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)sDate->WeekDay << RTC_DR_WDU_Pos));
 969              		.loc 1 891 35
 970 0082 BB68     		ldr	r3, [r7, #8]
 971 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 972              		.loc 1 891 45
 973 0086 5B03     		lsls	r3, r3, #13
 888:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   ((uint32_t)RTC_ByteToBcd2(sDate->Month) << RTC_DR_MU_Pos) | \
 974              		.loc 1 888 16
 975 0088 1343     		orrs	r3, r3, r2
 976 008a 7B61     		str	r3, [r7, #20]
 977 008c 0EE0     		b	.L29
 978              	.L28:
 892:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 893:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
 894:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 895:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_YEAR(RTC_Bcd2ToByte(sDate->Year)));
 896:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(RTC_Bcd2ToByte(sDate->Month)));
 897:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(RTC_Bcd2ToByte(sDate->Date)));
 898:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 899:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     datetmpreg = ((((uint32_t)sDate->Year) << RTC_DR_YU_Pos) | \
 979              		.loc 1 899 36
 980 008e BB68     		ldr	r3, [r7, #8]
 981 0090 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 982              		.loc 1 899 44
 983 0092 1A04     		lsls	r2, r3, #16
 900:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << RTC_DR_MU_Pos) | \
 984              		.loc 1 900 36
 985 0094 BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccXWJXxY.s 			page 34


 986 0096 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 987              		.loc 1 900 45
 988 0098 1B02     		lsls	r3, r3, #8
 899:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << RTC_DR_MU_Pos) | \
 989              		.loc 1 899 62
 990 009a 1343     		orrs	r3, r3, r2
 901:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->Date) << RTC_DR_DU_Pos) | \
 991              		.loc 1 901 36
 992 009c BA68     		ldr	r2, [r7, #8]
 993 009e 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
 900:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << RTC_DR_MU_Pos) | \
 994              		.loc 1 900 63
 995 00a0 1A43     		orrs	r2, r2, r3
 902:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->WeekDay) << RTC_DR_WDU_Pos));
 996              		.loc 1 902 36
 997 00a2 BB68     		ldr	r3, [r7, #8]
 998 00a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 999              		.loc 1 902 47
 1000 00a6 5B03     		lsls	r3, r3, #13
 899:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                   (((uint32_t)sDate->Month) << RTC_DR_MU_Pos) | \
 1001              		.loc 1 899 16
 1002 00a8 1343     		orrs	r3, r3, r2
 1003 00aa 7B61     		str	r3, [r7, #20]
 1004              	.L29:
 903:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 904:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 905:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
 906:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1005              		.loc 1 906 3
 1006 00ac FB68     		ldr	r3, [r7, #12]
 1007 00ae 1B68     		ldr	r3, [r3]
 1008 00b0 CA22     		movs	r2, #202
 1009 00b2 5A62     		str	r2, [r3, #36]
 1010 00b4 FB68     		ldr	r3, [r7, #12]
 1011 00b6 1B68     		ldr	r3, [r3]
 1012 00b8 5322     		movs	r2, #83
 1013 00ba 5A62     		str	r2, [r3, #36]
 907:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 908:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enter Initialization mode */
 909:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   status = RTC_EnterInitMode(hrtc);
 1014              		.loc 1 909 12
 1015 00bc F868     		ldr	r0, [r7, #12]
 1016 00be FFF7FEFF 		bl	RTC_EnterInitMode
 1017 00c2 0346     		mov	r3, r0
 1018 00c4 FB74     		strb	r3, [r7, #19]
 910:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (status == HAL_OK)
 1019              		.loc 1 910 6
 1020 00c6 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1021 00c8 002B     		cmp	r3, #0
 1022 00ca 0CD1     		bne	.L30
 911:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 912:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Set the RTC_DR register */
 913:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->DR = (uint32_t)(datetmpreg & RTC_DR_RESERVED_MASK);
 1023              		.loc 1 913 9
 1024 00cc FB68     		ldr	r3, [r7, #12]
 1025 00ce 1A68     		ldr	r2, [r3]
 1026              		.loc 1 913 26
ARM GAS  /tmp/ccXWJXxY.s 			page 35


 1027 00d0 7B69     		ldr	r3, [r7, #20]
 1028 00d2 23F07F43 		bic	r3, r3, #-16777216
 1029 00d6 23F0C003 		bic	r3, r3, #192
 1030              		.loc 1 913 24
 1031 00da 5360     		str	r3, [r2, #4]
 914:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 915:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Exit Initialization mode */
 916:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     status = RTC_ExitInitMode(hrtc);
 1032              		.loc 1 916 14
 1033 00dc F868     		ldr	r0, [r7, #12]
 1034 00de FFF7FEFF 		bl	RTC_ExitInitMode
 1035 00e2 0346     		mov	r3, r0
 1036 00e4 FB74     		strb	r3, [r7, #19]
 1037              	.L30:
 917:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 918:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 919:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
 920:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1038              		.loc 1 920 3
 1039 00e6 FB68     		ldr	r3, [r7, #12]
 1040 00e8 1B68     		ldr	r3, [r3]
 1041 00ea FF22     		movs	r2, #255
 1042 00ec 5A62     		str	r2, [r3, #36]
 921:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 922:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (status == HAL_OK)
 1043              		.loc 1 922 6
 1044 00ee FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1045 00f0 002B     		cmp	r3, #0
 1046 00f2 03D1     		bne	.L31
 923:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 924:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY ;
 1047              		.loc 1 924 17
 1048 00f4 FB68     		ldr	r3, [r7, #12]
 1049 00f6 0122     		movs	r2, #1
 1050 00f8 83F82120 		strb	r2, [r3, #33]
 1051              	.L31:
 925:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 926:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 927:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Unlocked */
 928:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 1052              		.loc 1 928 3
 1053 00fc FB68     		ldr	r3, [r7, #12]
 1054 00fe 0022     		movs	r2, #0
 1055 0100 83F82020 		strb	r2, [r3, #32]
 929:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 930:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return status;
 1056              		.loc 1 930 10
 1057 0104 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1058              	.L26:
 931:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 1059              		.loc 1 931 1
 1060 0106 1846     		mov	r0, r3
 1061 0108 1C37     		adds	r7, r7, #28
 1062              	.LCFI35:
 1063              		.cfi_def_cfa_offset 12
 1064 010a BD46     		mov	sp, r7
 1065              	.LCFI36:
ARM GAS  /tmp/ccXWJXxY.s 			page 36


 1066              		.cfi_def_cfa_register 13
 1067              		@ sp needed
 1068 010c 90BD     		pop	{r4, r7, pc}
 1069              		.cfi_endproc
 1070              	.LFE319:
 1072              		.section	.text.HAL_RTC_GetDate,"ax",%progbits
 1073              		.align	1
 1074              		.global	HAL_RTC_GetDate
 1075              		.syntax unified
 1076              		.thumb
 1077              		.thumb_func
 1078              		.fpu fpv4-sp-d16
 1080              	HAL_RTC_GetDate:
 1081              	.LFB320:
 932:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 933:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 934:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Get RTC current date.
 935:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note  You must call HAL_RTC_GetDate() after HAL_RTC_GetTime() to unlock the values
 936:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        in the higher-order calendar shadow registers to ensure consistency between the time and
 937:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *        Reading RTC current time locks the values in calendar shadow registers until Current dat
 938:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
 939:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sDate Pointer to Date structure
 940:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
 941:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 942:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN:  Binary data format
 943:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD:  BCD data format
 944:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
 945:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 946:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
 947:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 1082              		.loc 1 947 1
 1083              		.cfi_startproc
 1084              		@ args = 0, pretend = 0, frame = 24
 1085              		@ frame_needed = 1, uses_anonymous_args = 0
 1086 0000 80B5     		push	{r7, lr}
 1087              	.LCFI37:
 1088              		.cfi_def_cfa_offset 8
 1089              		.cfi_offset 7, -8
 1090              		.cfi_offset 14, -4
 1091 0002 86B0     		sub	sp, sp, #24
 1092              	.LCFI38:
 1093              		.cfi_def_cfa_offset 32
 1094 0004 00AF     		add	r7, sp, #0
 1095              	.LCFI39:
 1096              		.cfi_def_cfa_register 7
 1097 0006 F860     		str	r0, [r7, #12]
 1098 0008 B960     		str	r1, [r7, #8]
 1099 000a 7A60     		str	r2, [r7, #4]
 948:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t datetmpreg;
 949:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 950:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters */
 951:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 952:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 953:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Get the DR register */
 954:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   datetmpreg = (uint32_t)(hrtc->Instance->DR & RTC_DR_RESERVED_MASK);
 1100              		.loc 1 954 31
 1101 000c FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccXWJXxY.s 			page 37


 1102 000e 1B68     		ldr	r3, [r3]
 1103              		.loc 1 954 41
 1104 0010 5B68     		ldr	r3, [r3, #4]
 1105              		.loc 1 954 14
 1106 0012 23F07F43 		bic	r3, r3, #-16777216
 1107 0016 23F0C003 		bic	r3, r3, #192
 1108 001a 7B61     		str	r3, [r7, #20]
 955:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 956:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
 957:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->Year = (uint8_t)((datetmpreg & (RTC_DR_YT | RTC_DR_YU)) >> RTC_DR_YU_Pos);
 1109              		.loc 1 957 66
 1110 001c 7B69     		ldr	r3, [r7, #20]
 1111 001e 1B0C     		lsrs	r3, r3, #16
 1112              		.loc 1 957 17
 1113 0020 DAB2     		uxtb	r2, r3
 1114              		.loc 1 957 15
 1115 0022 BB68     		ldr	r3, [r7, #8]
 1116 0024 DA70     		strb	r2, [r3, #3]
 958:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->Month = (uint8_t)((datetmpreg & (RTC_DR_MT | RTC_DR_MU)) >> RTC_DR_MU_Pos);
 1117              		.loc 1 958 67
 1118 0026 7B69     		ldr	r3, [r7, #20]
 1119 0028 1B0A     		lsrs	r3, r3, #8
 1120              		.loc 1 958 18
 1121 002a DBB2     		uxtb	r3, r3
 1122 002c 03F01F03 		and	r3, r3, #31
 1123 0030 DAB2     		uxtb	r2, r3
 1124              		.loc 1 958 16
 1125 0032 BB68     		ldr	r3, [r7, #8]
 1126 0034 5A70     		strb	r2, [r3, #1]
 959:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->Date = (uint8_t)((datetmpreg & (RTC_DR_DT | RTC_DR_DU)) >> RTC_DR_DU_Pos);
 1127              		.loc 1 959 17
 1128 0036 7B69     		ldr	r3, [r7, #20]
 1129 0038 DBB2     		uxtb	r3, r3
 1130 003a 03F03F03 		and	r3, r3, #63
 1131 003e DAB2     		uxtb	r2, r3
 1132              		.loc 1 959 15
 1133 0040 BB68     		ldr	r3, [r7, #8]
 1134 0042 9A70     		strb	r2, [r3, #2]
 960:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   sDate->WeekDay = (uint8_t)((datetmpreg & (RTC_DR_WDU)) >> RTC_DR_WDU_Pos);
 1135              		.loc 1 960 58
 1136 0044 7B69     		ldr	r3, [r7, #20]
 1137 0046 5B0B     		lsrs	r3, r3, #13
 1138              		.loc 1 960 20
 1139 0048 DBB2     		uxtb	r3, r3
 1140 004a 03F00703 		and	r3, r3, #7
 1141 004e DAB2     		uxtb	r2, r3
 1142              		.loc 1 960 18
 1143 0050 BB68     		ldr	r3, [r7, #8]
 1144 0052 1A70     		strb	r2, [r3]
 961:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 962:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the input parameters format */
 963:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (Format == RTC_FORMAT_BIN)
 1145              		.loc 1 963 6
 1146 0054 7B68     		ldr	r3, [r7, #4]
 1147 0056 002B     		cmp	r3, #0
 1148 0058 1AD1     		bne	.L33
 964:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
ARM GAS  /tmp/ccXWJXxY.s 			page 38


 965:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Convert the date structure parameters to Binary format */
 966:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sDate->Year = (uint8_t)RTC_Bcd2ToByte(sDate->Year);
 1149              		.loc 1 966 28
 1150 005a BB68     		ldr	r3, [r7, #8]
 1151 005c DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1152 005e 1846     		mov	r0, r3
 1153 0060 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1154 0064 0346     		mov	r3, r0
 1155 0066 1A46     		mov	r2, r3
 1156              		.loc 1 966 17
 1157 0068 BB68     		ldr	r3, [r7, #8]
 1158 006a DA70     		strb	r2, [r3, #3]
 967:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sDate->Month = (uint8_t)RTC_Bcd2ToByte(sDate->Month);
 1159              		.loc 1 967 29
 1160 006c BB68     		ldr	r3, [r7, #8]
 1161 006e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1162 0070 1846     		mov	r0, r3
 1163 0072 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1164 0076 0346     		mov	r3, r0
 1165 0078 1A46     		mov	r2, r3
 1166              		.loc 1 967 18
 1167 007a BB68     		ldr	r3, [r7, #8]
 1168 007c 5A70     		strb	r2, [r3, #1]
 968:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sDate->Date = (uint8_t)RTC_Bcd2ToByte(sDate->Date);
 1169              		.loc 1 968 28
 1170 007e BB68     		ldr	r3, [r7, #8]
 1171 0080 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1172 0082 1846     		mov	r0, r3
 1173 0084 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1174 0088 0346     		mov	r3, r0
 1175 008a 1A46     		mov	r2, r3
 1176              		.loc 1 968 17
 1177 008c BB68     		ldr	r3, [r7, #8]
 1178 008e 9A70     		strb	r2, [r3, #2]
 1179              	.L33:
 969:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
 970:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
 1180              		.loc 1 970 10
 1181 0090 0023     		movs	r3, #0
 971:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 1182              		.loc 1 971 1
 1183 0092 1846     		mov	r0, r3
 1184 0094 1837     		adds	r7, r7, #24
 1185              	.LCFI40:
 1186              		.cfi_def_cfa_offset 8
 1187 0096 BD46     		mov	sp, r7
 1188              	.LCFI41:
 1189              		.cfi_def_cfa_register 13
 1190              		@ sp needed
 1191 0098 80BD     		pop	{r7, pc}
 1192              		.cfi_endproc
 1193              	.LFE320:
 1195              		.section	.text.HAL_RTC_SetAlarm,"ax",%progbits
 1196              		.align	1
 1197              		.global	HAL_RTC_SetAlarm
 1198              		.syntax unified
 1199              		.thumb
ARM GAS  /tmp/ccXWJXxY.s 			page 39


 1200              		.thumb_func
 1201              		.fpu fpv4-sp-d16
 1203              	HAL_RTC_SetAlarm:
 1204              	.LFB321:
 972:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 973:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 974:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @}
 975:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 976:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 977:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group3
 978:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *  @brief   RTC Alarm functions
 979:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *
 980:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @verbatim
 981:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
 982:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                  ##### RTC Alarm functions #####
 983:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
 984:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 985:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  [..] This section provides functions allowing to configure Alarm feature
 986:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
 987:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @endverbatim
 988:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @{
 989:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
 990:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
 991:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Set the specified RTC Alarm.
 992:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
 993:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sAlarm Pointer to Alarm structure
 994:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
 995:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 996:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format
 997:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
 998:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
 999:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1000:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetAlarm(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t Form
1001:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 1205              		.loc 1 1001 1
 1206              		.cfi_startproc
 1207              		@ args = 0, pretend = 0, frame = 32
 1208              		@ frame_needed = 1, uses_anonymous_args = 0
 1209 0000 90B5     		push	{r4, r7, lr}
 1210              	.LCFI42:
 1211              		.cfi_def_cfa_offset 12
 1212              		.cfi_offset 4, -12
 1213              		.cfi_offset 7, -8
 1214              		.cfi_offset 14, -4
 1215 0002 89B0     		sub	sp, sp, #36
 1216              	.LCFI43:
 1217              		.cfi_def_cfa_offset 48
 1218 0004 00AF     		add	r7, sp, #0
 1219              	.LCFI44:
 1220              		.cfi_def_cfa_register 7
 1221 0006 F860     		str	r0, [r7, #12]
 1222 0008 B960     		str	r1, [r7, #8]
 1223 000a 7A60     		str	r2, [r7, #4]
1002:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg, subsecondtmpreg;
1003:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1004:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters */
1005:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
ARM GAS  /tmp/ccXWJXxY.s 			page 40


1006:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(sAlarm->Alarm));
1007:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_MASK(sAlarm->AlarmMask));
1008:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(sAlarm->AlarmDateWeekDaySel));
1009:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_VALUE(sAlarm->AlarmTime.SubSeconds));
1010:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_MASK(sAlarm->AlarmSubSecondMask));
1011:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1012:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Locked */
1013:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 1224              		.loc 1 1013 3
 1225 000c FB68     		ldr	r3, [r7, #12]
 1226 000e 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 1227 0012 012B     		cmp	r3, #1
 1228 0014 01D1     		bne	.L36
 1229              		.loc 1 1013 3 is_stmt 0 discriminator 1
 1230 0016 0223     		movs	r3, #2
 1231 0018 1BE1     		b	.L37
 1232              	.L36:
 1233              		.loc 1 1013 3 discriminator 2
 1234 001a FB68     		ldr	r3, [r7, #12]
 1235 001c 0122     		movs	r2, #1
 1236 001e 83F82020 		strb	r2, [r3, #32]
1014:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1015:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1237              		.loc 1 1015 15 is_stmt 1 discriminator 2
 1238 0022 FB68     		ldr	r3, [r7, #12]
 1239 0024 0222     		movs	r2, #2
 1240 0026 83F82120 		strb	r2, [r3, #33]
1016:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1017:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (Format == RTC_FORMAT_BIN)
 1241              		.loc 1 1017 6 discriminator 2
 1242 002a 7B68     		ldr	r3, [r7, #4]
 1243 002c 002B     		cmp	r3, #0
 1244 002e 37D1     		bne	.L38
1018:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1019:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if ((hrtc->Instance->CR & RTC_CR_FMT) != 0U)
 1245              		.loc 1 1019 14
 1246 0030 FB68     		ldr	r3, [r7, #12]
 1247 0032 1B68     		ldr	r3, [r3]
 1248              		.loc 1 1019 24
 1249 0034 9B68     		ldr	r3, [r3, #8]
 1250              		.loc 1 1019 29
 1251 0036 03F04003 		and	r3, r3, #64
 1252              		.loc 1 1019 8
 1253 003a 002B     		cmp	r3, #0
 1254 003c 02D1     		bne	.L39
1020:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1021:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(sAlarm->AlarmTime.Hours));
1022:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
1023:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1024:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
1025:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1026:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
 1255              		.loc 1 1026 36
 1256 003e BB68     		ldr	r3, [r7, #8]
 1257 0040 0022     		movs	r2, #0
 1258 0042 DA70     		strb	r2, [r3, #3]
 1259              	.L39:
ARM GAS  /tmp/ccXWJXxY.s 			page 41


1027:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
1028:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1029:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sAlarm->AlarmTime.Minutes));
1030:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
1031:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1032:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
1033:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1034:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(sAlarm->AlarmDateWeekDay));
1035:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1036:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
1037:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1038:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(sAlarm->AlarmDateWeekDay));
1039:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1040:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Hours) << RTC_ALRMAR_HU_Pos) | \
 1260              		.loc 1 1040 26
 1261 0044 BB68     		ldr	r3, [r7, #8]
 1262 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1263 0048 1846     		mov	r0, r3
 1264 004a FFF7FEFF 		bl	RTC_ByteToBcd2
 1265 004e 0346     		mov	r3, r0
 1266              		.loc 1 1040 66
 1267 0050 1C04     		lsls	r4, r3, #16
1041:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1268              		.loc 1 1041 26
 1269 0052 BB68     		ldr	r3, [r7, #8]
 1270 0054 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1271 0056 1846     		mov	r0, r3
 1272 0058 FFF7FEFF 		bl	RTC_ByteToBcd2
 1273 005c 0346     		mov	r3, r0
 1274              		.loc 1 1041 68
 1275 005e 1B02     		lsls	r3, r3, #8
1040:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1276              		.loc 1 1040 88
 1277 0060 1C43     		orrs	r4, r4, r3
1042:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
 1278              		.loc 1 1042 26
 1279 0062 BB68     		ldr	r3, [r7, #8]
 1280 0064 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1281 0066 1846     		mov	r0, r3
 1282 0068 FFF7FEFF 		bl	RTC_ByteToBcd2
 1283 006c 0346     		mov	r3, r0
1041:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1284              		.loc 1 1041 91
 1285 006e 44EA0302 		orr	r2, r4, r3
1043:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
 1286              		.loc 1 1043 44
 1287 0072 BB68     		ldr	r3, [r7, #8]
 1288 0074 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1289              		.loc 1 1043 57
 1290 0076 9B05     		lsls	r3, r3, #22
1042:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
 1291              		.loc 1 1042 90
 1292 0078 42EA0304 		orr	r4, r2, r3
1044:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
 1293              		.loc 1 1044 26
 1294 007c BB68     		ldr	r3, [r7, #8]
 1295 007e 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
ARM GAS  /tmp/ccXWJXxY.s 			page 42


 1296 0082 1846     		mov	r0, r3
 1297 0084 FFF7FEFF 		bl	RTC_ByteToBcd2
 1298 0088 0346     		mov	r3, r0
 1299              		.loc 1 1044 67
 1300 008a 1B06     		lsls	r3, r3, #24
1043:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
 1301              		.loc 1 1043 79
 1302 008c 44EA0302 		orr	r2, r4, r3
1045:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1303              		.loc 1 1045 32
 1304 0090 BB68     		ldr	r3, [r7, #8]
 1305 0092 DB69     		ldr	r3, [r3, #28]
1044:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
 1306              		.loc 1 1044 89
 1307 0094 1A43     		orrs	r2, r2, r3
1046:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));
 1308              		.loc 1 1046 32
 1309 0096 BB68     		ldr	r3, [r7, #8]
 1310 0098 5B69     		ldr	r3, [r3, #20]
1040:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1311              		.loc 1 1040 12
 1312 009a 1343     		orrs	r3, r3, r2
 1313 009c FB61     		str	r3, [r7, #28]
 1314 009e 23E0     		b	.L40
 1315              	.L38:
1047:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1048:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
1049:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1050:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if ((hrtc->Instance->CR & RTC_CR_FMT) != 0U)
 1316              		.loc 1 1050 14
 1317 00a0 FB68     		ldr	r3, [r7, #12]
 1318 00a2 1B68     		ldr	r3, [r3]
 1319              		.loc 1 1050 24
 1320 00a4 9B68     		ldr	r3, [r3, #8]
 1321              		.loc 1 1050 29
 1322 00a6 03F04003 		and	r3, r3, #64
 1323              		.loc 1 1050 8
 1324 00aa 002B     		cmp	r3, #0
 1325 00ac 02D1     		bne	.L41
1051:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1052:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
1053:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
1054:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1055:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
1056:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1057:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
 1326              		.loc 1 1057 36
 1327 00ae BB68     		ldr	r3, [r7, #8]
 1328 00b0 0022     		movs	r2, #0
 1329 00b2 DA70     		strb	r2, [r3, #3]
 1330              	.L41:
1058:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
1059:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1060:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1061:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)));
1062:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
1063:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccXWJXxY.s 			page 43


1064:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #ifdef  USE_FULL_ASSERT
1065:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
1066:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1067:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay)));
1068:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1069:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
1070:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1071:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay)));
1072:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1073:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1074:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* USE_FULL_ASSERT */
1075:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << RTC_ALRMAR_HU_Pos) | \
 1331              		.loc 1 1075 44
 1332 00b4 BB68     		ldr	r3, [r7, #8]
 1333 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1334              		.loc 1 1075 52
 1335 00b8 1A04     		lsls	r2, r3, #16
1076:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1336              		.loc 1 1076 44
 1337 00ba BB68     		ldr	r3, [r7, #8]
 1338 00bc 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1339              		.loc 1 1076 54
 1340 00be 1B02     		lsls	r3, r3, #8
1075:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1341              		.loc 1 1075 74
 1342 00c0 1343     		orrs	r3, r3, r2
1077:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
 1343              		.loc 1 1077 44
 1344 00c2 BA68     		ldr	r2, [r7, #8]
 1345 00c4 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
1076:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1346              		.loc 1 1076 77
 1347 00c6 1A43     		orrs	r2, r2, r3
1078:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
 1348              		.loc 1 1078 44
 1349 00c8 BB68     		ldr	r3, [r7, #8]
 1350 00ca DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1351              		.loc 1 1078 57
 1352 00cc 9B05     		lsls	r3, r3, #22
1077:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
 1353              		.loc 1 1077 76
 1354 00ce 1A43     		orrs	r2, r2, r3
1079:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
 1355              		.loc 1 1079 33
 1356 00d0 BB68     		ldr	r3, [r7, #8]
 1357 00d2 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 1358              		.loc 1 1079 53
 1359 00d6 1B06     		lsls	r3, r3, #24
1078:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
 1360              		.loc 1 1078 79
 1361 00d8 1A43     		orrs	r2, r2, r3
1080:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1362              		.loc 1 1080 32
 1363 00da BB68     		ldr	r3, [r7, #8]
 1364 00dc DB69     		ldr	r3, [r3, #28]
1079:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
 1365              		.loc 1 1079 75
ARM GAS  /tmp/ccXWJXxY.s 			page 44


 1366 00de 1A43     		orrs	r2, r2, r3
1081:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));
 1367              		.loc 1 1081 32
 1368 00e0 BB68     		ldr	r3, [r7, #8]
 1369 00e2 5B69     		ldr	r3, [r3, #20]
1075:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1370              		.loc 1 1075 12
 1371 00e4 1343     		orrs	r3, r3, r2
 1372 00e6 FB61     		str	r3, [r7, #28]
 1373              	.L40:
1082:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1083:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1084:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Configure the Alarm A or Alarm B Sub Second registers */
1085:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   subsecondtmpreg = (uint32_t)((uint32_t)(sAlarm->AlarmTime.SubSeconds) | (uint32_t)(sAlarm->AlarmS
 1374              		.loc 1 1085 60
 1375 00e8 BB68     		ldr	r3, [r7, #8]
 1376 00ea 5A68     		ldr	r2, [r3, #4]
 1377              		.loc 1 1085 92
 1378 00ec BB68     		ldr	r3, [r7, #8]
 1379 00ee 9B69     		ldr	r3, [r3, #24]
 1380              		.loc 1 1085 19
 1381 00f0 1343     		orrs	r3, r3, r2
 1382 00f2 BB61     		str	r3, [r7, #24]
1086:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1087:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
1088:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1383              		.loc 1 1088 3
 1384 00f4 FB68     		ldr	r3, [r7, #12]
 1385 00f6 1B68     		ldr	r3, [r3]
 1386 00f8 CA22     		movs	r2, #202
 1387 00fa 5A62     		str	r2, [r3, #36]
 1388 00fc FB68     		ldr	r3, [r7, #12]
 1389 00fe 1B68     		ldr	r3, [r3]
 1390 0100 5322     		movs	r2, #83
 1391 0102 5A62     		str	r2, [r3, #36]
1089:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1090:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Configure the Alarm register */
1091:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (sAlarm->Alarm == RTC_ALARM_A)
 1392              		.loc 1 1091 13
 1393 0104 BB68     		ldr	r3, [r7, #8]
 1394 0106 5B6A     		ldr	r3, [r3, #36]
 1395              		.loc 1 1091 6
 1396 0108 B3F5807F 		cmp	r3, #256
 1397 010c 4AD1     		bne	.L42
 1398              	.LBB2:
1092:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1093:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Disable the Alarm A interrupt */
1094:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARMA_DISABLE(hrtc);
 1399              		.loc 1 1094 5
 1400 010e FB68     		ldr	r3, [r7, #12]
 1401 0110 1B68     		ldr	r3, [r3]
 1402 0112 9A68     		ldr	r2, [r3, #8]
 1403 0114 FB68     		ldr	r3, [r7, #12]
 1404 0116 1B68     		ldr	r3, [r3]
 1405 0118 22F48072 		bic	r2, r2, #256
 1406 011c 9A60     		str	r2, [r3, #8]
1095:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear flag alarm A */
ARM GAS  /tmp/ccXWJXxY.s 			page 45


1096:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
 1407              		.loc 1 1096 5
 1408 011e FB68     		ldr	r3, [r7, #12]
 1409 0120 1B68     		ldr	r3, [r3]
 1410 0122 DB68     		ldr	r3, [r3, #12]
 1411 0124 DAB2     		uxtb	r2, r3
 1412 0126 FB68     		ldr	r3, [r7, #12]
 1413 0128 1B68     		ldr	r3, [r3]
 1414 012a 62F4C072 		orn	r2, r2, #384
 1415 012e DA60     		str	r2, [r3, #12]
1097:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */
1098:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRA);
 1416              		.loc 1 1098 5
 1417 0130 FB68     		ldr	r3, [r7, #12]
 1418 0132 1B68     		ldr	r3, [r3]
 1419 0134 9A68     		ldr	r2, [r3, #8]
 1420 0136 FB68     		ldr	r3, [r7, #12]
 1421 0138 1B68     		ldr	r3, [r3]
 1422 013a 22F48052 		bic	r2, r2, #4096
 1423 013e 9A60     		str	r2, [r3, #8]
1099:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1100:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (RTC_FLAG_ALRAWF)
1101:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     uint32_t tickstart = HAL_GetTick();
 1424              		.loc 1 1101 26
 1425 0140 FFF7FEFF 		bl	HAL_GetTick
 1426 0144 3861     		str	r0, [r7, #16]
1102:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
1103:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAWF) == 0U)
 1427              		.loc 1 1103 11
 1428 0146 15E0     		b	.L43
 1429              	.L44:
1104:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1105:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 1430              		.loc 1 1105 12
 1431 0148 FFF7FEFF 		bl	HAL_GetTick
 1432 014c 0246     		mov	r2, r0
 1433              		.loc 1 1105 26
 1434 014e 3B69     		ldr	r3, [r7, #16]
 1435 0150 D31A     		subs	r3, r2, r3
 1436              		.loc 1 1105 10
 1437 0152 B3F57A7F 		cmp	r3, #1000
 1438 0156 0DD9     		bls	.L43
1106:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1107:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
1108:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1439              		.loc 1 1108 9
 1440 0158 FB68     		ldr	r3, [r7, #12]
 1441 015a 1B68     		ldr	r3, [r3]
 1442 015c FF22     		movs	r2, #255
 1443 015e 5A62     		str	r2, [r3, #36]
1109:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1110:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1444              		.loc 1 1110 21
 1445 0160 FB68     		ldr	r3, [r7, #12]
 1446 0162 0322     		movs	r2, #3
 1447 0164 83F82120 		strb	r2, [r3, #33]
1111:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccXWJXxY.s 			page 46


1112:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Process Unlocked */
1113:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 1448              		.loc 1 1113 9
 1449 0168 FB68     		ldr	r3, [r7, #12]
 1450 016a 0022     		movs	r2, #0
 1451 016c 83F82020 		strb	r2, [r3, #32]
1114:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1115:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         return HAL_TIMEOUT;
 1452              		.loc 1 1115 16
 1453 0170 0323     		movs	r3, #3
 1454 0172 6EE0     		b	.L37
 1455              	.L43:
1103:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1456              		.loc 1 1103 12
 1457 0174 FB68     		ldr	r3, [r7, #12]
 1458 0176 1B68     		ldr	r3, [r3]
 1459 0178 DB68     		ldr	r3, [r3, #12]
 1460 017a 03F00103 		and	r3, r3, #1
1103:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1461              		.loc 1 1103 11
 1462 017e 002B     		cmp	r3, #0
 1463 0180 E2D0     		beq	.L44
1116:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1117:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1118:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
1119:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1120:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->ALRMAR = (uint32_t)tmpreg;
 1464              		.loc 1 1120 9
 1465 0182 FB68     		ldr	r3, [r7, #12]
 1466 0184 1B68     		ldr	r3, [r3]
 1467              		.loc 1 1120 28
 1468 0186 FA69     		ldr	r2, [r7, #28]
 1469 0188 DA61     		str	r2, [r3, #28]
1121:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
1122:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->ALRMASSR = subsecondtmpreg;
 1470              		.loc 1 1122 9
 1471 018a FB68     		ldr	r3, [r7, #12]
 1472 018c 1B68     		ldr	r3, [r3]
 1473              		.loc 1 1122 30
 1474 018e BA69     		ldr	r2, [r7, #24]
 1475 0190 5A64     		str	r2, [r3, #68]
1123:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
1124:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARMA_ENABLE(hrtc);
 1476              		.loc 1 1124 5
 1477 0192 FB68     		ldr	r3, [r7, #12]
 1478 0194 1B68     		ldr	r3, [r3]
 1479 0196 9A68     		ldr	r2, [r3, #8]
 1480 0198 FB68     		ldr	r3, [r7, #12]
 1481 019a 1B68     		ldr	r3, [r3]
 1482 019c 42F48072 		orr	r2, r2, #256
 1483 01a0 9A60     		str	r2, [r3, #8]
 1484              	.LBE2:
 1485 01a2 49E0     		b	.L45
 1486              	.L42:
 1487              	.LBB3:
1125:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1126:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
ARM GAS  /tmp/ccXWJXxY.s 			page 47


1127:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1128:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Disable the Alarm B interrupt */
1129:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARMB_DISABLE(hrtc);
 1488              		.loc 1 1129 5
 1489 01a4 FB68     		ldr	r3, [r7, #12]
 1490 01a6 1B68     		ldr	r3, [r3]
 1491 01a8 9A68     		ldr	r2, [r3, #8]
 1492 01aa FB68     		ldr	r3, [r7, #12]
 1493 01ac 1B68     		ldr	r3, [r3]
 1494 01ae 22F40072 		bic	r2, r2, #512
 1495 01b2 9A60     		str	r2, [r3, #8]
1130:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear flag alarm B */
1131:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRBF);
 1496              		.loc 1 1131 5
 1497 01b4 FB68     		ldr	r3, [r7, #12]
 1498 01b6 1B68     		ldr	r3, [r3]
 1499 01b8 DB68     		ldr	r3, [r3, #12]
 1500 01ba DAB2     		uxtb	r2, r3
 1501 01bc FB68     		ldr	r3, [r7, #12]
 1502 01be 1B68     		ldr	r3, [r3]
 1503 01c0 62F42072 		orn	r2, r2, #640
 1504 01c4 DA60     		str	r2, [r3, #12]
1132:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */
1133:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRB);
 1505              		.loc 1 1133 5
 1506 01c6 FB68     		ldr	r3, [r7, #12]
 1507 01c8 1B68     		ldr	r3, [r3]
 1508 01ca 9A68     		ldr	r2, [r3, #8]
 1509 01cc FB68     		ldr	r3, [r7, #12]
 1510 01ce 1B68     		ldr	r3, [r3]
 1511 01d0 22F40052 		bic	r2, r2, #8192
 1512 01d4 9A60     		str	r2, [r3, #8]
1134:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1135:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (RTC_FLAG_ALRBWF)
1136:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     uint32_t tickstart = HAL_GetTick();
 1513              		.loc 1 1136 26
 1514 01d6 FFF7FEFF 		bl	HAL_GetTick
 1515 01da 7861     		str	r0, [r7, #20]
1137:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
1138:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBWF) == 0U)
 1516              		.loc 1 1138 11
 1517 01dc 15E0     		b	.L46
 1518              	.L47:
1139:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1140:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 1519              		.loc 1 1140 12
 1520 01de FFF7FEFF 		bl	HAL_GetTick
 1521 01e2 0246     		mov	r2, r0
 1522              		.loc 1 1140 26
 1523 01e4 7B69     		ldr	r3, [r7, #20]
 1524 01e6 D31A     		subs	r3, r2, r3
 1525              		.loc 1 1140 10
 1526 01e8 B3F57A7F 		cmp	r3, #1000
 1527 01ec 0DD9     		bls	.L46
1141:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1142:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
1143:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
ARM GAS  /tmp/ccXWJXxY.s 			page 48


 1528              		.loc 1 1143 9
 1529 01ee FB68     		ldr	r3, [r7, #12]
 1530 01f0 1B68     		ldr	r3, [r3]
 1531 01f2 FF22     		movs	r2, #255
 1532 01f4 5A62     		str	r2, [r3, #36]
1144:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1145:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1533              		.loc 1 1145 21
 1534 01f6 FB68     		ldr	r3, [r7, #12]
 1535 01f8 0322     		movs	r2, #3
 1536 01fa 83F82120 		strb	r2, [r3, #33]
1146:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1147:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Process Unlocked */
1148:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 1537              		.loc 1 1148 9
 1538 01fe FB68     		ldr	r3, [r7, #12]
 1539 0200 0022     		movs	r2, #0
 1540 0202 83F82020 		strb	r2, [r3, #32]
1149:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1150:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         return HAL_TIMEOUT;
 1541              		.loc 1 1150 16
 1542 0206 0323     		movs	r3, #3
 1543 0208 23E0     		b	.L37
 1544              	.L46:
1138:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1545              		.loc 1 1138 12
 1546 020a FB68     		ldr	r3, [r7, #12]
 1547 020c 1B68     		ldr	r3, [r3]
 1548 020e DB68     		ldr	r3, [r3, #12]
 1549 0210 03F00203 		and	r3, r3, #2
1138:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1550              		.loc 1 1138 11
 1551 0214 002B     		cmp	r3, #0
 1552 0216 E2D0     		beq	.L47
1151:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1152:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1153:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
1154:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1155:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->ALRMBR = (uint32_t)tmpreg;
 1553              		.loc 1 1155 9
 1554 0218 FB68     		ldr	r3, [r7, #12]
 1555 021a 1B68     		ldr	r3, [r3]
 1556              		.loc 1 1155 28
 1557 021c FA69     		ldr	r2, [r7, #28]
 1558 021e 1A62     		str	r2, [r3, #32]
1156:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
1157:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->ALRMBSSR = subsecondtmpreg;
 1559              		.loc 1 1157 9
 1560 0220 FB68     		ldr	r3, [r7, #12]
 1561 0222 1B68     		ldr	r3, [r3]
 1562              		.loc 1 1157 30
 1563 0224 BA69     		ldr	r2, [r7, #24]
 1564 0226 9A64     		str	r2, [r3, #72]
1158:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
1159:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARMB_ENABLE(hrtc);
 1565              		.loc 1 1159 5
 1566 0228 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccXWJXxY.s 			page 49


 1567 022a 1B68     		ldr	r3, [r3]
 1568 022c 9A68     		ldr	r2, [r3, #8]
 1569 022e FB68     		ldr	r3, [r7, #12]
 1570 0230 1B68     		ldr	r3, [r3]
 1571 0232 42F40072 		orr	r2, r2, #512
 1572 0236 9A60     		str	r2, [r3, #8]
 1573              	.L45:
 1574              	.LBE3:
1160:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1161:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1162:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
1163:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1575              		.loc 1 1163 3
 1576 0238 FB68     		ldr	r3, [r7, #12]
 1577 023a 1B68     		ldr	r3, [r3]
 1578 023c FF22     		movs	r2, #255
 1579 023e 5A62     		str	r2, [r3, #36]
1164:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1165:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Change RTC state */
1166:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
 1580              		.loc 1 1166 15
 1581 0240 FB68     		ldr	r3, [r7, #12]
 1582 0242 0122     		movs	r2, #1
 1583 0244 83F82120 		strb	r2, [r3, #33]
1167:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1168:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Unlocked */
1169:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 1584              		.loc 1 1169 3
 1585 0248 FB68     		ldr	r3, [r7, #12]
 1586 024a 0022     		movs	r2, #0
 1587 024c 83F82020 		strb	r2, [r3, #32]
1170:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1171:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
 1588              		.loc 1 1171 10
 1589 0250 0023     		movs	r3, #0
 1590              	.L37:
1172:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 1591              		.loc 1 1172 1
 1592 0252 1846     		mov	r0, r3
 1593 0254 2437     		adds	r7, r7, #36
 1594              	.LCFI45:
 1595              		.cfi_def_cfa_offset 12
 1596 0256 BD46     		mov	sp, r7
 1597              	.LCFI46:
 1598              		.cfi_def_cfa_register 13
 1599              		@ sp needed
 1600 0258 90BD     		pop	{r4, r7, pc}
 1601              		.cfi_endproc
 1602              	.LFE321:
 1604              		.section	.text.HAL_RTC_SetAlarm_IT,"ax",%progbits
 1605              		.align	1
 1606              		.global	HAL_RTC_SetAlarm_IT
 1607              		.syntax unified
 1608              		.thumb
 1609              		.thumb_func
 1610              		.fpu fpv4-sp-d16
 1612              	HAL_RTC_SetAlarm_IT:
ARM GAS  /tmp/ccXWJXxY.s 			page 50


 1613              	.LFB322:
1173:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1174:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1175:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Set the specified RTC Alarm with Interrupt.
1176:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note   The Alarm register can only be written when the corresponding Alarm
1177:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         is disabled (Use the HAL_RTC_DeactivateAlarm()).
1178:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note   The HAL_RTC_SetTime() must be called before enabling the Alarm feature.
1179:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
1180:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sAlarm Pointer to Alarm structure
1181:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
1182:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1183:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format
1184:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
1185:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
1186:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1187:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetAlarm_IT(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t F
1188:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 1614              		.loc 1 1188 1
 1615              		.cfi_startproc
 1616              		@ args = 0, pretend = 0, frame = 32
 1617              		@ frame_needed = 1, uses_anonymous_args = 0
 1618 0000 90B5     		push	{r4, r7, lr}
 1619              	.LCFI47:
 1620              		.cfi_def_cfa_offset 12
 1621              		.cfi_offset 4, -12
 1622              		.cfi_offset 7, -8
 1623              		.cfi_offset 14, -4
 1624 0002 89B0     		sub	sp, sp, #36
 1625              	.LCFI48:
 1626              		.cfi_def_cfa_offset 48
 1627 0004 00AF     		add	r7, sp, #0
 1628              	.LCFI49:
 1629              		.cfi_def_cfa_register 7
 1630 0006 F860     		str	r0, [r7, #12]
 1631 0008 B960     		str	r1, [r7, #8]
 1632 000a 7A60     		str	r2, [r7, #4]
1189:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg, subsecondtmpreg;
1190:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1191:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters */
1192:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1193:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(sAlarm->Alarm));
1194:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_MASK(sAlarm->AlarmMask));
1195:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_DATE_WEEKDAY_SEL(sAlarm->AlarmDateWeekDaySel));
1196:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_VALUE(sAlarm->AlarmTime.SubSeconds));
1197:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM_SUB_SECOND_MASK(sAlarm->AlarmSubSecondMask));
1198:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1199:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Locked */
1200:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 1633              		.loc 1 1200 3
 1634 000c FB68     		ldr	r3, [r7, #12]
 1635 000e 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 1636 0012 012B     		cmp	r3, #1
 1637 0014 01D1     		bne	.L49
 1638              		.loc 1 1200 3 is_stmt 0 discriminator 1
 1639 0016 0223     		movs	r3, #2
 1640 0018 27E1     		b	.L50
 1641              	.L49:
ARM GAS  /tmp/ccXWJXxY.s 			page 51


 1642              		.loc 1 1200 3 discriminator 2
 1643 001a FB68     		ldr	r3, [r7, #12]
 1644 001c 0122     		movs	r2, #1
 1645 001e 83F82020 		strb	r2, [r3, #32]
1201:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1202:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 1646              		.loc 1 1202 15 is_stmt 1 discriminator 2
 1647 0022 FB68     		ldr	r3, [r7, #12]
 1648 0024 0222     		movs	r2, #2
 1649 0026 83F82120 		strb	r2, [r3, #33]
1203:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1204:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (Format == RTC_FORMAT_BIN)
 1650              		.loc 1 1204 6 discriminator 2
 1651 002a 7B68     		ldr	r3, [r7, #4]
 1652 002c 002B     		cmp	r3, #0
 1653 002e 37D1     		bne	.L51
1205:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1206:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if ((hrtc->Instance->CR & RTC_CR_FMT) != 0U)
 1654              		.loc 1 1206 14
 1655 0030 FB68     		ldr	r3, [r7, #12]
 1656 0032 1B68     		ldr	r3, [r3]
 1657              		.loc 1 1206 24
 1658 0034 9B68     		ldr	r3, [r3, #8]
 1659              		.loc 1 1206 29
 1660 0036 03F04003 		and	r3, r3, #64
 1661              		.loc 1 1206 8
 1662 003a 002B     		cmp	r3, #0
 1663 003c 02D1     		bne	.L52
1207:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1208:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(sAlarm->AlarmTime.Hours));
1209:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
1210:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1211:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
1212:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1213:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
 1664              		.loc 1 1213 36
 1665 003e BB68     		ldr	r3, [r7, #8]
 1666 0040 0022     		movs	r2, #0
 1667 0042 DA70     		strb	r2, [r3, #3]
 1668              	.L52:
1214:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
1215:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1216:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sAlarm->AlarmTime.Minutes));
1217:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
1218:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1219:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
1220:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1221:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(sAlarm->AlarmDateWeekDay));
1222:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1223:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
1224:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1225:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(sAlarm->AlarmDateWeekDay));
1226:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1227:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1228:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     tmpreg = (((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Hours) << RTC_ALRMAR_HU_Pos) | \
 1669              		.loc 1 1228 26
 1670 0044 BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccXWJXxY.s 			page 52


 1671 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1672 0048 1846     		mov	r0, r3
 1673 004a FFF7FEFF 		bl	RTC_ByteToBcd2
 1674 004e 0346     		mov	r3, r0
 1675              		.loc 1 1228 66
 1676 0050 1C04     		lsls	r4, r3, #16
1229:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1677              		.loc 1 1229 26
 1678 0052 BB68     		ldr	r3, [r7, #8]
 1679 0054 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1680 0056 1846     		mov	r0, r3
 1681 0058 FFF7FEFF 		bl	RTC_ByteToBcd2
 1682 005c 0346     		mov	r3, r0
 1683              		.loc 1 1229 68
 1684 005e 1B02     		lsls	r3, r3, #8
1228:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1685              		.loc 1 1228 88
 1686 0060 1C43     		orrs	r4, r4, r3
1230:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
 1687              		.loc 1 1230 26
 1688 0062 BB68     		ldr	r3, [r7, #8]
 1689 0064 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1690 0066 1846     		mov	r0, r3
 1691 0068 FFF7FEFF 		bl	RTC_ByteToBcd2
 1692 006c 0346     		mov	r3, r0
1229:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1693              		.loc 1 1229 91
 1694 006e 44EA0302 		orr	r2, r4, r3
1231:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
 1695              		.loc 1 1231 44
 1696 0072 BB68     		ldr	r3, [r7, #8]
 1697 0074 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1698              		.loc 1 1231 57
 1699 0076 9B05     		lsls	r3, r3, #22
1230:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
 1700              		.loc 1 1230 90
 1701 0078 42EA0304 		orr	r4, r2, r3
1232:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
 1702              		.loc 1 1232 26
 1703 007c BB68     		ldr	r3, [r7, #8]
 1704 007e 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 1705 0082 1846     		mov	r0, r3
 1706 0084 FFF7FEFF 		bl	RTC_ByteToBcd2
 1707 0088 0346     		mov	r3, r0
 1708              		.loc 1 1232 67
 1709 008a 1B06     		lsls	r3, r3, #24
1231:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
 1710              		.loc 1 1231 79
 1711 008c 44EA0302 		orr	r2, r4, r3
1233:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1712              		.loc 1 1233 32
 1713 0090 BB68     		ldr	r3, [r7, #8]
 1714 0092 DB69     		ldr	r3, [r3, #28]
1232:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
 1715              		.loc 1 1232 89
 1716 0094 1A43     		orrs	r2, r2, r3
1234:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));
ARM GAS  /tmp/ccXWJXxY.s 			page 53


 1717              		.loc 1 1234 32
 1718 0096 BB68     		ldr	r3, [r7, #8]
 1719 0098 5B69     		ldr	r3, [r3, #20]
1228:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1720              		.loc 1 1228 12
 1721 009a 1343     		orrs	r3, r3, r2
 1722 009c FB61     		str	r3, [r7, #28]
 1723 009e 23E0     		b	.L53
 1724              	.L51:
1235:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1236:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
1237:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1238:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if ((hrtc->Instance->CR & RTC_CR_FMT) != 0U)
 1725              		.loc 1 1238 14
 1726 00a0 FB68     		ldr	r3, [r7, #12]
 1727 00a2 1B68     		ldr	r3, [r3]
 1728              		.loc 1 1238 24
 1729 00a4 9B68     		ldr	r3, [r3, #8]
 1730              		.loc 1 1238 29
 1731 00a6 03F04003 		and	r3, r3, #64
 1732              		.loc 1 1238 8
 1733 00aa 002B     		cmp	r3, #0
 1734 00ac 02D1     		bne	.L54
1239:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1240:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR12(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
1241:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOURFORMAT12(sAlarm->AlarmTime.TimeFormat));
1242:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1243:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
1244:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1245:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       sAlarm->AlarmTime.TimeFormat = 0x00U;
 1735              		.loc 1 1245 36
 1736 00ae BB68     		ldr	r3, [r7, #8]
 1737 00b0 0022     		movs	r2, #0
 1738 00b2 DA70     		strb	r2, [r3, #3]
 1739              	.L54:
1246:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
1247:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1248:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1249:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)));
1250:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
1251:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1252:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #ifdef  USE_FULL_ASSERT
1253:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (sAlarm->AlarmDateWeekDaySel == RTC_ALARMDATEWEEKDAYSEL_DATE)
1254:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1255:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_DATE(RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay)));
1256:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1257:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     else
1258:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1259:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       assert_param(IS_RTC_ALARM_DATE_WEEKDAY_WEEKDAY(RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay)));
1260:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1261:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1262:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* USE_FULL_ASSERT */
1263:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     tmpreg = (((uint32_t)(sAlarm->AlarmTime.Hours) << RTC_ALRMAR_HU_Pos) | \
 1740              		.loc 1 1263 44
 1741 00b4 BB68     		ldr	r3, [r7, #8]
 1742 00b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1743              		.loc 1 1263 52
ARM GAS  /tmp/ccXWJXxY.s 			page 54


 1744 00b8 1A04     		lsls	r2, r3, #16
1264:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1745              		.loc 1 1264 44
 1746 00ba BB68     		ldr	r3, [r7, #8]
 1747 00bc 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1748              		.loc 1 1264 54
 1749 00be 1B02     		lsls	r3, r3, #8
1263:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1750              		.loc 1 1263 74
 1751 00c0 1343     		orrs	r3, r3, r2
1265:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
 1752              		.loc 1 1265 44
 1753 00c2 BA68     		ldr	r2, [r7, #8]
 1754 00c4 9278     		ldrb	r2, [r2, #2]	@ zero_extendqisi2
1264:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1755              		.loc 1 1264 77
 1756 00c6 1A43     		orrs	r2, r2, r3
1266:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
 1757              		.loc 1 1266 44
 1758 00c8 BB68     		ldr	r3, [r7, #8]
 1759 00ca DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1760              		.loc 1 1266 57
 1761 00cc 9B05     		lsls	r3, r3, #22
1265:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Seconds) << RTC_ALRMAR_SU_Pos) | \
 1762              		.loc 1 1265 76
 1763 00ce 1A43     		orrs	r2, r2, r3
1267:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
 1764              		.loc 1 1267 33
 1765 00d0 BB68     		ldr	r3, [r7, #8]
 1766 00d2 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 1767              		.loc 1 1267 53
 1768 00d6 1B06     		lsls	r3, r3, #24
1266:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.TimeFormat) << RTC_ALRMAR_PM_Pos) | \
 1769              		.loc 1 1266 79
 1770 00d8 1A43     		orrs	r2, r2, r3
1268:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmDateWeekDaySel) | \
 1771              		.loc 1 1268 32
 1772 00da BB68     		ldr	r3, [r7, #8]
 1773 00dc DB69     		ldr	r3, [r3, #28]
1267:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmDateWeekDay) << RTC_ALRMAR_DU_Pos) | \
 1774              		.loc 1 1267 75
 1775 00de 1A43     		orrs	r2, r2, r3
1269:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)sAlarm->AlarmMask));
 1776              		.loc 1 1269 32
 1777 00e0 BB68     		ldr	r3, [r7, #8]
 1778 00e2 5B69     		ldr	r3, [r3, #20]
1263:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****               ((uint32_t)(sAlarm->AlarmTime.Minutes) << RTC_ALRMAR_MNU_Pos) | \
 1779              		.loc 1 1263 12
 1780 00e4 1343     		orrs	r3, r3, r2
 1781 00e6 FB61     		str	r3, [r7, #28]
 1782              	.L53:
1270:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1271:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Configure the Alarm A or Alarm B Sub Second registers */
1272:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   subsecondtmpreg = (uint32_t)((uint32_t)(sAlarm->AlarmTime.SubSeconds) | (uint32_t)(sAlarm->AlarmS
 1783              		.loc 1 1272 60
 1784 00e8 BB68     		ldr	r3, [r7, #8]
 1785 00ea 5A68     		ldr	r2, [r3, #4]
ARM GAS  /tmp/ccXWJXxY.s 			page 55


 1786              		.loc 1 1272 92
 1787 00ec BB68     		ldr	r3, [r7, #8]
 1788 00ee 9B69     		ldr	r3, [r3, #24]
 1789              		.loc 1 1272 19
 1790 00f0 1343     		orrs	r3, r3, r2
 1791 00f2 BB61     		str	r3, [r7, #24]
1273:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1274:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
1275:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 1792              		.loc 1 1275 3
 1793 00f4 FB68     		ldr	r3, [r7, #12]
 1794 00f6 1B68     		ldr	r3, [r3]
 1795 00f8 CA22     		movs	r2, #202
 1796 00fa 5A62     		str	r2, [r3, #36]
 1797 00fc FB68     		ldr	r3, [r7, #12]
 1798 00fe 1B68     		ldr	r3, [r3]
 1799 0100 5322     		movs	r2, #83
 1800 0102 5A62     		str	r2, [r3, #36]
1276:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1277:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Configure the Alarm register */
1278:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (sAlarm->Alarm == RTC_ALARM_A)
 1801              		.loc 1 1278 13
 1802 0104 BB68     		ldr	r3, [r7, #8]
 1803 0106 5B6A     		ldr	r3, [r3, #36]
 1804              		.loc 1 1278 6
 1805 0108 B3F5807F 		cmp	r3, #256
 1806 010c 4AD1     		bne	.L55
 1807              	.LBB4:
1279:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1280:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Disable the Alarm A interrupt */
1281:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARMA_DISABLE(hrtc);
 1808              		.loc 1 1281 5
 1809 010e FB68     		ldr	r3, [r7, #12]
 1810 0110 1B68     		ldr	r3, [r3]
 1811 0112 9A68     		ldr	r2, [r3, #8]
 1812 0114 FB68     		ldr	r3, [r7, #12]
 1813 0116 1B68     		ldr	r3, [r3]
 1814 0118 22F48072 		bic	r2, r2, #256
 1815 011c 9A60     		str	r2, [r3, #8]
1282:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1283:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear flag alarm A */
1284:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
 1816              		.loc 1 1284 5
 1817 011e FB68     		ldr	r3, [r7, #12]
 1818 0120 1B68     		ldr	r3, [r3]
 1819 0122 DB68     		ldr	r3, [r3, #12]
 1820 0124 DAB2     		uxtb	r2, r3
 1821 0126 FB68     		ldr	r3, [r7, #12]
 1822 0128 1B68     		ldr	r3, [r3]
 1823 012a 62F4C072 		orn	r2, r2, #384
 1824 012e DA60     		str	r2, [r3, #12]
1285:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1286:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (RTC_FLAG_ALRAWF)
1287:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     uint32_t tickstart = HAL_GetTick();
 1825              		.loc 1 1287 26
 1826 0130 FFF7FEFF 		bl	HAL_GetTick
 1827 0134 3861     		str	r0, [r7, #16]
ARM GAS  /tmp/ccXWJXxY.s 			page 56


1288:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRAWF flag is set and if Time out is reached exit */
1289:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAWF) == 0U)
 1828              		.loc 1 1289 11
 1829 0136 15E0     		b	.L56
 1830              	.L57:
1290:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1291:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 1831              		.loc 1 1291 12
 1832 0138 FFF7FEFF 		bl	HAL_GetTick
 1833 013c 0246     		mov	r2, r0
 1834              		.loc 1 1291 26
 1835 013e 3B69     		ldr	r3, [r7, #16]
 1836 0140 D31A     		subs	r3, r2, r3
 1837              		.loc 1 1291 10
 1838 0142 B3F57A7F 		cmp	r3, #1000
 1839 0146 0DD9     		bls	.L56
1292:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1293:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
1294:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1840              		.loc 1 1294 9
 1841 0148 FB68     		ldr	r3, [r7, #12]
 1842 014a 1B68     		ldr	r3, [r3]
 1843 014c FF22     		movs	r2, #255
 1844 014e 5A62     		str	r2, [r3, #36]
1295:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1296:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1845              		.loc 1 1296 21
 1846 0150 FB68     		ldr	r3, [r7, #12]
 1847 0152 0322     		movs	r2, #3
 1848 0154 83F82120 		strb	r2, [r3, #33]
1297:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1298:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Process Unlocked */
1299:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 1849              		.loc 1 1299 9
 1850 0158 FB68     		ldr	r3, [r7, #12]
 1851 015a 0022     		movs	r2, #0
 1852 015c 83F82020 		strb	r2, [r3, #32]
1300:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1301:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         return HAL_TIMEOUT;
 1853              		.loc 1 1301 16
 1854 0160 0323     		movs	r3, #3
 1855 0162 82E0     		b	.L50
 1856              	.L56:
1289:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1857              		.loc 1 1289 12
 1858 0164 FB68     		ldr	r3, [r7, #12]
 1859 0166 1B68     		ldr	r3, [r3]
 1860 0168 DB68     		ldr	r3, [r3, #12]
 1861 016a 03F00103 		and	r3, r3, #1
1289:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1862              		.loc 1 1289 11
 1863 016e 002B     		cmp	r3, #0
 1864 0170 E2D0     		beq	.L57
1302:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1303:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1304:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
1305:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
ARM GAS  /tmp/ccXWJXxY.s 			page 57


1306:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->ALRMAR = (uint32_t)tmpreg;
 1865              		.loc 1 1306 9
 1866 0172 FB68     		ldr	r3, [r7, #12]
 1867 0174 1B68     		ldr	r3, [r3]
 1868              		.loc 1 1306 28
 1869 0176 FA69     		ldr	r2, [r7, #28]
 1870 0178 DA61     		str	r2, [r3, #28]
1307:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm A Sub Second register */
1308:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->ALRMASSR = subsecondtmpreg;
 1871              		.loc 1 1308 9
 1872 017a FB68     		ldr	r3, [r7, #12]
 1873 017c 1B68     		ldr	r3, [r3]
 1874              		.loc 1 1308 30
 1875 017e BA69     		ldr	r2, [r7, #24]
 1876 0180 5A64     		str	r2, [r3, #68]
1309:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
1310:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARMA_ENABLE(hrtc);
 1877              		.loc 1 1310 5
 1878 0182 FB68     		ldr	r3, [r7, #12]
 1879 0184 1B68     		ldr	r3, [r3]
 1880 0186 9A68     		ldr	r2, [r3, #8]
 1881 0188 FB68     		ldr	r3, [r7, #12]
 1882 018a 1B68     		ldr	r3, [r3]
 1883 018c 42F48072 		orr	r2, r2, #256
 1884 0190 9A60     		str	r2, [r3, #8]
1311:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
1312:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARM_ENABLE_IT(hrtc, RTC_IT_ALRA);
 1885              		.loc 1 1312 5
 1886 0192 FB68     		ldr	r3, [r7, #12]
 1887 0194 1B68     		ldr	r3, [r3]
 1888 0196 9A68     		ldr	r2, [r3, #8]
 1889 0198 FB68     		ldr	r3, [r7, #12]
 1890 019a 1B68     		ldr	r3, [r3]
 1891 019c 42F48052 		orr	r2, r2, #4096
 1892 01a0 9A60     		str	r2, [r3, #8]
 1893              	.LBE4:
 1894 01a2 49E0     		b	.L58
 1895              	.L55:
 1896              	.LBB5:
1313:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1314:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
1315:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1316:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Disable the Alarm B interrupt */
1317:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARMB_DISABLE(hrtc);
 1897              		.loc 1 1317 5
 1898 01a4 FB68     		ldr	r3, [r7, #12]
 1899 01a6 1B68     		ldr	r3, [r3]
 1900 01a8 9A68     		ldr	r2, [r3, #8]
 1901 01aa FB68     		ldr	r3, [r7, #12]
 1902 01ac 1B68     		ldr	r3, [r3]
 1903 01ae 22F40072 		bic	r2, r2, #512
 1904 01b2 9A60     		str	r2, [r3, #8]
1318:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1319:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear flag alarm B */
1320:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRBF);
 1905              		.loc 1 1320 5
 1906 01b4 FB68     		ldr	r3, [r7, #12]
ARM GAS  /tmp/ccXWJXxY.s 			page 58


 1907 01b6 1B68     		ldr	r3, [r3]
 1908 01b8 DB68     		ldr	r3, [r3, #12]
 1909 01ba DAB2     		uxtb	r2, r3
 1910 01bc FB68     		ldr	r3, [r7, #12]
 1911 01be 1B68     		ldr	r3, [r3]
 1912 01c0 62F42072 		orn	r2, r2, #640
 1913 01c4 DA60     		str	r2, [r3, #12]
1321:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1322:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (RTC_FLAG_ALRBWF)
1323:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     uint32_t tickstart = HAL_GetTick();
 1914              		.loc 1 1323 26
 1915 01c6 FFF7FEFF 		bl	HAL_GetTick
 1916 01ca 7861     		str	r0, [r7, #20]
1324:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
1325:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBWF) == 0U)
 1917              		.loc 1 1325 11
 1918 01cc 15E0     		b	.L59
 1919              	.L60:
1326:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1327:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 1920              		.loc 1 1327 12
 1921 01ce FFF7FEFF 		bl	HAL_GetTick
 1922 01d2 0246     		mov	r2, r0
 1923              		.loc 1 1327 26
 1924 01d4 7B69     		ldr	r3, [r7, #20]
 1925 01d6 D31A     		subs	r3, r2, r3
 1926              		.loc 1 1327 10
 1927 01d8 B3F57A7F 		cmp	r3, #1000
 1928 01dc 0DD9     		bls	.L59
1328:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1329:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
1330:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1929              		.loc 1 1330 9
 1930 01de FB68     		ldr	r3, [r7, #12]
 1931 01e0 1B68     		ldr	r3, [r3]
 1932 01e2 FF22     		movs	r2, #255
 1933 01e4 5A62     		str	r2, [r3, #36]
1331:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1332:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 1934              		.loc 1 1332 21
 1935 01e6 FB68     		ldr	r3, [r7, #12]
 1936 01e8 0322     		movs	r2, #3
 1937 01ea 83F82120 		strb	r2, [r3, #33]
1333:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1334:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Process Unlocked */
1335:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 1938              		.loc 1 1335 9
 1939 01ee FB68     		ldr	r3, [r7, #12]
 1940 01f0 0022     		movs	r2, #0
 1941 01f2 83F82020 		strb	r2, [r3, #32]
1336:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1337:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         return HAL_TIMEOUT;
 1942              		.loc 1 1337 16
 1943 01f6 0323     		movs	r3, #3
 1944 01f8 37E0     		b	.L50
 1945              	.L59:
1325:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
ARM GAS  /tmp/ccXWJXxY.s 			page 59


 1946              		.loc 1 1325 12
 1947 01fa FB68     		ldr	r3, [r7, #12]
 1948 01fc 1B68     		ldr	r3, [r3]
 1949 01fe DB68     		ldr	r3, [r3, #12]
 1950 0200 03F00203 		and	r3, r3, #2
1325:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 1951              		.loc 1 1325 11
 1952 0204 002B     		cmp	r3, #0
 1953 0206 E2D0     		beq	.L60
1338:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1339:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1340:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
1341:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1342:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->ALRMBR = (uint32_t)tmpreg;
 1954              		.loc 1 1342 9
 1955 0208 FB68     		ldr	r3, [r7, #12]
 1956 020a 1B68     		ldr	r3, [r3]
 1957              		.loc 1 1342 28
 1958 020c FA69     		ldr	r2, [r7, #28]
 1959 020e 1A62     		str	r2, [r3, #32]
1343:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm B Sub Second register */
1344:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->ALRMBSSR = subsecondtmpreg;
 1960              		.loc 1 1344 9
 1961 0210 FB68     		ldr	r3, [r7, #12]
 1962 0212 1B68     		ldr	r3, [r3]
 1963              		.loc 1 1344 30
 1964 0214 BA69     		ldr	r2, [r7, #24]
 1965 0216 9A64     		str	r2, [r3, #72]
1345:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm state: Enable Alarm */
1346:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARMB_ENABLE(hrtc);
 1966              		.loc 1 1346 5
 1967 0218 FB68     		ldr	r3, [r7, #12]
 1968 021a 1B68     		ldr	r3, [r3]
 1969 021c 9A68     		ldr	r2, [r3, #8]
 1970 021e FB68     		ldr	r3, [r7, #12]
 1971 0220 1B68     		ldr	r3, [r3]
 1972 0222 42F40072 		orr	r2, r2, #512
 1973 0226 9A60     		str	r2, [r3, #8]
1347:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
1348:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARM_ENABLE_IT(hrtc, RTC_IT_ALRB);
 1974              		.loc 1 1348 5
 1975 0228 FB68     		ldr	r3, [r7, #12]
 1976 022a 1B68     		ldr	r3, [r3]
 1977 022c 9A68     		ldr	r2, [r3, #8]
 1978 022e FB68     		ldr	r3, [r7, #12]
 1979 0230 1B68     		ldr	r3, [r3]
 1980 0232 42F40052 		orr	r2, r2, #8192
 1981 0236 9A60     		str	r2, [r3, #8]
 1982              	.L58:
 1983              	.LBE5:
1349:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1350:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1351:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* RTC Alarm Interrupt Configuration: EXTI configuration */
1352:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_ENABLE_IT();
 1984              		.loc 1 1352 3
 1985 0238 0E4B     		ldr	r3, .L61
 1986 023a 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccXWJXxY.s 			page 60


 1987 023c 0D4A     		ldr	r2, .L61
 1988 023e 43F48023 		orr	r3, r3, #262144
 1989 0242 1360     		str	r3, [r2]
1353:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_ENABLE_RISING_EDGE();
 1990              		.loc 1 1353 3
 1991 0244 0B4B     		ldr	r3, .L61
 1992 0246 9B68     		ldr	r3, [r3, #8]
 1993 0248 0A4A     		ldr	r2, .L61
 1994 024a 43F48023 		orr	r3, r3, #262144
 1995 024e 9360     		str	r3, [r2, #8]
1354:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1355:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
1356:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 1996              		.loc 1 1356 3
 1997 0250 FB68     		ldr	r3, [r7, #12]
 1998 0252 1B68     		ldr	r3, [r3]
 1999 0254 FF22     		movs	r2, #255
 2000 0256 5A62     		str	r2, [r3, #36]
1357:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1358:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2001              		.loc 1 1358 15
 2002 0258 FB68     		ldr	r3, [r7, #12]
 2003 025a 0122     		movs	r2, #1
 2004 025c 83F82120 		strb	r2, [r3, #33]
1359:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1360:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Unlocked */
1361:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 2005              		.loc 1 1361 3
 2006 0260 FB68     		ldr	r3, [r7, #12]
 2007 0262 0022     		movs	r2, #0
 2008 0264 83F82020 		strb	r2, [r3, #32]
1362:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1363:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
 2009              		.loc 1 1363 10
 2010 0268 0023     		movs	r3, #0
 2011              	.L50:
1364:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 2012              		.loc 1 1364 1
 2013 026a 1846     		mov	r0, r3
 2014 026c 2437     		adds	r7, r7, #36
 2015              	.LCFI50:
 2016              		.cfi_def_cfa_offset 12
 2017 026e BD46     		mov	sp, r7
 2018              	.LCFI51:
 2019              		.cfi_def_cfa_register 13
 2020              		@ sp needed
 2021 0270 90BD     		pop	{r4, r7, pc}
 2022              	.L62:
 2023 0272 00BF     		.align	2
 2024              	.L61:
 2025 0274 00040140 		.word	1073808384
 2026              		.cfi_endproc
 2027              	.LFE322:
 2029              		.section	.text.HAL_RTC_DeactivateAlarm,"ax",%progbits
 2030              		.align	1
 2031              		.global	HAL_RTC_DeactivateAlarm
 2032              		.syntax unified
ARM GAS  /tmp/ccXWJXxY.s 			page 61


 2033              		.thumb
 2034              		.thumb_func
 2035              		.fpu fpv4-sp-d16
 2037              	HAL_RTC_DeactivateAlarm:
 2038              	.LFB323:
1365:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1366:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1367:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Deactivate the specified RTC Alarm.
1368:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
1369:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Alarm Specifies the Alarm.
1370:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1371:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_ALARM_A:  AlarmA
1372:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *            @arg RTC_ALARM_B:  AlarmB
1373:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
1374:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1375:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_DeactivateAlarm(RTC_HandleTypeDef *hrtc, uint32_t Alarm)
1376:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 2039              		.loc 1 1376 1
 2040              		.cfi_startproc
 2041              		@ args = 0, pretend = 0, frame = 16
 2042              		@ frame_needed = 1, uses_anonymous_args = 0
 2043 0000 80B5     		push	{r7, lr}
 2044              	.LCFI52:
 2045              		.cfi_def_cfa_offset 8
 2046              		.cfi_offset 7, -8
 2047              		.cfi_offset 14, -4
 2048 0002 84B0     		sub	sp, sp, #16
 2049              	.LCFI53:
 2050              		.cfi_def_cfa_offset 24
 2051 0004 00AF     		add	r7, sp, #0
 2052              	.LCFI54:
 2053              		.cfi_def_cfa_register 7
 2054 0006 7860     		str	r0, [r7, #4]
 2055 0008 3960     		str	r1, [r7]
1377:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters */
1378:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(Alarm));
1379:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1380:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Locked */
1381:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 2056              		.loc 1 1381 3
 2057 000a 7B68     		ldr	r3, [r7, #4]
 2058 000c 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 2059 0010 012B     		cmp	r3, #1
 2060 0012 01D1     		bne	.L64
 2061              		.loc 1 1381 3 is_stmt 0 discriminator 1
 2062 0014 0223     		movs	r3, #2
 2063 0016 83E0     		b	.L65
 2064              	.L64:
 2065              		.loc 1 1381 3 discriminator 2
 2066 0018 7B68     		ldr	r3, [r7, #4]
 2067 001a 0122     		movs	r2, #1
 2068 001c 83F82020 		strb	r2, [r3, #32]
1382:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1383:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 2069              		.loc 1 1383 15 is_stmt 1 discriminator 2
 2070 0020 7B68     		ldr	r3, [r7, #4]
 2071 0022 0222     		movs	r2, #2
ARM GAS  /tmp/ccXWJXxY.s 			page 62


 2072 0024 83F82120 		strb	r2, [r3, #33]
1384:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1385:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
1386:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
 2073              		.loc 1 1386 3 discriminator 2
 2074 0028 7B68     		ldr	r3, [r7, #4]
 2075 002a 1B68     		ldr	r3, [r3]
 2076 002c CA22     		movs	r2, #202
 2077 002e 5A62     		str	r2, [r3, #36]
 2078 0030 7B68     		ldr	r3, [r7, #4]
 2079 0032 1B68     		ldr	r3, [r3]
 2080 0034 5322     		movs	r2, #83
 2081 0036 5A62     		str	r2, [r3, #36]
1387:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1388:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (Alarm == RTC_ALARM_A)
 2082              		.loc 1 1388 6 discriminator 2
 2083 0038 3B68     		ldr	r3, [r7]
 2084 003a B3F5807F 		cmp	r3, #256
 2085 003e 31D1     		bne	.L66
 2086              	.LBB6:
1389:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1390:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* AlarmA */
1391:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARMA_DISABLE(hrtc);
 2087              		.loc 1 1391 5
 2088 0040 7B68     		ldr	r3, [r7, #4]
 2089 0042 1B68     		ldr	r3, [r3]
 2090 0044 9A68     		ldr	r2, [r3, #8]
 2091 0046 7B68     		ldr	r3, [r7, #4]
 2092 0048 1B68     		ldr	r3, [r3]
 2093 004a 22F48072 		bic	r2, r2, #256
 2094 004e 9A60     		str	r2, [r3, #8]
1392:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1393:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */
1394:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRA);
 2095              		.loc 1 1394 5
 2096 0050 7B68     		ldr	r3, [r7, #4]
 2097 0052 1B68     		ldr	r3, [r3]
 2098 0054 9A68     		ldr	r2, [r3, #8]
 2099 0056 7B68     		ldr	r3, [r7, #4]
 2100 0058 1B68     		ldr	r3, [r3]
 2101 005a 22F48052 		bic	r2, r2, #4096
 2102 005e 9A60     		str	r2, [r3, #8]
1395:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1396:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (RTC_FLAG_ALRAWF)
1397:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     uint32_t tickstart = HAL_GetTick();
 2103              		.loc 1 1397 26
 2104 0060 FFF7FEFF 		bl	HAL_GetTick
 2105 0064 B860     		str	r0, [r7, #8]
1398:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRxWF flag is set and if Time out is reached exit */
1399:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAWF) == 0U)
 2106              		.loc 1 1399 11
 2107 0066 15E0     		b	.L67
 2108              	.L68:
1400:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1401:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if ((HAL_GetTick()  - tickstart) > RTC_TIMEOUT_VALUE)
 2109              		.loc 1 1401 12
 2110 0068 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccXWJXxY.s 			page 63


 2111 006c 0246     		mov	r2, r0
 2112              		.loc 1 1401 27
 2113 006e BB68     		ldr	r3, [r7, #8]
 2114 0070 D31A     		subs	r3, r2, r3
 2115              		.loc 1 1401 10
 2116 0072 B3F57A7F 		cmp	r3, #1000
 2117 0076 0DD9     		bls	.L67
1402:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1403:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
1404:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2118              		.loc 1 1404 9
 2119 0078 7B68     		ldr	r3, [r7, #4]
 2120 007a 1B68     		ldr	r3, [r3]
 2121 007c FF22     		movs	r2, #255
 2122 007e 5A62     		str	r2, [r3, #36]
1405:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1406:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2123              		.loc 1 1406 21
 2124 0080 7B68     		ldr	r3, [r7, #4]
 2125 0082 0322     		movs	r2, #3
 2126 0084 83F82120 		strb	r2, [r3, #33]
1407:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1408:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Process Unlocked */
1409:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
 2127              		.loc 1 1409 9
 2128 0088 7B68     		ldr	r3, [r7, #4]
 2129 008a 0022     		movs	r2, #0
 2130 008c 83F82020 		strb	r2, [r3, #32]
1410:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1411:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         return HAL_TIMEOUT;
 2131              		.loc 1 1411 16
 2132 0090 0323     		movs	r3, #3
 2133 0092 45E0     		b	.L65
 2134              	.L67:
1399:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 2135              		.loc 1 1399 12
 2136 0094 7B68     		ldr	r3, [r7, #4]
 2137 0096 1B68     		ldr	r3, [r3]
 2138 0098 DB68     		ldr	r3, [r3, #12]
 2139 009a 03F00103 		and	r3, r3, #1
1399:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 2140              		.loc 1 1399 11
 2141 009e 002B     		cmp	r3, #0
 2142 00a0 E2D0     		beq	.L68
 2143 00a2 30E0     		b	.L69
 2144              	.L66:
 2145              	.LBE6:
 2146              	.LBB7:
1412:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1413:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1414:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
1415:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1416:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
1417:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1418:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* AlarmB */
1419:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARMB_DISABLE(hrtc);
 2147              		.loc 1 1419 5
ARM GAS  /tmp/ccXWJXxY.s 			page 64


 2148 00a4 7B68     		ldr	r3, [r7, #4]
 2149 00a6 1B68     		ldr	r3, [r3]
 2150 00a8 9A68     		ldr	r2, [r3, #8]
 2151 00aa 7B68     		ldr	r3, [r7, #4]
 2152 00ac 1B68     		ldr	r3, [r3]
 2153 00ae 22F40072 		bic	r2, r2, #512
 2154 00b2 9A60     		str	r2, [r3, #8]
1420:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1421:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* In case of interrupt mode is used, the interrupt source must disabled */
1422:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRB);
 2155              		.loc 1 1422 5
 2156 00b4 7B68     		ldr	r3, [r7, #4]
 2157 00b6 1B68     		ldr	r3, [r3]
 2158 00b8 9A68     		ldr	r2, [r3, #8]
 2159 00ba 7B68     		ldr	r3, [r7, #4]
 2160 00bc 1B68     		ldr	r3, [r3]
 2161 00be 22F40052 		bic	r2, r2, #8192
 2162 00c2 9A60     		str	r2, [r3, #8]
1423:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1424:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined (RTC_FLAG_ALRBWF)
1425:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     uint32_t tickstart = HAL_GetTick();
 2163              		.loc 1 1425 26
 2164 00c4 FFF7FEFF 		bl	HAL_GetTick
 2165 00c8 F860     		str	r0, [r7, #12]
1426:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC ALRBWF flag is set and if Time out is reached exit */
1427:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBWF) == 0U)
 2166              		.loc 1 1427 11
 2167 00ca 15E0     		b	.L70
 2168              	.L71:
1428:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1429:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 2169              		.loc 1 1429 12
 2170 00cc FFF7FEFF 		bl	HAL_GetTick
 2171 00d0 0246     		mov	r2, r0
 2172              		.loc 1 1429 26
 2173 00d2 FB68     		ldr	r3, [r7, #12]
 2174 00d4 D31A     		subs	r3, r2, r3
 2175              		.loc 1 1429 10
 2176 00d6 B3F57A7F 		cmp	r3, #1000
 2177 00da 0DD9     		bls	.L70
1430:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1431:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Enable the write protection for RTC registers */
1432:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2178              		.loc 1 1432 9
 2179 00dc 7B68     		ldr	r3, [r7, #4]
 2180 00de 1B68     		ldr	r3, [r3]
 2181 00e0 FF22     		movs	r2, #255
 2182 00e2 5A62     		str	r2, [r3, #36]
1433:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1434:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2183              		.loc 1 1434 21
 2184 00e4 7B68     		ldr	r3, [r7, #4]
 2185 00e6 0322     		movs	r2, #3
 2186 00e8 83F82120 		strb	r2, [r3, #33]
1435:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1436:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         /* Process Unlocked */
1437:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         __HAL_UNLOCK(hrtc);
ARM GAS  /tmp/ccXWJXxY.s 			page 65


 2187              		.loc 1 1437 9
 2188 00ec 7B68     		ldr	r3, [r7, #4]
 2189 00ee 0022     		movs	r2, #0
 2190 00f0 83F82020 		strb	r2, [r3, #32]
1438:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1439:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         return HAL_TIMEOUT;
 2191              		.loc 1 1439 16
 2192 00f4 0323     		movs	r3, #3
 2193 00f6 13E0     		b	.L65
 2194              	.L70:
1427:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 2195              		.loc 1 1427 12
 2196 00f8 7B68     		ldr	r3, [r7, #4]
 2197 00fa 1B68     		ldr	r3, [r3]
 2198 00fc DB68     		ldr	r3, [r3, #12]
 2199 00fe 03F00203 		and	r3, r3, #2
1427:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 2200              		.loc 1 1427 11
 2201 0102 002B     		cmp	r3, #0
 2202 0104 E2D0     		beq	.L71
 2203              	.L69:
 2204              	.LBE7:
1440:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1441:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1442:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
1443:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1444:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Enable the write protection for RTC registers */
1445:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
 2205              		.loc 1 1445 3
 2206 0106 7B68     		ldr	r3, [r7, #4]
 2207 0108 1B68     		ldr	r3, [r3]
 2208 010a FF22     		movs	r2, #255
 2209 010c 5A62     		str	r2, [r3, #36]
1446:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1447:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2210              		.loc 1 1447 15
 2211 010e 7B68     		ldr	r3, [r7, #4]
 2212 0110 0122     		movs	r2, #1
 2213 0112 83F82120 		strb	r2, [r3, #33]
1448:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1449:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Process Unlocked */
1450:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 2214              		.loc 1 1450 3
 2215 0116 7B68     		ldr	r3, [r7, #4]
 2216 0118 0022     		movs	r2, #0
 2217 011a 83F82020 		strb	r2, [r3, #32]
1451:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1452:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
 2218              		.loc 1 1452 10
 2219 011e 0023     		movs	r3, #0
 2220              	.L65:
1453:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 2221              		.loc 1 1453 1
 2222 0120 1846     		mov	r0, r3
 2223 0122 1037     		adds	r7, r7, #16
 2224              	.LCFI55:
 2225              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/ccXWJXxY.s 			page 66


 2226 0124 BD46     		mov	sp, r7
 2227              	.LCFI56:
 2228              		.cfi_def_cfa_register 13
 2229              		@ sp needed
 2230 0126 80BD     		pop	{r7, pc}
 2231              		.cfi_endproc
 2232              	.LFE323:
 2234              		.section	.text.HAL_RTC_GetAlarm,"ax",%progbits
 2235              		.align	1
 2236              		.global	HAL_RTC_GetAlarm
 2237              		.syntax unified
 2238              		.thumb
 2239              		.thumb_func
 2240              		.fpu fpv4-sp-d16
 2242              	HAL_RTC_GetAlarm:
 2243              	.LFB324:
1454:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1455:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1456:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Get the RTC Alarm value and masks.
1457:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
1458:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  sAlarm Pointer to Date structure
1459:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Alarm Specifies the Alarm.
1460:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1461:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_ALARM_A: AlarmA
1462:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_ALARM_B: AlarmB
1463:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Format Specifies the format of the entered parameters.
1464:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1465:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format
1466:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
1467:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
1468:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1469:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetAlarm(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t Alar
1470:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 2244              		.loc 1 1470 1
 2245              		.cfi_startproc
 2246              		@ args = 0, pretend = 0, frame = 24
 2247              		@ frame_needed = 1, uses_anonymous_args = 0
 2248 0000 80B5     		push	{r7, lr}
 2249              	.LCFI57:
 2250              		.cfi_def_cfa_offset 8
 2251              		.cfi_offset 7, -8
 2252              		.cfi_offset 14, -4
 2253 0002 86B0     		sub	sp, sp, #24
 2254              	.LCFI58:
 2255              		.cfi_def_cfa_offset 32
 2256 0004 00AF     		add	r7, sp, #0
 2257              	.LCFI59:
 2258              		.cfi_def_cfa_register 7
 2259 0006 F860     		str	r0, [r7, #12]
 2260 0008 B960     		str	r1, [r7, #8]
 2261 000a 7A60     		str	r2, [r7, #4]
 2262 000c 3B60     		str	r3, [r7]
1471:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmpreg, subsecondtmpreg;
1472:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1473:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check the parameters */
1474:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1475:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(Alarm));
ARM GAS  /tmp/ccXWJXxY.s 			page 67


1476:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1477:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (Alarm == RTC_ALARM_A)
 2263              		.loc 1 1477 6
 2264 000e 7B68     		ldr	r3, [r7, #4]
 2265 0010 B3F5807F 		cmp	r3, #256
 2266 0014 43D1     		bne	.L73
1478:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1479:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* AlarmA */
1480:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->Alarm = RTC_ALARM_A;
 2267              		.loc 1 1480 19
 2268 0016 BB68     		ldr	r3, [r7, #8]
 2269 0018 4FF48072 		mov	r2, #256
 2270 001c 5A62     		str	r2, [r3, #36]
1481:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1482:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     tmpreg = (uint32_t)(hrtc->Instance->ALRMAR);
 2271              		.loc 1 1482 29
 2272 001e FB68     		ldr	r3, [r7, #12]
 2273 0020 1B68     		ldr	r3, [r3]
 2274              		.loc 1 1482 12
 2275 0022 DB69     		ldr	r3, [r3, #28]
 2276 0024 7B61     		str	r3, [r7, #20]
1483:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMASSR) & RTC_ALRMASSR_SS);
 2277              		.loc 1 1483 39
 2278 0026 FB68     		ldr	r3, [r7, #12]
 2279 0028 1B68     		ldr	r3, [r3]
 2280              		.loc 1 1483 49
 2281 002a 5B6C     		ldr	r3, [r3, #68]
 2282              		.loc 1 1483 21
 2283 002c C3F30E03 		ubfx	r3, r3, #0, #15
 2284 0030 3B61     		str	r3, [r7, #16]
1484:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1485:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Fill the structure with the read parameters */
1486:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Hours = (uint8_t)((tmpreg & (RTC_ALRMAR_HT | RTC_ALRMAR_HU)) >> RTC_ALRMAR_HU
 2285              		.loc 1 1486 84
 2286 0032 7B69     		ldr	r3, [r7, #20]
 2287 0034 1B0C     		lsrs	r3, r3, #16
 2288              		.loc 1 1486 31
 2289 0036 DBB2     		uxtb	r3, r3
 2290 0038 03F03F03 		and	r3, r3, #63
 2291 003c DAB2     		uxtb	r2, r3
 2292              		.loc 1 1486 29
 2293 003e BB68     		ldr	r3, [r7, #8]
 2294 0040 1A70     		strb	r2, [r3]
1487:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = (uint8_t)((tmpreg & (RTC_ALRMAR_MNT | RTC_ALRMAR_MNU)) >> RTC_ALRMA
 2295              		.loc 1 1487 88
 2296 0042 7B69     		ldr	r3, [r7, #20]
 2297 0044 1B0A     		lsrs	r3, r3, #8
 2298              		.loc 1 1487 33
 2299 0046 DBB2     		uxtb	r3, r3
 2300 0048 03F07F03 		and	r3, r3, #127
 2301 004c DAB2     		uxtb	r2, r3
 2302              		.loc 1 1487 31
 2303 004e BB68     		ldr	r3, [r7, #8]
 2304 0050 5A70     		strb	r2, [r3, #1]
1488:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = (uint8_t)((tmpreg & (RTC_ALRMAR_ST | RTC_ALRMAR_SU)) >> RTC_ALRMAR_
 2305              		.loc 1 1488 33
 2306 0052 7B69     		ldr	r3, [r7, #20]
ARM GAS  /tmp/ccXWJXxY.s 			page 68


 2307 0054 DBB2     		uxtb	r3, r3
 2308 0056 03F07F03 		and	r3, r3, #127
 2309 005a DAB2     		uxtb	r2, r3
 2310              		.loc 1 1488 31
 2311 005c BB68     		ldr	r3, [r7, #8]
 2312 005e 9A70     		strb	r2, [r3, #2]
1489:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.TimeFormat = (uint8_t)((tmpreg & RTC_ALRMAR_PM) >> RTC_ALRMAR_PM_Pos);
 2313              		.loc 1 1489 71
 2314 0060 7B69     		ldr	r3, [r7, #20]
 2315 0062 9B0D     		lsrs	r3, r3, #22
 2316              		.loc 1 1489 36
 2317 0064 DBB2     		uxtb	r3, r3
 2318 0066 03F00103 		and	r3, r3, #1
 2319 006a DAB2     		uxtb	r2, r3
 2320              		.loc 1 1489 34
 2321 006c BB68     		ldr	r3, [r7, #8]
 2322 006e DA70     		strb	r2, [r3, #3]
1490:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.SubSeconds = (uint32_t) subsecondtmpreg;
 2323              		.loc 1 1490 34
 2324 0070 BB68     		ldr	r3, [r7, #8]
 2325 0072 3A69     		ldr	r2, [r7, #16]
 2326 0074 5A60     		str	r2, [r3, #4]
1491:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDay = (uint8_t)((tmpreg & (RTC_ALRMAR_DT | RTC_ALRMAR_DU)) >> RTC_ALRMAR_D
 2327              		.loc 1 1491 85
 2328 0076 7B69     		ldr	r3, [r7, #20]
 2329 0078 1B0E     		lsrs	r3, r3, #24
 2330              		.loc 1 1491 32
 2331 007a DBB2     		uxtb	r3, r3
 2332 007c 03F03F03 		and	r3, r3, #63
 2333 0080 DAB2     		uxtb	r2, r3
 2334              		.loc 1 1491 30
 2335 0082 BB68     		ldr	r3, [r7, #8]
 2336 0084 83F82020 		strb	r2, [r3, #32]
1492:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMAR_WDSEL);
 2337              		.loc 1 1492 35
 2338 0088 7B69     		ldr	r3, [r7, #20]
 2339 008a 03F08042 		and	r2, r3, #1073741824
 2340              		.loc 1 1492 33
 2341 008e BB68     		ldr	r3, [r7, #8]
 2342 0090 DA61     		str	r2, [r3, #28]
1493:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmMask = (uint32_t)(tmpreg & RTC_ALARMMASK_ALL);
 2343              		.loc 1 1493 25
 2344 0092 7B69     		ldr	r3, [r7, #20]
 2345 0094 03F08032 		and	r2, r3, #-2139062144
 2346              		.loc 1 1493 23
 2347 0098 BB68     		ldr	r3, [r7, #8]
 2348 009a 5A61     		str	r2, [r3, #20]
 2349 009c 42E0     		b	.L74
 2350              	.L73:
1494:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1495:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else
1496:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1497:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->Alarm = RTC_ALARM_B;
 2351              		.loc 1 1497 19
 2352 009e BB68     		ldr	r3, [r7, #8]
 2353 00a0 4FF40072 		mov	r2, #512
 2354 00a4 5A62     		str	r2, [r3, #36]
ARM GAS  /tmp/ccXWJXxY.s 			page 69


1498:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1499:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     tmpreg = (uint32_t)(hrtc->Instance->ALRMBR);
 2355              		.loc 1 1499 29
 2356 00a6 FB68     		ldr	r3, [r7, #12]
 2357 00a8 1B68     		ldr	r3, [r3]
 2358              		.loc 1 1499 12
 2359 00aa 1B6A     		ldr	r3, [r3, #32]
 2360 00ac 7B61     		str	r3, [r7, #20]
1500:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     subsecondtmpreg = (uint32_t)((hrtc->Instance->ALRMBSSR) & RTC_ALRMBSSR_SS);
 2361              		.loc 1 1500 39
 2362 00ae FB68     		ldr	r3, [r7, #12]
 2363 00b0 1B68     		ldr	r3, [r3]
 2364              		.loc 1 1500 49
 2365 00b2 9B6C     		ldr	r3, [r3, #72]
 2366              		.loc 1 1500 21
 2367 00b4 C3F30E03 		ubfx	r3, r3, #0, #15
 2368 00b8 3B61     		str	r3, [r7, #16]
1501:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1502:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Fill the structure with the read parameters */
1503:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Hours = (uint8_t)((tmpreg & (RTC_ALRMBR_HT | RTC_ALRMBR_HU)) >> RTC_ALRMBR_HU
 2369              		.loc 1 1503 84
 2370 00ba 7B69     		ldr	r3, [r7, #20]
 2371 00bc 1B0C     		lsrs	r3, r3, #16
 2372              		.loc 1 1503 31
 2373 00be DBB2     		uxtb	r3, r3
 2374 00c0 03F03F03 		and	r3, r3, #63
 2375 00c4 DAB2     		uxtb	r2, r3
 2376              		.loc 1 1503 29
 2377 00c6 BB68     		ldr	r3, [r7, #8]
 2378 00c8 1A70     		strb	r2, [r3]
1504:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = (uint8_t)((tmpreg & (RTC_ALRMBR_MNT | RTC_ALRMBR_MNU)) >> RTC_ALRMB
 2379              		.loc 1 1504 88
 2380 00ca 7B69     		ldr	r3, [r7, #20]
 2381 00cc 1B0A     		lsrs	r3, r3, #8
 2382              		.loc 1 1504 33
 2383 00ce DBB2     		uxtb	r3, r3
 2384 00d0 03F07F03 		and	r3, r3, #127
 2385 00d4 DAB2     		uxtb	r2, r3
 2386              		.loc 1 1504 31
 2387 00d6 BB68     		ldr	r3, [r7, #8]
 2388 00d8 5A70     		strb	r2, [r3, #1]
1505:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = (uint8_t)((tmpreg & (RTC_ALRMBR_ST | RTC_ALRMBR_SU)) >> RTC_ALRMBR_
 2389              		.loc 1 1505 33
 2390 00da 7B69     		ldr	r3, [r7, #20]
 2391 00dc DBB2     		uxtb	r3, r3
 2392 00de 03F07F03 		and	r3, r3, #127
 2393 00e2 DAB2     		uxtb	r2, r3
 2394              		.loc 1 1505 31
 2395 00e4 BB68     		ldr	r3, [r7, #8]
 2396 00e6 9A70     		strb	r2, [r3, #2]
1506:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.TimeFormat = (uint8_t)((tmpreg & RTC_ALRMBR_PM) >> RTC_ALRMBR_PM_Pos);
 2397              		.loc 1 1506 71
 2398 00e8 7B69     		ldr	r3, [r7, #20]
 2399 00ea 9B0D     		lsrs	r3, r3, #22
 2400              		.loc 1 1506 36
 2401 00ec DBB2     		uxtb	r3, r3
 2402 00ee 03F00103 		and	r3, r3, #1
ARM GAS  /tmp/ccXWJXxY.s 			page 70


 2403 00f2 DAB2     		uxtb	r2, r3
 2404              		.loc 1 1506 34
 2405 00f4 BB68     		ldr	r3, [r7, #8]
 2406 00f6 DA70     		strb	r2, [r3, #3]
1507:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.SubSeconds = (uint32_t) subsecondtmpreg;
 2407              		.loc 1 1507 34
 2408 00f8 BB68     		ldr	r3, [r7, #8]
 2409 00fa 3A69     		ldr	r2, [r7, #16]
 2410 00fc 5A60     		str	r2, [r3, #4]
1508:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDay = (uint8_t)((tmpreg & (RTC_ALRMBR_DT | RTC_ALRMBR_DU)) >> RTC_ALRMBR_D
 2411              		.loc 1 1508 85
 2412 00fe 7B69     		ldr	r3, [r7, #20]
 2413 0100 1B0E     		lsrs	r3, r3, #24
 2414              		.loc 1 1508 32
 2415 0102 DBB2     		uxtb	r3, r3
 2416 0104 03F03F03 		and	r3, r3, #63
 2417 0108 DAB2     		uxtb	r2, r3
 2418              		.loc 1 1508 30
 2419 010a BB68     		ldr	r3, [r7, #8]
 2420 010c 83F82020 		strb	r2, [r3, #32]
1509:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDaySel = (uint32_t)(tmpreg & RTC_ALRMBR_WDSEL);
 2421              		.loc 1 1509 35
 2422 0110 7B69     		ldr	r3, [r7, #20]
 2423 0112 03F08042 		and	r2, r3, #1073741824
 2424              		.loc 1 1509 33
 2425 0116 BB68     		ldr	r3, [r7, #8]
 2426 0118 DA61     		str	r2, [r3, #28]
1510:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmMask = (uint32_t)(tmpreg & RTC_ALARMMASK_ALL);
 2427              		.loc 1 1510 25
 2428 011a 7B69     		ldr	r3, [r7, #20]
 2429 011c 03F08032 		and	r2, r3, #-2139062144
 2430              		.loc 1 1510 23
 2431 0120 BB68     		ldr	r3, [r7, #8]
 2432 0122 5A61     		str	r2, [r3, #20]
 2433              	.L74:
1511:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1512:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1513:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (Format == RTC_FORMAT_BIN)
 2434              		.loc 1 1513 6
 2435 0124 3B68     		ldr	r3, [r7]
 2436 0126 002B     		cmp	r3, #0
 2437 0128 25D1     		bne	.L75
1514:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1515:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Hours = RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours);
 2438              		.loc 1 1515 31
 2439 012a BB68     		ldr	r3, [r7, #8]
 2440 012c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2441 012e 1846     		mov	r0, r3
 2442 0130 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2443 0134 0346     		mov	r3, r0
 2444 0136 1A46     		mov	r2, r3
 2445              		.loc 1 1515 29
 2446 0138 BB68     		ldr	r3, [r7, #8]
 2447 013a 1A70     		strb	r2, [r3]
1516:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes);
 2448              		.loc 1 1516 33
 2449 013c BB68     		ldr	r3, [r7, #8]
ARM GAS  /tmp/ccXWJXxY.s 			page 71


 2450 013e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2451 0140 1846     		mov	r0, r3
 2452 0142 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2453 0146 0346     		mov	r3, r0
 2454 0148 1A46     		mov	r2, r3
 2455              		.loc 1 1516 31
 2456 014a BB68     		ldr	r3, [r7, #8]
 2457 014c 5A70     		strb	r2, [r3, #1]
1517:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds);
 2458              		.loc 1 1517 33
 2459 014e BB68     		ldr	r3, [r7, #8]
 2460 0150 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 2461 0152 1846     		mov	r0, r3
 2462 0154 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2463 0158 0346     		mov	r3, r0
 2464 015a 1A46     		mov	r2, r3
 2465              		.loc 1 1517 31
 2466 015c BB68     		ldr	r3, [r7, #8]
 2467 015e 9A70     		strb	r2, [r3, #2]
1518:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     sAlarm->AlarmDateWeekDay = RTC_Bcd2ToByte(sAlarm->AlarmDateWeekDay);
 2468              		.loc 1 1518 32
 2469 0160 BB68     		ldr	r3, [r7, #8]
 2470 0162 93F82030 		ldrb	r3, [r3, #32]	@ zero_extendqisi2
 2471 0166 1846     		mov	r0, r3
 2472 0168 FFF7FEFF 		bl	RTC_Bcd2ToByte
 2473 016c 0346     		mov	r3, r0
 2474 016e 1A46     		mov	r2, r3
 2475              		.loc 1 1518 30
 2476 0170 BB68     		ldr	r3, [r7, #8]
 2477 0172 83F82020 		strb	r2, [r3, #32]
 2478              	.L75:
1519:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1520:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1521:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
 2479              		.loc 1 1521 10
 2480 0176 0023     		movs	r3, #0
1522:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 2481              		.loc 1 1522 1
 2482 0178 1846     		mov	r0, r3
 2483 017a 1837     		adds	r7, r7, #24
 2484              	.LCFI60:
 2485              		.cfi_def_cfa_offset 8
 2486 017c BD46     		mov	sp, r7
 2487              	.LCFI61:
 2488              		.cfi_def_cfa_register 13
 2489              		@ sp needed
 2490 017e 80BD     		pop	{r7, pc}
 2491              		.cfi_endproc
 2492              	.LFE324:
 2494              		.section	.text.HAL_RTC_AlarmIRQHandler,"ax",%progbits
 2495              		.align	1
 2496              		.global	HAL_RTC_AlarmIRQHandler
 2497              		.syntax unified
 2498              		.thumb
 2499              		.thumb_func
 2500              		.fpu fpv4-sp-d16
 2502              	HAL_RTC_AlarmIRQHandler:
ARM GAS  /tmp/ccXWJXxY.s 			page 72


 2503              	.LFB325:
1523:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1524:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1525:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Handle Alarm interrupt request.
1526:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
1527:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval None
1528:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1529:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** void HAL_RTC_AlarmIRQHandler(RTC_HandleTypeDef *hrtc)
1530:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 2504              		.loc 1 1530 1
 2505              		.cfi_startproc
 2506              		@ args = 0, pretend = 0, frame = 8
 2507              		@ frame_needed = 1, uses_anonymous_args = 0
 2508 0000 80B5     		push	{r7, lr}
 2509              	.LCFI62:
 2510              		.cfi_def_cfa_offset 8
 2511              		.cfi_offset 7, -8
 2512              		.cfi_offset 14, -4
 2513 0002 82B0     		sub	sp, sp, #8
 2514              	.LCFI63:
 2515              		.cfi_def_cfa_offset 16
 2516 0004 00AF     		add	r7, sp, #0
 2517              	.LCFI64:
 2518              		.cfi_def_cfa_register 7
 2519 0006 7860     		str	r0, [r7, #4]
1531:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Clear the EXTI's line Flag for RTC Alarm */
1532:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_CLEAR_FLAG();
 2520              		.loc 1 1532 3
 2521 0008 1F4B     		ldr	r3, .L80
 2522 000a 4FF48022 		mov	r2, #262144
 2523 000e 5A61     		str	r2, [r3, #20]
1533:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1534:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx)
1535:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Get interrupt status */
1536:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tmp = hrtc->Instance->MISR;
1537:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1538:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if ((tmp & RTC_MISR_ALRAMF) != 0u)
1539:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1540:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear the AlarmA interrupt pending bit */
1541:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->SCR = RTC_SCR_CALRAF;
1542:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1543:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1544:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Call Compare Match registered Callback */
1545:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->AlarmAEventCallback(hrtc);
1546:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else  /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
1547:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     HAL_RTC_AlarmAEventCallback(hrtc);
1548:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* (USE_HAL_RTC_REGISTER_CALLBACKS == 1) */
1549:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1550:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1551:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if ((tmp & RTC_MISR_ALRBMF) != 0u)
1552:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1553:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear the AlarmB interrupt pending bit */
1554:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->SCR = RTC_SCR_CALRBF;
1555:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1556:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1557:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Call Compare Match registered Callback */
1558:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->AlarmBEventCallback(hrtc);
ARM GAS  /tmp/ccXWJXxY.s 			page 73


1559:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else
1560:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     HAL_RTCEx_AlarmBEventCallback(hrtc);
1561:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
1562:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1563:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1564:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else /* #if defined(STM32L412xx) || defined(STM32L422xx) */
1565:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1566:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Get the AlarmA interrupt source enable status */
1567:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (__HAL_RTC_ALARM_GET_IT_SOURCE(hrtc, RTC_IT_ALRA) != 0U)
 2524              		.loc 1 1567 7
 2525 0010 7B68     		ldr	r3, [r7, #4]
 2526 0012 1B68     		ldr	r3, [r3]
 2527 0014 9B68     		ldr	r3, [r3, #8]
 2528 0016 03F48053 		and	r3, r3, #4096
 2529              		.loc 1 1567 6
 2530 001a 002B     		cmp	r3, #0
 2531 001c 12D0     		beq	.L78
1568:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1569:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Get the pending status of the AlarmA Interrupt */
1570:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAF) != 0U)
 2532              		.loc 1 1570 9
 2533 001e 7B68     		ldr	r3, [r7, #4]
 2534 0020 1B68     		ldr	r3, [r3]
 2535 0022 DB68     		ldr	r3, [r3, #12]
 2536 0024 03F48073 		and	r3, r3, #256
 2537              		.loc 1 1570 8
 2538 0028 002B     		cmp	r3, #0
 2539 002a 0BD0     		beq	.L78
1571:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1572:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Clear the AlarmA interrupt pending bit */
1573:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
 2540              		.loc 1 1573 7
 2541 002c 7B68     		ldr	r3, [r7, #4]
 2542 002e 1B68     		ldr	r3, [r3]
 2543 0030 DB68     		ldr	r3, [r3, #12]
 2544 0032 DAB2     		uxtb	r2, r3
 2545 0034 7B68     		ldr	r3, [r7, #4]
 2546 0036 1B68     		ldr	r3, [r3]
 2547 0038 62F4C072 		orn	r2, r2, #384
 2548 003c DA60     		str	r2, [r3, #12]
1574:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1575:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1576:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->AlarmAEventCallback(hrtc);
1577:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else
1578:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       HAL_RTC_AlarmAEventCallback(hrtc);
 2549              		.loc 1 1578 7
 2550 003e 7868     		ldr	r0, [r7, #4]
 2551 0040 FFF7FEFF 		bl	HAL_RTC_AlarmAEventCallback
 2552              	.L78:
1579:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
1580:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1581:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1582:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1583:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Get the AlarmB interrupt source enable status */
1584:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (__HAL_RTC_ALARM_GET_IT_SOURCE(hrtc, RTC_IT_ALRB) != 0U)
 2553              		.loc 1 1584 7
 2554 0044 7B68     		ldr	r3, [r7, #4]
ARM GAS  /tmp/ccXWJXxY.s 			page 74


 2555 0046 1B68     		ldr	r3, [r3]
 2556 0048 9B68     		ldr	r3, [r3, #8]
 2557 004a 03F40053 		and	r3, r3, #8192
 2558              		.loc 1 1584 6
 2559 004e 002B     		cmp	r3, #0
 2560 0050 12D0     		beq	.L79
1585:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1586:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Get the pending status of the AlarmB Interrupt */
1587:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRBF) != 0U)
 2561              		.loc 1 1587 9
 2562 0052 7B68     		ldr	r3, [r7, #4]
 2563 0054 1B68     		ldr	r3, [r3]
 2564 0056 DB68     		ldr	r3, [r3, #12]
 2565 0058 03F40073 		and	r3, r3, #512
 2566              		.loc 1 1587 8
 2567 005c 002B     		cmp	r3, #0
 2568 005e 0BD0     		beq	.L79
1588:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1589:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       /* Clear the AlarmB interrupt pending bit */
1590:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRBF);
 2569              		.loc 1 1590 7
 2570 0060 7B68     		ldr	r3, [r7, #4]
 2571 0062 1B68     		ldr	r3, [r3]
 2572 0064 DB68     		ldr	r3, [r3, #12]
 2573 0066 DAB2     		uxtb	r2, r3
 2574 0068 7B68     		ldr	r3, [r7, #4]
 2575 006a 1B68     		ldr	r3, [r3]
 2576 006c 62F42072 		orn	r2, r2, #640
 2577 0070 DA60     		str	r2, [r3, #12]
1591:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1592:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if (USE_HAL_RTC_REGISTER_CALLBACKS == 1)
1593:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->AlarmBEventCallback(hrtc);
1594:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else
1595:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       HAL_RTCEx_AlarmBEventCallback(hrtc);
 2578              		.loc 1 1595 7
 2579 0072 7868     		ldr	r0, [r7, #4]
 2580 0074 FFF7FEFF 		bl	HAL_RTCEx_AlarmBEventCallback
 2581              	.L79:
1596:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
1597:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1598:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1599:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* #if defined(STM32L412xx) || defined(STM32L422xx) */
1600:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1601:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Change RTC state */
1602:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2582              		.loc 1 1602 15
 2583 0078 7B68     		ldr	r3, [r7, #4]
 2584 007a 0122     		movs	r2, #1
 2585 007c 83F82120 		strb	r2, [r3, #33]
1603:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 2586              		.loc 1 1603 1
 2587 0080 00BF     		nop
 2588 0082 0837     		adds	r7, r7, #8
 2589              	.LCFI65:
 2590              		.cfi_def_cfa_offset 8
 2591 0084 BD46     		mov	sp, r7
 2592              	.LCFI66:
ARM GAS  /tmp/ccXWJXxY.s 			page 75


 2593              		.cfi_def_cfa_register 13
 2594              		@ sp needed
 2595 0086 80BD     		pop	{r7, pc}
 2596              	.L81:
 2597              		.align	2
 2598              	.L80:
 2599 0088 00040140 		.word	1073808384
 2600              		.cfi_endproc
 2601              	.LFE325:
 2603              		.section	.text.HAL_RTC_AlarmAEventCallback,"ax",%progbits
 2604              		.align	1
 2605              		.weak	HAL_RTC_AlarmAEventCallback
 2606              		.syntax unified
 2607              		.thumb
 2608              		.thumb_func
 2609              		.fpu fpv4-sp-d16
 2611              	HAL_RTC_AlarmAEventCallback:
 2612              	.LFB326:
1604:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1605:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1606:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Alarm A callback.
1607:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
1608:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval None
1609:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1610:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** __weak void HAL_RTC_AlarmAEventCallback(RTC_HandleTypeDef *hrtc)
1611:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 2613              		.loc 1 1611 1
 2614              		.cfi_startproc
 2615              		@ args = 0, pretend = 0, frame = 8
 2616              		@ frame_needed = 1, uses_anonymous_args = 0
 2617              		@ link register save eliminated.
 2618 0000 80B4     		push	{r7}
 2619              	.LCFI67:
 2620              		.cfi_def_cfa_offset 4
 2621              		.cfi_offset 7, -4
 2622 0002 83B0     		sub	sp, sp, #12
 2623              	.LCFI68:
 2624              		.cfi_def_cfa_offset 16
 2625 0004 00AF     		add	r7, sp, #0
 2626              	.LCFI69:
 2627              		.cfi_def_cfa_register 7
 2628 0006 7860     		str	r0, [r7, #4]
1612:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
1613:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   UNUSED(hrtc);
1614:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1615:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1616:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****             the HAL_RTC_AlarmAEventCallback could be implemented in the user file
1617:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****    */
1618:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 2629              		.loc 1 1618 1
 2630 0008 00BF     		nop
 2631 000a 0C37     		adds	r7, r7, #12
 2632              	.LCFI70:
 2633              		.cfi_def_cfa_offset 4
 2634 000c BD46     		mov	sp, r7
 2635              	.LCFI71:
 2636              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccXWJXxY.s 			page 76


 2637              		@ sp needed
 2638 000e 5DF8047B 		ldr	r7, [sp], #4
 2639              	.LCFI72:
 2640              		.cfi_restore 7
 2641              		.cfi_def_cfa_offset 0
 2642 0012 7047     		bx	lr
 2643              		.cfi_endproc
 2644              	.LFE326:
 2646              		.section	.text.HAL_RTC_PollForAlarmAEvent,"ax",%progbits
 2647              		.align	1
 2648              		.global	HAL_RTC_PollForAlarmAEvent
 2649              		.syntax unified
 2650              		.thumb
 2651              		.thumb_func
 2652              		.fpu fpv4-sp-d16
 2654              	HAL_RTC_PollForAlarmAEvent:
 2655              	.LFB327:
1619:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1620:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1621:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Handle AlarmA Polling request.
1622:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
1623:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Timeout Timeout duration
1624:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
1625:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1626:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_PollForAlarmAEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
1627:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 2656              		.loc 1 1627 1
 2657              		.cfi_startproc
 2658              		@ args = 0, pretend = 0, frame = 16
 2659              		@ frame_needed = 1, uses_anonymous_args = 0
 2660 0000 80B5     		push	{r7, lr}
 2661              	.LCFI73:
 2662              		.cfi_def_cfa_offset 8
 2663              		.cfi_offset 7, -8
 2664              		.cfi_offset 14, -4
 2665 0002 84B0     		sub	sp, sp, #16
 2666              	.LCFI74:
 2667              		.cfi_def_cfa_offset 24
 2668 0004 00AF     		add	r7, sp, #0
 2669              	.LCFI75:
 2670              		.cfi_def_cfa_register 7
 2671 0006 7860     		str	r0, [r7, #4]
 2672 0008 3960     		str	r1, [r7]
1628:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1629:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tickstart = HAL_GetTick();
 2673              		.loc 1 1629 24
 2674 000a FFF7FEFF 		bl	HAL_GetTick
 2675 000e F860     		str	r0, [r7, #12]
1630:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1631:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   while (__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAF) == 0U)
 2676              		.loc 1 1631 9
 2677 0010 14E0     		b	.L84
 2678              	.L87:
1632:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1633:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (Timeout != HAL_MAX_DELAY)
 2679              		.loc 1 1633 8
 2680 0012 3B68     		ldr	r3, [r7]
ARM GAS  /tmp/ccXWJXxY.s 			page 77


 2681 0014 B3F1FF3F 		cmp	r3, #-1
 2682 0018 10D0     		beq	.L84
1634:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1635:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 2683              		.loc 1 1635 13
 2684 001a FFF7FEFF 		bl	HAL_GetTick
 2685 001e 0246     		mov	r2, r0
 2686              		.loc 1 1635 27
 2687 0020 FB68     		ldr	r3, [r7, #12]
 2688 0022 D31A     		subs	r3, r2, r3
 2689              		.loc 1 1635 10
 2690 0024 3A68     		ldr	r2, [r7]
 2691 0026 9A42     		cmp	r2, r3
 2692 0028 02D3     		bcc	.L85
 2693              		.loc 1 1635 51 discriminator 1
 2694 002a 3B68     		ldr	r3, [r7]
 2695 002c 002B     		cmp	r3, #0
 2696 002e 05D1     		bne	.L84
 2697              	.L85:
1636:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1637:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2698              		.loc 1 1637 21
 2699 0030 7B68     		ldr	r3, [r7, #4]
 2700 0032 0322     		movs	r2, #3
 2701 0034 83F82120 		strb	r2, [r3, #33]
1638:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         return HAL_TIMEOUT;
 2702              		.loc 1 1638 16
 2703 0038 0323     		movs	r3, #3
 2704 003a 14E0     		b	.L86
 2705              	.L84:
1631:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 2706              		.loc 1 1631 10
 2707 003c 7B68     		ldr	r3, [r7, #4]
 2708 003e 1B68     		ldr	r3, [r3]
 2709 0040 DB68     		ldr	r3, [r3, #12]
 2710 0042 03F48073 		and	r3, r3, #256
1631:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 2711              		.loc 1 1631 9
 2712 0046 002B     		cmp	r3, #0
 2713 0048 E3D0     		beq	.L87
1639:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1640:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1641:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1642:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1643:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Clear the Alarm interrupt pending bit */
1644:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
 2714              		.loc 1 1644 3
 2715 004a 7B68     		ldr	r3, [r7, #4]
 2716 004c 1B68     		ldr	r3, [r3]
 2717 004e DB68     		ldr	r3, [r3, #12]
 2718 0050 DAB2     		uxtb	r2, r3
 2719 0052 7B68     		ldr	r3, [r7, #4]
 2720 0054 1B68     		ldr	r3, [r3]
 2721 0056 62F4C072 		orn	r2, r2, #384
 2722 005a DA60     		str	r2, [r3, #12]
1645:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1646:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Change RTC state */
ARM GAS  /tmp/ccXWJXxY.s 			page 78


1647:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY;
 2723              		.loc 1 1647 15
 2724 005c 7B68     		ldr	r3, [r7, #4]
 2725 005e 0122     		movs	r2, #1
 2726 0060 83F82120 		strb	r2, [r3, #33]
1648:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1649:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
 2727              		.loc 1 1649 10
 2728 0064 0023     		movs	r3, #0
 2729              	.L86:
1650:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 2730              		.loc 1 1650 1
 2731 0066 1846     		mov	r0, r3
 2732 0068 1037     		adds	r7, r7, #16
 2733              	.LCFI76:
 2734              		.cfi_def_cfa_offset 8
 2735 006a BD46     		mov	sp, r7
 2736              	.LCFI77:
 2737              		.cfi_def_cfa_register 13
 2738              		@ sp needed
 2739 006c 80BD     		pop	{r7, pc}
 2740              		.cfi_endproc
 2741              	.LFE327:
 2743              		.section	.text.HAL_RTC_WaitForSynchro,"ax",%progbits
 2744              		.align	1
 2745              		.global	HAL_RTC_WaitForSynchro
 2746              		.syntax unified
 2747              		.thumb
 2748              		.thumb_func
 2749              		.fpu fpv4-sp-d16
 2751              	HAL_RTC_WaitForSynchro:
 2752              	.LFB328:
1651:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1652:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1653:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @}
1654:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1655:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1656:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group4
1657:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *  @brief   Peripheral Control functions
1658:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *
1659:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @verbatim
1660:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
1661:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                      ##### Peripheral Control functions #####
1662:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
1663:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     [..]
1664:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     This subsection provides functions allowing to
1665:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       (+) Wait for RTC Time and Date Synchronization
1666:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1667:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @endverbatim
1668:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @{
1669:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1670:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1671:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1672:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Wait until the RTC Time and Date registers (RTC_TR and RTC_DR) are
1673:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         synchronized with RTC APB clock.
1674:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note   The RTC Resynchronization mode is write protected, use the
1675:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         __HAL_RTC_WRITEPROTECTION_DISABLE() before calling this function.
ARM GAS  /tmp/ccXWJXxY.s 			page 79


1676:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note   To read the calendar through the shadow registers after Calendar
1677:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         initialization, calendar update or after wakeup from low power modes
1678:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         the software must first clear the RSF flag.
1679:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         The software must then wait until it is set again before reading
1680:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         the calendar, which means that the calendar registers have been
1681:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         correctly copied into the RTC_TR and RTC_DR shadow registers.
1682:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
1683:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
1684:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1685:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_WaitForSynchro(RTC_HandleTypeDef *hrtc)
1686:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 2753              		.loc 1 1686 1
 2754              		.cfi_startproc
 2755              		@ args = 0, pretend = 0, frame = 16
 2756              		@ frame_needed = 1, uses_anonymous_args = 0
 2757 0000 80B5     		push	{r7, lr}
 2758              	.LCFI78:
 2759              		.cfi_def_cfa_offset 8
 2760              		.cfi_offset 7, -8
 2761              		.cfi_offset 14, -4
 2762 0002 84B0     		sub	sp, sp, #16
 2763              	.LCFI79:
 2764              		.cfi_def_cfa_offset 24
 2765 0004 00AF     		add	r7, sp, #0
 2766              	.LCFI80:
 2767              		.cfi_def_cfa_register 7
 2768 0006 7860     		str	r0, [r7, #4]
1687:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tickstart;
1688:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1689:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Clear RSF flag */
1690:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx)
1691:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->Instance->ICSR &= (uint32_t)RTC_RSF_MASK;
1692:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else
1693:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   hrtc->Instance->ISR &= (uint32_t)RTC_RSF_MASK;
 2769              		.loc 1 1693 7
 2770 0008 7B68     		ldr	r3, [r7, #4]
 2771 000a 1B68     		ldr	r3, [r3]
 2772              		.loc 1 1693 23
 2773 000c DA68     		ldr	r2, [r3, #12]
 2774              		.loc 1 1693 7
 2775 000e 7B68     		ldr	r3, [r7, #4]
 2776 0010 1B68     		ldr	r3, [r3]
 2777              		.loc 1 1693 23
 2778 0012 22F0A002 		bic	r2, r2, #160
 2779 0016 DA60     		str	r2, [r3, #12]
1694:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
1695:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1696:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   tickstart = HAL_GetTick();
 2780              		.loc 1 1696 15
 2781 0018 FFF7FEFF 		bl	HAL_GetTick
 2782 001c F860     		str	r0, [r7, #12]
1697:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1698:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Wait the registers to be synchronised */
1699:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx)
1700:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   while ((hrtc->Instance->ICSR & RTC_ICSR_RSF) == 0U)
1701:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else
1702:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   while ((hrtc->Instance->ISR & RTC_ISR_RSF) == 0U)
ARM GAS  /tmp/ccXWJXxY.s 			page 80


 2783              		.loc 1 1702 9
 2784 001e 09E0     		b	.L89
 2785              	.L91:
1703:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
1704:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1705:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if ((HAL_GetTick() - tickstart) > RTC_TIMEOUT_VALUE)
 2786              		.loc 1 1705 10
 2787 0020 FFF7FEFF 		bl	HAL_GetTick
 2788 0024 0246     		mov	r2, r0
 2789              		.loc 1 1705 24
 2790 0026 FB68     		ldr	r3, [r7, #12]
 2791 0028 D31A     		subs	r3, r2, r3
 2792              		.loc 1 1705 8
 2793 002a B3F57A7F 		cmp	r3, #1000
 2794 002e 01D9     		bls	.L89
1706:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1707:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       return HAL_TIMEOUT;
 2795              		.loc 1 1707 14
 2796 0030 0323     		movs	r3, #3
 2797 0032 07E0     		b	.L90
 2798              	.L89:
1702:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 2799              		.loc 1 1702 15
 2800 0034 7B68     		ldr	r3, [r7, #4]
 2801 0036 1B68     		ldr	r3, [r3]
1702:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 2802              		.loc 1 1702 25
 2803 0038 DB68     		ldr	r3, [r3, #12]
1702:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 2804              		.loc 1 1702 31
 2805 003a 03F02003 		and	r3, r3, #32
1702:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
 2806              		.loc 1 1702 9
 2807 003e 002B     		cmp	r3, #0
 2808 0040 EED0     		beq	.L91
1708:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1709:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1710:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1711:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return HAL_OK;
 2809              		.loc 1 1711 10
 2810 0042 0023     		movs	r3, #0
 2811              	.L90:
1712:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 2812              		.loc 1 1712 1
 2813 0044 1846     		mov	r0, r3
 2814 0046 1037     		adds	r7, r7, #16
 2815              	.LCFI81:
 2816              		.cfi_def_cfa_offset 8
 2817 0048 BD46     		mov	sp, r7
 2818              	.LCFI82:
 2819              		.cfi_def_cfa_register 13
 2820              		@ sp needed
 2821 004a 80BD     		pop	{r7, pc}
 2822              		.cfi_endproc
 2823              	.LFE328:
 2825              		.section	.text.HAL_RTC_GetState,"ax",%progbits
 2826              		.align	1
ARM GAS  /tmp/ccXWJXxY.s 			page 81


 2827              		.global	HAL_RTC_GetState
 2828              		.syntax unified
 2829              		.thumb
 2830              		.thumb_func
 2831              		.fpu fpv4-sp-d16
 2833              	HAL_RTC_GetState:
 2834              	.LFB329:
1713:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1714:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1715:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @}
1716:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1717:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1718:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /** @addtogroup RTC_Exported_Functions_Group5
1719:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *  @brief   Peripheral State functions
1720:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  *
1721:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @verbatim
1722:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
1723:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****                      ##### Peripheral State functions #####
1724:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****  ===============================================================================
1725:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     [..]
1726:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     This subsection provides functions allowing to
1727:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       (+) Get RTC state
1728:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1729:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** @endverbatim
1730:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @{
1731:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1732:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1733:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Return the RTC handle state.
1734:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
1735:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL state
1736:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1737:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_RTCStateTypeDef HAL_RTC_GetState(RTC_HandleTypeDef *hrtc)
1738:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 2835              		.loc 1 1738 1
 2836              		.cfi_startproc
 2837              		@ args = 0, pretend = 0, frame = 8
 2838              		@ frame_needed = 1, uses_anonymous_args = 0
 2839              		@ link register save eliminated.
 2840 0000 80B4     		push	{r7}
 2841              	.LCFI83:
 2842              		.cfi_def_cfa_offset 4
 2843              		.cfi_offset 7, -4
 2844 0002 83B0     		sub	sp, sp, #12
 2845              	.LCFI84:
 2846              		.cfi_def_cfa_offset 16
 2847 0004 00AF     		add	r7, sp, #0
 2848              	.LCFI85:
 2849              		.cfi_def_cfa_register 7
 2850 0006 7860     		str	r0, [r7, #4]
1739:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Return RTC handle state */
1740:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return hrtc->State;
 2851              		.loc 1 1740 14
 2852 0008 7B68     		ldr	r3, [r7, #4]
 2853 000a 93F82130 		ldrb	r3, [r3, #33]
 2854 000e DBB2     		uxtb	r3, r3
1741:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 2855              		.loc 1 1741 1
ARM GAS  /tmp/ccXWJXxY.s 			page 82


 2856 0010 1846     		mov	r0, r3
 2857 0012 0C37     		adds	r7, r7, #12
 2858              	.LCFI86:
 2859              		.cfi_def_cfa_offset 4
 2860 0014 BD46     		mov	sp, r7
 2861              	.LCFI87:
 2862              		.cfi_def_cfa_register 13
 2863              		@ sp needed
 2864 0016 5DF8047B 		ldr	r7, [sp], #4
 2865              	.LCFI88:
 2866              		.cfi_restore 7
 2867              		.cfi_def_cfa_offset 0
 2868 001a 7047     		bx	lr
 2869              		.cfi_endproc
 2870              	.LFE329:
 2872              		.section	.text.RTC_EnterInitMode,"ax",%progbits
 2873              		.align	1
 2874              		.global	RTC_EnterInitMode
 2875              		.syntax unified
 2876              		.thumb
 2877              		.thumb_func
 2878              		.fpu fpv4-sp-d16
 2880              	RTC_EnterInitMode:
 2881              	.LFB330:
1742:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1743:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1744:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @}
1745:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1746:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1747:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1748:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @}
1749:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1750:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1751:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /** @addtogroup RTC_Private_Functions
1752:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @{
1753:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1754:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1755:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Enter the RTC Initialization mode.
1756:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @note   The RTC Initialization mode is write protected, use the
1757:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   *         __HAL_RTC_WRITEPROTECTION_DISABLE() before calling this function.
1758:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
1759:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
1760:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1761:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef RTC_EnterInitMode(RTC_HandleTypeDef *hrtc)
1762:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 2882              		.loc 1 1762 1
 2883              		.cfi_startproc
 2884              		@ args = 0, pretend = 0, frame = 16
 2885              		@ frame_needed = 1, uses_anonymous_args = 0
 2886 0000 80B5     		push	{r7, lr}
 2887              	.LCFI89:
 2888              		.cfi_def_cfa_offset 8
 2889              		.cfi_offset 7, -8
 2890              		.cfi_offset 14, -4
 2891 0002 84B0     		sub	sp, sp, #16
 2892              	.LCFI90:
 2893              		.cfi_def_cfa_offset 24
ARM GAS  /tmp/ccXWJXxY.s 			page 83


 2894 0004 00AF     		add	r7, sp, #0
 2895              	.LCFI91:
 2896              		.cfi_def_cfa_register 7
 2897 0006 7860     		str	r0, [r7, #4]
1763:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t tickstart;
1764:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_OK;
 2898              		.loc 1 1764 21
 2899 0008 0023     		movs	r3, #0
 2900 000a FB73     		strb	r3, [r7, #15]
1765:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1766:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Check if the Initialization mode is set */
1767:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx)
1768:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if ((hrtc->Instance->ICSR & RTC_ICSR_INITF) == 0U)
1769:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1770:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Set the Initialization mode */
1771:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     SET_BIT(hrtc->Instance->ICSR, RTC_ICSR_INIT);
1772:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1773:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     tickstart = HAL_GetTick();
1774:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC is in INIT state and if Time out is reached exit */
1775:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     while ((READ_BIT(hrtc->Instance->ICSR, RTC_ICSR_INITF) == 0U) && (status != HAL_TIMEOUT))
1776:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1777:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if ((HAL_GetTick()  - tickstart) > RTC_TIMEOUT_VALUE)
1778:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1779:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         status = HAL_TIMEOUT;
1780:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
1781:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1782:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1783:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1784:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else /* #if defined(STM32L412xx) || defined(STM32L422xx) */
1785:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if ((hrtc->Instance->ISR & RTC_ISR_INITF) == 0U)
 2901              		.loc 1 1785 12
 2902 000c 7B68     		ldr	r3, [r7, #4]
 2903 000e 1B68     		ldr	r3, [r3]
 2904              		.loc 1 1785 22
 2905 0010 DB68     		ldr	r3, [r3, #12]
 2906              		.loc 1 1785 28
 2907 0012 03F04003 		and	r3, r3, #64
 2908              		.loc 1 1785 6
 2909 0016 002B     		cmp	r3, #0
 2910 0018 20D1     		bne	.L95
1786:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1787:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Set the Initialization mode */
1788:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     hrtc->Instance->ISR = (uint32_t)RTC_INIT_MASK;
 2911              		.loc 1 1788 9
 2912 001a 7B68     		ldr	r3, [r7, #4]
 2913 001c 1B68     		ldr	r3, [r3]
 2914              		.loc 1 1788 25
 2915 001e 4FF0FF32 		mov	r2, #-1
 2916 0022 DA60     		str	r2, [r3, #12]
1789:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1790:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     tickstart = HAL_GetTick();
 2917              		.loc 1 1790 17
 2918 0024 FFF7FEFF 		bl	HAL_GetTick
 2919 0028 B860     		str	r0, [r7, #8]
1791:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Wait till RTC is in INIT state and if Time out is reached exit */
1792:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     while ((READ_BIT(hrtc->Instance->ISR, RTC_ISR_INITF) == 0U) && (status != HAL_TIMEOUT))
 2920              		.loc 1 1792 11
ARM GAS  /tmp/ccXWJXxY.s 			page 84


 2921 002a 0DE0     		b	.L96
 2922              	.L97:
1793:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1794:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       if ((HAL_GetTick()  - tickstart) > RTC_TIMEOUT_VALUE)
 2923              		.loc 1 1794 12
 2924 002c FFF7FEFF 		bl	HAL_GetTick
 2925 0030 0246     		mov	r2, r0
 2926              		.loc 1 1794 27
 2927 0032 BB68     		ldr	r3, [r7, #8]
 2928 0034 D31A     		subs	r3, r2, r3
 2929              		.loc 1 1794 10
 2930 0036 B3F57A7F 		cmp	r3, #1000
 2931 003a 05D9     		bls	.L96
1795:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       {
1796:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         status = HAL_TIMEOUT;
 2932              		.loc 1 1796 16
 2933 003c 0323     		movs	r3, #3
 2934 003e FB73     		strb	r3, [r7, #15]
1797:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
 2935              		.loc 1 1797 21
 2936 0040 7B68     		ldr	r3, [r7, #4]
 2937 0042 0322     		movs	r2, #3
 2938 0044 83F82120 		strb	r2, [r3, #33]
 2939              	.L96:
1792:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 2940              		.loc 1 1792 13
 2941 0048 7B68     		ldr	r3, [r7, #4]
 2942 004a 1B68     		ldr	r3, [r3]
 2943 004c DB68     		ldr	r3, [r3, #12]
 2944 004e 03F04003 		and	r3, r3, #64
1792:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 2945              		.loc 1 1792 11
 2946 0052 002B     		cmp	r3, #0
 2947 0054 02D1     		bne	.L95
1792:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
 2948              		.loc 1 1792 65 discriminator 1
 2949 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2950 0058 032B     		cmp	r3, #3
 2951 005a E7D1     		bne	.L97
 2952              	.L95:
1798:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       }
1799:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1800:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1801:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif /* #if defined(STM32L412xx) || defined(STM32L422xx) */
1802:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1803:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return status;
 2953              		.loc 1 1803 10
 2954 005c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1804:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 2955              		.loc 1 1804 1
 2956 005e 1846     		mov	r0, r3
 2957 0060 1037     		adds	r7, r7, #16
 2958              	.LCFI92:
 2959              		.cfi_def_cfa_offset 8
 2960 0062 BD46     		mov	sp, r7
 2961              	.LCFI93:
 2962              		.cfi_def_cfa_register 13
ARM GAS  /tmp/ccXWJXxY.s 			page 85


 2963              		@ sp needed
 2964 0064 80BD     		pop	{r7, pc}
 2965              		.cfi_endproc
 2966              	.LFE330:
 2968              		.section	.text.RTC_ExitInitMode,"ax",%progbits
 2969              		.align	1
 2970              		.global	RTC_ExitInitMode
 2971              		.syntax unified
 2972              		.thumb
 2973              		.thumb_func
 2974              		.fpu fpv4-sp-d16
 2976              	RTC_ExitInitMode:
 2977              	.LFB331:
1805:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1806:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1807:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Exit the RTC Initialization mode.
1808:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  hrtc RTC handle
1809:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval HAL status
1810:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1811:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** HAL_StatusTypeDef RTC_ExitInitMode(RTC_HandleTypeDef *hrtc)
1812:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 2978              		.loc 1 1812 1
 2979              		.cfi_startproc
 2980              		@ args = 0, pretend = 0, frame = 16
 2981              		@ frame_needed = 1, uses_anonymous_args = 0
 2982 0000 80B5     		push	{r7, lr}
 2983              	.LCFI94:
 2984              		.cfi_def_cfa_offset 8
 2985              		.cfi_offset 7, -8
 2986              		.cfi_offset 14, -4
 2987 0002 84B0     		sub	sp, sp, #16
 2988              	.LCFI95:
 2989              		.cfi_def_cfa_offset 24
 2990 0004 00AF     		add	r7, sp, #0
 2991              	.LCFI96:
 2992              		.cfi_def_cfa_register 7
 2993 0006 7860     		str	r0, [r7, #4]
1813:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_OK;
 2994              		.loc 1 1813 21
 2995 0008 0023     		movs	r3, #0
 2996 000a FB73     		strb	r3, [r7, #15]
1814:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1815:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Exit Initialization mode */
1816:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #if defined(STM32L412xx) || defined(STM32L422xx)
1817:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   CLEAR_BIT(RTC->ICSR, RTC_ICSR_INIT);
1818:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #else
1819:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* Exit Initialization mode */
1820:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   CLEAR_BIT(RTC->ISR, RTC_ISR_INIT);
 2997              		.loc 1 1820 3
 2998 000c 1A4B     		ldr	r3, .L104
 2999 000e DB68     		ldr	r3, [r3, #12]
 3000 0010 194A     		ldr	r2, .L104
 3001 0012 23F08003 		bic	r3, r3, #128
 3002 0016 D360     		str	r3, [r2, #12]
1821:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** #endif
1822:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1823:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   /* If CR_BYPSHAD bit = 0, wait for synchro */
ARM GAS  /tmp/ccXWJXxY.s 			page 86


1824:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   if (READ_BIT(RTC->CR, RTC_CR_BYPSHAD) == 0U)
 3003              		.loc 1 1824 7
 3004 0018 174B     		ldr	r3, .L104
 3005 001a 9B68     		ldr	r3, [r3, #8]
 3006 001c 03F02003 		and	r3, r3, #32
 3007              		.loc 1 1824 6
 3008 0020 002B     		cmp	r3, #0
 3009 0022 0CD1     		bne	.L100
1825:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1826:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 3010              		.loc 1 1826 9
 3011 0024 7868     		ldr	r0, [r7, #4]
 3012 0026 FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 3013 002a 0346     		mov	r3, r0
 3014              		.loc 1 1826 8
 3015 002c 002B     		cmp	r3, #0
 3016 002e 1ED0     		beq	.L101
1827:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1828:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
 3017              		.loc 1 1828 19
 3018 0030 7B68     		ldr	r3, [r7, #4]
 3019 0032 0322     		movs	r2, #3
 3020 0034 83F82120 		strb	r2, [r3, #33]
1829:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       status = HAL_TIMEOUT;
 3021              		.loc 1 1829 14
 3022 0038 0323     		movs	r3, #3
 3023 003a FB73     		strb	r3, [r7, #15]
 3024 003c 17E0     		b	.L101
 3025              	.L100:
1830:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1831:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1832:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   else /* WA 2.9.6 Calendar initialization may fail in case of consecutive INIT mode entry */
1833:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1834:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Clear BYPSHAD bit */
1835:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     CLEAR_BIT(RTC->CR, RTC_CR_BYPSHAD);
 3026              		.loc 1 1835 5
 3027 003e 0E4B     		ldr	r3, .L104
 3028 0040 9B68     		ldr	r3, [r3, #8]
 3029 0042 0D4A     		ldr	r2, .L104
 3030 0044 23F02003 		bic	r3, r3, #32
 3031 0048 9360     		str	r3, [r2, #8]
1836:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     if (HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 3032              		.loc 1 1836 9
 3033 004a 7868     		ldr	r0, [r7, #4]
 3034 004c FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 3035 0050 0346     		mov	r3, r0
 3036              		.loc 1 1836 8
 3037 0052 002B     		cmp	r3, #0
 3038 0054 05D0     		beq	.L102
1837:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     {
1838:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       hrtc->State = HAL_RTC_STATE_TIMEOUT;
 3039              		.loc 1 1838 19
 3040 0056 7B68     		ldr	r3, [r7, #4]
 3041 0058 0322     		movs	r2, #3
 3042 005a 83F82120 		strb	r2, [r3, #33]
1839:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****       status = HAL_TIMEOUT;
 3043              		.loc 1 1839 14
ARM GAS  /tmp/ccXWJXxY.s 			page 87


 3044 005e 0323     		movs	r3, #3
 3045 0060 FB73     		strb	r3, [r7, #15]
 3046              	.L102:
1840:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     }
1841:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     /* Restore BYPSHAD bit */
1842:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     SET_BIT(RTC->CR, RTC_CR_BYPSHAD);
 3047              		.loc 1 1842 5
 3048 0062 054B     		ldr	r3, .L104
 3049 0064 9B68     		ldr	r3, [r3, #8]
 3050 0066 044A     		ldr	r2, .L104
 3051 0068 43F02003 		orr	r3, r3, #32
 3052 006c 9360     		str	r3, [r2, #8]
 3053              	.L101:
1843:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1844:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1845:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return status;
 3054              		.loc 1 1845 10
 3055 006e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1846:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 3056              		.loc 1 1846 1
 3057 0070 1846     		mov	r0, r3
 3058 0072 1037     		adds	r7, r7, #16
 3059              	.LCFI97:
 3060              		.cfi_def_cfa_offset 8
 3061 0074 BD46     		mov	sp, r7
 3062              	.LCFI98:
 3063              		.cfi_def_cfa_register 13
 3064              		@ sp needed
 3065 0076 80BD     		pop	{r7, pc}
 3066              	.L105:
 3067              		.align	2
 3068              	.L104:
 3069 0078 00280040 		.word	1073752064
 3070              		.cfi_endproc
 3071              	.LFE331:
 3073              		.section	.text.RTC_ByteToBcd2,"ax",%progbits
 3074              		.align	1
 3075              		.global	RTC_ByteToBcd2
 3076              		.syntax unified
 3077              		.thumb
 3078              		.thumb_func
 3079              		.fpu fpv4-sp-d16
 3081              	RTC_ByteToBcd2:
 3082              	.LFB332:
1847:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1848:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1849:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1850:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1851:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Convert a 2 digit decimal to BCD format.
1852:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Value Byte to be converted
1853:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval Converted byte
1854:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1855:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** uint8_t RTC_ByteToBcd2(uint8_t Value)
1856:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 3083              		.loc 1 1856 1
 3084              		.cfi_startproc
 3085              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /tmp/ccXWJXxY.s 			page 88


 3086              		@ frame_needed = 1, uses_anonymous_args = 0
 3087              		@ link register save eliminated.
 3088 0000 80B4     		push	{r7}
 3089              	.LCFI99:
 3090              		.cfi_def_cfa_offset 4
 3091              		.cfi_offset 7, -4
 3092 0002 85B0     		sub	sp, sp, #20
 3093              	.LCFI100:
 3094              		.cfi_def_cfa_offset 24
 3095 0004 00AF     		add	r7, sp, #0
 3096              	.LCFI101:
 3097              		.cfi_def_cfa_register 7
 3098 0006 0346     		mov	r3, r0
 3099 0008 FB71     		strb	r3, [r7, #7]
1857:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint32_t bcdhigh = 0U;
 3100              		.loc 1 1857 12
 3101 000a 0023     		movs	r3, #0
 3102 000c FB60     		str	r3, [r7, #12]
1858:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint8_t temp = Value;
 3103              		.loc 1 1858 11
 3104 000e FB79     		ldrb	r3, [r7, #7]
 3105 0010 FB72     		strb	r3, [r7, #11]
1859:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1860:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   while (temp >= 10U)
 3106              		.loc 1 1860 9
 3107 0012 05E0     		b	.L107
 3108              	.L108:
1861:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
1862:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     bcdhigh++;
 3109              		.loc 1 1862 12
 3110 0014 FB68     		ldr	r3, [r7, #12]
 3111 0016 0133     		adds	r3, r3, #1
 3112 0018 FB60     		str	r3, [r7, #12]
1863:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****     temp -= 10U;
 3113              		.loc 1 1863 10
 3114 001a FB7A     		ldrb	r3, [r7, #11]
 3115 001c 0A3B     		subs	r3, r3, #10
 3116 001e FB72     		strb	r3, [r7, #11]
 3117              	.L107:
1860:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   {
 3118              		.loc 1 1860 9
 3119 0020 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 3120 0022 092B     		cmp	r3, #9
 3121 0024 F6D8     		bhi	.L108
1864:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   }
1865:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1866:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return ((uint8_t)(bcdhigh << 4U) | temp);
 3122              		.loc 1 1866 11
 3123 0026 FB68     		ldr	r3, [r7, #12]
 3124 0028 DBB2     		uxtb	r3, r3
 3125 002a 1B01     		lsls	r3, r3, #4
 3126 002c DAB2     		uxtb	r2, r3
 3127              		.loc 1 1866 36
 3128 002e FB7A     		ldrb	r3, [r7, #11]
 3129 0030 1343     		orrs	r3, r3, r2
 3130 0032 DBB2     		uxtb	r3, r3
1867:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
ARM GAS  /tmp/ccXWJXxY.s 			page 89


 3131              		.loc 1 1867 1
 3132 0034 1846     		mov	r0, r3
 3133 0036 1437     		adds	r7, r7, #20
 3134              	.LCFI102:
 3135              		.cfi_def_cfa_offset 4
 3136 0038 BD46     		mov	sp, r7
 3137              	.LCFI103:
 3138              		.cfi_def_cfa_register 13
 3139              		@ sp needed
 3140 003a 5DF8047B 		ldr	r7, [sp], #4
 3141              	.LCFI104:
 3142              		.cfi_restore 7
 3143              		.cfi_def_cfa_offset 0
 3144 003e 7047     		bx	lr
 3145              		.cfi_endproc
 3146              	.LFE332:
 3148              		.section	.text.RTC_Bcd2ToByte,"ax",%progbits
 3149              		.align	1
 3150              		.global	RTC_Bcd2ToByte
 3151              		.syntax unified
 3152              		.thumb
 3153              		.thumb_func
 3154              		.fpu fpv4-sp-d16
 3156              	RTC_Bcd2ToByte:
 3157              	.LFB333:
1868:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** 
1869:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** /**
1870:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @brief  Convert from 2 digit BCD to Binary.
1871:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @param  Value BCD value to be converted
1872:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   * @retval Converted word
1873:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   */
1874:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** uint8_t RTC_Bcd2ToByte(uint8_t Value)
1875:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** {
 3158              		.loc 1 1875 1
 3159              		.cfi_startproc
 3160              		@ args = 0, pretend = 0, frame = 16
 3161              		@ frame_needed = 1, uses_anonymous_args = 0
 3162              		@ link register save eliminated.
 3163 0000 80B4     		push	{r7}
 3164              	.LCFI105:
 3165              		.cfi_def_cfa_offset 4
 3166              		.cfi_offset 7, -4
 3167 0002 85B0     		sub	sp, sp, #20
 3168              	.LCFI106:
 3169              		.cfi_def_cfa_offset 24
 3170 0004 00AF     		add	r7, sp, #0
 3171              	.LCFI107:
 3172              		.cfi_def_cfa_register 7
 3173 0006 0346     		mov	r3, r0
 3174 0008 FB71     		strb	r3, [r7, #7]
1876:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   uint8_t tmp;
1877:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   tmp = ((Value & 0xF0U) >> 4U) * 10U;
 3175              		.loc 1 1877 26
 3176 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 3177 000c 1B09     		lsrs	r3, r3, #4
 3178 000e DBB2     		uxtb	r3, r3
 3179              		.loc 1 1877 7
ARM GAS  /tmp/ccXWJXxY.s 			page 90


 3180 0010 1A46     		mov	r2, r3
 3181 0012 9200     		lsls	r2, r2, #2
 3182 0014 1344     		add	r3, r3, r2
 3183 0016 5B00     		lsls	r3, r3, #1
 3184 0018 FB73     		strb	r3, [r7, #15]
1878:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c ****   return (tmp + (Value & 0x0FU));
 3185              		.loc 1 1878 24
 3186 001a FB79     		ldrb	r3, [r7, #7]
 3187 001c 03F00F03 		and	r3, r3, #15
 3188 0020 DAB2     		uxtb	r2, r3
 3189              		.loc 1 1878 15
 3190 0022 FB7B     		ldrb	r3, [r7, #15]
 3191 0024 1344     		add	r3, r3, r2
 3192 0026 DBB2     		uxtb	r3, r3
1879:../Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_rtc.c **** }
 3193              		.loc 1 1879 1
 3194 0028 1846     		mov	r0, r3
 3195 002a 1437     		adds	r7, r7, #20
 3196              	.LCFI108:
 3197              		.cfi_def_cfa_offset 4
 3198 002c BD46     		mov	sp, r7
 3199              	.LCFI109:
 3200              		.cfi_def_cfa_register 13
 3201              		@ sp needed
 3202 002e 5DF8047B 		ldr	r7, [sp], #4
 3203              	.LCFI110:
 3204              		.cfi_restore 7
 3205              		.cfi_def_cfa_offset 0
 3206 0032 7047     		bx	lr
 3207              		.cfi_endproc
 3208              	.LFE333:
 3210              		.text
 3211              	.Letext0:
 3212              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 3213              		.file 3 "../Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l476xx.h"
 3214              		.file 4 "../Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 3215              		.file 5 "../Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rtc.h"
ARM GAS  /tmp/ccXWJXxY.s 			page 91


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l4xx_hal_rtc.c
     /tmp/ccXWJXxY.s:18     .text.HAL_RTC_Init:0000000000000000 $t
     /tmp/ccXWJXxY.s:26     .text.HAL_RTC_Init:0000000000000000 HAL_RTC_Init
     /tmp/ccXWJXxY.s:408    .text.HAL_RTC_MspInit:0000000000000000 HAL_RTC_MspInit
     /tmp/ccXWJXxY.s:2880   .text.RTC_EnterInitMode:0000000000000000 RTC_EnterInitMode
     /tmp/ccXWJXxY.s:2976   .text.RTC_ExitInitMode:0000000000000000 RTC_ExitInitMode
     /tmp/ccXWJXxY.s:218    .text.HAL_RTC_DeInit:0000000000000000 $t
     /tmp/ccXWJXxY.s:225    .text.HAL_RTC_DeInit:0000000000000000 HAL_RTC_DeInit
     /tmp/ccXWJXxY.s:451    .text.HAL_RTC_MspDeInit:0000000000000000 HAL_RTC_MspDeInit
     /tmp/ccXWJXxY.s:396    .text.HAL_RTC_DeInit:00000000000000e4 $d
     /tmp/ccXWJXxY.s:401    .text.HAL_RTC_MspInit:0000000000000000 $t
     /tmp/ccXWJXxY.s:444    .text.HAL_RTC_MspDeInit:0000000000000000 $t
     /tmp/ccXWJXxY.s:487    .text.HAL_RTC_SetTime:0000000000000000 $t
     /tmp/ccXWJXxY.s:494    .text.HAL_RTC_SetTime:0000000000000000 HAL_RTC_SetTime
     /tmp/ccXWJXxY.s:3081   .text.RTC_ByteToBcd2:0000000000000000 RTC_ByteToBcd2
     /tmp/ccXWJXxY.s:726    .text.HAL_RTC_GetTime:0000000000000000 $t
     /tmp/ccXWJXxY.s:733    .text.HAL_RTC_GetTime:0000000000000000 HAL_RTC_GetTime
     /tmp/ccXWJXxY.s:3156   .text.RTC_Bcd2ToByte:0000000000000000 RTC_Bcd2ToByte
     /tmp/ccXWJXxY.s:869    .text.HAL_RTC_SetDate:0000000000000000 $t
     /tmp/ccXWJXxY.s:876    .text.HAL_RTC_SetDate:0000000000000000 HAL_RTC_SetDate
     /tmp/ccXWJXxY.s:1073   .text.HAL_RTC_GetDate:0000000000000000 $t
     /tmp/ccXWJXxY.s:1080   .text.HAL_RTC_GetDate:0000000000000000 HAL_RTC_GetDate
     /tmp/ccXWJXxY.s:1196   .text.HAL_RTC_SetAlarm:0000000000000000 $t
     /tmp/ccXWJXxY.s:1203   .text.HAL_RTC_SetAlarm:0000000000000000 HAL_RTC_SetAlarm
     /tmp/ccXWJXxY.s:1605   .text.HAL_RTC_SetAlarm_IT:0000000000000000 $t
     /tmp/ccXWJXxY.s:1612   .text.HAL_RTC_SetAlarm_IT:0000000000000000 HAL_RTC_SetAlarm_IT
     /tmp/ccXWJXxY.s:2025   .text.HAL_RTC_SetAlarm_IT:0000000000000274 $d
     /tmp/ccXWJXxY.s:2030   .text.HAL_RTC_DeactivateAlarm:0000000000000000 $t
     /tmp/ccXWJXxY.s:2037   .text.HAL_RTC_DeactivateAlarm:0000000000000000 HAL_RTC_DeactivateAlarm
     /tmp/ccXWJXxY.s:2235   .text.HAL_RTC_GetAlarm:0000000000000000 $t
     /tmp/ccXWJXxY.s:2242   .text.HAL_RTC_GetAlarm:0000000000000000 HAL_RTC_GetAlarm
     /tmp/ccXWJXxY.s:2495   .text.HAL_RTC_AlarmIRQHandler:0000000000000000 $t
     /tmp/ccXWJXxY.s:2502   .text.HAL_RTC_AlarmIRQHandler:0000000000000000 HAL_RTC_AlarmIRQHandler
     /tmp/ccXWJXxY.s:2611   .text.HAL_RTC_AlarmAEventCallback:0000000000000000 HAL_RTC_AlarmAEventCallback
     /tmp/ccXWJXxY.s:2599   .text.HAL_RTC_AlarmIRQHandler:0000000000000088 $d
     /tmp/ccXWJXxY.s:2604   .text.HAL_RTC_AlarmAEventCallback:0000000000000000 $t
     /tmp/ccXWJXxY.s:2647   .text.HAL_RTC_PollForAlarmAEvent:0000000000000000 $t
     /tmp/ccXWJXxY.s:2654   .text.HAL_RTC_PollForAlarmAEvent:0000000000000000 HAL_RTC_PollForAlarmAEvent
     /tmp/ccXWJXxY.s:2744   .text.HAL_RTC_WaitForSynchro:0000000000000000 $t
     /tmp/ccXWJXxY.s:2751   .text.HAL_RTC_WaitForSynchro:0000000000000000 HAL_RTC_WaitForSynchro
     /tmp/ccXWJXxY.s:2826   .text.HAL_RTC_GetState:0000000000000000 $t
     /tmp/ccXWJXxY.s:2833   .text.HAL_RTC_GetState:0000000000000000 HAL_RTC_GetState
     /tmp/ccXWJXxY.s:2873   .text.RTC_EnterInitMode:0000000000000000 $t
     /tmp/ccXWJXxY.s:2969   .text.RTC_ExitInitMode:0000000000000000 $t
     /tmp/ccXWJXxY.s:3069   .text.RTC_ExitInitMode:0000000000000078 $d
     /tmp/ccXWJXxY.s:3074   .text.RTC_ByteToBcd2:0000000000000000 $t
     /tmp/ccXWJXxY.s:3149   .text.RTC_Bcd2ToByte:0000000000000000 $t

UNDEFINED SYMBOLS
HAL_GetTick
HAL_RTCEx_AlarmBEventCallback
